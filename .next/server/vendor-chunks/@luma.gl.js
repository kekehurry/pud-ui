"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@luma.gl";
exports.ids = ["vendor-chunks/@luma.gl"];
exports.modules = {

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/animation/timeline.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/animation/timeline.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Timeline: () => (/* binding */ Timeline)\n/* harmony export */ });\nlet channelHandles = 1;\nlet animationHandles = 1;\nclass Timeline {\n    constructor(){\n        this.time = 0;\n        this.channels = new Map();\n        this.animations = new Map();\n        this.playing = false;\n        this.lastEngineTime = -1;\n    }\n    addChannel(props) {\n        const { delay = 0, duration = Number.POSITIVE_INFINITY, rate = 1, repeat = 1 } = props;\n        const handle = channelHandles++;\n        const channel = {\n            time: 0,\n            delay,\n            duration,\n            rate,\n            repeat\n        };\n        this._setChannelTime(channel, this.time);\n        this.channels.set(handle, channel);\n        return handle;\n    }\n    removeChannel(handle) {\n        this.channels.delete(handle);\n        for (const [animationHandle, animation] of this.animations){\n            if (animation.channel === handle) {\n                this.detachAnimation(animationHandle);\n            }\n        }\n    }\n    isFinished(handle) {\n        const channel = this.channels.get(handle);\n        if (channel === undefined) {\n            return false;\n        }\n        return this.time >= channel.delay + channel.duration * channel.repeat;\n    }\n    getTime(handle) {\n        if (handle === undefined) {\n            return this.time;\n        }\n        const channel = this.channels.get(handle);\n        if (channel === undefined) {\n            return -1;\n        }\n        return channel.time;\n    }\n    setTime(time) {\n        this.time = Math.max(0, time);\n        const channels = this.channels.values();\n        for (const channel of channels){\n            this._setChannelTime(channel, this.time);\n        }\n        const animations = this.animations.values();\n        for (const animationData of animations){\n            const { animation, channel } = animationData;\n            animation.setTime(this.getTime(channel));\n        }\n    }\n    play() {\n        this.playing = true;\n    }\n    pause() {\n        this.playing = false;\n        this.lastEngineTime = -1;\n    }\n    reset() {\n        this.setTime(0);\n    }\n    attachAnimation(animation, channelHandle) {\n        const animationHandle = animationHandles++;\n        this.animations.set(animationHandle, {\n            animation,\n            channel: channelHandle\n        });\n        animation.setTime(this.getTime(channelHandle));\n        return animationHandle;\n    }\n    detachAnimation(handle) {\n        this.animations.delete(handle);\n    }\n    update(engineTime) {\n        if (this.playing) {\n            if (this.lastEngineTime === -1) {\n                this.lastEngineTime = engineTime;\n            }\n            this.setTime(this.time + (engineTime - this.lastEngineTime));\n            this.lastEngineTime = engineTime;\n        }\n    }\n    _setChannelTime(channel, time) {\n        const offsetTime = time - channel.delay;\n        const totalDuration = channel.duration * channel.repeat;\n        if (offsetTime >= totalDuration) {\n            channel.time = channel.duration * channel.rate;\n        } else {\n            channel.time = Math.max(0, offsetTime) % channel.duration;\n            channel.time *= channel.rate;\n        }\n    }\n} //# sourceMappingURL=timeline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/animation/timeline.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js":
/*!********************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAW_MODE: () => (/* binding */ DRAW_MODE),\n/* harmony export */   \"default\": () => (/* binding */ Geometry)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\nconst DRAW_MODE = {\n    POINTS: 0x0000,\n    LINES: 0x0001,\n    LINE_LOOP: 0x0002,\n    LINE_STRIP: 0x0003,\n    TRIANGLES: 0x0004,\n    TRIANGLE_STRIP: 0x0005,\n    TRIANGLE_FAN: 0x0006\n};\nclass Geometry {\n    static get DRAW_MODE() {\n        return DRAW_MODE;\n    }\n    constructor(){\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { id = (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_0__.uid)(\"geometry\"), drawMode = DRAW_MODE.TRIANGLES, attributes = {}, indices = null, vertexCount = null } = props;\n        this.id = id;\n        this.drawMode = drawMode | 0;\n        this.attributes = {};\n        this.userData = {};\n        this._setAttributes(attributes, indices);\n        this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n    }\n    get mode() {\n        return this.drawMode;\n    }\n    getVertexCount() {\n        return this.vertexCount;\n    }\n    getAttributes() {\n        return this.indices ? {\n            indices: this.indices,\n            ...this.attributes\n        } : this.attributes;\n    }\n    _print(attributeName) {\n        return \"Geometry \".concat(this.id, \" attribute \").concat(attributeName);\n    }\n    _setAttributes(attributes, indices) {\n        if (indices) {\n            this.indices = ArrayBuffer.isView(indices) ? {\n                value: indices,\n                size: 1\n            } : indices;\n        }\n        for(const attributeName in attributes){\n            let attribute = attributes[attributeName];\n            attribute = ArrayBuffer.isView(attribute) ? {\n                value: attribute\n            } : attribute;\n            (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.assert)(ArrayBuffer.isView(attribute.value), \"\".concat(this._print(attributeName), \": must be typed array or object with value as typed array\"));\n            if ((attributeName === \"POSITION\" || attributeName === \"positions\") && !attribute.size) {\n                attribute.size = 3;\n            }\n            if (attributeName === \"indices\") {\n                (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.assert)(!this.indices);\n                this.indices = attribute;\n            } else {\n                this.attributes[attributeName] = attribute;\n            }\n        }\n        if (this.indices && this.indices.isIndexed !== undefined) {\n            this.indices = Object.assign({}, this.indices);\n            delete this.indices.isIndexed;\n        }\n        return this;\n    }\n    _calculateVertexCount(attributes, indices) {\n        if (indices) {\n            return indices.value.length;\n        }\n        let vertexCount = Infinity;\n        for(const attributeName in attributes){\n            const attribute = attributes[attributeName];\n            const { value, size, constant } = attribute;\n            if (!constant && value && size >= 1) {\n                vertexCount = Math.min(vertexCount, value.length / size);\n            }\n        }\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.assert)(Number.isFinite(vertexCount));\n        return vertexCount;\n    }\n} //# sourceMappingURL=geometry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZW5naW5lL2Rpc3QvZXNtL2dlb21ldHJ5L2dlb21ldHJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkM7QUFDdEMsTUFBTUUsWUFBWTtJQUN2QkMsUUFBUTtJQUNSQyxPQUFPO0lBQ1BDLFdBQVc7SUFDWEMsWUFBWTtJQUNaQyxXQUFXO0lBQ1hDLGdCQUFnQjtJQUNoQkMsY0FBYztBQUNoQixFQUFFO0FBQ2EsTUFBTUM7SUFDbkIsV0FBV1IsWUFBWTtRQUNyQixPQUFPQTtJQUNUO0lBRUFTLGFBQWM7UUFDWixJQUFJQyxRQUFRQyxVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRyxDQUFDO1FBQ2pGLE1BQU0sRUFDSkcsS0FBS2hCLG1EQUFHQSxDQUFDLFdBQVcsRUFDcEJpQixXQUFXZixVQUFVSyxTQUFTLEVBQzlCVyxhQUFhLENBQUMsQ0FBQyxFQUNmQyxVQUFVLElBQUksRUFDZEMsY0FBYyxJQUFJLEVBQ25CLEdBQUdSO1FBQ0osSUFBSSxDQUFDSSxFQUFFLEdBQUdBO1FBQ1YsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFdBQVc7UUFDM0IsSUFBSSxDQUFDQyxVQUFVLEdBQUcsQ0FBQztRQUNuQixJQUFJLENBQUNHLFFBQVEsR0FBRyxDQUFDO1FBRWpCLElBQUksQ0FBQ0MsY0FBYyxDQUFDSixZQUFZQztRQUVoQyxJQUFJLENBQUNDLFdBQVcsR0FBR0EsZUFBZSxJQUFJLENBQUNHLHFCQUFxQixDQUFDLElBQUksQ0FBQ0wsVUFBVSxFQUFFLElBQUksQ0FBQ0MsT0FBTztJQUM1RjtJQUVBLElBQUlLLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQ1AsUUFBUTtJQUN0QjtJQUVBUSxpQkFBaUI7UUFDZixPQUFPLElBQUksQ0FBQ0wsV0FBVztJQUN6QjtJQUVBTSxnQkFBZ0I7UUFDZCxPQUFPLElBQUksQ0FBQ1AsT0FBTyxHQUFHO1lBQ3BCQSxTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUNyQixHQUFHLElBQUksQ0FBQ0QsVUFBVTtRQUNwQixJQUFJLElBQUksQ0FBQ0EsVUFBVTtJQUNyQjtJQUVBUyxPQUFPQyxhQUFhLEVBQUU7UUFDcEIsT0FBTyxZQUFZQyxNQUFNLENBQUMsSUFBSSxDQUFDYixFQUFFLEVBQUUsZUFBZWEsTUFBTSxDQUFDRDtJQUMzRDtJQUVBTixlQUFlSixVQUFVLEVBQUVDLE9BQU8sRUFBRTtRQUNsQyxJQUFJQSxTQUFTO1lBQ1gsSUFBSSxDQUFDQSxPQUFPLEdBQUdXLFlBQVlDLE1BQU0sQ0FBQ1osV0FBVztnQkFDM0NhLE9BQU9iO2dCQUNQYyxNQUFNO1lBQ1IsSUFBSWQ7UUFDTjtRQUVBLElBQUssTUFBTVMsaUJBQWlCVixXQUFZO1lBQ3RDLElBQUlnQixZQUFZaEIsVUFBVSxDQUFDVSxjQUFjO1lBQ3pDTSxZQUFZSixZQUFZQyxNQUFNLENBQUNHLGFBQWE7Z0JBQzFDRixPQUFPRTtZQUNULElBQUlBO1lBQ0pqQyxzREFBTUEsQ0FBQzZCLFlBQVlDLE1BQU0sQ0FBQ0csVUFBVUYsS0FBSyxHQUFHLEdBQUdILE1BQU0sQ0FBQyxJQUFJLENBQUNGLE1BQU0sQ0FBQ0MsZ0JBQWdCO1lBRWxGLElBQUksQ0FBQ0Esa0JBQWtCLGNBQWNBLGtCQUFrQixXQUFVLEtBQU0sQ0FBQ00sVUFBVUQsSUFBSSxFQUFFO2dCQUN0RkMsVUFBVUQsSUFBSSxHQUFHO1lBQ25CO1lBRUEsSUFBSUwsa0JBQWtCLFdBQVc7Z0JBQy9CM0Isc0RBQU1BLENBQUMsQ0FBQyxJQUFJLENBQUNrQixPQUFPO2dCQUNwQixJQUFJLENBQUNBLE9BQU8sR0FBR2U7WUFDakIsT0FBTztnQkFDTCxJQUFJLENBQUNoQixVQUFVLENBQUNVLGNBQWMsR0FBR007WUFDbkM7UUFDRjtRQUVBLElBQUksSUFBSSxDQUFDZixPQUFPLElBQUksSUFBSSxDQUFDQSxPQUFPLENBQUNnQixTQUFTLEtBQUtwQixXQUFXO1lBQ3hELElBQUksQ0FBQ0ksT0FBTyxHQUFHaUIsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNsQixPQUFPO1lBQzdDLE9BQU8sSUFBSSxDQUFDQSxPQUFPLENBQUNnQixTQUFTO1FBQy9CO1FBRUEsT0FBTyxJQUFJO0lBQ2I7SUFFQVosc0JBQXNCTCxVQUFVLEVBQUVDLE9BQU8sRUFBRTtRQUN6QyxJQUFJQSxTQUFTO1lBQ1gsT0FBT0EsUUFBUWEsS0FBSyxDQUFDbEIsTUFBTTtRQUM3QjtRQUVBLElBQUlNLGNBQWNrQjtRQUVsQixJQUFLLE1BQU1WLGlCQUFpQlYsV0FBWTtZQUN0QyxNQUFNZ0IsWUFBWWhCLFVBQVUsQ0FBQ1UsY0FBYztZQUMzQyxNQUFNLEVBQ0pJLEtBQUssRUFDTEMsSUFBSSxFQUNKTSxRQUFRLEVBQ1QsR0FBR0w7WUFFSixJQUFJLENBQUNLLFlBQVlQLFNBQVNDLFFBQVEsR0FBRztnQkFDbkNiLGNBQWNvQixLQUFLQyxHQUFHLENBQUNyQixhQUFhWSxNQUFNbEIsTUFBTSxHQUFHbUI7WUFDckQ7UUFDRjtRQUVBaEMsc0RBQU1BLENBQUN5QyxPQUFPQyxRQUFRLENBQUN2QjtRQUN2QixPQUFPQTtJQUNUO0FBRUYsRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9lbmdpbmUvZGlzdC9lc20vZ2VvbWV0cnkvZ2VvbWV0cnkuanM/YThmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1aWQsIGFzc2VydCB9IGZyb20gJ0BsdW1hLmdsL3dlYmdsJztcbmV4cG9ydCBjb25zdCBEUkFXX01PREUgPSB7XG4gIFBPSU5UUzogMHgwMDAwLFxuICBMSU5FUzogMHgwMDAxLFxuICBMSU5FX0xPT1A6IDB4MDAwMixcbiAgTElORV9TVFJJUDogMHgwMDAzLFxuICBUUklBTkdMRVM6IDB4MDAwNCxcbiAgVFJJQU5HTEVfU1RSSVA6IDB4MDAwNSxcbiAgVFJJQU5HTEVfRkFOOiAweDAwMDZcbn07XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHZW9tZXRyeSB7XG4gIHN0YXRpYyBnZXQgRFJBV19NT0RFKCkge1xuICAgIHJldHVybiBEUkFXX01PREU7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBsZXQgcHJvcHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICAgIGNvbnN0IHtcbiAgICAgIGlkID0gdWlkKCdnZW9tZXRyeScpLFxuICAgICAgZHJhd01vZGUgPSBEUkFXX01PREUuVFJJQU5HTEVTLFxuICAgICAgYXR0cmlidXRlcyA9IHt9LFxuICAgICAgaW5kaWNlcyA9IG51bGwsXG4gICAgICB2ZXJ0ZXhDb3VudCA9IG51bGxcbiAgICB9ID0gcHJvcHM7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuZHJhd01vZGUgPSBkcmF3TW9kZSB8IDA7XG4gICAgdGhpcy5hdHRyaWJ1dGVzID0ge307XG4gICAgdGhpcy51c2VyRGF0YSA9IHt9O1xuXG4gICAgdGhpcy5fc2V0QXR0cmlidXRlcyhhdHRyaWJ1dGVzLCBpbmRpY2VzKTtcblxuICAgIHRoaXMudmVydGV4Q291bnQgPSB2ZXJ0ZXhDb3VudCB8fCB0aGlzLl9jYWxjdWxhdGVWZXJ0ZXhDb3VudCh0aGlzLmF0dHJpYnV0ZXMsIHRoaXMuaW5kaWNlcyk7XG4gIH1cblxuICBnZXQgbW9kZSgpIHtcbiAgICByZXR1cm4gdGhpcy5kcmF3TW9kZTtcbiAgfVxuXG4gIGdldFZlcnRleENvdW50KCkge1xuICAgIHJldHVybiB0aGlzLnZlcnRleENvdW50O1xuICB9XG5cbiAgZ2V0QXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gdGhpcy5pbmRpY2VzID8ge1xuICAgICAgaW5kaWNlczogdGhpcy5pbmRpY2VzLFxuICAgICAgLi4udGhpcy5hdHRyaWJ1dGVzXG4gICAgfSA6IHRoaXMuYXR0cmlidXRlcztcbiAgfVxuXG4gIF9wcmludChhdHRyaWJ1dGVOYW1lKSB7XG4gICAgcmV0dXJuIFwiR2VvbWV0cnkgXCIuY29uY2F0KHRoaXMuaWQsIFwiIGF0dHJpYnV0ZSBcIikuY29uY2F0KGF0dHJpYnV0ZU5hbWUpO1xuICB9XG5cbiAgX3NldEF0dHJpYnV0ZXMoYXR0cmlidXRlcywgaW5kaWNlcykge1xuICAgIGlmIChpbmRpY2VzKSB7XG4gICAgICB0aGlzLmluZGljZXMgPSBBcnJheUJ1ZmZlci5pc1ZpZXcoaW5kaWNlcykgPyB7XG4gICAgICAgIHZhbHVlOiBpbmRpY2VzLFxuICAgICAgICBzaXplOiAxXG4gICAgICB9IDogaW5kaWNlcztcbiAgICB9XG5cbiAgICBmb3IgKGNvbnN0IGF0dHJpYnV0ZU5hbWUgaW4gYXR0cmlidXRlcykge1xuICAgICAgbGV0IGF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV07XG4gICAgICBhdHRyaWJ1dGUgPSBBcnJheUJ1ZmZlci5pc1ZpZXcoYXR0cmlidXRlKSA/IHtcbiAgICAgICAgdmFsdWU6IGF0dHJpYnV0ZVxuICAgICAgfSA6IGF0dHJpYnV0ZTtcbiAgICAgIGFzc2VydChBcnJheUJ1ZmZlci5pc1ZpZXcoYXR0cmlidXRlLnZhbHVlKSwgXCJcIi5jb25jYXQodGhpcy5fcHJpbnQoYXR0cmlidXRlTmFtZSksIFwiOiBtdXN0IGJlIHR5cGVkIGFycmF5IG9yIG9iamVjdCB3aXRoIHZhbHVlIGFzIHR5cGVkIGFycmF5XCIpKTtcblxuICAgICAgaWYgKChhdHRyaWJ1dGVOYW1lID09PSAnUE9TSVRJT04nIHx8IGF0dHJpYnV0ZU5hbWUgPT09ICdwb3NpdGlvbnMnKSAmJiAhYXR0cmlidXRlLnNpemUpIHtcbiAgICAgICAgYXR0cmlidXRlLnNpemUgPSAzO1xuICAgICAgfVxuXG4gICAgICBpZiAoYXR0cmlidXRlTmFtZSA9PT0gJ2luZGljZXMnKSB7XG4gICAgICAgIGFzc2VydCghdGhpcy5pbmRpY2VzKTtcbiAgICAgICAgdGhpcy5pbmRpY2VzID0gYXR0cmlidXRlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzW2F0dHJpYnV0ZU5hbWVdID0gYXR0cmlidXRlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLmluZGljZXMgJiYgdGhpcy5pbmRpY2VzLmlzSW5kZXhlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLmluZGljZXMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmluZGljZXMpO1xuICAgICAgZGVsZXRlIHRoaXMuaW5kaWNlcy5pc0luZGV4ZWQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBfY2FsY3VsYXRlVmVydGV4Q291bnQoYXR0cmlidXRlcywgaW5kaWNlcykge1xuICAgIGlmIChpbmRpY2VzKSB7XG4gICAgICByZXR1cm4gaW5kaWNlcy52YWx1ZS5sZW5ndGg7XG4gICAgfVxuXG4gICAgbGV0IHZlcnRleENvdW50ID0gSW5maW5pdHk7XG5cbiAgICBmb3IgKGNvbnN0IGF0dHJpYnV0ZU5hbWUgaW4gYXR0cmlidXRlcykge1xuICAgICAgY29uc3QgYXR0cmlidXRlID0gYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXTtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIHNpemUsXG4gICAgICAgIGNvbnN0YW50XG4gICAgICB9ID0gYXR0cmlidXRlO1xuXG4gICAgICBpZiAoIWNvbnN0YW50ICYmIHZhbHVlICYmIHNpemUgPj0gMSkge1xuICAgICAgICB2ZXJ0ZXhDb3VudCA9IE1hdGgubWluKHZlcnRleENvdW50LCB2YWx1ZS5sZW5ndGggLyBzaXplKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBhc3NlcnQoTnVtYmVyLmlzRmluaXRlKHZlcnRleENvdW50KSk7XG4gICAgcmV0dXJuIHZlcnRleENvdW50O1xuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdlb21ldHJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJ1aWQiLCJhc3NlcnQiLCJEUkFXX01PREUiLCJQT0lOVFMiLCJMSU5FUyIsIkxJTkVfTE9PUCIsIkxJTkVfU1RSSVAiLCJUUklBTkdMRVMiLCJUUklBTkdMRV9TVFJJUCIsIlRSSUFOR0xFX0ZBTiIsIkdlb21ldHJ5IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImlkIiwiZHJhd01vZGUiLCJhdHRyaWJ1dGVzIiwiaW5kaWNlcyIsInZlcnRleENvdW50IiwidXNlckRhdGEiLCJfc2V0QXR0cmlidXRlcyIsIl9jYWxjdWxhdGVWZXJ0ZXhDb3VudCIsIm1vZGUiLCJnZXRWZXJ0ZXhDb3VudCIsImdldEF0dHJpYnV0ZXMiLCJfcHJpbnQiLCJhdHRyaWJ1dGVOYW1lIiwiY29uY2F0IiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJ2YWx1ZSIsInNpemUiLCJhdHRyaWJ1dGUiLCJpc0luZGV4ZWQiLCJPYmplY3QiLCJhc3NpZ24iLCJJbmZpbml0eSIsImNvbnN0YW50IiwiTWF0aCIsIm1pbiIsIk51bWJlciIsImlzRmluaXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/animation-loop.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/lib/animation-loop.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AnimationLoop)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/init.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/query.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/request-animation-frame.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _probe_gl_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @probe.gl/env */ \"(ssr)/./node_modules/@probe.gl/env/dist/esm/lib/is-browser.js\");\n\n\n\nconst isPage = (0,_probe_gl_env__WEBPACK_IMPORTED_MODULE_1__[\"default\"])() && typeof document !== \"undefined\";\nlet statIdCounter = 0;\nclass AnimationLoop {\n    constructor(){\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { onCreateContext = (opts)=>(0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.createGLContext)(opts), onAddHTML = null, onInitialize = ()=>{}, onRender = ()=>{}, onFinalize = ()=>{}, onError, gl = null, glOptions = {}, debug = false, createFramebuffer = false, autoResizeViewport = true, autoResizeDrawingBuffer = true, stats = _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.lumaStats.get(\"animation-loop-\".concat(statIdCounter++)) } = props;\n        let { useDevicePixels = true } = props;\n        if (\"useDevicePixelRatio\" in props) {\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"useDevicePixelRatio\", \"useDevicePixels\")();\n            useDevicePixels = props.useDevicePixelRatio;\n        }\n        this.props = {\n            onCreateContext,\n            onAddHTML,\n            onInitialize,\n            onRender,\n            onFinalize,\n            onError,\n            gl,\n            glOptions,\n            debug,\n            createFramebuffer\n        };\n        this.gl = gl;\n        this.needsRedraw = null;\n        this.timeline = null;\n        this.stats = stats;\n        this.cpuTime = this.stats.get(\"CPU Time\");\n        this.gpuTime = this.stats.get(\"GPU Time\");\n        this.frameRate = this.stats.get(\"Frame Rate\");\n        this._initialized = false;\n        this._running = false;\n        this._animationFrameId = null;\n        this._nextFramePromise = null;\n        this._resolveNextFrame = null;\n        this._cpuStartTime = 0;\n        this.setProps({\n            autoResizeViewport,\n            autoResizeDrawingBuffer,\n            useDevicePixels\n        });\n        this.start = this.start.bind(this);\n        this.stop = this.stop.bind(this);\n        this._pageLoadPromise = null;\n        this._onMousemove = this._onMousemove.bind(this);\n        this._onMouseleave = this._onMouseleave.bind(this);\n    }\n    delete() {\n        this.stop();\n        this._setDisplay(null);\n    }\n    setNeedsRedraw(reason) {\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_3__.assert)(typeof reason === \"string\");\n        this.needsRedraw = this.needsRedraw || reason;\n        return this;\n    }\n    setProps(props) {\n        if (\"autoResizeViewport\" in props) {\n            this.autoResizeViewport = props.autoResizeViewport;\n        }\n        if (\"autoResizeDrawingBuffer\" in props) {\n            this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n        }\n        if (\"useDevicePixels\" in props) {\n            this.useDevicePixels = props.useDevicePixels;\n        }\n        return this;\n    }\n    start() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (this._running) {\n            return this;\n        }\n        this._running = true;\n        const startPromise = this._getPageLoadPromise().then(()=>{\n            if (!this._running || this._initialized) {\n                return null;\n            }\n            this._createWebGLContext(opts);\n            this._createFramebuffer();\n            this._startEventHandling();\n            this._initializeCallbackData();\n            this._updateCallbackData();\n            this._resizeCanvasDrawingBuffer();\n            this._resizeViewport();\n            this._gpuTimeQuery = _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isSupported(this.gl, [\n                \"timers\"\n            ]) ? new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.gl) : null;\n            this._initialized = true;\n            return this.onInitialize(this.animationProps);\n        }).then((appContext)=>{\n            if (this._running) {\n                this._addCallbackData(appContext || {});\n                if (appContext !== false) {\n                    this._startLoop();\n                }\n            }\n        });\n        if (this.props.onError) {\n            startPromise.catch(this.props.onError);\n        }\n        return this;\n    }\n    redraw() {\n        if (this.isContextLost()) {\n            return this;\n        }\n        this._beginTimers();\n        this._setupFrame();\n        this._updateCallbackData();\n        this._renderFrame(this.animationProps);\n        this._clearNeedsRedraw();\n        if (this.offScreen && this.gl.commit) {\n            this.gl.commit();\n        }\n        if (this._resolveNextFrame) {\n            this._resolveNextFrame(this);\n            this._nextFramePromise = null;\n            this._resolveNextFrame = null;\n        }\n        this._endTimers();\n        return this;\n    }\n    stop() {\n        if (this._running) {\n            this._finalizeCallbackData();\n            this._cancelAnimationFrame(this._animationFrameId);\n            this._nextFramePromise = null;\n            this._resolveNextFrame = null;\n            this._animationFrameId = null;\n            this._running = false;\n        }\n        return this;\n    }\n    attachTimeline(timeline) {\n        this.timeline = timeline;\n        return this.timeline;\n    }\n    detachTimeline() {\n        this.timeline = null;\n    }\n    waitForRender() {\n        this.setNeedsRedraw(\"waitForRender\");\n        if (!this._nextFramePromise) {\n            this._nextFramePromise = new Promise((resolve)=>{\n                this._resolveNextFrame = resolve;\n            });\n        }\n        return this._nextFramePromise;\n    }\n    async toDataURL() {\n        this.setNeedsRedraw(\"toDataURL\");\n        await this.waitForRender();\n        return this.gl.canvas.toDataURL();\n    }\n    isContextLost() {\n        return this.gl.isContextLost();\n    }\n    onCreateContext() {\n        return this.props.onCreateContext(...arguments);\n    }\n    onInitialize() {\n        return this.props.onInitialize(...arguments);\n    }\n    onRender() {\n        return this.props.onRender(...arguments);\n    }\n    onFinalize() {\n        return this.props.onFinalize(...arguments);\n    }\n    getHTMLControlValue(id) {\n        let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        const element = document.getElementById(id);\n        return element ? Number(element.value) : defaultValue;\n    }\n    setViewParameters() {\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.removed(\"AnimationLoop.setViewParameters\", \"AnimationLoop.setProps\")();\n        return this;\n    }\n    _startLoop() {\n        const renderFrame = ()=>{\n            if (!this._running) {\n                return;\n            }\n            this.redraw();\n            this._animationFrameId = this._requestAnimationFrame(renderFrame);\n        };\n        this._cancelAnimationFrame(this._animationFrameId);\n        this._animationFrameId = this._requestAnimationFrame(renderFrame);\n    }\n    _getPageLoadPromise() {\n        if (!this._pageLoadPromise) {\n            this._pageLoadPromise = isPage ? new Promise((resolve, reject)=>{\n                if (isPage && document.readyState === \"complete\") {\n                    resolve(document);\n                    return;\n                }\n                window.addEventListener(\"load\", ()=>{\n                    resolve(document);\n                });\n            }) : Promise.resolve({});\n        }\n        return this._pageLoadPromise;\n    }\n    _setDisplay(display) {\n        if (this.display) {\n            this.display.delete();\n            this.display.animationLoop = null;\n        }\n        if (display) {\n            display.animationLoop = this;\n        }\n        this.display = display;\n    }\n    _cancelAnimationFrame(animationFrameId) {\n        if (this.display && this.display.cancelAnimationFrame) {\n            return this.display.cancelAnimationFrame(animationFrameId);\n        }\n        return (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_5__.cancelAnimationFrame)(animationFrameId);\n    }\n    _requestAnimationFrame(renderFrameCallback) {\n        if (this._running) {\n            if (this.display && this.display.requestAnimationFrame) {\n                return this.display.requestAnimationFrame(renderFrameCallback);\n            }\n            return (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_5__.requestAnimationFrame)(renderFrameCallback);\n        }\n        return undefined;\n    }\n    _renderFrame() {\n        if (this.display) {\n            this.display._renderFrame(...arguments);\n            return;\n        }\n        this.onRender(...arguments);\n    }\n    _clearNeedsRedraw() {\n        this.needsRedraw = null;\n    }\n    _setupFrame() {\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n        this._resizeFramebuffer();\n    }\n    _initializeCallbackData() {\n        this.animationProps = {\n            gl: this.gl,\n            stop: this.stop,\n            canvas: this.gl.canvas,\n            framebuffer: this.framebuffer,\n            useDevicePixels: this.useDevicePixels,\n            needsRedraw: null,\n            startTime: Date.now(),\n            engineTime: 0,\n            tick: 0,\n            tock: 0,\n            time: 0,\n            _timeline: this.timeline,\n            _loop: this,\n            _animationLoop: this,\n            _mousePosition: null\n        };\n    }\n    _updateCallbackData() {\n        const { width, height, aspect } = this._getSizeAndAspect();\n        if (width !== this.animationProps.width || height !== this.animationProps.height) {\n            this.setNeedsRedraw(\"drawing buffer resized\");\n        }\n        if (aspect !== this.animationProps.aspect) {\n            this.setNeedsRedraw(\"drawing buffer aspect changed\");\n        }\n        this.animationProps.width = width;\n        this.animationProps.height = height;\n        this.animationProps.aspect = aspect;\n        this.animationProps.needsRedraw = this.needsRedraw;\n        this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\n        if (this.timeline) {\n            this.timeline.update(this.animationProps.engineTime);\n        }\n        this.animationProps.tick = Math.floor(this.animationProps.time / 1000 * 60);\n        this.animationProps.tock++;\n        this.animationProps.time = this.timeline ? this.timeline.getTime() : this.animationProps.engineTime;\n        this.animationProps._offScreen = this.offScreen;\n    }\n    _finalizeCallbackData() {\n        this.onFinalize(this.animationProps);\n    }\n    _addCallbackData(appContext) {\n        if (typeof appContext === \"object\" && appContext !== null) {\n            this.animationProps = Object.assign({}, this.animationProps, appContext);\n        }\n    }\n    _createWebGLContext(opts) {\n        this.offScreen = opts.canvas && typeof OffscreenCanvas !== \"undefined\" && opts.canvas instanceof OffscreenCanvas;\n        opts = Object.assign({}, opts, this.props.glOptions);\n        this.gl = this.props.gl ? (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.instrumentGLContext)(this.props.gl, opts) : this.onCreateContext(opts);\n        if (!(0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL)(this.gl)) {\n            throw new Error(\"AnimationLoop.onCreateContext - illegal context returned\");\n        }\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.resetParameters)(this.gl);\n        this._createInfoDiv();\n    }\n    _createInfoDiv() {\n        if (this.gl.canvas && this.props.onAddHTML) {\n            const wrapperDiv = document.createElement(\"div\");\n            document.body.appendChild(wrapperDiv);\n            wrapperDiv.style.position = \"relative\";\n            const div = document.createElement(\"div\");\n            div.style.position = \"absolute\";\n            div.style.left = \"10px\";\n            div.style.bottom = \"10px\";\n            div.style.width = \"300px\";\n            div.style.background = \"white\";\n            wrapperDiv.appendChild(this.gl.canvas);\n            wrapperDiv.appendChild(div);\n            const html = this.props.onAddHTML(div);\n            if (html) {\n                div.innerHTML = html;\n            }\n        }\n    }\n    _getSizeAndAspect() {\n        const width = this.gl.drawingBufferWidth;\n        const height = this.gl.drawingBufferHeight;\n        let aspect = 1;\n        const { canvas } = this.gl;\n        if (canvas && canvas.clientHeight) {\n            aspect = canvas.clientWidth / canvas.clientHeight;\n        } else if (width > 0 && height > 0) {\n            aspect = width / height;\n        }\n        return {\n            width,\n            height,\n            aspect\n        };\n    }\n    _resizeViewport() {\n        if (this.autoResizeViewport) {\n            this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n        }\n    }\n    _resizeCanvasDrawingBuffer() {\n        if (this.autoResizeDrawingBuffer) {\n            (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.resizeGLContext)(this.gl, {\n                useDevicePixels: this.useDevicePixels\n            });\n        }\n    }\n    _createFramebuffer() {\n        if (this.props.createFramebuffer) {\n            this.framebuffer = new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this.gl);\n        }\n    }\n    _resizeFramebuffer() {\n        if (this.framebuffer) {\n            this.framebuffer.resize({\n                width: this.gl.drawingBufferWidth,\n                height: this.gl.drawingBufferHeight\n            });\n        }\n    }\n    _beginTimers() {\n        this.frameRate.timeEnd();\n        this.frameRate.timeStart();\n        if (this._gpuTimeQuery && this._gpuTimeQuery.isResultAvailable() && !this._gpuTimeQuery.isTimerDisjoint()) {\n            this.stats.get(\"GPU Time\").addTime(this._gpuTimeQuery.getTimerMilliseconds());\n        }\n        if (this._gpuTimeQuery) {\n            this._gpuTimeQuery.beginTimeElapsedQuery();\n        }\n        this.cpuTime.timeStart();\n    }\n    _endTimers() {\n        this.cpuTime.timeEnd();\n        if (this._gpuTimeQuery) {\n            this._gpuTimeQuery.end();\n        }\n    }\n    _startEventHandling() {\n        const { canvas } = this.gl;\n        if (canvas) {\n            canvas.addEventListener(\"mousemove\", this._onMousemove);\n            canvas.addEventListener(\"mouseleave\", this._onMouseleave);\n        }\n    }\n    _onMousemove(e) {\n        this.animationProps._mousePosition = [\n            e.offsetX,\n            e.offsetY\n        ];\n    }\n    _onMouseleave(e) {\n        this.animationProps._mousePosition = null;\n    }\n} //# sourceMappingURL=animation-loop.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/animation-loop.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/lib/model-utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBuffersFromGeometry: () => (/* binding */ getBuffersFromGeometry),\n/* harmony export */   inferAttributeAccessor: () => (/* binding */ inferAttributeAccessor)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\nconst GLTF_TO_LUMA_ATTRIBUTE_MAP = {\n    POSITION: \"positions\",\n    NORMAL: \"normals\",\n    COLOR_0: \"colors\",\n    TEXCOORD_0: \"texCoords\",\n    TEXCOORD_1: \"texCoords1\",\n    TEXCOORD_2: \"texCoords2\"\n};\nfunction getBuffersFromGeometry(gl, geometry, options) {\n    const buffers = {};\n    let indices = geometry.indices;\n    for(const name in geometry.attributes){\n        const attribute = geometry.attributes[name];\n        const remappedName = mapAttributeName(name, options);\n        if (name === \"indices\") {\n            indices = attribute;\n        } else if (attribute.constant) {\n            buffers[remappedName] = attribute.value;\n        } else {\n            const typedArray = attribute.value;\n            const accessor = {\n                ...attribute\n            };\n            delete accessor.value;\n            buffers[remappedName] = [\n                new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_0__[\"default\"](gl, typedArray),\n                accessor\n            ];\n            inferAttributeAccessor(name, accessor);\n        }\n    }\n    if (indices) {\n        const data = indices.value || indices;\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.assert)(data instanceof Uint16Array || data instanceof Uint32Array, 'attribute array for \"indices\" must be of integer type');\n        const accessor = {\n            size: 1,\n            isIndexed: indices.isIndexed === undefined ? true : indices.isIndexed\n        };\n        buffers.indices = [\n            new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_0__[\"default\"](gl, {\n                data,\n                target: 34963\n            }),\n            accessor\n        ];\n    }\n    return buffers;\n}\nfunction mapAttributeName(name, options) {\n    const { attributeMap = GLTF_TO_LUMA_ATTRIBUTE_MAP } = options || {};\n    return attributeMap && attributeMap[name] || name;\n}\nfunction inferAttributeAccessor(attributeName, attribute) {\n    let category;\n    switch(attributeName){\n        case \"texCoords\":\n        case \"texCoord1\":\n        case \"texCoord2\":\n        case \"texCoord3\":\n            category = \"uvs\";\n            break;\n        case \"vertices\":\n        case \"positions\":\n        case \"normals\":\n        case \"pickingColors\":\n            category = \"vectors\";\n            break;\n        default:\n    }\n    switch(category){\n        case \"vectors\":\n            attribute.size = attribute.size || 3;\n            break;\n        case \"uvs\":\n            attribute.size = attribute.size || 2;\n            break;\n        default:\n    }\n    (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.assert)(Number.isFinite(attribute.size), \"attribute \".concat(attributeName, \" needs size\"));\n} //# sourceMappingURL=model-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZW5naW5lL2Rpc3QvZXNtL2xpYi9tb2RlbC11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdEO0FBQ2hELE1BQU1FLDZCQUE2QjtJQUNqQ0MsVUFBVTtJQUNWQyxRQUFRO0lBQ1JDLFNBQVM7SUFDVEMsWUFBWTtJQUNaQyxZQUFZO0lBQ1pDLFlBQVk7QUFDZDtBQUNPLFNBQVNDLHVCQUF1QkMsRUFBRSxFQUFFQyxRQUFRLEVBQUVDLE9BQU87SUFDMUQsTUFBTUMsVUFBVSxDQUFDO0lBQ2pCLElBQUlDLFVBQVVILFNBQVNHLE9BQU87SUFFOUIsSUFBSyxNQUFNQyxRQUFRSixTQUFTSyxVQUFVLENBQUU7UUFDdEMsTUFBTUMsWUFBWU4sU0FBU0ssVUFBVSxDQUFDRCxLQUFLO1FBQzNDLE1BQU1HLGVBQWVDLGlCQUFpQkosTUFBTUg7UUFFNUMsSUFBSUcsU0FBUyxXQUFXO1lBQ3RCRCxVQUFVRztRQUNaLE9BQU8sSUFBSUEsVUFBVUcsUUFBUSxFQUFFO1lBQzdCUCxPQUFPLENBQUNLLGFBQWEsR0FBR0QsVUFBVUksS0FBSztRQUN6QyxPQUFPO1lBQ0wsTUFBTUMsYUFBYUwsVUFBVUksS0FBSztZQUNsQyxNQUFNRSxXQUFXO2dCQUFFLEdBQUdOLFNBQVM7WUFDL0I7WUFDQSxPQUFPTSxTQUFTRixLQUFLO1lBQ3JCUixPQUFPLENBQUNLLGFBQWEsR0FBRztnQkFBQyxJQUFJbEIsc0RBQU1BLENBQUNVLElBQUlZO2dCQUFhQzthQUFTO1lBQzlEQyx1QkFBdUJULE1BQU1RO1FBQy9CO0lBQ0Y7SUFFQSxJQUFJVCxTQUFTO1FBQ1gsTUFBTVcsT0FBT1gsUUFBUU8sS0FBSyxJQUFJUDtRQUM5QmIsc0RBQU1BLENBQUN3QixnQkFBZ0JDLGVBQWVELGdCQUFnQkUsYUFBYTtRQUNuRSxNQUFNSixXQUFXO1lBQ2ZLLE1BQU07WUFDTkMsV0FBV2YsUUFBUWUsU0FBUyxLQUFLQyxZQUFZLE9BQU9oQixRQUFRZSxTQUFTO1FBQ3ZFO1FBQ0FoQixRQUFRQyxPQUFPLEdBQUc7WUFBQyxJQUFJZCxzREFBTUEsQ0FBQ1UsSUFBSTtnQkFDaENlO2dCQUNBTSxRQUFRO1lBQ1Y7WUFBSVI7U0FBUztJQUNmO0lBRUEsT0FBT1Y7QUFDVDtBQUVBLFNBQVNNLGlCQUFpQkosSUFBSSxFQUFFSCxPQUFPO0lBQ3JDLE1BQU0sRUFDSm9CLGVBQWU5QiwwQkFBMEIsRUFDMUMsR0FBR1UsV0FBVyxDQUFDO0lBQ2hCLE9BQU9vQixnQkFBZ0JBLFlBQVksQ0FBQ2pCLEtBQUssSUFBSUE7QUFDL0M7QUFFTyxTQUFTUyx1QkFBdUJTLGFBQWEsRUFBRWhCLFNBQVM7SUFDN0QsSUFBSWlCO0lBRUosT0FBUUQ7UUFDTixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0hDLFdBQVc7WUFDWDtRQUVGLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSEEsV0FBVztZQUNYO1FBRUY7SUFDRjtJQUVBLE9BQVFBO1FBQ04sS0FBSztZQUNIakIsVUFBVVcsSUFBSSxHQUFHWCxVQUFVVyxJQUFJLElBQUk7WUFDbkM7UUFFRixLQUFLO1lBQ0hYLFVBQVVXLElBQUksR0FBR1gsVUFBVVcsSUFBSSxJQUFJO1lBQ25DO1FBRUY7SUFDRjtJQUVBM0Isc0RBQU1BLENBQUNrQyxPQUFPQyxRQUFRLENBQUNuQixVQUFVVyxJQUFJLEdBQUcsYUFBYVMsTUFBTSxDQUFDSixlQUFlO0FBQzdFLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZW5naW5lL2Rpc3QvZXNtL2xpYi9tb2RlbC11dGlscy5qcz8yZDgxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciwgYXNzZXJ0IH0gZnJvbSAnQGx1bWEuZ2wvd2ViZ2wnO1xuY29uc3QgR0xURl9UT19MVU1BX0FUVFJJQlVURV9NQVAgPSB7XG4gIFBPU0lUSU9OOiAncG9zaXRpb25zJyxcbiAgTk9STUFMOiAnbm9ybWFscycsXG4gIENPTE9SXzA6ICdjb2xvcnMnLFxuICBURVhDT09SRF8wOiAndGV4Q29vcmRzJyxcbiAgVEVYQ09PUkRfMTogJ3RleENvb3JkczEnLFxuICBURVhDT09SRF8yOiAndGV4Q29vcmRzMidcbn07XG5leHBvcnQgZnVuY3Rpb24gZ2V0QnVmZmVyc0Zyb21HZW9tZXRyeShnbCwgZ2VvbWV0cnksIG9wdGlvbnMpIHtcbiAgY29uc3QgYnVmZmVycyA9IHt9O1xuICBsZXQgaW5kaWNlcyA9IGdlb21ldHJ5LmluZGljZXM7XG5cbiAgZm9yIChjb25zdCBuYW1lIGluIGdlb21ldHJ5LmF0dHJpYnV0ZXMpIHtcbiAgICBjb25zdCBhdHRyaWJ1dGUgPSBnZW9tZXRyeS5hdHRyaWJ1dGVzW25hbWVdO1xuICAgIGNvbnN0IHJlbWFwcGVkTmFtZSA9IG1hcEF0dHJpYnV0ZU5hbWUobmFtZSwgb3B0aW9ucyk7XG5cbiAgICBpZiAobmFtZSA9PT0gJ2luZGljZXMnKSB7XG4gICAgICBpbmRpY2VzID0gYXR0cmlidXRlO1xuICAgIH0gZWxzZSBpZiAoYXR0cmlidXRlLmNvbnN0YW50KSB7XG4gICAgICBidWZmZXJzW3JlbWFwcGVkTmFtZV0gPSBhdHRyaWJ1dGUudmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHR5cGVkQXJyYXkgPSBhdHRyaWJ1dGUudmFsdWU7XG4gICAgICBjb25zdCBhY2Nlc3NvciA9IHsgLi4uYXR0cmlidXRlXG4gICAgICB9O1xuICAgICAgZGVsZXRlIGFjY2Vzc29yLnZhbHVlO1xuICAgICAgYnVmZmVyc1tyZW1hcHBlZE5hbWVdID0gW25ldyBCdWZmZXIoZ2wsIHR5cGVkQXJyYXkpLCBhY2Nlc3Nvcl07XG4gICAgICBpbmZlckF0dHJpYnV0ZUFjY2Vzc29yKG5hbWUsIGFjY2Vzc29yKTtcbiAgICB9XG4gIH1cblxuICBpZiAoaW5kaWNlcykge1xuICAgIGNvbnN0IGRhdGEgPSBpbmRpY2VzLnZhbHVlIHx8IGluZGljZXM7XG4gICAgYXNzZXJ0KGRhdGEgaW5zdGFuY2VvZiBVaW50MTZBcnJheSB8fCBkYXRhIGluc3RhbmNlb2YgVWludDMyQXJyYXksICdhdHRyaWJ1dGUgYXJyYXkgZm9yIFwiaW5kaWNlc1wiIG11c3QgYmUgb2YgaW50ZWdlciB0eXBlJyk7XG4gICAgY29uc3QgYWNjZXNzb3IgPSB7XG4gICAgICBzaXplOiAxLFxuICAgICAgaXNJbmRleGVkOiBpbmRpY2VzLmlzSW5kZXhlZCA9PT0gdW5kZWZpbmVkID8gdHJ1ZSA6IGluZGljZXMuaXNJbmRleGVkXG4gICAgfTtcbiAgICBidWZmZXJzLmluZGljZXMgPSBbbmV3IEJ1ZmZlcihnbCwge1xuICAgICAgZGF0YSxcbiAgICAgIHRhcmdldDogMzQ5NjNcbiAgICB9KSwgYWNjZXNzb3JdO1xuICB9XG5cbiAgcmV0dXJuIGJ1ZmZlcnM7XG59XG5cbmZ1bmN0aW9uIG1hcEF0dHJpYnV0ZU5hbWUobmFtZSwgb3B0aW9ucykge1xuICBjb25zdCB7XG4gICAgYXR0cmlidXRlTWFwID0gR0xURl9UT19MVU1BX0FUVFJJQlVURV9NQVBcbiAgfSA9IG9wdGlvbnMgfHwge307XG4gIHJldHVybiBhdHRyaWJ1dGVNYXAgJiYgYXR0cmlidXRlTWFwW25hbWVdIHx8IG5hbWU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbmZlckF0dHJpYnV0ZUFjY2Vzc29yKGF0dHJpYnV0ZU5hbWUsIGF0dHJpYnV0ZSkge1xuICBsZXQgY2F0ZWdvcnk7XG5cbiAgc3dpdGNoIChhdHRyaWJ1dGVOYW1lKSB7XG4gICAgY2FzZSAndGV4Q29vcmRzJzpcbiAgICBjYXNlICd0ZXhDb29yZDEnOlxuICAgIGNhc2UgJ3RleENvb3JkMic6XG4gICAgY2FzZSAndGV4Q29vcmQzJzpcbiAgICAgIGNhdGVnb3J5ID0gJ3V2cyc7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3ZlcnRpY2VzJzpcbiAgICBjYXNlICdwb3NpdGlvbnMnOlxuICAgIGNhc2UgJ25vcm1hbHMnOlxuICAgIGNhc2UgJ3BpY2tpbmdDb2xvcnMnOlxuICAgICAgY2F0ZWdvcnkgPSAndmVjdG9ycyc7XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gIH1cblxuICBzd2l0Y2ggKGNhdGVnb3J5KSB7XG4gICAgY2FzZSAndmVjdG9ycyc6XG4gICAgICBhdHRyaWJ1dGUuc2l6ZSA9IGF0dHJpYnV0ZS5zaXplIHx8IDM7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3V2cyc6XG4gICAgICBhdHRyaWJ1dGUuc2l6ZSA9IGF0dHJpYnV0ZS5zaXplIHx8IDI7XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gIH1cblxuICBhc3NlcnQoTnVtYmVyLmlzRmluaXRlKGF0dHJpYnV0ZS5zaXplKSwgXCJhdHRyaWJ1dGUgXCIuY29uY2F0KGF0dHJpYnV0ZU5hbWUsIFwiIG5lZWRzIHNpemVcIikpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW9kZWwtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIkJ1ZmZlciIsImFzc2VydCIsIkdMVEZfVE9fTFVNQV9BVFRSSUJVVEVfTUFQIiwiUE9TSVRJT04iLCJOT1JNQUwiLCJDT0xPUl8wIiwiVEVYQ09PUkRfMCIsIlRFWENPT1JEXzEiLCJURVhDT09SRF8yIiwiZ2V0QnVmZmVyc0Zyb21HZW9tZXRyeSIsImdsIiwiZ2VvbWV0cnkiLCJvcHRpb25zIiwiYnVmZmVycyIsImluZGljZXMiLCJuYW1lIiwiYXR0cmlidXRlcyIsImF0dHJpYnV0ZSIsInJlbWFwcGVkTmFtZSIsIm1hcEF0dHJpYnV0ZU5hbWUiLCJjb25zdGFudCIsInZhbHVlIiwidHlwZWRBcnJheSIsImFjY2Vzc29yIiwiaW5mZXJBdHRyaWJ1dGVBY2Nlc3NvciIsImRhdGEiLCJVaW50MTZBcnJheSIsIlVpbnQzMkFycmF5Iiwic2l6ZSIsImlzSW5kZXhlZCIsInVuZGVmaW5lZCIsInRhcmdldCIsImF0dHJpYnV0ZU1hcCIsImF0dHJpYnV0ZU5hbWUiLCJjYXRlZ29yeSIsIk51bWJlciIsImlzRmluaXRlIiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model.js":
/*!************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/lib/model.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Model)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _program_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./program-manager */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/program-manager.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/clear.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/program.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/vertex-array.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/transform-feedback.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-vertex-array.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-uniforms.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-program-configuration.js\");\n/* harmony import */ var _model_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./model-utils */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model-utils.js\");\n\n\n\n\n\nconst LOG_DRAW_PRIORITY = 2;\nconst LOG_DRAW_TIMEOUT = 10000;\nconst ERR_MODEL_PARAMS = \"Model needs drawMode and vertexCount\";\nconst NOOP = ()=>{};\nconst DRAW_PARAMS = {};\nclass Model {\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const { id = (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.uid)(\"model\") } = props;\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL)(gl));\n        this.id = id;\n        this.gl = gl;\n        this.id = props.id || (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.uid)(\"Model\");\n        this.lastLogTime = 0;\n        this.animated = false;\n        this.initialize(props);\n    }\n    initialize(props) {\n        this.props = {};\n        this.programManager = props.programManager || _program_manager__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getDefaultProgramManager(this.gl);\n        this._programManagerState = -1;\n        this._managedProgram = false;\n        const { program = null, vs, fs, modules, defines, inject, varyings, bufferMode, transpileToGLSL100 } = props;\n        this.programProps = {\n            program,\n            vs,\n            fs,\n            modules,\n            defines,\n            inject,\n            varyings,\n            bufferMode,\n            transpileToGLSL100\n        };\n        this.program = null;\n        this.vertexArray = null;\n        this._programDirty = true;\n        this.userData = {};\n        this.needsRedraw = true;\n        this._attributes = {};\n        this.attributes = {};\n        this.uniforms = {};\n        this.pickable = true;\n        this._checkProgram();\n        this.setUniforms(Object.assign({}, this.getModuleUniforms(props.moduleSettings)));\n        this.drawMode = props.drawMode !== undefined ? props.drawMode : 4;\n        this.vertexCount = props.vertexCount || 0;\n        this.geometryBuffers = {};\n        this.isInstanced = props.isInstanced || props.instanced || props.instanceCount > 0;\n        this._setModelProps(props);\n        this.geometry = {};\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.assert)(this.drawMode !== undefined && Number.isFinite(this.vertexCount), ERR_MODEL_PARAMS);\n    }\n    setProps(props) {\n        this._setModelProps(props);\n    }\n    delete() {\n        for(const key in this._attributes){\n            if (this._attributes[key] !== this.attributes[key]) {\n                this._attributes[key].delete();\n            }\n        }\n        if (this._managedProgram) {\n            this.programManager.release(this.program);\n            this._managedProgram = false;\n        }\n        this.vertexArray.delete();\n        this._deleteGeometryBuffers();\n    }\n    getDrawMode() {\n        return this.drawMode;\n    }\n    getVertexCount() {\n        return this.vertexCount;\n    }\n    getInstanceCount() {\n        return this.instanceCount;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    getProgram() {\n        return this.program;\n    }\n    setProgram(props) {\n        const { program, vs, fs, modules, defines, inject, varyings, bufferMode, transpileToGLSL100 } = props;\n        this.programProps = {\n            program,\n            vs,\n            fs,\n            modules,\n            defines,\n            inject,\n            varyings,\n            bufferMode,\n            transpileToGLSL100\n        };\n        this._programDirty = true;\n    }\n    getUniforms() {\n        return this.uniforms;\n    }\n    setDrawMode(drawMode) {\n        this.drawMode = drawMode;\n        return this;\n    }\n    setVertexCount(vertexCount) {\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.assert)(Number.isFinite(vertexCount));\n        this.vertexCount = vertexCount;\n        return this;\n    }\n    setInstanceCount(instanceCount) {\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.assert)(Number.isFinite(instanceCount));\n        this.instanceCount = instanceCount;\n        return this;\n    }\n    setGeometry(geometry) {\n        this.drawMode = geometry.drawMode;\n        this.vertexCount = geometry.getVertexCount();\n        this._deleteGeometryBuffers();\n        this.geometryBuffers = (0,_model_utils__WEBPACK_IMPORTED_MODULE_4__.getBuffersFromGeometry)(this.gl, geometry);\n        this.vertexArray.setAttributes(this.geometryBuffers);\n        return this;\n    }\n    setAttributes() {\n        let attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if ((0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.isObjectEmpty)(attributes)) {\n            return this;\n        }\n        const normalizedAttributes = {};\n        for(const name in attributes){\n            const attribute = attributes[name];\n            normalizedAttributes[name] = attribute.getValue ? attribute.getValue() : attribute;\n        }\n        this.vertexArray.setAttributes(normalizedAttributes);\n        return this;\n    }\n    setUniforms() {\n        let uniforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        Object.assign(this.uniforms, uniforms);\n        return this;\n    }\n    getModuleUniforms(opts) {\n        this._checkProgram();\n        const getUniforms = this.programManager.getUniforms(this.program);\n        if (getUniforms) {\n            return getUniforms(opts);\n        }\n        return {};\n    }\n    updateModuleSettings(opts) {\n        const uniforms = this.getModuleUniforms(opts || {});\n        return this.setUniforms(uniforms);\n    }\n    clear(opts) {\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_5__.clear)(this.program.gl, opts);\n        return this;\n    }\n    draw() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this._checkProgram();\n        const { moduleSettings = null, framebuffer, uniforms = {}, attributes = {}, transformFeedback = this.transformFeedback, parameters = {}, vertexArray = this.vertexArray } = opts;\n        this.setAttributes(attributes);\n        this.updateModuleSettings(moduleSettings);\n        this.setUniforms(uniforms);\n        let logPriority;\n        if (_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.priority >= LOG_DRAW_PRIORITY) {\n            logPriority = this._logDrawCallStart(LOG_DRAW_PRIORITY);\n        }\n        const drawParams = this.vertexArray.getDrawParams();\n        const { isIndexed = drawParams.isIndexed, indexType = drawParams.indexType, indexOffset = drawParams.indexOffset, vertexArrayInstanced = drawParams.isInstanced } = this.props;\n        if (vertexArrayInstanced && !this.isInstanced) {\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"Found instanced attributes on non-instanced model\", this.id)();\n        }\n        const { isInstanced, instanceCount } = this;\n        const { onBeforeRender = NOOP, onAfterRender = NOOP } = this.props;\n        onBeforeRender();\n        this.program.setUniforms(this.uniforms);\n        const didDraw = this.program.draw(Object.assign(DRAW_PARAMS, opts, {\n            logPriority,\n            uniforms: null,\n            framebuffer,\n            parameters,\n            drawMode: this.getDrawMode(),\n            vertexCount: this.getVertexCount(),\n            vertexArray,\n            transformFeedback,\n            isIndexed,\n            indexType,\n            isInstanced,\n            instanceCount,\n            offset: isIndexed ? indexOffset : 0\n        }));\n        onAfterRender();\n        if (_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.priority >= LOG_DRAW_PRIORITY) {\n            this._logDrawCallEnd(logPriority, vertexArray, framebuffer);\n        }\n        return didDraw;\n    }\n    transform() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { discard = true, feedbackBuffers, unbindModels = [] } = opts;\n        let { parameters } = opts;\n        if (feedbackBuffers) {\n            this._setFeedbackBuffers(feedbackBuffers);\n        }\n        if (discard) {\n            parameters = Object.assign({}, parameters, {\n                [35977]: discard\n            });\n        }\n        unbindModels.forEach((model)=>model.vertexArray.unbindBuffers());\n        try {\n            this.draw(Object.assign({}, opts, {\n                parameters\n            }));\n        } finally{\n            unbindModels.forEach((model)=>model.vertexArray.bindBuffers());\n        }\n        return this;\n    }\n    render() {\n        let uniforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"Model.render() is deprecated. Use Model.setUniforms() and Model.draw()\")();\n        return this.setUniforms(uniforms).draw();\n    }\n    _setModelProps(props) {\n        Object.assign(this.props, props);\n        if (\"uniforms\" in props) {\n            this.setUniforms(props.uniforms);\n        }\n        if (\"pickable\" in props) {\n            this.pickable = props.pickable;\n        }\n        if (\"instanceCount\" in props) {\n            this.instanceCount = props.instanceCount;\n        }\n        if (\"geometry\" in props) {\n            this.setGeometry(props.geometry);\n        }\n        if (\"attributes\" in props) {\n            this.setAttributes(props.attributes);\n        }\n        if (\"_feedbackBuffers\" in props) {\n            this._setFeedbackBuffers(props._feedbackBuffers);\n        }\n    }\n    _checkProgram() {\n        const needsUpdate = this._programDirty || this.programManager.stateHash !== this._programManagerState;\n        if (!needsUpdate) {\n            return;\n        }\n        let { program } = this.programProps;\n        if (program) {\n            this._managedProgram = false;\n        } else {\n            const { vs, fs, modules, inject, defines, varyings, bufferMode, transpileToGLSL100 } = this.programProps;\n            program = this.programManager.get({\n                vs,\n                fs,\n                modules,\n                inject,\n                defines,\n                varyings,\n                bufferMode,\n                transpileToGLSL100\n            });\n            if (this.program && this._managedProgram) {\n                this.programManager.release(this.program);\n            }\n            this._programManagerState = this.programManager.stateHash;\n            this._managedProgram = true;\n        }\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.assert)(program instanceof _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_6__[\"default\"], \"Model needs a program\");\n        this._programDirty = false;\n        if (program === this.program) {\n            return;\n        }\n        this.program = program;\n        if (this.vertexArray) {\n            this.vertexArray.setProps({\n                program: this.program,\n                attributes: this.vertexArray.attributes\n            });\n        } else {\n            this.vertexArray = new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this.gl, {\n                program: this.program\n            });\n        }\n        this.setUniforms(Object.assign({}, this.getModuleUniforms()));\n    }\n    _deleteGeometryBuffers() {\n        for(const name in this.geometryBuffers){\n            const buffer = this.geometryBuffers[name][0] || this.geometryBuffers[name];\n            if (buffer instanceof _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_8__[\"default\"]) {\n                buffer.delete();\n            }\n        }\n    }\n    _setAnimationProps(animationProps) {\n        if (this.animated) {\n            (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.assert)(animationProps, \"Model.draw(): animated uniforms but no animationProps\");\n        }\n    }\n    _setFeedbackBuffers() {\n        let feedbackBuffers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if ((0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.isObjectEmpty)(feedbackBuffers)) {\n            return this;\n        }\n        const { gl } = this.program;\n        this.transformFeedback = this.transformFeedback || new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_9__[\"default\"](gl, {\n            program: this.program\n        });\n        this.transformFeedback.setBuffers(feedbackBuffers);\n        return this;\n    }\n    _logDrawCallStart(logLevel) {\n        const logDrawTimeout = logLevel > 3 ? 0 : LOG_DRAW_TIMEOUT;\n        if (Date.now() - this.lastLogTime < logDrawTimeout) {\n            return undefined;\n        }\n        this.lastLogTime = Date.now();\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.group(LOG_DRAW_PRIORITY, \">>> DRAWING MODEL \".concat(this.id), {\n            collapsed: _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.level <= 2\n        })();\n        return logLevel;\n    }\n    _logDrawCallEnd(logLevel, vertexArray, uniforms, framebuffer) {\n        if (logLevel === undefined) {\n            return;\n        }\n        const attributeTable = (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_10__.getDebugTableForVertexArray)({\n            vertexArray,\n            header: \"\".concat(this.id, \" attributes\"),\n            attributes: this._attributes\n        });\n        const { table: uniformTable, unusedTable, unusedCount } = (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_11__.getDebugTableForUniforms)({\n            header: \"\".concat(this.id, \" uniforms\"),\n            program: this.program,\n            uniforms: Object.assign({}, this.program.uniforms, uniforms)\n        });\n        const { table: missingTable, count: missingCount } = (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_11__.getDebugTableForUniforms)({\n            header: \"\".concat(this.id, \" uniforms\"),\n            program: this.program,\n            uniforms: Object.assign({}, this.program.uniforms, uniforms),\n            undefinedOnly: true\n        });\n        if (missingCount > 0) {\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.log(\"MISSING UNIFORMS\", Object.keys(missingTable))();\n        }\n        if (unusedCount > 0) {\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.log(\"UNUSED UNIFORMS\", Object.keys(unusedTable))();\n        }\n        const configTable = (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_12__.getDebugTableForProgramConfiguration)(this.vertexArray.configuration);\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.table(logLevel, attributeTable)();\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.table(logLevel, uniformTable)();\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.table(logLevel + 1, configTable)();\n        if (framebuffer) {\n            framebuffer.log({\n                logLevel: LOG_DRAW_PRIORITY,\n                message: \"Rendered to \".concat(framebuffer.id)\n            });\n        }\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.groupEnd(LOG_DRAW_PRIORITY)();\n    }\n} //# sourceMappingURL=model.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/program-manager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/lib/program-manager.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ProgramManager)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/shadertools */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/assemble-shaders.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/program.js\");\n\n\nclass ProgramManager {\n    static getDefaultProgramManager(gl) {\n        gl.luma = gl.luma || {};\n        gl.luma.defaultProgramManager = gl.luma.defaultProgramManager || new ProgramManager(gl);\n        return gl.luma.defaultProgramManager;\n    }\n    constructor(gl){\n        this.gl = gl;\n        this._programCache = {};\n        this._getUniforms = {};\n        this._registeredModules = {};\n        this._hookFunctions = [];\n        this._defaultModules = [];\n        this._hashes = {};\n        this._hashCounter = 0;\n        this.stateHash = 0;\n        this._useCounts = {};\n    }\n    addDefaultModule(module) {\n        if (!this._defaultModules.find((m)=>m.name === module.name)) {\n            this._defaultModules.push(module);\n        }\n        this.stateHash++;\n    }\n    removeDefaultModule(module) {\n        const moduleName = typeof module === \"string\" ? module : module.name;\n        this._defaultModules = this._defaultModules.filter((m)=>m.name !== moduleName);\n        this.stateHash++;\n    }\n    addShaderHook(hook, opts) {\n        if (opts) {\n            hook = Object.assign(opts, {\n                hook\n            });\n        }\n        this._hookFunctions.push(hook);\n        this.stateHash++;\n    }\n    get() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { vs = \"\", fs = \"\", defines = {}, inject = {}, varyings = [], bufferMode = 0x8c8d, transpileToGLSL100 = false } = props;\n        const modules = this._getModuleList(props.modules);\n        const vsHash = this._getHash(vs);\n        const fsHash = this._getHash(fs);\n        const moduleHashes = modules.map((m)=>this._getHash(m.name)).sort();\n        const varyingHashes = varyings.map((v)=>this._getHash(v));\n        const defineKeys = Object.keys(defines).sort();\n        const injectKeys = Object.keys(inject).sort();\n        const defineHashes = [];\n        const injectHashes = [];\n        for (const key of defineKeys){\n            defineHashes.push(this._getHash(key));\n            defineHashes.push(this._getHash(defines[key]));\n        }\n        for (const key of injectKeys){\n            injectHashes.push(this._getHash(key));\n            injectHashes.push(this._getHash(inject[key]));\n        }\n        const hash = \"\".concat(vsHash, \"/\").concat(fsHash, \"D\").concat(defineHashes.join(\"/\"), \"M\").concat(moduleHashes.join(\"/\"), \"I\").concat(injectHashes.join(\"/\"), \"V\").concat(varyingHashes.join(\"/\"), \"H\").concat(this.stateHash, \"B\").concat(bufferMode).concat(transpileToGLSL100 ? \"T\" : \"\");\n        if (!this._programCache[hash]) {\n            const assembled = (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_0__.assembleShaders)(this.gl, {\n                vs,\n                fs,\n                modules,\n                inject,\n                defines,\n                hookFunctions: this._hookFunctions,\n                transpileToGLSL100\n            });\n            this._programCache[hash] = new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.gl, {\n                hash,\n                vs: assembled.vs,\n                fs: assembled.fs,\n                varyings,\n                bufferMode\n            });\n            this._getUniforms[hash] = assembled.getUniforms || ((x)=>{});\n            this._useCounts[hash] = 0;\n        }\n        this._useCounts[hash]++;\n        return this._programCache[hash];\n    }\n    getUniforms(program) {\n        return this._getUniforms[program.hash] || null;\n    }\n    release(program) {\n        const hash = program.hash;\n        this._useCounts[hash]--;\n        if (this._useCounts[hash] === 0) {\n            this._programCache[hash].delete();\n            delete this._programCache[hash];\n            delete this._getUniforms[hash];\n            delete this._useCounts[hash];\n        }\n    }\n    _getHash(key) {\n        if (this._hashes[key] === undefined) {\n            this._hashes[key] = this._hashCounter++;\n        }\n        return this._hashes[key];\n    }\n    _getModuleList() {\n        let appModules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        const modules = new Array(this._defaultModules.length + appModules.length);\n        const seen = {};\n        let count = 0;\n        for(let i = 0, len = this._defaultModules.length; i < len; ++i){\n            const module = this._defaultModules[i];\n            const name = module.name;\n            modules[count++] = module;\n            seen[name] = true;\n        }\n        for(let i = 0, len = appModules.length; i < len; ++i){\n            const module = appModules[i];\n            const name = module.name;\n            if (!seen[name]) {\n                modules[count++] = module;\n                seen[name] = true;\n            }\n        }\n        modules.length = count;\n        return modules;\n    }\n} //# sourceMappingURL=program-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/program-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/buffer-transform.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/transform/buffer-transform.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BufferTransform)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/transform-feedback.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\n\nclass BufferTransform {\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.gl = gl;\n        this.currentIndex = 0;\n        this.feedbackMap = {};\n        this.varyings = null;\n        this.bindings = [];\n        this.resources = {};\n        this._initialize(props);\n        Object.seal(this);\n    }\n    setupResources(opts) {\n        for (const binding of this.bindings){\n            this._setupTransformFeedback(binding, opts);\n        }\n    }\n    updateModelProps() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { varyings } = this;\n        if (varyings.length > 0) {\n            props = Object.assign({}, props, {\n                varyings\n            });\n        }\n        return props;\n    }\n    getDrawOptions() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const binding = this.bindings[this.currentIndex];\n        const { sourceBuffers, transformFeedback } = binding;\n        const attributes = Object.assign({}, sourceBuffers, opts.attributes);\n        return {\n            attributes,\n            transformFeedback\n        };\n    }\n    swap() {\n        if (this.feedbackMap) {\n            this.currentIndex = this._getNextIndex();\n            return true;\n        }\n        return false;\n    }\n    update() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this._setupBuffers(opts);\n    }\n    getBuffer(varyingName) {\n        const { feedbackBuffers } = this.bindings[this.currentIndex];\n        const bufferOrParams = varyingName ? feedbackBuffers[varyingName] : null;\n        if (!bufferOrParams) {\n            return null;\n        }\n        return bufferOrParams instanceof _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ? bufferOrParams : bufferOrParams.buffer;\n    }\n    getData() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { varyingName } = options;\n        const buffer = this.getBuffer(varyingName);\n        if (buffer) {\n            return buffer.getData();\n        }\n        return null;\n    }\n    delete() {\n        for(const name in this.resources){\n            this.resources[name].delete();\n        }\n    }\n    _initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this._setupBuffers(props);\n        this.varyings = props.varyings || Object.keys(this.bindings[this.currentIndex].feedbackBuffers);\n        if (this.varyings.length > 0) {\n            (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(this.gl));\n        }\n    }\n    _getFeedbackBuffers(props) {\n        const { sourceBuffers = {} } = props;\n        const feedbackBuffers = {};\n        if (this.bindings[this.currentIndex]) {\n            Object.assign(feedbackBuffers, this.bindings[this.currentIndex].feedbackBuffers);\n        }\n        if (this.feedbackMap) {\n            for(const sourceName in this.feedbackMap){\n                const feedbackName = this.feedbackMap[sourceName];\n                if (sourceName in sourceBuffers) {\n                    feedbackBuffers[feedbackName] = sourceName;\n                }\n            }\n        }\n        Object.assign(feedbackBuffers, props.feedbackBuffers);\n        for(const bufferName in feedbackBuffers){\n            const bufferOrRef = feedbackBuffers[bufferName];\n            if (typeof bufferOrRef === \"string\") {\n                const sourceBuffer = sourceBuffers[bufferOrRef];\n                const { byteLength, usage, accessor } = sourceBuffer;\n                feedbackBuffers[bufferName] = this._createNewBuffer(bufferName, {\n                    byteLength,\n                    usage,\n                    accessor\n                });\n            }\n        }\n        return feedbackBuffers;\n    }\n    _setupBuffers() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { sourceBuffers = null } = props;\n        Object.assign(this.feedbackMap, props.feedbackMap);\n        const feedbackBuffers = this._getFeedbackBuffers(props);\n        this._updateBindings({\n            sourceBuffers,\n            feedbackBuffers\n        });\n    }\n    _setupTransformFeedback(binding, _ref) {\n        let { model } = _ref;\n        const { program } = model;\n        binding.transformFeedback = new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.gl, {\n            program,\n            buffers: binding.feedbackBuffers\n        });\n    }\n    _updateBindings(opts) {\n        this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], opts);\n        if (this.feedbackMap) {\n            const { sourceBuffers, feedbackBuffers } = this._swapBuffers(this.bindings[this.currentIndex]);\n            const nextIndex = this._getNextIndex();\n            this.bindings[nextIndex] = this._updateBinding(this.bindings[nextIndex], {\n                sourceBuffers,\n                feedbackBuffers\n            });\n        }\n    }\n    _updateBinding(binding, opts) {\n        if (!binding) {\n            return {\n                sourceBuffers: Object.assign({}, opts.sourceBuffers),\n                feedbackBuffers: Object.assign({}, opts.feedbackBuffers)\n            };\n        }\n        Object.assign(binding.sourceBuffers, opts.sourceBuffers);\n        Object.assign(binding.feedbackBuffers, opts.feedbackBuffers);\n        if (binding.transformFeedback) {\n            binding.transformFeedback.setBuffers(binding.feedbackBuffers);\n        }\n        return binding;\n    }\n    _swapBuffers(opts) {\n        if (!this.feedbackMap) {\n            return null;\n        }\n        const sourceBuffers = Object.assign({}, opts.sourceBuffers);\n        const feedbackBuffers = Object.assign({}, opts.feedbackBuffers);\n        for(const srcName in this.feedbackMap){\n            const dstName = this.feedbackMap[srcName];\n            sourceBuffers[srcName] = opts.feedbackBuffers[dstName];\n            feedbackBuffers[dstName] = opts.sourceBuffers[srcName];\n            (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_2__.assert)(feedbackBuffers[dstName] instanceof _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n        }\n        return {\n            sourceBuffers,\n            feedbackBuffers\n        };\n    }\n    _createNewBuffer(name, opts) {\n        const buffer = new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.gl, opts);\n        if (this.resources[name]) {\n            this.resources[name].delete();\n        }\n        this.resources[name] = buffer;\n        return buffer;\n    }\n    _getNextIndex() {\n        return (this.currentIndex + 1) % 2;\n    }\n} //# sourceMappingURL=buffer-transform.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/buffer-transform.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/texture-transform.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/transform/texture-transform.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TextureTransform)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/texture-utils.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-version.js\");\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/shadertools */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/shader-utils.js\");\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/shadertools */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/inject-shader.js\");\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @luma.gl/shadertools */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/transform/transform.js\");\n/* harmony import */ var _transform_shader_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform-shader-utils */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/transform-shader-utils.js\");\n\n\n\nconst SRC_TEX_PARAMETER_OVERRIDES = {\n    [10241]: 9728,\n    [10240]: 9728,\n    [10242]: 33071,\n    [10243]: 33071\n};\nconst FS_OUTPUT_VARIABLE = \"transform_output\";\nclass TextureTransform {\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.gl = gl;\n        this.id = this.currentIndex = 0;\n        this._swapTexture = null;\n        this.targetTextureVarying = null;\n        this.targetTextureType = null;\n        this.samplerTextureMap = null;\n        this.bindings = [];\n        this.resources = {};\n        this._initialize(props);\n        Object.seal(this);\n    }\n    updateModelProps() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const updatedModelProps = this._processVertexShader(props);\n        return Object.assign({}, props, updatedModelProps);\n    }\n    getDrawOptions() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { sourceBuffers, sourceTextures, framebuffer, targetTexture } = this.bindings[this.currentIndex];\n        const attributes = Object.assign({}, sourceBuffers, opts.attributes);\n        const uniforms = Object.assign({}, opts.uniforms);\n        const parameters = Object.assign({}, opts.parameters);\n        let discard = opts.discard;\n        if (this.hasSourceTextures || this.hasTargetTexture) {\n            attributes.transform_elementID = this.elementIDBuffer;\n            for(const sampler in this.samplerTextureMap){\n                const textureName = this.samplerTextureMap[sampler];\n                uniforms[sampler] = sourceTextures[textureName];\n            }\n            this._setSourceTextureParameters();\n            const sizeUniforms = (0,_transform_shader_utils__WEBPACK_IMPORTED_MODULE_0__.getSizeUniforms)({\n                sourceTextureMap: sourceTextures,\n                targetTextureVarying: this.targetTextureVarying,\n                targetTexture\n            });\n            Object.assign(uniforms, sizeUniforms);\n        }\n        if (this.hasTargetTexture) {\n            discard = false;\n            parameters.viewport = [\n                0,\n                0,\n                framebuffer.width,\n                framebuffer.height\n            ];\n        }\n        return {\n            attributes,\n            framebuffer,\n            uniforms,\n            discard,\n            parameters\n        };\n    }\n    swap() {\n        if (this._swapTexture) {\n            this.currentIndex = this._getNextIndex();\n            return true;\n        }\n        return false;\n    }\n    update() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this._setupTextures(opts);\n    }\n    getTargetTexture() {\n        const { targetTexture } = this.bindings[this.currentIndex];\n        return targetTexture;\n    }\n    getData() {\n        let { packed = false } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { framebuffer } = this.bindings[this.currentIndex];\n        const pixels = (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.readPixelsToArray)(framebuffer);\n        if (!packed) {\n            return pixels;\n        }\n        const ArrayType = pixels.constructor;\n        const channelCount = (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_2__.typeToChannelCount)(this.targetTextureType);\n        const packedPixels = new ArrayType(pixels.length * channelCount / 4);\n        let packCount = 0;\n        for(let i = 0; i < pixels.length; i += 4){\n            for(let j = 0; j < channelCount; j++){\n                packedPixels[packCount++] = pixels[i + j];\n            }\n        }\n        return packedPixels;\n    }\n    getFramebuffer() {\n        const currentResources = this.bindings[this.currentIndex];\n        return currentResources.framebuffer;\n    }\n    delete() {\n        if (this.ownTexture) {\n            this.ownTexture.delete();\n        }\n        if (this.elementIDBuffer) {\n            this.elementIDBuffer.delete();\n        }\n    }\n    _initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { _targetTextureVarying, _swapTexture } = props;\n        this._swapTexture = _swapTexture;\n        this.targetTextureVarying = _targetTextureVarying;\n        this.hasTargetTexture = _targetTextureVarying;\n        this._setupTextures(props);\n    }\n    _createTargetTexture(props) {\n        const { sourceTextures, textureOrReference } = props;\n        if (textureOrReference instanceof _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n            return textureOrReference;\n        }\n        const refTexture = sourceTextures[textureOrReference];\n        if (!refTexture) {\n            return null;\n        }\n        this._targetRefTexName = textureOrReference;\n        return this._createNewTexture(refTexture);\n    }\n    _setupTextures() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { sourceBuffers, _sourceTextures = {}, _targetTexture } = props;\n        const targetTexture = this._createTargetTexture({\n            sourceTextures: _sourceTextures,\n            textureOrReference: _targetTexture\n        });\n        this.hasSourceTextures = this.hasSourceTextures || _sourceTextures && Object.keys(_sourceTextures).length > 0;\n        this._updateBindings({\n            sourceBuffers,\n            sourceTextures: _sourceTextures,\n            targetTexture\n        });\n        if (\"elementCount\" in props) {\n            this._updateElementIDBuffer(props.elementCount);\n        }\n    }\n    _updateElementIDBuffer(elementCount) {\n        if (typeof elementCount !== \"number\" || this.elementCount >= elementCount) {\n            return;\n        }\n        const elementIds = new Float32Array(elementCount);\n        elementIds.forEach((_, index, array)=>{\n            array[index] = index;\n        });\n        if (!this.elementIDBuffer) {\n            this.elementIDBuffer = new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.gl, {\n                data: elementIds,\n                accessor: {\n                    size: 1\n                }\n            });\n        } else {\n            this.elementIDBuffer.setData({\n                data: elementIds\n            });\n        }\n        this.elementCount = elementCount;\n    }\n    _updateBindings(opts) {\n        this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], opts);\n        if (this._swapTexture) {\n            const { sourceTextures, targetTexture } = this._swapTextures(this.bindings[this.currentIndex]);\n            const nextIndex = this._getNextIndex();\n            this.bindings[nextIndex] = this._updateBinding(this.bindings[nextIndex], {\n                sourceTextures,\n                targetTexture\n            });\n        }\n    }\n    _updateBinding(binding, opts) {\n        const { sourceBuffers, sourceTextures, targetTexture } = opts;\n        if (!binding) {\n            binding = {\n                sourceBuffers: {},\n                sourceTextures: {},\n                targetTexture: null\n            };\n        }\n        Object.assign(binding.sourceTextures, sourceTextures);\n        Object.assign(binding.sourceBuffers, sourceBuffers);\n        if (targetTexture) {\n            binding.targetTexture = targetTexture;\n            const { width, height } = targetTexture;\n            const { framebuffer } = binding;\n            if (framebuffer) {\n                framebuffer.update({\n                    attachments: {\n                        [36064]: targetTexture\n                    },\n                    resizeAttachments: false\n                });\n                framebuffer.resize({\n                    width,\n                    height\n                });\n            } else {\n                binding.framebuffer = new _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.gl, {\n                    id: \"transform-framebuffer\",\n                    width,\n                    height,\n                    attachments: {\n                        [36064]: targetTexture\n                    }\n                });\n            }\n        }\n        return binding;\n    }\n    _setSourceTextureParameters() {\n        const index = this.currentIndex;\n        const { sourceTextures } = this.bindings[index];\n        for(const name in sourceTextures){\n            sourceTextures[name].setParameters(SRC_TEX_PARAMETER_OVERRIDES);\n        }\n    }\n    _swapTextures(opts) {\n        if (!this._swapTexture) {\n            return null;\n        }\n        const sourceTextures = Object.assign({}, opts.sourceTextures);\n        sourceTextures[this._swapTexture] = opts.targetTexture;\n        const targetTexture = opts.sourceTextures[this._swapTexture];\n        return {\n            sourceTextures,\n            targetTexture\n        };\n    }\n    _createNewTexture(refTexture) {\n        const texture = (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_6__.cloneTextureFrom)(refTexture, {\n            parameters: {\n                [10241]: 9728,\n                [10240]: 9728,\n                [10242]: 33071,\n                [10243]: 33071\n            },\n            pixelStore: {\n                [37440]: false\n            }\n        });\n        if (this.ownTexture) {\n            this.ownTexture.delete();\n        }\n        this.ownTexture = texture;\n        return texture;\n    }\n    _getNextIndex() {\n        return (this.currentIndex + 1) % 2;\n    }\n    _processVertexShader() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { sourceTextures, targetTexture } = this.bindings[this.currentIndex];\n        const { vs, uniforms, targetTextureType, inject, samplerTextureMap } = (0,_transform_shader_utils__WEBPACK_IMPORTED_MODULE_0__.updateForTextures)({\n            vs: props.vs,\n            sourceTextureMap: sourceTextures,\n            targetTextureVarying: this.targetTextureVarying,\n            targetTexture\n        });\n        const combinedInject = (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_7__.combineInjects)([\n            props.inject || {},\n            inject\n        ]);\n        this.targetTextureType = targetTextureType;\n        this.samplerTextureMap = samplerTextureMap;\n        const fs = props._fs || (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_2__.getPassthroughFS)({\n            version: (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(vs),\n            input: this.targetTextureVarying,\n            inputType: targetTextureType,\n            output: FS_OUTPUT_VARIABLE\n        });\n        const modules = this.hasSourceTextures || this.targetTextureVarying ? [\n            _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_9__.transform\n        ].concat(props.modules || []) : props.modules;\n        return {\n            vs,\n            fs,\n            modules,\n            uniforms,\n            inject: combinedInject\n        };\n    }\n} //# sourceMappingURL=texture-transform.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/texture-transform.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/transform-shader-utils.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/transform/transform-shader-utils.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSizeUniforms: () => (/* binding */ getSizeUniforms),\n/* harmony export */   getVaryingType: () => (/* binding */ getVaryingType),\n/* harmony export */   processAttributeDefinition: () => (/* binding */ processAttributeDefinition),\n/* harmony export */   updateForTextures: () => (/* binding */ updateForTextures)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/shadertools */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/inject-shader.js\");\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/shadertools */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/shader-utils.js\");\n\n\nconst SAMPLER_UNIFORM_PREFIX = \"transform_uSampler_\";\nconst SIZE_UNIFORM_PREFIX = \"transform_uSize_\";\nconst VS_POS_VARIABLE = \"transform_position\";\nfunction updateForTextures(_ref) {\n    let { vs, sourceTextureMap, targetTextureVarying, targetTexture } = _ref;\n    const texAttributeNames = Object.keys(sourceTextureMap);\n    let sourceCount = texAttributeNames.length;\n    let targetTextureType = null;\n    const samplerTextureMap = {};\n    let updatedVs = vs;\n    let finalInject = {};\n    if (sourceCount > 0 || targetTextureVarying) {\n        const vsLines = updatedVs.split(\"\\n\");\n        const updateVsLines = vsLines.slice();\n        vsLines.forEach((line, index, lines)=>{\n            if (sourceCount > 0) {\n                const updated = processAttributeDefinition(line, sourceTextureMap);\n                if (updated) {\n                    const { updatedLine, inject } = updated;\n                    updateVsLines[index] = updatedLine;\n                    finalInject = (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_0__.combineInjects)([\n                        finalInject,\n                        inject\n                    ]);\n                    Object.assign(samplerTextureMap, updated.samplerTextureMap);\n                    sourceCount--;\n                }\n            }\n            if (targetTextureVarying && !targetTextureType) {\n                targetTextureType = getVaryingType(line, targetTextureVarying);\n            }\n        });\n        if (targetTextureVarying) {\n            (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.assert)(targetTexture);\n            const sizeName = \"\".concat(SIZE_UNIFORM_PREFIX).concat(targetTextureVarying);\n            const uniformDeclaration = \"uniform vec2 \".concat(sizeName, \";\\n\");\n            const posInstructions = \"     vec2 \".concat(VS_POS_VARIABLE, \" = transform_getPos(\").concat(sizeName, \");\\n     gl_Position = vec4(\").concat(VS_POS_VARIABLE, \", 0, 1.);\\n\");\n            const inject = {\n                \"vs:#decl\": uniformDeclaration,\n                \"vs:#main-start\": posInstructions\n            };\n            finalInject = (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_0__.combineInjects)([\n                finalInject,\n                inject\n            ]);\n        }\n        updatedVs = updateVsLines.join(\"\\n\");\n    }\n    return {\n        vs: updatedVs,\n        targetTextureType,\n        inject: finalInject,\n        samplerTextureMap\n    };\n}\nfunction getSizeUniforms(_ref2) {\n    let { sourceTextureMap, targetTextureVarying, targetTexture } = _ref2;\n    const uniforms = {};\n    let width;\n    let height;\n    if (targetTextureVarying) {\n        ({ width, height } = targetTexture);\n        uniforms[\"\".concat(SIZE_UNIFORM_PREFIX).concat(targetTextureVarying)] = [\n            width,\n            height\n        ];\n    }\n    for(const textureName in sourceTextureMap){\n        ({ width, height } = sourceTextureMap[textureName]);\n        uniforms[\"\".concat(SIZE_UNIFORM_PREFIX).concat(textureName)] = [\n            width,\n            height\n        ];\n    }\n    return uniforms;\n}\nfunction getAttributeDefinition(line) {\n    return (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_2__.getQualifierDetails)(line, [\n        \"attribute\",\n        \"in\"\n    ]);\n}\nfunction getSamplerDeclerations(textureName) {\n    const samplerName = \"\".concat(SAMPLER_UNIFORM_PREFIX).concat(textureName);\n    const sizeName = \"\".concat(SIZE_UNIFORM_PREFIX).concat(textureName);\n    const uniformDeclerations = \"  uniform sampler2D \".concat(samplerName, \";\\n  uniform vec2 \").concat(sizeName, \";\");\n    return {\n        samplerName,\n        sizeName,\n        uniformDeclerations\n    };\n}\nfunction getVaryingType(line, varying) {\n    const qualaiferDetails = (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_2__.getQualifierDetails)(line, [\n        \"varying\",\n        \"out\"\n    ]);\n    if (!qualaiferDetails) {\n        return null;\n    }\n    return qualaiferDetails.name === varying ? qualaiferDetails.type : null;\n}\nfunction processAttributeDefinition(line, textureMap) {\n    const samplerTextureMap = {};\n    const attributeData = getAttributeDefinition(line);\n    if (!attributeData) {\n        return null;\n    }\n    const { type, name } = attributeData;\n    if (name && textureMap[name]) {\n        const updatedLine = \"// \".concat(line, \" => Replaced by Transform with a sampler\");\n        const { samplerName, sizeName, uniformDeclerations } = getSamplerDeclerations(name);\n        const channels = (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_2__.typeToChannelSuffix)(type);\n        const sampleInstruction = \"  \".concat(type, \" \").concat(name, \" = transform_getInput(\").concat(samplerName, \", \").concat(sizeName, \").\").concat(channels, \";\\n\");\n        samplerTextureMap[samplerName] = name;\n        const inject = {\n            \"vs:#decl\": uniformDeclerations,\n            \"vs:#main-start\": sampleInstruction\n        };\n        return {\n            updatedLine,\n            inject,\n            samplerTextureMap\n        };\n    }\n    return null;\n} //# sourceMappingURL=transform-shader-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZW5naW5lL2Rpc3QvZXNtL3RyYW5zZm9ybS90cmFuc2Zvcm0tc2hhZGVyLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0M7QUFDd0Q7QUFDaEcsTUFBTUkseUJBQXlCO0FBQy9CLE1BQU1DLHNCQUFzQjtBQUM1QixNQUFNQyxrQkFBa0I7QUFDakIsU0FBU0Msa0JBQWtCQyxJQUFJO0lBQ3BDLElBQUksRUFDRkMsRUFBRSxFQUNGQyxnQkFBZ0IsRUFDaEJDLG9CQUFvQixFQUNwQkMsYUFBYSxFQUNkLEdBQUdKO0lBQ0osTUFBTUssb0JBQW9CQyxPQUFPQyxJQUFJLENBQUNMO0lBQ3RDLElBQUlNLGNBQWNILGtCQUFrQkksTUFBTTtJQUMxQyxJQUFJQyxvQkFBb0I7SUFDeEIsTUFBTUMsb0JBQW9CLENBQUM7SUFDM0IsSUFBSUMsWUFBWVg7SUFDaEIsSUFBSVksY0FBYyxDQUFDO0lBRW5CLElBQUlMLGNBQWMsS0FBS0wsc0JBQXNCO1FBQzNDLE1BQU1XLFVBQVVGLFVBQVVHLEtBQUssQ0FBQztRQUNoQyxNQUFNQyxnQkFBZ0JGLFFBQVFHLEtBQUs7UUFDbkNILFFBQVFJLE9BQU8sQ0FBQyxDQUFDQyxNQUFNQyxPQUFPQztZQUM1QixJQUFJYixjQUFjLEdBQUc7Z0JBQ25CLE1BQU1jLFVBQVVDLDJCQUEyQkosTUFBTWpCO2dCQUVqRCxJQUFJb0IsU0FBUztvQkFDWCxNQUFNLEVBQ0pFLFdBQVcsRUFDWEMsTUFBTSxFQUNQLEdBQUdIO29CQUNKTixhQUFhLENBQUNJLE1BQU0sR0FBR0k7b0JBQ3ZCWCxjQUFjcEIsb0VBQWNBLENBQUM7d0JBQUNvQjt3QkFBYVk7cUJBQU87b0JBQ2xEbkIsT0FBT29CLE1BQU0sQ0FBQ2YsbUJBQW1CVyxRQUFRWCxpQkFBaUI7b0JBQzFESDtnQkFDRjtZQUNGO1lBRUEsSUFBSUwsd0JBQXdCLENBQUNPLG1CQUFtQjtnQkFDOUNBLG9CQUFvQmlCLGVBQWVSLE1BQU1oQjtZQUMzQztRQUNGO1FBRUEsSUFBSUEsc0JBQXNCO1lBQ3hCWCxzREFBTUEsQ0FBQ1k7WUFDUCxNQUFNd0IsV0FBVyxHQUFHQyxNQUFNLENBQUNoQyxxQkFBcUJnQyxNQUFNLENBQUMxQjtZQUN2RCxNQUFNMkIscUJBQXFCLGdCQUFnQkQsTUFBTSxDQUFDRCxVQUFVO1lBQzVELE1BQU1HLGtCQUFrQixhQUFhRixNQUFNLENBQUMvQixpQkFBaUIsd0JBQXdCK0IsTUFBTSxDQUFDRCxVQUFVLGdDQUFnQ0MsTUFBTSxDQUFDL0IsaUJBQWlCO1lBQzlKLE1BQU0yQixTQUFTO2dCQUNiLFlBQVlLO2dCQUNaLGtCQUFrQkM7WUFDcEI7WUFDQWxCLGNBQWNwQixvRUFBY0EsQ0FBQztnQkFBQ29CO2dCQUFhWTthQUFPO1FBQ3BEO1FBRUFiLFlBQVlJLGNBQWNnQixJQUFJLENBQUM7SUFDakM7SUFFQSxPQUFPO1FBQ0wvQixJQUFJVztRQUNKRjtRQUNBZSxRQUFRWjtRQUNSRjtJQUNGO0FBQ0Y7QUFDTyxTQUFTc0IsZ0JBQWdCQyxLQUFLO0lBQ25DLElBQUksRUFDRmhDLGdCQUFnQixFQUNoQkMsb0JBQW9CLEVBQ3BCQyxhQUFhLEVBQ2QsR0FBRzhCO0lBQ0osTUFBTUMsV0FBVyxDQUFDO0lBQ2xCLElBQUlDO0lBQ0osSUFBSUM7SUFFSixJQUFJbEMsc0JBQXNCO1FBQ3ZCLEdBQ0NpQyxLQUFLLEVBQ0xDLE1BQU0sRUFDUCxHQUFHakMsYUFBWTtRQUNoQitCLFFBQVEsQ0FBQyxHQUFHTixNQUFNLENBQUNoQyxxQkFBcUJnQyxNQUFNLENBQUMxQixzQkFBc0IsR0FBRztZQUFDaUM7WUFBT0M7U0FBTztJQUN6RjtJQUVBLElBQUssTUFBTUMsZUFBZXBDLGlCQUFrQjtRQUN6QyxHQUNDa0MsS0FBSyxFQUNMQyxNQUFNLEVBQ1AsR0FBR25DLGdCQUFnQixDQUFDb0MsWUFBWTtRQUNqQ0gsUUFBUSxDQUFDLEdBQUdOLE1BQU0sQ0FBQ2hDLHFCQUFxQmdDLE1BQU0sQ0FBQ1MsYUFBYSxHQUFHO1lBQUNGO1lBQU9DO1NBQU87SUFDaEY7SUFFQSxPQUFPRjtBQUNUO0FBRUEsU0FBU0ksdUJBQXVCcEIsSUFBSTtJQUNsQyxPQUFPekIseUVBQW1CQSxDQUFDeUIsTUFBTTtRQUFDO1FBQWE7S0FBSztBQUN0RDtBQUVBLFNBQVNxQix1QkFBdUJGLFdBQVc7SUFDekMsTUFBTUcsY0FBYyxHQUFHWixNQUFNLENBQUNqQyx3QkFBd0JpQyxNQUFNLENBQUNTO0lBQzdELE1BQU1WLFdBQVcsR0FBR0MsTUFBTSxDQUFDaEMscUJBQXFCZ0MsTUFBTSxDQUFDUztJQUN2RCxNQUFNSSxzQkFBc0IsdUJBQXVCYixNQUFNLENBQUNZLGFBQWEsc0JBQXNCWixNQUFNLENBQUNELFVBQVU7SUFDOUcsT0FBTztRQUNMYTtRQUNBYjtRQUNBYztJQUNGO0FBQ0Y7QUFFTyxTQUFTZixlQUFlUixJQUFJLEVBQUV3QixPQUFPO0lBQzFDLE1BQU1DLG1CQUFtQmxELHlFQUFtQkEsQ0FBQ3lCLE1BQU07UUFBQztRQUFXO0tBQU07SUFFckUsSUFBSSxDQUFDeUIsa0JBQWtCO1FBQ3JCLE9BQU87SUFDVDtJQUVBLE9BQU9BLGlCQUFpQkMsSUFBSSxLQUFLRixVQUFVQyxpQkFBaUJFLElBQUksR0FBRztBQUNyRTtBQUNPLFNBQVN2QiwyQkFBMkJKLElBQUksRUFBRTRCLFVBQVU7SUFDekQsTUFBTXBDLG9CQUFvQixDQUFDO0lBQzNCLE1BQU1xQyxnQkFBZ0JULHVCQUF1QnBCO0lBRTdDLElBQUksQ0FBQzZCLGVBQWU7UUFDbEIsT0FBTztJQUNUO0lBRUEsTUFBTSxFQUNKRixJQUFJLEVBQ0pELElBQUksRUFDTCxHQUFHRztJQUVKLElBQUlILFFBQVFFLFVBQVUsQ0FBQ0YsS0FBSyxFQUFFO1FBQzVCLE1BQU1yQixjQUFjLE1BQU1LLE1BQU0sQ0FBQ1YsTUFBTTtRQUN2QyxNQUFNLEVBQ0pzQixXQUFXLEVBQ1hiLFFBQVEsRUFDUmMsbUJBQW1CLEVBQ3BCLEdBQUdGLHVCQUF1Qks7UUFDM0IsTUFBTUksV0FBV3RELHlFQUFtQkEsQ0FBQ21EO1FBQ3JDLE1BQU1JLG9CQUFvQixLQUFLckIsTUFBTSxDQUFDaUIsTUFBTSxLQUFLakIsTUFBTSxDQUFDZ0IsTUFBTSwwQkFBMEJoQixNQUFNLENBQUNZLGFBQWEsTUFBTVosTUFBTSxDQUFDRCxVQUFVLE1BQU1DLE1BQU0sQ0FBQ29CLFVBQVU7UUFDMUp0QyxpQkFBaUIsQ0FBQzhCLFlBQVksR0FBR0k7UUFDakMsTUFBTXBCLFNBQVM7WUFDYixZQUFZaUI7WUFDWixrQkFBa0JRO1FBQ3BCO1FBQ0EsT0FBTztZQUNMMUI7WUFDQUM7WUFDQWQ7UUFDRjtJQUNGO0lBRUEsT0FBTztBQUNULEVBQ0Esa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZW5naW5lL2Rpc3QvZXNtL3RyYW5zZm9ybS90cmFuc2Zvcm0tc2hhZGVyLXV0aWxzLmpzPzMzYTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnQGx1bWEuZ2wvd2ViZ2wnO1xuaW1wb3J0IHsgY29tYmluZUluamVjdHMsIGdldFF1YWxpZmllckRldGFpbHMsIHR5cGVUb0NoYW5uZWxTdWZmaXggfSBmcm9tICdAbHVtYS5nbC9zaGFkZXJ0b29scyc7XG5jb25zdCBTQU1QTEVSX1VOSUZPUk1fUFJFRklYID0gJ3RyYW5zZm9ybV91U2FtcGxlcl8nO1xuY29uc3QgU0laRV9VTklGT1JNX1BSRUZJWCA9ICd0cmFuc2Zvcm1fdVNpemVfJztcbmNvbnN0IFZTX1BPU19WQVJJQUJMRSA9ICd0cmFuc2Zvcm1fcG9zaXRpb24nO1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUZvclRleHR1cmVzKF9yZWYpIHtcbiAgbGV0IHtcbiAgICB2cyxcbiAgICBzb3VyY2VUZXh0dXJlTWFwLFxuICAgIHRhcmdldFRleHR1cmVWYXJ5aW5nLFxuICAgIHRhcmdldFRleHR1cmVcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IHRleEF0dHJpYnV0ZU5hbWVzID0gT2JqZWN0LmtleXMoc291cmNlVGV4dHVyZU1hcCk7XG4gIGxldCBzb3VyY2VDb3VudCA9IHRleEF0dHJpYnV0ZU5hbWVzLmxlbmd0aDtcbiAgbGV0IHRhcmdldFRleHR1cmVUeXBlID0gbnVsbDtcbiAgY29uc3Qgc2FtcGxlclRleHR1cmVNYXAgPSB7fTtcbiAgbGV0IHVwZGF0ZWRWcyA9IHZzO1xuICBsZXQgZmluYWxJbmplY3QgPSB7fTtcblxuICBpZiAoc291cmNlQ291bnQgPiAwIHx8IHRhcmdldFRleHR1cmVWYXJ5aW5nKSB7XG4gICAgY29uc3QgdnNMaW5lcyA9IHVwZGF0ZWRWcy5zcGxpdCgnXFxuJyk7XG4gICAgY29uc3QgdXBkYXRlVnNMaW5lcyA9IHZzTGluZXMuc2xpY2UoKTtcbiAgICB2c0xpbmVzLmZvckVhY2goKGxpbmUsIGluZGV4LCBsaW5lcykgPT4ge1xuICAgICAgaWYgKHNvdXJjZUNvdW50ID4gMCkge1xuICAgICAgICBjb25zdCB1cGRhdGVkID0gcHJvY2Vzc0F0dHJpYnV0ZURlZmluaXRpb24obGluZSwgc291cmNlVGV4dHVyZU1hcCk7XG5cbiAgICAgICAgaWYgKHVwZGF0ZWQpIHtcbiAgICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICB1cGRhdGVkTGluZSxcbiAgICAgICAgICAgIGluamVjdFxuICAgICAgICAgIH0gPSB1cGRhdGVkO1xuICAgICAgICAgIHVwZGF0ZVZzTGluZXNbaW5kZXhdID0gdXBkYXRlZExpbmU7XG4gICAgICAgICAgZmluYWxJbmplY3QgPSBjb21iaW5lSW5qZWN0cyhbZmluYWxJbmplY3QsIGluamVjdF0pO1xuICAgICAgICAgIE9iamVjdC5hc3NpZ24oc2FtcGxlclRleHR1cmVNYXAsIHVwZGF0ZWQuc2FtcGxlclRleHR1cmVNYXApO1xuICAgICAgICAgIHNvdXJjZUNvdW50LS07XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHRhcmdldFRleHR1cmVWYXJ5aW5nICYmICF0YXJnZXRUZXh0dXJlVHlwZSkge1xuICAgICAgICB0YXJnZXRUZXh0dXJlVHlwZSA9IGdldFZhcnlpbmdUeXBlKGxpbmUsIHRhcmdldFRleHR1cmVWYXJ5aW5nKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmICh0YXJnZXRUZXh0dXJlVmFyeWluZykge1xuICAgICAgYXNzZXJ0KHRhcmdldFRleHR1cmUpO1xuICAgICAgY29uc3Qgc2l6ZU5hbWUgPSBcIlwiLmNvbmNhdChTSVpFX1VOSUZPUk1fUFJFRklYKS5jb25jYXQodGFyZ2V0VGV4dHVyZVZhcnlpbmcpO1xuICAgICAgY29uc3QgdW5pZm9ybURlY2xhcmF0aW9uID0gXCJ1bmlmb3JtIHZlYzIgXCIuY29uY2F0KHNpemVOYW1lLCBcIjtcXG5cIik7XG4gICAgICBjb25zdCBwb3NJbnN0cnVjdGlvbnMgPSBcIiAgICAgdmVjMiBcIi5jb25jYXQoVlNfUE9TX1ZBUklBQkxFLCBcIiA9IHRyYW5zZm9ybV9nZXRQb3MoXCIpLmNvbmNhdChzaXplTmFtZSwgXCIpO1xcbiAgICAgZ2xfUG9zaXRpb24gPSB2ZWM0KFwiKS5jb25jYXQoVlNfUE9TX1ZBUklBQkxFLCBcIiwgMCwgMS4pO1xcblwiKTtcbiAgICAgIGNvbnN0IGluamVjdCA9IHtcbiAgICAgICAgJ3ZzOiNkZWNsJzogdW5pZm9ybURlY2xhcmF0aW9uLFxuICAgICAgICAndnM6I21haW4tc3RhcnQnOiBwb3NJbnN0cnVjdGlvbnNcbiAgICAgIH07XG4gICAgICBmaW5hbEluamVjdCA9IGNvbWJpbmVJbmplY3RzKFtmaW5hbEluamVjdCwgaW5qZWN0XSk7XG4gICAgfVxuXG4gICAgdXBkYXRlZFZzID0gdXBkYXRlVnNMaW5lcy5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdnM6IHVwZGF0ZWRWcyxcbiAgICB0YXJnZXRUZXh0dXJlVHlwZSxcbiAgICBpbmplY3Q6IGZpbmFsSW5qZWN0LFxuICAgIHNhbXBsZXJUZXh0dXJlTWFwXG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U2l6ZVVuaWZvcm1zKF9yZWYyKSB7XG4gIGxldCB7XG4gICAgc291cmNlVGV4dHVyZU1hcCxcbiAgICB0YXJnZXRUZXh0dXJlVmFyeWluZyxcbiAgICB0YXJnZXRUZXh0dXJlXG4gIH0gPSBfcmVmMjtcbiAgY29uc3QgdW5pZm9ybXMgPSB7fTtcbiAgbGV0IHdpZHRoO1xuICBsZXQgaGVpZ2h0O1xuXG4gIGlmICh0YXJnZXRUZXh0dXJlVmFyeWluZykge1xuICAgICh7XG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodFxuICAgIH0gPSB0YXJnZXRUZXh0dXJlKTtcbiAgICB1bmlmb3Jtc1tcIlwiLmNvbmNhdChTSVpFX1VOSUZPUk1fUFJFRklYKS5jb25jYXQodGFyZ2V0VGV4dHVyZVZhcnlpbmcpXSA9IFt3aWR0aCwgaGVpZ2h0XTtcbiAgfVxuXG4gIGZvciAoY29uc3QgdGV4dHVyZU5hbWUgaW4gc291cmNlVGV4dHVyZU1hcCkge1xuICAgICh7XG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodFxuICAgIH0gPSBzb3VyY2VUZXh0dXJlTWFwW3RleHR1cmVOYW1lXSk7XG4gICAgdW5pZm9ybXNbXCJcIi5jb25jYXQoU0laRV9VTklGT1JNX1BSRUZJWCkuY29uY2F0KHRleHR1cmVOYW1lKV0gPSBbd2lkdGgsIGhlaWdodF07XG4gIH1cblxuICByZXR1cm4gdW5pZm9ybXM7XG59XG5cbmZ1bmN0aW9uIGdldEF0dHJpYnV0ZURlZmluaXRpb24obGluZSkge1xuICByZXR1cm4gZ2V0UXVhbGlmaWVyRGV0YWlscyhsaW5lLCBbJ2F0dHJpYnV0ZScsICdpbiddKTtcbn1cblxuZnVuY3Rpb24gZ2V0U2FtcGxlckRlY2xlcmF0aW9ucyh0ZXh0dXJlTmFtZSkge1xuICBjb25zdCBzYW1wbGVyTmFtZSA9IFwiXCIuY29uY2F0KFNBTVBMRVJfVU5JRk9STV9QUkVGSVgpLmNvbmNhdCh0ZXh0dXJlTmFtZSk7XG4gIGNvbnN0IHNpemVOYW1lID0gXCJcIi5jb25jYXQoU0laRV9VTklGT1JNX1BSRUZJWCkuY29uY2F0KHRleHR1cmVOYW1lKTtcbiAgY29uc3QgdW5pZm9ybURlY2xlcmF0aW9ucyA9IFwiICB1bmlmb3JtIHNhbXBsZXIyRCBcIi5jb25jYXQoc2FtcGxlck5hbWUsIFwiO1xcbiAgdW5pZm9ybSB2ZWMyIFwiKS5jb25jYXQoc2l6ZU5hbWUsIFwiO1wiKTtcbiAgcmV0dXJuIHtcbiAgICBzYW1wbGVyTmFtZSxcbiAgICBzaXplTmFtZSxcbiAgICB1bmlmb3JtRGVjbGVyYXRpb25zXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRWYXJ5aW5nVHlwZShsaW5lLCB2YXJ5aW5nKSB7XG4gIGNvbnN0IHF1YWxhaWZlckRldGFpbHMgPSBnZXRRdWFsaWZpZXJEZXRhaWxzKGxpbmUsIFsndmFyeWluZycsICdvdXQnXSk7XG5cbiAgaWYgKCFxdWFsYWlmZXJEZXRhaWxzKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gcXVhbGFpZmVyRGV0YWlscy5uYW1lID09PSB2YXJ5aW5nID8gcXVhbGFpZmVyRGV0YWlscy50eXBlIDogbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzQXR0cmlidXRlRGVmaW5pdGlvbihsaW5lLCB0ZXh0dXJlTWFwKSB7XG4gIGNvbnN0IHNhbXBsZXJUZXh0dXJlTWFwID0ge307XG4gIGNvbnN0IGF0dHJpYnV0ZURhdGEgPSBnZXRBdHRyaWJ1dGVEZWZpbml0aW9uKGxpbmUpO1xuXG4gIGlmICghYXR0cmlidXRlRGF0YSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3Qge1xuICAgIHR5cGUsXG4gICAgbmFtZVxuICB9ID0gYXR0cmlidXRlRGF0YTtcblxuICBpZiAobmFtZSAmJiB0ZXh0dXJlTWFwW25hbWVdKSB7XG4gICAgY29uc3QgdXBkYXRlZExpbmUgPSBcIi8vIFwiLmNvbmNhdChsaW5lLCBcIiA9PiBSZXBsYWNlZCBieSBUcmFuc2Zvcm0gd2l0aCBhIHNhbXBsZXJcIik7XG4gICAgY29uc3Qge1xuICAgICAgc2FtcGxlck5hbWUsXG4gICAgICBzaXplTmFtZSxcbiAgICAgIHVuaWZvcm1EZWNsZXJhdGlvbnNcbiAgICB9ID0gZ2V0U2FtcGxlckRlY2xlcmF0aW9ucyhuYW1lKTtcbiAgICBjb25zdCBjaGFubmVscyA9IHR5cGVUb0NoYW5uZWxTdWZmaXgodHlwZSk7XG4gICAgY29uc3Qgc2FtcGxlSW5zdHJ1Y3Rpb24gPSBcIiAgXCIuY29uY2F0KHR5cGUsIFwiIFwiKS5jb25jYXQobmFtZSwgXCIgPSB0cmFuc2Zvcm1fZ2V0SW5wdXQoXCIpLmNvbmNhdChzYW1wbGVyTmFtZSwgXCIsIFwiKS5jb25jYXQoc2l6ZU5hbWUsIFwiKS5cIikuY29uY2F0KGNoYW5uZWxzLCBcIjtcXG5cIik7XG4gICAgc2FtcGxlclRleHR1cmVNYXBbc2FtcGxlck5hbWVdID0gbmFtZTtcbiAgICBjb25zdCBpbmplY3QgPSB7XG4gICAgICAndnM6I2RlY2wnOiB1bmlmb3JtRGVjbGVyYXRpb25zLFxuICAgICAgJ3ZzOiNtYWluLXN0YXJ0Jzogc2FtcGxlSW5zdHJ1Y3Rpb25cbiAgICB9O1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGVkTGluZSxcbiAgICAgIGluamVjdCxcbiAgICAgIHNhbXBsZXJUZXh0dXJlTWFwXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNmb3JtLXNoYWRlci11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiYXNzZXJ0IiwiY29tYmluZUluamVjdHMiLCJnZXRRdWFsaWZpZXJEZXRhaWxzIiwidHlwZVRvQ2hhbm5lbFN1ZmZpeCIsIlNBTVBMRVJfVU5JRk9STV9QUkVGSVgiLCJTSVpFX1VOSUZPUk1fUFJFRklYIiwiVlNfUE9TX1ZBUklBQkxFIiwidXBkYXRlRm9yVGV4dHVyZXMiLCJfcmVmIiwidnMiLCJzb3VyY2VUZXh0dXJlTWFwIiwidGFyZ2V0VGV4dHVyZVZhcnlpbmciLCJ0YXJnZXRUZXh0dXJlIiwidGV4QXR0cmlidXRlTmFtZXMiLCJPYmplY3QiLCJrZXlzIiwic291cmNlQ291bnQiLCJsZW5ndGgiLCJ0YXJnZXRUZXh0dXJlVHlwZSIsInNhbXBsZXJUZXh0dXJlTWFwIiwidXBkYXRlZFZzIiwiZmluYWxJbmplY3QiLCJ2c0xpbmVzIiwic3BsaXQiLCJ1cGRhdGVWc0xpbmVzIiwic2xpY2UiLCJmb3JFYWNoIiwibGluZSIsImluZGV4IiwibGluZXMiLCJ1cGRhdGVkIiwicHJvY2Vzc0F0dHJpYnV0ZURlZmluaXRpb24iLCJ1cGRhdGVkTGluZSIsImluamVjdCIsImFzc2lnbiIsImdldFZhcnlpbmdUeXBlIiwic2l6ZU5hbWUiLCJjb25jYXQiLCJ1bmlmb3JtRGVjbGFyYXRpb24iLCJwb3NJbnN0cnVjdGlvbnMiLCJqb2luIiwiZ2V0U2l6ZVVuaWZvcm1zIiwiX3JlZjIiLCJ1bmlmb3JtcyIsIndpZHRoIiwiaGVpZ2h0IiwidGV4dHVyZU5hbWUiLCJnZXRBdHRyaWJ1dGVEZWZpbml0aW9uIiwiZ2V0U2FtcGxlckRlY2xlcmF0aW9ucyIsInNhbXBsZXJOYW1lIiwidW5pZm9ybURlY2xlcmF0aW9ucyIsInZhcnlpbmciLCJxdWFsYWlmZXJEZXRhaWxzIiwibmFtZSIsInR5cGUiLCJ0ZXh0dXJlTWFwIiwiYXR0cmlidXRlRGF0YSIsImNoYW5uZWxzIiwic2FtcGxlSW5zdHJ1Y3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/transform-shader-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/transform.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@luma.gl/engine/dist/esm/transform/transform.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Transform)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/shadertools */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/shader-utils.js\");\n/* harmony import */ var _buffer_transform__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./buffer-transform */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/buffer-transform.js\");\n/* harmony import */ var _texture_transform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./texture-transform */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/texture-transform.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-version.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n/* harmony import */ var _lib_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/model */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n\n\n\n\n\n\nclass Transform {\n    static isSupported(gl) {\n        return (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl);\n    }\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.gl = gl;\n        this.model = null;\n        this.elementCount = 0;\n        this.bufferTransform = null;\n        this.textureTransform = null;\n        this.elementIDBuffer = null;\n        this._initialize(props);\n        Object.seal(this);\n    }\n    delete() {\n        const { model, bufferTransform, textureTransform } = this;\n        if (model) {\n            model.delete();\n        }\n        if (bufferTransform) {\n            bufferTransform.delete();\n        }\n        if (textureTransform) {\n            textureTransform.delete();\n        }\n    }\n    run() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { clearRenderTarget = true } = opts;\n        const updatedOpts = this._updateDrawOptions(opts);\n        if (clearRenderTarget && updatedOpts.framebuffer) {\n            updatedOpts.framebuffer.clear({\n                color: true\n            });\n        }\n        this.model.transform(updatedOpts);\n    }\n    swap() {\n        let swapped = false;\n        const resourceTransforms = [\n            this.bufferTransform,\n            this.textureTransform\n        ].filter(Boolean);\n        for (const resourceTransform of resourceTransforms){\n            swapped = swapped || resourceTransform.swap();\n        }\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.assert)(swapped, \"Nothing to swap\");\n    }\n    getBuffer() {\n        let varyingName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        return this.bufferTransform && this.bufferTransform.getBuffer(varyingName);\n    }\n    getData() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const resourceTransforms = [\n            this.bufferTransform,\n            this.textureTransform\n        ].filter(Boolean);\n        for (const resourceTransform of resourceTransforms){\n            const data = resourceTransform.getData(opts);\n            if (data) {\n                return data;\n            }\n        }\n        return null;\n    }\n    getFramebuffer() {\n        return this.textureTransform && this.textureTransform.getFramebuffer();\n    }\n    update() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (\"elementCount\" in opts) {\n            this.model.setVertexCount(opts.elementCount);\n        }\n        const resourceTransforms = [\n            this.bufferTransform,\n            this.textureTransform\n        ].filter(Boolean);\n        for (const resourceTransform of resourceTransforms){\n            resourceTransform.update(opts);\n        }\n    }\n    _initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { gl } = this;\n        this._buildResourceTransforms(gl, props);\n        props = this._updateModelProps(props);\n        this.model = new _lib_model__WEBPACK_IMPORTED_MODULE_2__[\"default\"](gl, Object.assign({}, props, {\n            fs: props.fs || (0,_luma_gl_shadertools__WEBPACK_IMPORTED_MODULE_3__.getPassthroughFS)({\n                version: (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(props.vs)\n            }),\n            id: props.id || \"transform-model\",\n            drawMode: props.drawMode || 0,\n            vertexCount: props.elementCount\n        }));\n        this.bufferTransform && this.bufferTransform.setupResources({\n            model: this.model\n        });\n    }\n    _updateModelProps(props) {\n        let updatedProps = Object.assign({}, props);\n        const resourceTransforms = [\n            this.bufferTransform,\n            this.textureTransform\n        ].filter(Boolean);\n        for (const resourceTransform of resourceTransforms){\n            updatedProps = resourceTransform.updateModelProps(updatedProps);\n        }\n        return updatedProps;\n    }\n    _buildResourceTransforms(gl, props) {\n        if (canCreateBufferTransform(props)) {\n            this.bufferTransform = new _buffer_transform__WEBPACK_IMPORTED_MODULE_5__[\"default\"](gl, props);\n        }\n        if (canCreateTextureTransform(props)) {\n            this.textureTransform = new _texture_transform__WEBPACK_IMPORTED_MODULE_6__[\"default\"](gl, props);\n        }\n        (0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_1__.assert)(this.bufferTransform || this.textureTransform, \"must provide source/feedback buffers or source/target textures\");\n    }\n    _updateDrawOptions(opts) {\n        let updatedOpts = Object.assign({}, opts);\n        const resourceTransforms = [\n            this.bufferTransform,\n            this.textureTransform\n        ].filter(Boolean);\n        for (const resourceTransform of resourceTransforms){\n            updatedOpts = Object.assign(updatedOpts, resourceTransform.getDrawOptions(updatedOpts));\n        }\n        return updatedOpts;\n    }\n}\nfunction canCreateBufferTransform(props) {\n    if (!(0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_7__.isObjectEmpty)(props.feedbackBuffers) || !(0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_7__.isObjectEmpty)(props.feedbackMap) || props.varyings && props.varyings.length > 0) {\n        return true;\n    }\n    return false;\n}\nfunction canCreateTextureTransform(props) {\n    if (!(0,_luma_gl_webgl__WEBPACK_IMPORTED_MODULE_7__.isObjectEmpty)(props._sourceTextures) || props._targetTexture || props._targetTextureVarying) {\n        return true;\n    }\n    return false;\n} //# sourceMappingURL=transform.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/transform.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/context/context.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/context/context.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGLContext: () => (/* binding */ createGLContext),\n/* harmony export */   getContextDebugInfo: () => (/* binding */ getContextDebugInfo),\n/* harmony export */   instrumentGLContext: () => (/* binding */ instrumentGLContext),\n/* harmony export */   resizeGLContext: () => (/* binding */ resizeGLContext)\n/* harmony export */ });\n/* harmony import */ var _probe_gl_env__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @probe.gl/env */ \"(ssr)/./node_modules/@probe.gl/env/dist/esm/lib/is-browser.js\");\n/* harmony import */ var _state_tracker_track_context_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../state-tracker/track-context-state */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/track-context-state.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/log.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_device_pixels__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/device-pixels */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/device-pixels.js\");\n/* harmony import */ var _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/webgl-checks */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js\");\n\n\n\n\n\n\nconst isBrowser = (0,_probe_gl_env__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\nconst isPage = isBrowser && typeof document !== \"undefined\";\nconst CONTEXT_DEFAULTS = {\n    webgl2: true,\n    webgl1: true,\n    throwOnError: true,\n    manageState: true,\n    canvas: null,\n    debug: false,\n    width: 800,\n    height: 600\n};\nfunction createGLContext() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(isBrowser, \"createGLContext only available in the browser.\\nCreate your own headless context or use 'createHeadlessContext' from @luma.gl/test-utils\");\n    options = Object.assign({}, CONTEXT_DEFAULTS, options);\n    const { width, height } = options;\n    function onError(message) {\n        if (options.throwOnError) {\n            throw new Error(message);\n        }\n        console.error(message);\n        return null;\n    }\n    options.onError = onError;\n    let gl;\n    const { canvas } = options;\n    const targetCanvas = getCanvas({\n        canvas,\n        width,\n        height,\n        onError\n    });\n    gl = createBrowserContext(targetCanvas, options);\n    if (!gl) {\n        return null;\n    }\n    gl = instrumentGLContext(gl, options);\n    logInfo(gl);\n    return gl;\n}\nfunction instrumentGLContext(gl) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!gl || gl._instrumented) {\n        return gl;\n    }\n    gl._version = gl._version || getVersion(gl);\n    gl.luma = gl.luma || {};\n    gl.luma.canvasSizeInfo = gl.luma.canvasSizeInfo || {};\n    options = Object.assign({}, CONTEXT_DEFAULTS, options);\n    const { manageState, debug } = options;\n    if (manageState) {\n        (0,_state_tracker_track_context_state__WEBPACK_IMPORTED_MODULE_0__.trackContextState)(gl, {\n            copyState: false,\n            log: function() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                return _utils_log__WEBPACK_IMPORTED_MODULE_1__.log.log(1, ...args)();\n            }\n        });\n    }\n    if (isBrowser && debug) {\n        if (!globalThis.makeDebugContext) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_1__.log.warn('WebGL debug mode not activated. import \"@luma.gl/debug\" to enable.')();\n        } else {\n            gl = globalThis.makeDebugContext(gl, options);\n            _utils_log__WEBPACK_IMPORTED_MODULE_1__.log.level = Math.max(_utils_log__WEBPACK_IMPORTED_MODULE_1__.log.level, 1);\n        }\n    }\n    gl._instrumented = true;\n    return gl;\n}\nfunction getContextDebugInfo(gl) {\n    const vendorMasked = gl.getParameter(7936);\n    const rendererMasked = gl.getParameter(7937);\n    const ext = gl.getExtension(\"WEBGL_debug_renderer_info\");\n    const vendorUnmasked = ext && gl.getParameter(ext.UNMASKED_VENDOR_WEBGL || 7936);\n    const rendererUnmasked = ext && gl.getParameter(ext.UNMASKED_RENDERER_WEBGL || 7937);\n    return {\n        vendor: vendorUnmasked || vendorMasked,\n        renderer: rendererUnmasked || rendererMasked,\n        vendorMasked,\n        rendererMasked,\n        version: gl.getParameter(7938),\n        shadingLanguageVersion: gl.getParameter(35724)\n    };\n}\nfunction resizeGLContext(gl) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (gl.canvas) {\n        const devicePixelRatio = (0,_utils_device_pixels__WEBPACK_IMPORTED_MODULE_3__.getDevicePixelRatio)(options.useDevicePixels);\n        setDevicePixelRatio(gl, devicePixelRatio, options);\n        return;\n    }\n    const ext = gl.getExtension(\"STACKGL_resize_drawingbuffer\");\n    if (ext && \"width\" in options && \"height\" in options) {\n        ext.resize(options.width, options.height);\n    }\n}\nfunction createBrowserContext(canvas, options) {\n    const { onError } = options;\n    let errorMessage = null;\n    const onCreateError = (error)=>errorMessage = error.statusMessage || errorMessage;\n    canvas.addEventListener(\"webglcontextcreationerror\", onCreateError, false);\n    const { webgl1 = true, webgl2 = true } = options;\n    let gl = null;\n    if (webgl2) {\n        gl = gl || canvas.getContext(\"webgl2\", options);\n        gl = gl || canvas.getContext(\"experimental-webgl2\", options);\n    }\n    if (webgl1) {\n        gl = gl || canvas.getContext(\"webgl\", options);\n        gl = gl || canvas.getContext(\"experimental-webgl\", options);\n    }\n    canvas.removeEventListener(\"webglcontextcreationerror\", onCreateError, false);\n    if (!gl) {\n        return onError(\"Failed to create \".concat(webgl2 && !webgl1 ? \"WebGL2\" : \"WebGL\", \" context: \").concat(errorMessage || \"Unknown error\"));\n    }\n    if (options.onContextLost) {\n        canvas.addEventListener(\"webglcontextlost\", options.onContextLost, false);\n    }\n    if (options.onContextRestored) {\n        canvas.addEventListener(\"webglcontextrestored\", options.onContextRestored, false);\n    }\n    return gl;\n}\nfunction getCanvas(_ref) {\n    let { canvas, width = 800, height = 600, onError } = _ref;\n    let targetCanvas;\n    if (typeof canvas === \"string\") {\n        const isPageLoaded = isPage && document.readyState === \"complete\";\n        if (!isPageLoaded) {\n            onError(\"createGLContext called on canvas '\".concat(canvas, \"' before page was loaded\"));\n        }\n        targetCanvas = document.getElementById(canvas);\n    } else if (canvas) {\n        targetCanvas = canvas;\n    } else {\n        targetCanvas = document.createElement(\"canvas\");\n        targetCanvas.id = \"lumagl-canvas\";\n        targetCanvas.style.width = Number.isFinite(width) ? \"\".concat(width, \"px\") : \"100%\";\n        targetCanvas.style.height = Number.isFinite(height) ? \"\".concat(height, \"px\") : \"100%\";\n        document.body.insertBefore(targetCanvas, document.body.firstChild);\n    }\n    return targetCanvas;\n}\nfunction logInfo(gl) {\n    const webGL = (0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_4__.isWebGL2)(gl) ? \"WebGL2\" : \"WebGL1\";\n    const info = getContextDebugInfo(gl);\n    const driver = info ? \"(\".concat(info.vendor, \",\").concat(info.renderer, \")\") : \"\";\n    const debug = gl.debug ? \" debug\" : \"\";\n    _utils_log__WEBPACK_IMPORTED_MODULE_1__.log.info(1, \"\".concat(webGL).concat(debug, \" context \").concat(driver))();\n}\nfunction getVersion(gl) {\n    if (typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext) {\n        return 2;\n    }\n    return 1;\n}\nfunction setDevicePixelRatio(gl, devicePixelRatio, options) {\n    let clientWidth = \"width\" in options ? options.width : gl.canvas.clientWidth;\n    let clientHeight = \"height\" in options ? options.height : gl.canvas.clientHeight;\n    if (!clientWidth || !clientHeight) {\n        _utils_log__WEBPACK_IMPORTED_MODULE_1__.log.log(1, \"Canvas clientWidth/clientHeight is 0\")();\n        devicePixelRatio = 1;\n        clientWidth = gl.canvas.width || 1;\n        clientHeight = gl.canvas.height || 1;\n    }\n    gl.luma = gl.luma || {};\n    gl.luma.canvasSizeInfo = gl.luma.canvasSizeInfo || {};\n    const cachedSize = gl.luma.canvasSizeInfo;\n    if (cachedSize.clientWidth !== clientWidth || cachedSize.clientHeight !== clientHeight || cachedSize.devicePixelRatio !== devicePixelRatio) {\n        let clampedPixelRatio = devicePixelRatio;\n        const canvasWidth = Math.floor(clientWidth * clampedPixelRatio);\n        const canvasHeight = Math.floor(clientHeight * clampedPixelRatio);\n        gl.canvas.width = canvasWidth;\n        gl.canvas.height = canvasHeight;\n        if (gl.drawingBufferWidth !== canvasWidth || gl.drawingBufferHeight !== canvasHeight) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_1__.log.warn(\"Device pixel ratio clamped\")();\n            clampedPixelRatio = Math.min(gl.drawingBufferWidth / clientWidth, gl.drawingBufferHeight / clientHeight);\n            gl.canvas.width = Math.floor(clientWidth * clampedPixelRatio);\n            gl.canvas.height = Math.floor(clientHeight * clampedPixelRatio);\n        }\n        Object.assign(gl.luma.canvasSizeInfo, {\n            clientWidth,\n            clientHeight,\n            devicePixelRatio\n        });\n    }\n} //# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/context/context.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertWebGL2Context: () => (/* reexport safe */ _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.assertWebGL2Context),\n/* harmony export */   assertWebGLContext: () => (/* reexport safe */ _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.assertWebGLContext),\n/* harmony export */   createGLContext: () => (/* reexport safe */ _context_context__WEBPACK_IMPORTED_MODULE_5__.createGLContext),\n/* harmony export */   cssToDevicePixels: () => (/* reexport safe */ _utils_device_pixels__WEBPACK_IMPORTED_MODULE_6__.cssToDevicePixels),\n/* harmony export */   cssToDeviceRatio: () => (/* reexport safe */ _utils_device_pixels__WEBPACK_IMPORTED_MODULE_6__.cssToDeviceRatio),\n/* harmony export */   getContextDebugInfo: () => (/* reexport safe */ _context_context__WEBPACK_IMPORTED_MODULE_5__.getContextDebugInfo),\n/* harmony export */   getParameters: () => (/* reexport safe */ _state_tracker_unified_parameter_api__WEBPACK_IMPORTED_MODULE_3__.getParameters),\n/* harmony export */   getWebGL2Context: () => (/* reexport safe */ _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.getWebGL2Context),\n/* harmony export */   instrumentGLContext: () => (/* reexport safe */ _context_context__WEBPACK_IMPORTED_MODULE_5__.instrumentGLContext),\n/* harmony export */   isWebGL: () => (/* reexport safe */ _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.isWebGL),\n/* harmony export */   isWebGL2: () => (/* reexport safe */ _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.isWebGL2),\n/* harmony export */   log: () => (/* reexport safe */ _utils_log__WEBPACK_IMPORTED_MODULE_0__.log),\n/* harmony export */   polyfillContext: () => (/* reexport safe */ _polyfill_polyfill_context__WEBPACK_IMPORTED_MODULE_2__.polyfillContext),\n/* harmony export */   popContextState: () => (/* reexport safe */ _state_tracker_track_context_state__WEBPACK_IMPORTED_MODULE_4__.popContextState),\n/* harmony export */   pushContextState: () => (/* reexport safe */ _state_tracker_track_context_state__WEBPACK_IMPORTED_MODULE_4__.pushContextState),\n/* harmony export */   resetParameters: () => (/* reexport safe */ _state_tracker_unified_parameter_api__WEBPACK_IMPORTED_MODULE_3__.resetParameters),\n/* harmony export */   resizeGLContext: () => (/* reexport safe */ _context_context__WEBPACK_IMPORTED_MODULE_5__.resizeGLContext),\n/* harmony export */   setParameters: () => (/* reexport safe */ _state_tracker_unified_parameter_api__WEBPACK_IMPORTED_MODULE_3__.setParameters),\n/* harmony export */   trackContextState: () => (/* reexport safe */ _state_tracker_track_context_state__WEBPACK_IMPORTED_MODULE_4__.trackContextState),\n/* harmony export */   withParameters: () => (/* reexport safe */ _state_tracker_unified_parameter_api__WEBPACK_IMPORTED_MODULE_3__.withParameters)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/log */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/log.js\");\n/* harmony import */ var _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/webgl-checks */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js\");\n/* harmony import */ var _polyfill_polyfill_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./polyfill/polyfill-context */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-context.js\");\n/* harmony import */ var _state_tracker_unified_parameter_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./state-tracker/unified-parameter-api */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/unified-parameter-api.js\");\n/* harmony import */ var _state_tracker_track_context_state__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./state-tracker/track-context-state */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/track-context-state.js\");\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context/context */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/context/context.js\");\n/* harmony import */ var _utils_device_pixels__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/device-pixels */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/device-pixels.js\");\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBa0M7QUFDa0Y7QUFDdEQ7QUFDd0Q7QUFDWDtBQUNJO0FBQ25DLENBQzVFLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL2dsdG9vbHMvZGlzdC9lc20vaW5kZXguanM/Y2Q3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBsb2cgfSBmcm9tICcuL3V0aWxzL2xvZyc7XG5leHBvcnQgeyBpc1dlYkdMLCBpc1dlYkdMMiwgZ2V0V2ViR0wyQ29udGV4dCwgYXNzZXJ0V2ViR0xDb250ZXh0LCBhc3NlcnRXZWJHTDJDb250ZXh0IH0gZnJvbSAnLi91dGlscy93ZWJnbC1jaGVja3MnO1xuZXhwb3J0IHsgcG9seWZpbGxDb250ZXh0IH0gZnJvbSAnLi9wb2x5ZmlsbC9wb2x5ZmlsbC1jb250ZXh0JztcbmV4cG9ydCB7IGdldFBhcmFtZXRlcnMsIHNldFBhcmFtZXRlcnMsIHJlc2V0UGFyYW1ldGVycywgd2l0aFBhcmFtZXRlcnMgfSBmcm9tICcuL3N0YXRlLXRyYWNrZXIvdW5pZmllZC1wYXJhbWV0ZXItYXBpJztcbmV4cG9ydCB7IHRyYWNrQ29udGV4dFN0YXRlLCBwdXNoQ29udGV4dFN0YXRlLCBwb3BDb250ZXh0U3RhdGUgfSBmcm9tICcuL3N0YXRlLXRyYWNrZXIvdHJhY2stY29udGV4dC1zdGF0ZSc7XG5leHBvcnQgeyBjcmVhdGVHTENvbnRleHQsIHJlc2l6ZUdMQ29udGV4dCwgaW5zdHJ1bWVudEdMQ29udGV4dCwgZ2V0Q29udGV4dERlYnVnSW5mbyB9IGZyb20gJy4vY29udGV4dC9jb250ZXh0JztcbmV4cG9ydCB7IGNzc1RvRGV2aWNlUmF0aW8sIGNzc1RvRGV2aWNlUGl4ZWxzIH0gZnJvbSAnLi91dGlscy9kZXZpY2UtcGl4ZWxzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJsb2ciLCJpc1dlYkdMIiwiaXNXZWJHTDIiLCJnZXRXZWJHTDJDb250ZXh0IiwiYXNzZXJ0V2ViR0xDb250ZXh0IiwiYXNzZXJ0V2ViR0wyQ29udGV4dCIsInBvbHlmaWxsQ29udGV4dCIsImdldFBhcmFtZXRlcnMiLCJzZXRQYXJhbWV0ZXJzIiwicmVzZXRQYXJhbWV0ZXJzIiwid2l0aFBhcmFtZXRlcnMiLCJ0cmFja0NvbnRleHRTdGF0ZSIsInB1c2hDb250ZXh0U3RhdGUiLCJwb3BDb250ZXh0U3RhdGUiLCJjcmVhdGVHTENvbnRleHQiLCJyZXNpemVHTENvbnRleHQiLCJpbnN0cnVtZW50R0xDb250ZXh0IiwiZ2V0Q29udGV4dERlYnVnSW5mbyIsImNzc1RvRGV2aWNlUmF0aW8iLCJjc3NUb0RldmljZVBpeGVscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/get-parameter-polyfill.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/polyfill/get-parameter-polyfill.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getParameterPolyfill: () => (/* binding */ getParameterPolyfill)\n/* harmony export */ });\n/* harmony import */ var _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/webgl-checks */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js\");\n\nconst OES_element_index = \"OES_element_index\";\nconst WEBGL_draw_buffers = \"WEBGL_draw_buffers\";\nconst EXT_disjoint_timer_query = \"EXT_disjoint_timer_query\";\nconst EXT_disjoint_timer_query_webgl2 = \"EXT_disjoint_timer_query_webgl2\";\nconst EXT_texture_filter_anisotropic = \"EXT_texture_filter_anisotropic\";\nconst WEBGL_debug_renderer_info = \"WEBGL_debug_renderer_info\";\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b;\nconst GL_DONT_CARE = 0x1100;\nconst GL_GPU_DISJOINT_EXT = 0x8fbb;\nconst GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff;\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245;\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246;\nconst getWebGL2ValueOrZero = (gl)=>!(0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) ? 0 : undefined;\nconst WEBGL_PARAMETERS = {\n    [3074]: (gl)=>!(0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) ? 36064 : undefined,\n    [GL_FRAGMENT_SHADER_DERIVATIVE_HINT]: (gl)=>!(0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) ? GL_DONT_CARE : undefined,\n    [35977]: getWebGL2ValueOrZero,\n    [32937]: getWebGL2ValueOrZero,\n    [GL_GPU_DISJOINT_EXT]: (gl, getParameter)=>{\n        const ext = (0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) ? gl.getExtension(EXT_disjoint_timer_query_webgl2) : gl.getExtension(EXT_disjoint_timer_query);\n        return ext && ext.GPU_DISJOINT_EXT ? getParameter(ext.GPU_DISJOINT_EXT) : 0;\n    },\n    [GL_UNMASKED_VENDOR_WEBGL]: (gl, getParameter)=>{\n        const ext = gl.getExtension(WEBGL_debug_renderer_info);\n        return getParameter(ext && ext.UNMASKED_VENDOR_WEBGL || 7936);\n    },\n    [GL_UNMASKED_RENDERER_WEBGL]: (gl, getParameter)=>{\n        const ext = gl.getExtension(WEBGL_debug_renderer_info);\n        return getParameter(ext && ext.UNMASKED_RENDERER_WEBGL || 7937);\n    },\n    [GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT]: (gl, getParameter)=>{\n        const ext = gl.luma.extensions[EXT_texture_filter_anisotropic];\n        return ext ? getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1.0;\n    },\n    [32883]: getWebGL2ValueOrZero,\n    [35071]: getWebGL2ValueOrZero,\n    [37447]: getWebGL2ValueOrZero,\n    [36063]: (gl, getParameter)=>{\n        if (!(0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl)) {\n            const ext = gl.getExtension(WEBGL_draw_buffers);\n            return ext ? getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL) : 0;\n        }\n        return undefined;\n    },\n    [35379]: getWebGL2ValueOrZero,\n    [35374]: getWebGL2ValueOrZero,\n    [35377]: getWebGL2ValueOrZero,\n    [34852]: (gl)=>{\n        if (!(0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl)) {\n            const ext = gl.getExtension(WEBGL_draw_buffers);\n            return ext ? ext.MAX_DRAW_BUFFERS_WEBGL : 0;\n        }\n        return undefined;\n    },\n    [36203]: (gl)=>gl.getExtension(OES_element_index) ? 2147483647 : 65535,\n    [33001]: (gl)=>gl.getExtension(OES_element_index) ? 16777216 : 65535,\n    [33000]: (gl)=>16777216,\n    [37157]: getWebGL2ValueOrZero,\n    [35373]: getWebGL2ValueOrZero,\n    [35657]: getWebGL2ValueOrZero,\n    [36183]: getWebGL2ValueOrZero,\n    [37137]: getWebGL2ValueOrZero,\n    [34045]: getWebGL2ValueOrZero,\n    [35978]: getWebGL2ValueOrZero,\n    [35979]: getWebGL2ValueOrZero,\n    [35968]: getWebGL2ValueOrZero,\n    [35376]: getWebGL2ValueOrZero,\n    [35375]: getWebGL2ValueOrZero,\n    [35659]: getWebGL2ValueOrZero,\n    [37154]: getWebGL2ValueOrZero,\n    [35371]: getWebGL2ValueOrZero,\n    [35658]: getWebGL2ValueOrZero,\n    [35076]: getWebGL2ValueOrZero,\n    [35077]: getWebGL2ValueOrZero,\n    [35380]: getWebGL2ValueOrZero\n};\nfunction getParameterPolyfill(gl, originalGetParameter, pname) {\n    const limit = WEBGL_PARAMETERS[pname];\n    const value = typeof limit === \"function\" ? limit(gl, originalGetParameter, pname) : limit;\n    const result = value !== undefined ? value : originalGetParameter(pname);\n    return result;\n} //# sourceMappingURL=get-parameter-polyfill.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/get-parameter-polyfill.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-context.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-context.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   polyfillContext: () => (/* binding */ polyfillContext)\n/* harmony export */ });\n/* harmony import */ var _polyfill_vertex_array_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polyfill-vertex-array-object */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-vertex-array-object.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js\");\n/* harmony import */ var _polyfill_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./polyfill-table */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-table.js\");\n\n\n\nfunction polyfillContext(gl) {\n    gl.luma = gl.luma || {};\n    const { luma } = gl;\n    if (!luma.polyfilled) {\n        (0,_polyfill_vertex_array_object__WEBPACK_IMPORTED_MODULE_0__.polyfillVertexArrayObject)(gl);\n        initializeExtensions(gl);\n        installPolyfills(gl, _polyfill_table__WEBPACK_IMPORTED_MODULE_2__.WEBGL2_CONTEXT_POLYFILLS);\n        installOverrides(gl, {\n            target: luma,\n            target2: gl\n        });\n        luma.polyfilled = true;\n    }\n    return gl;\n}\nglobalThis.polyfillContext = polyfillContext;\nfunction initializeExtensions(gl) {\n    gl.luma.extensions = {};\n    const EXTENSIONS = gl.getSupportedExtensions() || [];\n    for (const extension of EXTENSIONS){\n        gl.luma[extension] = gl.getExtension(extension);\n    }\n}\nfunction installOverrides(gl, _ref) {\n    let { target, target2 } = _ref;\n    Object.keys(_polyfill_table__WEBPACK_IMPORTED_MODULE_2__.WEBGL2_CONTEXT_OVERRIDES).forEach((key)=>{\n        if (typeof _polyfill_table__WEBPACK_IMPORTED_MODULE_2__.WEBGL2_CONTEXT_OVERRIDES[key] === \"function\") {\n            const originalFunc = gl[key] ? gl[key].bind(gl) : ()=>{};\n            const polyfill = _polyfill_table__WEBPACK_IMPORTED_MODULE_2__.WEBGL2_CONTEXT_OVERRIDES[key].bind(null, gl, originalFunc);\n            target[key] = polyfill;\n            target2[key] = polyfill;\n        }\n    });\n}\nfunction installPolyfills(gl, polyfills) {\n    for (const extension of Object.getOwnPropertyNames(polyfills)){\n        if (extension !== \"overrides\") {\n            polyfillExtension(gl, {\n                extension,\n                target: gl.luma,\n                target2: gl\n            });\n        }\n    }\n}\nfunction polyfillExtension(gl, _ref2) {\n    let { extension, target, target2 } = _ref2;\n    const defaults = _polyfill_table__WEBPACK_IMPORTED_MODULE_2__.WEBGL2_CONTEXT_POLYFILLS[extension];\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(defaults);\n    const { meta = {} } = defaults;\n    const { suffix = \"\" } = meta;\n    const ext = gl.getExtension(extension);\n    for (const key of Object.keys(defaults)){\n        const extKey = \"\".concat(key).concat(suffix);\n        let polyfill = null;\n        if (key === \"meta\") {} else if (typeof gl[key] === \"function\") {} else if (ext && typeof ext[extKey] === \"function\") {\n            polyfill = function() {\n                return ext[extKey](...arguments);\n            };\n        } else if (typeof defaults[key] === \"function\") {\n            polyfill = defaults[key].bind(target);\n        }\n        if (polyfill) {\n            target[key] = polyfill;\n            target2[key] = polyfill;\n        }\n    }\n} //# sourceMappingURL=polyfill-context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS9wb2x5ZmlsbC9wb2x5ZmlsbC1jb250ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkU7QUFDbEM7QUFDNkM7QUFDL0UsU0FBU0ksZ0JBQWdCQyxFQUFFO0lBQ2hDQSxHQUFHQyxJQUFJLEdBQUdELEdBQUdDLElBQUksSUFBSSxDQUFDO0lBQ3RCLE1BQU0sRUFDSkEsSUFBSSxFQUNMLEdBQUdEO0lBRUosSUFBSSxDQUFDQyxLQUFLQyxVQUFVLEVBQUU7UUFDcEJQLHdGQUF5QkEsQ0FBQ0s7UUFDMUJHLHFCQUFxQkg7UUFDckJJLGlCQUFpQkosSUFBSUgscUVBQXdCQTtRQUM3Q1EsaUJBQWlCTCxJQUFJO1lBQ25CTSxRQUFRTDtZQUNSTSxTQUFTUDtRQUNYO1FBQ0FDLEtBQUtDLFVBQVUsR0FBRztJQUNwQjtJQUVBLE9BQU9GO0FBQ1Q7QUFDQVEsV0FBV1QsZUFBZSxHQUFHQTtBQUU3QixTQUFTSSxxQkFBcUJILEVBQUU7SUFDOUJBLEdBQUdDLElBQUksQ0FBQ1EsVUFBVSxHQUFHLENBQUM7SUFDdEIsTUFBTUMsYUFBYVYsR0FBR1csc0JBQXNCLE1BQU0sRUFBRTtJQUVwRCxLQUFLLE1BQU1DLGFBQWFGLFdBQVk7UUFDbENWLEdBQUdDLElBQUksQ0FBQ1csVUFBVSxHQUFHWixHQUFHYSxZQUFZLENBQUNEO0lBQ3ZDO0FBQ0Y7QUFFQSxTQUFTUCxpQkFBaUJMLEVBQUUsRUFBRWMsSUFBSTtJQUNoQyxJQUFJLEVBQ0ZSLE1BQU0sRUFDTkMsT0FBTyxFQUNSLEdBQUdPO0lBQ0pDLE9BQU9DLElBQUksQ0FBQ2xCLHFFQUF3QkEsRUFBRW1CLE9BQU8sQ0FBQ0MsQ0FBQUE7UUFDNUMsSUFBSSxPQUFPcEIscUVBQXdCLENBQUNvQixJQUFJLEtBQUssWUFBWTtZQUN2RCxNQUFNQyxlQUFlbkIsRUFBRSxDQUFDa0IsSUFBSSxHQUFHbEIsRUFBRSxDQUFDa0IsSUFBSSxDQUFDRSxJQUFJLENBQUNwQixNQUFNLEtBQU87WUFDekQsTUFBTXFCLFdBQVd2QixxRUFBd0IsQ0FBQ29CLElBQUksQ0FBQ0UsSUFBSSxDQUFDLE1BQU1wQixJQUFJbUI7WUFDOURiLE1BQU0sQ0FBQ1ksSUFBSSxHQUFHRztZQUNkZCxPQUFPLENBQUNXLElBQUksR0FBR0c7UUFDakI7SUFDRjtBQUNGO0FBRUEsU0FBU2pCLGlCQUFpQkosRUFBRSxFQUFFc0IsU0FBUztJQUNyQyxLQUFLLE1BQU1WLGFBQWFHLE9BQU9RLG1CQUFtQixDQUFDRCxXQUFZO1FBQzdELElBQUlWLGNBQWMsYUFBYTtZQUM3Qlksa0JBQWtCeEIsSUFBSTtnQkFDcEJZO2dCQUNBTixRQUFRTixHQUFHQyxJQUFJO2dCQUNmTSxTQUFTUDtZQUNYO1FBQ0Y7SUFDRjtBQUNGO0FBRUEsU0FBU3dCLGtCQUFrQnhCLEVBQUUsRUFBRXlCLEtBQUs7SUFDbEMsSUFBSSxFQUNGYixTQUFTLEVBQ1ROLE1BQU0sRUFDTkMsT0FBTyxFQUNSLEdBQUdrQjtJQUNKLE1BQU1DLFdBQVc3QixxRUFBd0IsQ0FBQ2UsVUFBVTtJQUNwRGhCLHFEQUFNQSxDQUFDOEI7SUFDUCxNQUFNLEVBQ0pDLE9BQU8sQ0FBQyxDQUFDLEVBQ1YsR0FBR0Q7SUFDSixNQUFNLEVBQ0pFLFNBQVMsRUFBRSxFQUNaLEdBQUdEO0lBQ0osTUFBTUUsTUFBTTdCLEdBQUdhLFlBQVksQ0FBQ0Q7SUFFNUIsS0FBSyxNQUFNTSxPQUFPSCxPQUFPQyxJQUFJLENBQUNVLFVBQVc7UUFDdkMsTUFBTUksU0FBUyxHQUFHQyxNQUFNLENBQUNiLEtBQUthLE1BQU0sQ0FBQ0g7UUFDckMsSUFBSVAsV0FBVztRQUVmLElBQUlILFFBQVEsUUFBUSxDQUFDLE9BQU8sSUFBSSxPQUFPbEIsRUFBRSxDQUFDa0IsSUFBSSxLQUFLLFlBQVksQ0FBQyxPQUFPLElBQUlXLE9BQU8sT0FBT0EsR0FBRyxDQUFDQyxPQUFPLEtBQUssWUFBWTtZQUNuSFQsV0FBVztnQkFDVCxPQUFPUSxHQUFHLENBQUNDLE9BQU8sSUFBSUU7WUFDeEI7UUFDRixPQUFPLElBQUksT0FBT04sUUFBUSxDQUFDUixJQUFJLEtBQUssWUFBWTtZQUM5Q0csV0FBV0ssUUFBUSxDQUFDUixJQUFJLENBQUNFLElBQUksQ0FBQ2Q7UUFDaEM7UUFFQSxJQUFJZSxVQUFVO1lBQ1pmLE1BQU0sQ0FBQ1ksSUFBSSxHQUFHRztZQUNkZCxPQUFPLENBQUNXLElBQUksR0FBR0c7UUFDakI7SUFDRjtBQUNGLEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS9wb2x5ZmlsbC9wb2x5ZmlsbC1jb250ZXh0LmpzPzkxNWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcG9seWZpbGxWZXJ0ZXhBcnJheU9iamVjdCB9IGZyb20gJy4vcG9seWZpbGwtdmVydGV4LWFycmF5LW9iamVjdCc7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tICcuLi91dGlscy9hc3NlcnQnO1xuaW1wb3J0IHsgV0VCR0wyX0NPTlRFWFRfUE9MWUZJTExTLCBXRUJHTDJfQ09OVEVYVF9PVkVSUklERVMgfSBmcm9tICcuL3BvbHlmaWxsLXRhYmxlJztcbmV4cG9ydCBmdW5jdGlvbiBwb2x5ZmlsbENvbnRleHQoZ2wpIHtcbiAgZ2wubHVtYSA9IGdsLmx1bWEgfHwge307XG4gIGNvbnN0IHtcbiAgICBsdW1hXG4gIH0gPSBnbDtcblxuICBpZiAoIWx1bWEucG9seWZpbGxlZCkge1xuICAgIHBvbHlmaWxsVmVydGV4QXJyYXlPYmplY3QoZ2wpO1xuICAgIGluaXRpYWxpemVFeHRlbnNpb25zKGdsKTtcbiAgICBpbnN0YWxsUG9seWZpbGxzKGdsLCBXRUJHTDJfQ09OVEVYVF9QT0xZRklMTFMpO1xuICAgIGluc3RhbGxPdmVycmlkZXMoZ2wsIHtcbiAgICAgIHRhcmdldDogbHVtYSxcbiAgICAgIHRhcmdldDI6IGdsXG4gICAgfSk7XG4gICAgbHVtYS5wb2x5ZmlsbGVkID0gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBnbDtcbn1cbmdsb2JhbFRoaXMucG9seWZpbGxDb250ZXh0ID0gcG9seWZpbGxDb250ZXh0O1xuXG5mdW5jdGlvbiBpbml0aWFsaXplRXh0ZW5zaW9ucyhnbCkge1xuICBnbC5sdW1hLmV4dGVuc2lvbnMgPSB7fTtcbiAgY29uc3QgRVhURU5TSU9OUyA9IGdsLmdldFN1cHBvcnRlZEV4dGVuc2lvbnMoKSB8fCBbXTtcblxuICBmb3IgKGNvbnN0IGV4dGVuc2lvbiBvZiBFWFRFTlNJT05TKSB7XG4gICAgZ2wubHVtYVtleHRlbnNpb25dID0gZ2wuZ2V0RXh0ZW5zaW9uKGV4dGVuc2lvbik7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5zdGFsbE92ZXJyaWRlcyhnbCwgX3JlZikge1xuICBsZXQge1xuICAgIHRhcmdldCxcbiAgICB0YXJnZXQyXG4gIH0gPSBfcmVmO1xuICBPYmplY3Qua2V5cyhXRUJHTDJfQ09OVEVYVF9PVkVSUklERVMpLmZvckVhY2goa2V5ID0+IHtcbiAgICBpZiAodHlwZW9mIFdFQkdMMl9DT05URVhUX09WRVJSSURFU1trZXldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjb25zdCBvcmlnaW5hbEZ1bmMgPSBnbFtrZXldID8gZ2xba2V5XS5iaW5kKGdsKSA6ICgpID0+IHt9O1xuICAgICAgY29uc3QgcG9seWZpbGwgPSBXRUJHTDJfQ09OVEVYVF9PVkVSUklERVNba2V5XS5iaW5kKG51bGwsIGdsLCBvcmlnaW5hbEZ1bmMpO1xuICAgICAgdGFyZ2V0W2tleV0gPSBwb2x5ZmlsbDtcbiAgICAgIHRhcmdldDJba2V5XSA9IHBvbHlmaWxsO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGluc3RhbGxQb2x5ZmlsbHMoZ2wsIHBvbHlmaWxscykge1xuICBmb3IgKGNvbnN0IGV4dGVuc2lvbiBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhwb2x5ZmlsbHMpKSB7XG4gICAgaWYgKGV4dGVuc2lvbiAhPT0gJ292ZXJyaWRlcycpIHtcbiAgICAgIHBvbHlmaWxsRXh0ZW5zaW9uKGdsLCB7XG4gICAgICAgIGV4dGVuc2lvbixcbiAgICAgICAgdGFyZ2V0OiBnbC5sdW1hLFxuICAgICAgICB0YXJnZXQyOiBnbFxuICAgICAgfSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHBvbHlmaWxsRXh0ZW5zaW9uKGdsLCBfcmVmMikge1xuICBsZXQge1xuICAgIGV4dGVuc2lvbixcbiAgICB0YXJnZXQsXG4gICAgdGFyZ2V0MlxuICB9ID0gX3JlZjI7XG4gIGNvbnN0IGRlZmF1bHRzID0gV0VCR0wyX0NPTlRFWFRfUE9MWUZJTExTW2V4dGVuc2lvbl07XG4gIGFzc2VydChkZWZhdWx0cyk7XG4gIGNvbnN0IHtcbiAgICBtZXRhID0ge31cbiAgfSA9IGRlZmF1bHRzO1xuICBjb25zdCB7XG4gICAgc3VmZml4ID0gJydcbiAgfSA9IG1ldGE7XG4gIGNvbnN0IGV4dCA9IGdsLmdldEV4dGVuc2lvbihleHRlbnNpb24pO1xuXG4gIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKGRlZmF1bHRzKSkge1xuICAgIGNvbnN0IGV4dEtleSA9IFwiXCIuY29uY2F0KGtleSkuY29uY2F0KHN1ZmZpeCk7XG4gICAgbGV0IHBvbHlmaWxsID0gbnVsbDtcblxuICAgIGlmIChrZXkgPT09ICdtZXRhJykge30gZWxzZSBpZiAodHlwZW9mIGdsW2tleV0gPT09ICdmdW5jdGlvbicpIHt9IGVsc2UgaWYgKGV4dCAmJiB0eXBlb2YgZXh0W2V4dEtleV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHBvbHlmaWxsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZXh0W2V4dEtleV0oLi4uYXJndW1lbnRzKTtcbiAgICAgIH07XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZGVmYXVsdHNba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcG9seWZpbGwgPSBkZWZhdWx0c1trZXldLmJpbmQodGFyZ2V0KTtcbiAgICB9XG5cbiAgICBpZiAocG9seWZpbGwpIHtcbiAgICAgIHRhcmdldFtrZXldID0gcG9seWZpbGw7XG4gICAgICB0YXJnZXQyW2tleV0gPSBwb2x5ZmlsbDtcbiAgICB9XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvbHlmaWxsLWNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbInBvbHlmaWxsVmVydGV4QXJyYXlPYmplY3QiLCJhc3NlcnQiLCJXRUJHTDJfQ09OVEVYVF9QT0xZRklMTFMiLCJXRUJHTDJfQ09OVEVYVF9PVkVSUklERVMiLCJwb2x5ZmlsbENvbnRleHQiLCJnbCIsImx1bWEiLCJwb2x5ZmlsbGVkIiwiaW5pdGlhbGl6ZUV4dGVuc2lvbnMiLCJpbnN0YWxsUG9seWZpbGxzIiwiaW5zdGFsbE92ZXJyaWRlcyIsInRhcmdldCIsInRhcmdldDIiLCJnbG9iYWxUaGlzIiwiZXh0ZW5zaW9ucyIsIkVYVEVOU0lPTlMiLCJnZXRTdXBwb3J0ZWRFeHRlbnNpb25zIiwiZXh0ZW5zaW9uIiwiZ2V0RXh0ZW5zaW9uIiwiX3JlZiIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5Iiwib3JpZ2luYWxGdW5jIiwiYmluZCIsInBvbHlmaWxsIiwicG9seWZpbGxzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInBvbHlmaWxsRXh0ZW5zaW9uIiwiX3JlZjIiLCJkZWZhdWx0cyIsIm1ldGEiLCJzdWZmaXgiLCJleHQiLCJleHRLZXkiLCJjb25jYXQiLCJhcmd1bWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-context.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-table.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-table.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WEBGL2_CONTEXT_OVERRIDES: () => (/* binding */ WEBGL2_CONTEXT_OVERRIDES),\n/* harmony export */   WEBGL2_CONTEXT_POLYFILLS: () => (/* binding */ WEBGL2_CONTEXT_POLYFILLS)\n/* harmony export */ });\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/webgl-checks */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js\");\n/* harmony import */ var _get_parameter_polyfill__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./get-parameter-polyfill */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/get-parameter-polyfill.js\");\n\n\n\nconst OES_vertex_array_object = \"OES_vertex_array_object\";\nconst ANGLE_instanced_arrays = \"ANGLE_instanced_arrays\";\nconst WEBGL_draw_buffers = \"WEBGL_draw_buffers\";\nconst EXT_disjoint_timer_query = \"EXT_disjoint_timer_query\";\nconst EXT_texture_filter_anisotropic = \"EXT_texture_filter_anisotropic\";\nconst ERR_VAO_NOT_SUPPORTED = \"VertexArray requires WebGL2 or OES_vertex_array_object extension\";\nfunction getExtensionData(gl, extension) {\n    return {\n        webgl2: (0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.isWebGL2)(gl),\n        ext: gl.getExtension(extension)\n    };\n}\nconst WEBGL2_CONTEXT_POLYFILLS = {\n    [OES_vertex_array_object]: {\n        meta: {\n            suffix: \"OES\"\n        },\n        createVertexArray: ()=>{\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false, ERR_VAO_NOT_SUPPORTED);\n        },\n        deleteVertexArray: ()=>{},\n        bindVertexArray: ()=>{},\n        isVertexArray: ()=>false\n    },\n    [ANGLE_instanced_arrays]: {\n        meta: {\n            suffix: \"ANGLE\"\n        },\n        vertexAttribDivisor (location, divisor) {\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(divisor === 0, \"WebGL instanced rendering not supported\");\n        },\n        drawElementsInstanced: ()=>{},\n        drawArraysInstanced: ()=>{}\n    },\n    [WEBGL_draw_buffers]: {\n        meta: {\n            suffix: \"WEBGL\"\n        },\n        drawBuffers: ()=>{\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n        }\n    },\n    [EXT_disjoint_timer_query]: {\n        meta: {\n            suffix: \"EXT\"\n        },\n        createQuery: ()=>{\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n        },\n        deleteQuery: ()=>{\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n        },\n        beginQuery: ()=>{\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n        },\n        endQuery: ()=>{},\n        getQuery (handle, pname) {\n            return this.getQueryObject(handle, pname);\n        },\n        getQueryParameter (handle, pname) {\n            return this.getQueryObject(handle, pname);\n        },\n        getQueryObject: ()=>{}\n    }\n};\nconst WEBGL2_CONTEXT_OVERRIDES = {\n    readBuffer: (gl, originalFunc, attachment)=>{\n        if ((0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.isWebGL2)(gl)) {\n            originalFunc(attachment);\n        } else {}\n    },\n    getVertexAttrib: (gl, originalFunc, location, pname)=>{\n        const { webgl2, ext } = getExtensionData(gl, ANGLE_instanced_arrays);\n        let result;\n        switch(pname){\n            case 35069:\n                result = !webgl2 ? false : undefined;\n                break;\n            case 35070:\n                result = !webgl2 && !ext ? 0 : undefined;\n                break;\n            default:\n        }\n        return result !== undefined ? result : originalFunc(location, pname);\n    },\n    getProgramParameter: (gl, originalFunc, program, pname)=>{\n        if (!(0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.isWebGL2)(gl)) {\n            switch(pname){\n                case 35967:\n                    return 35981;\n                case 35971:\n                    return 0;\n                case 35382:\n                    return 0;\n                default:\n            }\n        }\n        return originalFunc(program, pname);\n    },\n    getInternalformatParameter: (gl, originalFunc, target, format, pname)=>{\n        if (!(0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_1__.isWebGL2)(gl)) {\n            switch(pname){\n                case 32937:\n                    return new Int32Array([\n                        0\n                    ]);\n                default:\n            }\n        }\n        return gl.getInternalformatParameter(target, format, pname);\n    },\n    getTexParameter (gl, originalFunc, target, pname) {\n        switch(pname){\n            case 34046:\n                const { extensions } = gl.luma;\n                const ext = extensions[EXT_texture_filter_anisotropic];\n                pname = ext && ext.TEXTURE_MAX_ANISOTROPY_EXT || 34046;\n                break;\n            default:\n        }\n        return originalFunc(target, pname);\n    },\n    getParameter: _get_parameter_polyfill__WEBPACK_IMPORTED_MODULE_2__.getParameterPolyfill,\n    hint (gl, originalFunc, pname, value) {\n        return originalFunc(pname, value);\n    }\n}; //# sourceMappingURL=polyfill-table.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-table.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-vertex-array-object.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-vertex-array-object.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   polyfillVertexArrayObject: () => (/* binding */ polyfillVertexArrayObject)\n/* harmony export */ });\nconst glErrorShadow = {};\nfunction error(msg) {\n    if (globalThis.console && globalThis.console.error) {\n        globalThis.console.error(msg);\n    }\n}\nfunction log(msg) {\n    if (globalThis.console && globalThis.console.log) {\n        globalThis.console.log(msg);\n    }\n}\nfunction synthesizeGLError(err, opt_msg) {\n    glErrorShadow[err] = true;\n    if (opt_msg !== undefined) {\n        error(opt_msg);\n    }\n}\nfunction wrapGLError(gl) {\n    const f = gl.getError;\n    gl.getError = function getError() {\n        let err;\n        do {\n            err = f.apply(gl);\n            if (err !== 0) {\n                glErrorShadow[err] = true;\n            }\n        }while (err !== 0);\n        for(err in glErrorShadow){\n            if (glErrorShadow[err]) {\n                delete glErrorShadow[err];\n                return parseInt(err, 10);\n            }\n        }\n        return 0;\n    };\n}\nconst WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\n    const gl = ext.gl;\n    this.ext = ext;\n    this.isAlive = true;\n    this.hasBeenBound = false;\n    this.elementArrayBuffer = null;\n    this.attribs = new Array(ext.maxVertexAttribs);\n    for(let n = 0; n < this.attribs.length; n++){\n        const attrib = new WebGLVertexArrayObjectOES.VertexAttrib(gl);\n        this.attribs[n] = attrib;\n    }\n    this.maxAttrib = 0;\n};\nWebGLVertexArrayObjectOES.VertexAttrib = function VertexAttrib(gl) {\n    this.enabled = false;\n    this.buffer = null;\n    this.size = 4;\n    this.type = 5126;\n    this.normalized = false;\n    this.stride = 16;\n    this.offset = 0;\n    this.cached = \"\";\n    this.recache();\n};\nWebGLVertexArrayObjectOES.VertexAttrib.prototype.recache = function recache() {\n    this.cached = [\n        this.size,\n        this.type,\n        this.normalized,\n        this.stride,\n        this.offset\n    ].join(\":\");\n};\nconst OESVertexArrayObject = function OESVertexArrayObject(gl) {\n    const self = this;\n    this.gl = gl;\n    wrapGLError(gl);\n    const original = this.original = {\n        getParameter: gl.getParameter,\n        enableVertexAttribArray: gl.enableVertexAttribArray,\n        disableVertexAttribArray: gl.disableVertexAttribArray,\n        bindBuffer: gl.bindBuffer,\n        getVertexAttrib: gl.getVertexAttrib,\n        vertexAttribPointer: gl.vertexAttribPointer\n    };\n    gl.getParameter = function getParameter(pname) {\n        if (pname === self.VERTEX_ARRAY_BINDING_OES) {\n            if (self.currentVertexArrayObject === self.defaultVertexArrayObject) {\n                return null;\n            }\n            return self.currentVertexArrayObject;\n        }\n        return original.getParameter.apply(this, arguments);\n    };\n    gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\n        const vao = self.currentVertexArrayObject;\n        vao.maxAttrib = Math.max(vao.maxAttrib, index);\n        const attrib = vao.attribs[index];\n        attrib.enabled = true;\n        return original.enableVertexAttribArray.apply(this, arguments);\n    };\n    gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\n        const vao = self.currentVertexArrayObject;\n        vao.maxAttrib = Math.max(vao.maxAttrib, index);\n        const attrib = vao.attribs[index];\n        attrib.enabled = false;\n        return original.disableVertexAttribArray.apply(this, arguments);\n    };\n    gl.bindBuffer = function bindBuffer(target, buffer) {\n        switch(target){\n            case 34962:\n                self.currentArrayBuffer = buffer;\n                break;\n            case 34963:\n                self.currentVertexArrayObject.elementArrayBuffer = buffer;\n                break;\n            default:\n        }\n        return original.bindBuffer.apply(this, arguments);\n    };\n    gl.getVertexAttrib = function getVertexAttrib(index, pname) {\n        const vao = self.currentVertexArrayObject;\n        const attrib = vao.attribs[index];\n        switch(pname){\n            case 34975:\n                return attrib.buffer;\n            case 34338:\n                return attrib.enabled;\n            case 34339:\n                return attrib.size;\n            case 34340:\n                return attrib.stride;\n            case 34341:\n                return attrib.type;\n            case 34922:\n                return attrib.normalized;\n            default:\n                return original.getVertexAttrib.apply(this, arguments);\n        }\n    };\n    gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\n        const vao = self.currentVertexArrayObject;\n        vao.maxAttrib = Math.max(vao.maxAttrib, indx);\n        const attrib = vao.attribs[indx];\n        attrib.buffer = self.currentArrayBuffer;\n        attrib.size = size;\n        attrib.type = type;\n        attrib.normalized = normalized;\n        attrib.stride = stride;\n        attrib.offset = offset;\n        attrib.recache();\n        return original.vertexAttribPointer.apply(this, arguments);\n    };\n    if (gl.instrumentExtension) {\n        gl.instrumentExtension(this, \"OES_vertex_array_object\");\n    }\n    if (gl.canvas) {\n        gl.canvas.addEventListener(\"webglcontextrestored\", ()=>{\n            log(\"OESVertexArrayObject emulation library context restored\");\n            self.reset_();\n        }, true);\n    }\n    this.reset_();\n};\nOESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85b5;\nOESVertexArrayObject.prototype.reset_ = function reset_() {\n    const contextWasLost = this.vertexArrayObjects !== undefined;\n    if (contextWasLost) {\n        for(let ii = 0; ii < this.vertexArrayObjects.length; ++ii){\n            this.vertexArrayObjects.isAlive = false;\n        }\n    }\n    const gl = this.gl;\n    this.maxVertexAttribs = gl.getParameter(34921);\n    this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\n    this.currentVertexArrayObject = null;\n    this.currentArrayBuffer = null;\n    this.vertexArrayObjects = [\n        this.defaultVertexArrayObject\n    ];\n    this.bindVertexArrayOES(null);\n};\nOESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\n    const arrayObject = new WebGLVertexArrayObjectOES(this);\n    this.vertexArrayObjects.push(arrayObject);\n    return arrayObject;\n};\nOESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\n    arrayObject.isAlive = false;\n    this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\n    if (this.currentVertexArrayObject === arrayObject) {\n        this.bindVertexArrayOES(null);\n    }\n};\nOESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\n    if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\n        if (arrayObject.hasBeenBound && arrayObject.ext === this) {\n            return true;\n        }\n    }\n    return false;\n};\nOESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\n    const gl = this.gl;\n    if (arrayObject && !arrayObject.isAlive) {\n        synthesizeGLError(1282, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\n        return;\n    }\n    const original = this.original;\n    const oldVAO = this.currentVertexArrayObject;\n    this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\n    this.currentVertexArrayObject.hasBeenBound = true;\n    const newVAO = this.currentVertexArrayObject;\n    if (oldVAO === newVAO) {\n        return;\n    }\n    if (!oldVAO || newVAO.elementArrayBuffer !== oldVAO.elementArrayBuffer) {\n        original.bindBuffer.call(gl, 34963, newVAO.elementArrayBuffer);\n    }\n    let currentBinding = this.currentArrayBuffer;\n    const maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\n    for(let n = 0; n <= maxAttrib; n++){\n        const attrib = newVAO.attribs[n];\n        const oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\n        if (!oldVAO || attrib.enabled !== oldAttrib.enabled) {\n            if (attrib.enabled) {\n                original.enableVertexAttribArray.call(gl, n);\n            } else {\n                original.disableVertexAttribArray.call(gl, n);\n            }\n        }\n        if (attrib.enabled) {\n            let bufferChanged = false;\n            if (!oldVAO || attrib.buffer !== oldAttrib.buffer) {\n                if (currentBinding !== attrib.buffer) {\n                    original.bindBuffer.call(gl, 34962, attrib.buffer);\n                    currentBinding = attrib.buffer;\n                }\n                bufferChanged = true;\n            }\n            if (bufferChanged || attrib.cached !== oldAttrib.cached) {\n                original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\n            }\n        }\n    }\n    if (this.currentArrayBuffer !== currentBinding) {\n        original.bindBuffer.call(gl, 34962, this.currentArrayBuffer);\n    }\n};\nfunction polyfillVertexArrayObject(gl) {\n    if (typeof gl.createVertexArray === \"function\") {\n        return;\n    }\n    const original_getSupportedExtensions = gl.getSupportedExtensions;\n    gl.getSupportedExtensions = function getSupportedExtensions() {\n        const list = original_getSupportedExtensions.call(this) || [];\n        if (list.indexOf(\"OES_vertex_array_object\") < 0) {\n            list.push(\"OES_vertex_array_object\");\n        }\n        return list;\n    };\n    const original_getExtension = gl.getExtension;\n    gl.getExtension = function getExtension(name) {\n        const ext = original_getExtension.call(this, name);\n        if (ext) {\n            return ext;\n        }\n        if (name !== \"OES_vertex_array_object\") {\n            return null;\n        }\n        if (!gl.__OESVertexArrayObject) {\n            this.__OESVertexArrayObject = new OESVertexArrayObject(this);\n        }\n        return this.__OESVertexArrayObject;\n    };\n} //# sourceMappingURL=polyfill-vertex-array-object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/polyfill/polyfill-vertex-array-object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/track-context-state.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/state-tracker/track-context-state.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   popContextState: () => (/* binding */ popContextState),\n/* harmony export */   pushContextState: () => (/* binding */ pushContextState),\n/* harmony export */   trackContextState: () => (/* binding */ trackContextState)\n/* harmony export */ });\n/* harmony import */ var _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webgl-parameter-tables */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/webgl-parameter-tables.js\");\n/* harmony import */ var _unified_parameter_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./unified-parameter-api */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/unified-parameter-api.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/utils */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/utils.js\");\n\n\n\n\nfunction installGetterOverride(gl, functionName) {\n    const originalGetterFunc = gl[functionName].bind(gl);\n    gl[functionName] = function get() {\n        const pname = arguments.length <= 0 ? undefined : arguments[0];\n        if (!(pname in gl.state.cache)) {\n            return originalGetterFunc(...arguments);\n        }\n        return gl.state.enable ? gl.state.cache[pname] : originalGetterFunc(...arguments);\n    };\n    Object.defineProperty(gl[functionName], \"name\", {\n        value: \"\".concat(functionName, \"-from-cache\"),\n        configurable: false\n    });\n}\nfunction installSetterSpy(gl, functionName, setter) {\n    const originalSetterFunc = gl[functionName].bind(gl);\n    gl[functionName] = function set() {\n        for(var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++){\n            params[_key] = arguments[_key];\n        }\n        const { valueChanged, oldValue } = setter(gl.state._updateCache, ...params);\n        if (valueChanged) {\n            originalSetterFunc(...params);\n        }\n        return oldValue;\n    };\n    Object.defineProperty(gl[functionName], \"name\", {\n        value: \"\".concat(functionName, \"-to-cache\"),\n        configurable: false\n    });\n}\nfunction installProgramSpy(gl) {\n    const originalUseProgram = gl.useProgram.bind(gl);\n    gl.useProgram = function useProgramLuma(handle) {\n        if (gl.state.program !== handle) {\n            originalUseProgram(handle);\n            gl.state.program = handle;\n        }\n    };\n}\nclass GLState {\n    constructor(gl){\n        let { copyState = false, log = ()=>{} } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.gl = gl;\n        this.program = null;\n        this.stateStack = [];\n        this.enable = true;\n        this.cache = copyState ? (0,_unified_parameter_api__WEBPACK_IMPORTED_MODULE_1__.getParameters)(gl) : Object.assign({}, _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_PARAMETER_DEFAULTS);\n        this.log = log;\n        this._updateCache = this._updateCache.bind(this);\n        Object.seal(this);\n    }\n    push() {\n        let values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.stateStack.push({});\n    }\n    pop() {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(this.stateStack.length > 0);\n        const oldValues = this.stateStack[this.stateStack.length - 1];\n        (0,_unified_parameter_api__WEBPACK_IMPORTED_MODULE_1__.setParameters)(this.gl, oldValues);\n        this.stateStack.pop();\n    }\n    _updateCache(values) {\n        let valueChanged = false;\n        let oldValue;\n        const oldValues = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];\n        for(const key in values){\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(key !== undefined);\n            const value = values[key];\n            const cached = this.cache[key];\n            if (!(0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.deepArrayEqual)(value, cached)) {\n                valueChanged = true;\n                oldValue = cached;\n                if (oldValues && !(key in oldValues)) {\n                    oldValues[key] = cached;\n                }\n                this.cache[key] = value;\n            }\n        }\n        return {\n            valueChanged,\n            oldValue\n        };\n    }\n}\nfunction trackContextState(gl) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const { enable = true, copyState } = options;\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(copyState !== undefined);\n    if (!gl.state) {\n        const { polyfillContext } = globalThis;\n        if (polyfillContext) {\n            polyfillContext(gl);\n        }\n        gl.state = new GLState(gl, {\n            copyState\n        });\n        installProgramSpy(gl);\n        for(const key in _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_HOOKED_SETTERS){\n            const setter = _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_HOOKED_SETTERS[key];\n            installSetterSpy(gl, key, setter);\n        }\n        installGetterOverride(gl, \"getParameter\");\n        installGetterOverride(gl, \"isEnabled\");\n    }\n    gl.state.enable = enable;\n    return gl;\n}\nfunction pushContextState(gl) {\n    if (!gl.state) {\n        trackContextState(gl, {\n            copyState: false\n        });\n    }\n    gl.state.push();\n}\nfunction popContextState(gl) {\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(gl.state);\n    gl.state.pop();\n} //# sourceMappingURL=track-context-state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS9zdGF0ZS10cmFja2VyL3RyYWNrLWNvbnRleHQtc3RhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFvRjtBQUNiO0FBQzlCO0FBQ087QUFFaEQsU0FBU00sc0JBQXNCQyxFQUFFLEVBQUVDLFlBQVk7SUFDN0MsTUFBTUMscUJBQXFCRixFQUFFLENBQUNDLGFBQWEsQ0FBQ0UsSUFBSSxDQUFDSDtJQUVqREEsRUFBRSxDQUFDQyxhQUFhLEdBQUcsU0FBU0c7UUFDMUIsTUFBTUMsUUFBUUMsVUFBVUMsTUFBTSxJQUFJLElBQUlDLFlBQVlGLFNBQVMsQ0FBQyxFQUFFO1FBRTlELElBQUksQ0FBRUQsQ0FBQUEsU0FBU0wsR0FBR1MsS0FBSyxDQUFDQyxLQUFLLEdBQUc7WUFDOUIsT0FBT1Isc0JBQXNCSTtRQUMvQjtRQUVBLE9BQU9OLEdBQUdTLEtBQUssQ0FBQ0UsTUFBTSxHQUFHWCxHQUFHUyxLQUFLLENBQUNDLEtBQUssQ0FBQ0wsTUFBTSxHQUFHSCxzQkFBc0JJO0lBQ3pFO0lBRUFNLE9BQU9DLGNBQWMsQ0FBQ2IsRUFBRSxDQUFDQyxhQUFhLEVBQUUsUUFBUTtRQUM5Q2EsT0FBTyxHQUFHQyxNQUFNLENBQUNkLGNBQWM7UUFDL0JlLGNBQWM7SUFDaEI7QUFDRjtBQUVBLFNBQVNDLGlCQUFpQmpCLEVBQUUsRUFBRUMsWUFBWSxFQUFFaUIsTUFBTTtJQUNoRCxNQUFNQyxxQkFBcUJuQixFQUFFLENBQUNDLGFBQWEsQ0FBQ0UsSUFBSSxDQUFDSDtJQUVqREEsRUFBRSxDQUFDQyxhQUFhLEdBQUcsU0FBU21CO1FBQzFCLElBQUssSUFBSUMsT0FBT2YsVUFBVUMsTUFBTSxFQUFFZSxTQUFTLElBQUlDLE1BQU1GLE9BQU9HLE9BQU8sR0FBR0EsT0FBT0gsTUFBTUcsT0FBUTtZQUN6RkYsTUFBTSxDQUFDRSxLQUFLLEdBQUdsQixTQUFTLENBQUNrQixLQUFLO1FBQ2hDO1FBRUEsTUFBTSxFQUNKQyxZQUFZLEVBQ1pDLFFBQVEsRUFDVCxHQUFHUixPQUFPbEIsR0FBR1MsS0FBSyxDQUFDa0IsWUFBWSxLQUFLTDtRQUVyQyxJQUFJRyxjQUFjO1lBQ2hCTixzQkFBc0JHO1FBQ3hCO1FBRUEsT0FBT0k7SUFDVDtJQUVBZCxPQUFPQyxjQUFjLENBQUNiLEVBQUUsQ0FBQ0MsYUFBYSxFQUFFLFFBQVE7UUFDOUNhLE9BQU8sR0FBR0MsTUFBTSxDQUFDZCxjQUFjO1FBQy9CZSxjQUFjO0lBQ2hCO0FBQ0Y7QUFFQSxTQUFTWSxrQkFBa0I1QixFQUFFO0lBQzNCLE1BQU02QixxQkFBcUI3QixHQUFHOEIsVUFBVSxDQUFDM0IsSUFBSSxDQUFDSDtJQUU5Q0EsR0FBRzhCLFVBQVUsR0FBRyxTQUFTQyxlQUFlQyxNQUFNO1FBQzVDLElBQUloQyxHQUFHUyxLQUFLLENBQUN3QixPQUFPLEtBQUtELFFBQVE7WUFDL0JILG1CQUFtQkc7WUFDbkJoQyxHQUFHUyxLQUFLLENBQUN3QixPQUFPLEdBQUdEO1FBQ3JCO0lBQ0Y7QUFDRjtBQUVBLE1BQU1FO0lBQ0pDLFlBQVluQyxFQUFFLENBQUU7UUFDZCxJQUFJLEVBQ0ZvQyxZQUFZLEtBQUssRUFDakJDLE1BQU0sS0FBTyxDQUFDLEVBQ2YsR0FBRy9CLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHLENBQUM7UUFDekUsSUFBSSxDQUFDTixFQUFFLEdBQUdBO1FBQ1YsSUFBSSxDQUFDaUMsT0FBTyxHQUFHO1FBQ2YsSUFBSSxDQUFDSyxVQUFVLEdBQUcsRUFBRTtRQUNwQixJQUFJLENBQUMzQixNQUFNLEdBQUc7UUFDZCxJQUFJLENBQUNELEtBQUssR0FBRzBCLFlBQVl4QyxxRUFBYUEsQ0FBQ0ksTUFBTVksT0FBTzJCLE1BQU0sQ0FBQyxDQUFDLEdBQUc5QywwRUFBcUJBO1FBQ3BGLElBQUksQ0FBQzRDLEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNWLFlBQVksR0FBRyxJQUFJLENBQUNBLFlBQVksQ0FBQ3hCLElBQUksQ0FBQyxJQUFJO1FBQy9DUyxPQUFPNEIsSUFBSSxDQUFDLElBQUk7SUFDbEI7SUFFQUMsT0FBTztRQUNMLElBQUlDLFNBQVNwQyxVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRyxDQUFDO1FBQ2xGLElBQUksQ0FBQ2dDLFVBQVUsQ0FBQ0csSUFBSSxDQUFDLENBQUM7SUFDeEI7SUFFQUUsTUFBTTtRQUNKOUMscURBQU1BLENBQUMsSUFBSSxDQUFDeUMsVUFBVSxDQUFDL0IsTUFBTSxHQUFHO1FBQ2hDLE1BQU1xQyxZQUFZLElBQUksQ0FBQ04sVUFBVSxDQUFDLElBQUksQ0FBQ0EsVUFBVSxDQUFDL0IsTUFBTSxHQUFHLEVBQUU7UUFDN0RaLHFFQUFhQSxDQUFDLElBQUksQ0FBQ0ssRUFBRSxFQUFFNEM7UUFDdkIsSUFBSSxDQUFDTixVQUFVLENBQUNLLEdBQUc7SUFDckI7SUFFQWhCLGFBQWFlLE1BQU0sRUFBRTtRQUNuQixJQUFJakIsZUFBZTtRQUNuQixJQUFJQztRQUNKLE1BQU1rQixZQUFZLElBQUksQ0FBQ04sVUFBVSxDQUFDL0IsTUFBTSxHQUFHLEtBQUssSUFBSSxDQUFDK0IsVUFBVSxDQUFDLElBQUksQ0FBQ0EsVUFBVSxDQUFDL0IsTUFBTSxHQUFHLEVBQUU7UUFFM0YsSUFBSyxNQUFNc0MsT0FBT0gsT0FBUTtZQUN4QjdDLHFEQUFNQSxDQUFDZ0QsUUFBUXJDO1lBQ2YsTUFBTU0sUUFBUTRCLE1BQU0sQ0FBQ0csSUFBSTtZQUN6QixNQUFNQyxTQUFTLElBQUksQ0FBQ3BDLEtBQUssQ0FBQ21DLElBQUk7WUFFOUIsSUFBSSxDQUFDL0MsNERBQWNBLENBQUNnQixPQUFPZ0MsU0FBUztnQkFDbENyQixlQUFlO2dCQUNmQyxXQUFXb0I7Z0JBRVgsSUFBSUYsYUFBYSxDQUFFQyxDQUFBQSxPQUFPRCxTQUFRLEdBQUk7b0JBQ3BDQSxTQUFTLENBQUNDLElBQUksR0FBR0M7Z0JBQ25CO2dCQUVBLElBQUksQ0FBQ3BDLEtBQUssQ0FBQ21DLElBQUksR0FBRy9CO1lBQ3BCO1FBQ0Y7UUFFQSxPQUFPO1lBQ0xXO1lBQ0FDO1FBQ0Y7SUFDRjtBQUVGO0FBRU8sU0FBU3FCLGtCQUFrQi9DLEVBQUU7SUFDbEMsSUFBSWdELFVBQVUxQyxVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRyxDQUFDO0lBQ25GLE1BQU0sRUFDSkssU0FBUyxJQUFJLEVBQ2J5QixTQUFTLEVBQ1YsR0FBR1k7SUFDSm5ELHFEQUFNQSxDQUFDdUMsY0FBYzVCO0lBRXJCLElBQUksQ0FBQ1IsR0FBR1MsS0FBSyxFQUFFO1FBQ2IsTUFBTSxFQUNKd0MsZUFBZSxFQUNoQixHQUFHQztRQUVKLElBQUlELGlCQUFpQjtZQUNuQkEsZ0JBQWdCakQ7UUFDbEI7UUFFQUEsR0FBR1MsS0FBSyxHQUFHLElBQUl5QixRQUFRbEMsSUFBSTtZQUN6Qm9DO1FBQ0Y7UUFDQVIsa0JBQWtCNUI7UUFFbEIsSUFBSyxNQUFNNkMsT0FBT25ELHNFQUFpQkEsQ0FBRTtZQUNuQyxNQUFNd0IsU0FBU3hCLHNFQUFpQixDQUFDbUQsSUFBSTtZQUNyQzVCLGlCQUFpQmpCLElBQUk2QyxLQUFLM0I7UUFDNUI7UUFFQW5CLHNCQUFzQkMsSUFBSTtRQUMxQkQsc0JBQXNCQyxJQUFJO0lBQzVCO0lBRUFBLEdBQUdTLEtBQUssQ0FBQ0UsTUFBTSxHQUFHQTtJQUNsQixPQUFPWDtBQUNUO0FBQ08sU0FBU21ELGlCQUFpQm5ELEVBQUU7SUFDakMsSUFBSSxDQUFDQSxHQUFHUyxLQUFLLEVBQUU7UUFDYnNDLGtCQUFrQi9DLElBQUk7WUFDcEJvQyxXQUFXO1FBQ2I7SUFDRjtJQUVBcEMsR0FBR1MsS0FBSyxDQUFDZ0MsSUFBSTtBQUNmO0FBQ08sU0FBU1csZ0JBQWdCcEQsRUFBRTtJQUNoQ0gscURBQU1BLENBQUNHLEdBQUdTLEtBQUs7SUFDZlQsR0FBR1MsS0FBSyxDQUFDa0MsR0FBRztBQUNkLEVBQ0EsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS9zdGF0ZS10cmFja2VyL3RyYWNrLWNvbnRleHQtc3RhdGUuanM/MGQwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTF9QQVJBTUVURVJfREVGQVVMVFMsIEdMX0hPT0tFRF9TRVRURVJTIH0gZnJvbSAnLi93ZWJnbC1wYXJhbWV0ZXItdGFibGVzJztcbmltcG9ydCB7IHNldFBhcmFtZXRlcnMsIGdldFBhcmFtZXRlcnMgfSBmcm9tICcuL3VuaWZpZWQtcGFyYW1ldGVyLWFwaSc7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tICcuLi91dGlscy9hc3NlcnQnO1xuaW1wb3J0IHsgZGVlcEFycmF5RXF1YWwgfSBmcm9tICcuLi91dGlscy91dGlscyc7XG5cbmZ1bmN0aW9uIGluc3RhbGxHZXR0ZXJPdmVycmlkZShnbCwgZnVuY3Rpb25OYW1lKSB7XG4gIGNvbnN0IG9yaWdpbmFsR2V0dGVyRnVuYyA9IGdsW2Z1bmN0aW9uTmFtZV0uYmluZChnbCk7XG5cbiAgZ2xbZnVuY3Rpb25OYW1lXSA9IGZ1bmN0aW9uIGdldCgpIHtcbiAgICBjb25zdCBwbmFtZSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1swXTtcblxuICAgIGlmICghKHBuYW1lIGluIGdsLnN0YXRlLmNhY2hlKSkge1xuICAgICAgcmV0dXJuIG9yaWdpbmFsR2V0dGVyRnVuYyguLi5hcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiBnbC5zdGF0ZS5lbmFibGUgPyBnbC5zdGF0ZS5jYWNoZVtwbmFtZV0gOiBvcmlnaW5hbEdldHRlckZ1bmMoLi4uYXJndW1lbnRzKTtcbiAgfTtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZ2xbZnVuY3Rpb25OYW1lXSwgJ25hbWUnLCB7XG4gICAgdmFsdWU6IFwiXCIuY29uY2F0KGZ1bmN0aW9uTmFtZSwgXCItZnJvbS1jYWNoZVwiKSxcbiAgICBjb25maWd1cmFibGU6IGZhbHNlXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbnN0YWxsU2V0dGVyU3B5KGdsLCBmdW5jdGlvbk5hbWUsIHNldHRlcikge1xuICBjb25zdCBvcmlnaW5hbFNldHRlckZ1bmMgPSBnbFtmdW5jdGlvbk5hbWVdLmJpbmQoZ2wpO1xuXG4gIGdsW2Z1bmN0aW9uTmFtZV0gPSBmdW5jdGlvbiBzZXQoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHBhcmFtcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIHBhcmFtc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBjb25zdCB7XG4gICAgICB2YWx1ZUNoYW5nZWQsXG4gICAgICBvbGRWYWx1ZVxuICAgIH0gPSBzZXR0ZXIoZ2wuc3RhdGUuX3VwZGF0ZUNhY2hlLCAuLi5wYXJhbXMpO1xuXG4gICAgaWYgKHZhbHVlQ2hhbmdlZCkge1xuICAgICAgb3JpZ2luYWxTZXR0ZXJGdW5jKC4uLnBhcmFtcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9sZFZhbHVlO1xuICB9O1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnbFtmdW5jdGlvbk5hbWVdLCAnbmFtZScsIHtcbiAgICB2YWx1ZTogXCJcIi5jb25jYXQoZnVuY3Rpb25OYW1lLCBcIi10by1jYWNoZVwiKSxcbiAgICBjb25maWd1cmFibGU6IGZhbHNlXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbnN0YWxsUHJvZ3JhbVNweShnbCkge1xuICBjb25zdCBvcmlnaW5hbFVzZVByb2dyYW0gPSBnbC51c2VQcm9ncmFtLmJpbmQoZ2wpO1xuXG4gIGdsLnVzZVByb2dyYW0gPSBmdW5jdGlvbiB1c2VQcm9ncmFtTHVtYShoYW5kbGUpIHtcbiAgICBpZiAoZ2wuc3RhdGUucHJvZ3JhbSAhPT0gaGFuZGxlKSB7XG4gICAgICBvcmlnaW5hbFVzZVByb2dyYW0oaGFuZGxlKTtcbiAgICAgIGdsLnN0YXRlLnByb2dyYW0gPSBoYW5kbGU7XG4gICAgfVxuICB9O1xufVxuXG5jbGFzcyBHTFN0YXRlIHtcbiAgY29uc3RydWN0b3IoZ2wpIHtcbiAgICBsZXQge1xuICAgICAgY29weVN0YXRlID0gZmFsc2UsXG4gICAgICBsb2cgPSAoKSA9PiB7fVxuICAgIH0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLnByb2dyYW0gPSBudWxsO1xuICAgIHRoaXMuc3RhdGVTdGFjayA9IFtdO1xuICAgIHRoaXMuZW5hYmxlID0gdHJ1ZTtcbiAgICB0aGlzLmNhY2hlID0gY29weVN0YXRlID8gZ2V0UGFyYW1ldGVycyhnbCkgOiBPYmplY3QuYXNzaWduKHt9LCBHTF9QQVJBTUVURVJfREVGQVVMVFMpO1xuICAgIHRoaXMubG9nID0gbG9nO1xuICAgIHRoaXMuX3VwZGF0ZUNhY2hlID0gdGhpcy5fdXBkYXRlQ2FjaGUuYmluZCh0aGlzKTtcbiAgICBPYmplY3Quc2VhbCh0aGlzKTtcbiAgfVxuXG4gIHB1c2goKSB7XG4gICAgbGV0IHZhbHVlcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgdGhpcy5zdGF0ZVN0YWNrLnB1c2goe30pO1xuICB9XG5cbiAgcG9wKCkge1xuICAgIGFzc2VydCh0aGlzLnN0YXRlU3RhY2subGVuZ3RoID4gMCk7XG4gICAgY29uc3Qgb2xkVmFsdWVzID0gdGhpcy5zdGF0ZVN0YWNrW3RoaXMuc3RhdGVTdGFjay5sZW5ndGggLSAxXTtcbiAgICBzZXRQYXJhbWV0ZXJzKHRoaXMuZ2wsIG9sZFZhbHVlcyk7XG4gICAgdGhpcy5zdGF0ZVN0YWNrLnBvcCgpO1xuICB9XG5cbiAgX3VwZGF0ZUNhY2hlKHZhbHVlcykge1xuICAgIGxldCB2YWx1ZUNoYW5nZWQgPSBmYWxzZTtcbiAgICBsZXQgb2xkVmFsdWU7XG4gICAgY29uc3Qgb2xkVmFsdWVzID0gdGhpcy5zdGF0ZVN0YWNrLmxlbmd0aCA+IDAgJiYgdGhpcy5zdGF0ZVN0YWNrW3RoaXMuc3RhdGVTdGFjay5sZW5ndGggLSAxXTtcblxuICAgIGZvciAoY29uc3Qga2V5IGluIHZhbHVlcykge1xuICAgICAgYXNzZXJ0KGtleSAhPT0gdW5kZWZpbmVkKTtcbiAgICAgIGNvbnN0IHZhbHVlID0gdmFsdWVzW2tleV07XG4gICAgICBjb25zdCBjYWNoZWQgPSB0aGlzLmNhY2hlW2tleV07XG5cbiAgICAgIGlmICghZGVlcEFycmF5RXF1YWwodmFsdWUsIGNhY2hlZCkpIHtcbiAgICAgICAgdmFsdWVDaGFuZ2VkID0gdHJ1ZTtcbiAgICAgICAgb2xkVmFsdWUgPSBjYWNoZWQ7XG5cbiAgICAgICAgaWYgKG9sZFZhbHVlcyAmJiAhKGtleSBpbiBvbGRWYWx1ZXMpKSB7XG4gICAgICAgICAgb2xkVmFsdWVzW2tleV0gPSBjYWNoZWQ7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNhY2hlW2tleV0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWVDaGFuZ2VkLFxuICAgICAgb2xkVmFsdWVcbiAgICB9O1xuICB9XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRyYWNrQ29udGV4dFN0YXRlKGdsKSB7XG4gIGxldCBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgY29uc3Qge1xuICAgIGVuYWJsZSA9IHRydWUsXG4gICAgY29weVN0YXRlXG4gIH0gPSBvcHRpb25zO1xuICBhc3NlcnQoY29weVN0YXRlICE9PSB1bmRlZmluZWQpO1xuXG4gIGlmICghZ2wuc3RhdGUpIHtcbiAgICBjb25zdCB7XG4gICAgICBwb2x5ZmlsbENvbnRleHRcbiAgICB9ID0gZ2xvYmFsVGhpcztcblxuICAgIGlmIChwb2x5ZmlsbENvbnRleHQpIHtcbiAgICAgIHBvbHlmaWxsQ29udGV4dChnbCk7XG4gICAgfVxuXG4gICAgZ2wuc3RhdGUgPSBuZXcgR0xTdGF0ZShnbCwge1xuICAgICAgY29weVN0YXRlXG4gICAgfSk7XG4gICAgaW5zdGFsbFByb2dyYW1TcHkoZ2wpO1xuXG4gICAgZm9yIChjb25zdCBrZXkgaW4gR0xfSE9PS0VEX1NFVFRFUlMpIHtcbiAgICAgIGNvbnN0IHNldHRlciA9IEdMX0hPT0tFRF9TRVRURVJTW2tleV07XG4gICAgICBpbnN0YWxsU2V0dGVyU3B5KGdsLCBrZXksIHNldHRlcik7XG4gICAgfVxuXG4gICAgaW5zdGFsbEdldHRlck92ZXJyaWRlKGdsLCAnZ2V0UGFyYW1ldGVyJyk7XG4gICAgaW5zdGFsbEdldHRlck92ZXJyaWRlKGdsLCAnaXNFbmFibGVkJyk7XG4gIH1cblxuICBnbC5zdGF0ZS5lbmFibGUgPSBlbmFibGU7XG4gIHJldHVybiBnbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwdXNoQ29udGV4dFN0YXRlKGdsKSB7XG4gIGlmICghZ2wuc3RhdGUpIHtcbiAgICB0cmFja0NvbnRleHRTdGF0ZShnbCwge1xuICAgICAgY29weVN0YXRlOiBmYWxzZVxuICAgIH0pO1xuICB9XG5cbiAgZ2wuc3RhdGUucHVzaCgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBvcENvbnRleHRTdGF0ZShnbCkge1xuICBhc3NlcnQoZ2wuc3RhdGUpO1xuICBnbC5zdGF0ZS5wb3AoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNrLWNvbnRleHQtc3RhdGUuanMubWFwIl0sIm5hbWVzIjpbIkdMX1BBUkFNRVRFUl9ERUZBVUxUUyIsIkdMX0hPT0tFRF9TRVRURVJTIiwic2V0UGFyYW1ldGVycyIsImdldFBhcmFtZXRlcnMiLCJhc3NlcnQiLCJkZWVwQXJyYXlFcXVhbCIsImluc3RhbGxHZXR0ZXJPdmVycmlkZSIsImdsIiwiZnVuY3Rpb25OYW1lIiwib3JpZ2luYWxHZXR0ZXJGdW5jIiwiYmluZCIsImdldCIsInBuYW1lIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwic3RhdGUiLCJjYWNoZSIsImVuYWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjb25jYXQiLCJjb25maWd1cmFibGUiLCJpbnN0YWxsU2V0dGVyU3B5Iiwic2V0dGVyIiwib3JpZ2luYWxTZXR0ZXJGdW5jIiwic2V0IiwiX2xlbiIsInBhcmFtcyIsIkFycmF5IiwiX2tleSIsInZhbHVlQ2hhbmdlZCIsIm9sZFZhbHVlIiwiX3VwZGF0ZUNhY2hlIiwiaW5zdGFsbFByb2dyYW1TcHkiLCJvcmlnaW5hbFVzZVByb2dyYW0iLCJ1c2VQcm9ncmFtIiwidXNlUHJvZ3JhbUx1bWEiLCJoYW5kbGUiLCJwcm9ncmFtIiwiR0xTdGF0ZSIsImNvbnN0cnVjdG9yIiwiY29weVN0YXRlIiwibG9nIiwic3RhdGVTdGFjayIsImFzc2lnbiIsInNlYWwiLCJwdXNoIiwidmFsdWVzIiwicG9wIiwib2xkVmFsdWVzIiwia2V5IiwiY2FjaGVkIiwidHJhY2tDb250ZXh0U3RhdGUiLCJvcHRpb25zIiwicG9seWZpbGxDb250ZXh0IiwiZ2xvYmFsVGhpcyIsInB1c2hDb250ZXh0U3RhdGUiLCJwb3BDb250ZXh0U3RhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/track-context-state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/unified-parameter-api.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/state-tracker/unified-parameter-api.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getParameters: () => (/* binding */ getParameters),\n/* harmony export */   resetParameters: () => (/* binding */ resetParameters),\n/* harmony export */   setParameters: () => (/* binding */ setParameters),\n/* harmony export */   withParameters: () => (/* binding */ withParameters)\n/* harmony export */ });\n/* harmony import */ var _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webgl-parameter-tables */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/webgl-parameter-tables.js\");\n/* harmony import */ var _track_context_state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./track-context-state */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/track-context-state.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/webgl-checks */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/utils */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/utils.js\");\n\n\n\n\n\nfunction setParameters(gl, values) {\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_3__.isWebGL)(gl), \"setParameters requires a WebGL context\");\n    if ((0,_utils_utils__WEBPACK_IMPORTED_MODULE_4__.isObjectEmpty)(values)) {\n        return;\n    }\n    const compositeSetters = {};\n    for(const key in values){\n        const glConstant = Number(key);\n        const setter = _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_PARAMETER_SETTERS[key];\n        if (setter) {\n            if (typeof setter === \"string\") {\n                compositeSetters[setter] = true;\n            } else {\n                setter(gl, values[key], glConstant);\n            }\n        }\n    }\n    const cache = gl.state && gl.state.cache;\n    if (cache) {\n        for(const key in compositeSetters){\n            const compositeSetter = _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_COMPOSITE_PARAMETER_SETTERS[key];\n            compositeSetter(gl, values, cache);\n        }\n    }\n}\nfunction getParameters(gl, parameters) {\n    parameters = parameters || _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_PARAMETER_DEFAULTS;\n    if (typeof parameters === \"number\") {\n        const key = parameters;\n        const getter = _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_PARAMETER_GETTERS[key];\n        return getter ? getter(gl, key) : gl.getParameter(key);\n    }\n    const parameterKeys = Array.isArray(parameters) ? parameters : Object.keys(parameters);\n    const state = {};\n    for (const key of parameterKeys){\n        const getter = _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_PARAMETER_GETTERS[key];\n        state[key] = getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n    }\n    return state;\n}\nfunction resetParameters(gl) {\n    setParameters(gl, _webgl_parameter_tables__WEBPACK_IMPORTED_MODULE_0__.GL_PARAMETER_DEFAULTS);\n}\nfunction withParameters(gl, parameters, func) {\n    if ((0,_utils_utils__WEBPACK_IMPORTED_MODULE_4__.isObjectEmpty)(parameters)) {\n        return func(gl);\n    }\n    const { nocatch = true } = parameters;\n    (0,_track_context_state__WEBPACK_IMPORTED_MODULE_1__.pushContextState)(gl);\n    setParameters(gl, parameters);\n    let value;\n    if (nocatch) {\n        value = func(gl);\n        (0,_track_context_state__WEBPACK_IMPORTED_MODULE_1__.popContextState)(gl);\n    } else {\n        try {\n            value = func(gl);\n        } finally{\n            (0,_track_context_state__WEBPACK_IMPORTED_MODULE_1__.popContextState)(gl);\n        }\n    }\n    return value;\n} //# sourceMappingURL=unified-parameter-api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS9zdGF0ZS10cmFja2VyL3VuaWZpZWQtcGFyYW1ldGVyLWFwaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkk7QUFDbkU7QUFDakM7QUFDTztBQUNEO0FBQ3hDLFNBQVNTLGNBQWNDLEVBQUUsRUFBRUMsTUFBTTtJQUN0Q0wscURBQU1BLENBQUNDLDREQUFPQSxDQUFDRyxLQUFLO0lBRXBCLElBQUlGLDJEQUFhQSxDQUFDRyxTQUFTO1FBQ3pCO0lBQ0Y7SUFFQSxNQUFNQyxtQkFBbUIsQ0FBQztJQUUxQixJQUFLLE1BQU1DLE9BQU9GLE9BQVE7UUFDeEIsTUFBTUcsYUFBYUMsT0FBT0Y7UUFDMUIsTUFBTUcsU0FBU2YseUVBQW9CLENBQUNZLElBQUk7UUFFeEMsSUFBSUcsUUFBUTtZQUNWLElBQUksT0FBT0EsV0FBVyxVQUFVO2dCQUM5QkosZ0JBQWdCLENBQUNJLE9BQU8sR0FBRztZQUM3QixPQUFPO2dCQUNMQSxPQUFPTixJQUFJQyxNQUFNLENBQUNFLElBQUksRUFBRUM7WUFDMUI7UUFDRjtJQUNGO0lBRUEsTUFBTUcsUUFBUVAsR0FBR1EsS0FBSyxJQUFJUixHQUFHUSxLQUFLLENBQUNELEtBQUs7SUFFeEMsSUFBSUEsT0FBTztRQUNULElBQUssTUFBTUosT0FBT0QsaUJBQWtCO1lBQ2xDLE1BQU1PLGtCQUFrQmpCLG1GQUE4QixDQUFDVyxJQUFJO1lBQzNETSxnQkFBZ0JULElBQUlDLFFBQVFNO1FBQzlCO0lBQ0Y7QUFDRjtBQUNPLFNBQVNHLGNBQWNWLEVBQUUsRUFBRVcsVUFBVTtJQUMxQ0EsYUFBYUEsY0FBY3JCLDBFQUFxQkE7SUFFaEQsSUFBSSxPQUFPcUIsZUFBZSxVQUFVO1FBQ2xDLE1BQU1SLE1BQU1RO1FBQ1osTUFBTUMsU0FBU25CLHlFQUFvQixDQUFDVSxJQUFJO1FBQ3hDLE9BQU9TLFNBQVNBLE9BQU9aLElBQUlHLE9BQU9ILEdBQUdhLFlBQVksQ0FBQ1Y7SUFDcEQ7SUFFQSxNQUFNVyxnQkFBZ0JDLE1BQU1DLE9BQU8sQ0FBQ0wsY0FBY0EsYUFBYU0sT0FBT0MsSUFBSSxDQUFDUDtJQUMzRSxNQUFNSCxRQUFRLENBQUM7SUFFZixLQUFLLE1BQU1MLE9BQU9XLGNBQWU7UUFDL0IsTUFBTUYsU0FBU25CLHlFQUFvQixDQUFDVSxJQUFJO1FBQ3hDSyxLQUFLLENBQUNMLElBQUksR0FBR1MsU0FBU0EsT0FBT1osSUFBSUssT0FBT0YsUUFBUUgsR0FBR2EsWUFBWSxDQUFDUixPQUFPRjtJQUN6RTtJQUVBLE9BQU9LO0FBQ1Q7QUFDTyxTQUFTVyxnQkFBZ0JuQixFQUFFO0lBQ2hDRCxjQUFjQyxJQUFJViwwRUFBcUJBO0FBQ3pDO0FBQ08sU0FBUzhCLGVBQWVwQixFQUFFLEVBQUVXLFVBQVUsRUFBRVUsSUFBSTtJQUNqRCxJQUFJdkIsMkRBQWFBLENBQUNhLGFBQWE7UUFDN0IsT0FBT1UsS0FBS3JCO0lBQ2Q7SUFFQSxNQUFNLEVBQ0pzQixVQUFVLElBQUksRUFDZixHQUFHWDtJQUNKakIsc0VBQWdCQSxDQUFDTTtJQUNqQkQsY0FBY0MsSUFBSVc7SUFDbEIsSUFBSVk7SUFFSixJQUFJRCxTQUFTO1FBQ1hDLFFBQVFGLEtBQUtyQjtRQUNiTCxxRUFBZUEsQ0FBQ0s7SUFDbEIsT0FBTztRQUNMLElBQUk7WUFDRnVCLFFBQVFGLEtBQUtyQjtRQUNmLFNBQVU7WUFDUkwscUVBQWVBLENBQUNLO1FBQ2xCO0lBQ0Y7SUFFQSxPQUFPdUI7QUFDVCxFQUNBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL2dsdG9vbHMvZGlzdC9lc20vc3RhdGUtdHJhY2tlci91bmlmaWVkLXBhcmFtZXRlci1hcGkuanM/Y2Q0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTF9QQVJBTUVURVJfREVGQVVMVFMsIEdMX1BBUkFNRVRFUl9TRVRURVJTLCBHTF9DT01QT1NJVEVfUEFSQU1FVEVSX1NFVFRFUlMsIEdMX1BBUkFNRVRFUl9HRVRURVJTIH0gZnJvbSAnLi93ZWJnbC1wYXJhbWV0ZXItdGFibGVzJztcbmltcG9ydCB7IHB1c2hDb250ZXh0U3RhdGUsIHBvcENvbnRleHRTdGF0ZSB9IGZyb20gJy4vdHJhY2stY29udGV4dC1zdGF0ZSc7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tICcuLi91dGlscy9hc3NlcnQnO1xuaW1wb3J0IHsgaXNXZWJHTCB9IGZyb20gJy4uL3V0aWxzL3dlYmdsLWNoZWNrcyc7XG5pbXBvcnQgeyBpc09iamVjdEVtcHR5IH0gZnJvbSAnLi4vdXRpbHMvdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHNldFBhcmFtZXRlcnMoZ2wsIHZhbHVlcykge1xuICBhc3NlcnQoaXNXZWJHTChnbCksICdzZXRQYXJhbWV0ZXJzIHJlcXVpcmVzIGEgV2ViR0wgY29udGV4dCcpO1xuXG4gIGlmIChpc09iamVjdEVtcHR5KHZhbHVlcykpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBjb21wb3NpdGVTZXR0ZXJzID0ge307XG5cbiAgZm9yIChjb25zdCBrZXkgaW4gdmFsdWVzKSB7XG4gICAgY29uc3QgZ2xDb25zdGFudCA9IE51bWJlcihrZXkpO1xuICAgIGNvbnN0IHNldHRlciA9IEdMX1BBUkFNRVRFUl9TRVRURVJTW2tleV07XG5cbiAgICBpZiAoc2V0dGVyKSB7XG4gICAgICBpZiAodHlwZW9mIHNldHRlciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29tcG9zaXRlU2V0dGVyc1tzZXR0ZXJdID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldHRlcihnbCwgdmFsdWVzW2tleV0sIGdsQ29uc3RhbnQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGNhY2hlID0gZ2wuc3RhdGUgJiYgZ2wuc3RhdGUuY2FjaGU7XG5cbiAgaWYgKGNhY2hlKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gY29tcG9zaXRlU2V0dGVycykge1xuICAgICAgY29uc3QgY29tcG9zaXRlU2V0dGVyID0gR0xfQ09NUE9TSVRFX1BBUkFNRVRFUl9TRVRURVJTW2tleV07XG4gICAgICBjb21wb3NpdGVTZXR0ZXIoZ2wsIHZhbHVlcywgY2FjaGUpO1xuICAgIH1cbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFBhcmFtZXRlcnMoZ2wsIHBhcmFtZXRlcnMpIHtcbiAgcGFyYW1ldGVycyA9IHBhcmFtZXRlcnMgfHwgR0xfUEFSQU1FVEVSX0RFRkFVTFRTO1xuXG4gIGlmICh0eXBlb2YgcGFyYW1ldGVycyA9PT0gJ251bWJlcicpIHtcbiAgICBjb25zdCBrZXkgPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGdldHRlciA9IEdMX1BBUkFNRVRFUl9HRVRURVJTW2tleV07XG4gICAgcmV0dXJuIGdldHRlciA/IGdldHRlcihnbCwga2V5KSA6IGdsLmdldFBhcmFtZXRlcihrZXkpO1xuICB9XG5cbiAgY29uc3QgcGFyYW1ldGVyS2V5cyA9IEFycmF5LmlzQXJyYXkocGFyYW1ldGVycykgPyBwYXJhbWV0ZXJzIDogT2JqZWN0LmtleXMocGFyYW1ldGVycyk7XG4gIGNvbnN0IHN0YXRlID0ge307XG5cbiAgZm9yIChjb25zdCBrZXkgb2YgcGFyYW1ldGVyS2V5cykge1xuICAgIGNvbnN0IGdldHRlciA9IEdMX1BBUkFNRVRFUl9HRVRURVJTW2tleV07XG4gICAgc3RhdGVba2V5XSA9IGdldHRlciA/IGdldHRlcihnbCwgTnVtYmVyKGtleSkpIDogZ2wuZ2V0UGFyYW1ldGVyKE51bWJlcihrZXkpKTtcbiAgfVxuXG4gIHJldHVybiBzdGF0ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNldFBhcmFtZXRlcnMoZ2wpIHtcbiAgc2V0UGFyYW1ldGVycyhnbCwgR0xfUEFSQU1FVEVSX0RFRkFVTFRTKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aXRoUGFyYW1ldGVycyhnbCwgcGFyYW1ldGVycywgZnVuYykge1xuICBpZiAoaXNPYmplY3RFbXB0eShwYXJhbWV0ZXJzKSkge1xuICAgIHJldHVybiBmdW5jKGdsKTtcbiAgfVxuXG4gIGNvbnN0IHtcbiAgICBub2NhdGNoID0gdHJ1ZVxuICB9ID0gcGFyYW1ldGVycztcbiAgcHVzaENvbnRleHRTdGF0ZShnbCk7XG4gIHNldFBhcmFtZXRlcnMoZ2wsIHBhcmFtZXRlcnMpO1xuICBsZXQgdmFsdWU7XG5cbiAgaWYgKG5vY2F0Y2gpIHtcbiAgICB2YWx1ZSA9IGZ1bmMoZ2wpO1xuICAgIHBvcENvbnRleHRTdGF0ZShnbCk7XG4gIH0gZWxzZSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhbHVlID0gZnVuYyhnbCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHBvcENvbnRleHRTdGF0ZShnbCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHZhbHVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5pZmllZC1wYXJhbWV0ZXItYXBpLmpzLm1hcCJdLCJuYW1lcyI6WyJHTF9QQVJBTUVURVJfREVGQVVMVFMiLCJHTF9QQVJBTUVURVJfU0VUVEVSUyIsIkdMX0NPTVBPU0lURV9QQVJBTUVURVJfU0VUVEVSUyIsIkdMX1BBUkFNRVRFUl9HRVRURVJTIiwicHVzaENvbnRleHRTdGF0ZSIsInBvcENvbnRleHRTdGF0ZSIsImFzc2VydCIsImlzV2ViR0wiLCJpc09iamVjdEVtcHR5Iiwic2V0UGFyYW1ldGVycyIsImdsIiwidmFsdWVzIiwiY29tcG9zaXRlU2V0dGVycyIsImtleSIsImdsQ29uc3RhbnQiLCJOdW1iZXIiLCJzZXR0ZXIiLCJjYWNoZSIsInN0YXRlIiwiY29tcG9zaXRlU2V0dGVyIiwiZ2V0UGFyYW1ldGVycyIsInBhcmFtZXRlcnMiLCJnZXR0ZXIiLCJnZXRQYXJhbWV0ZXIiLCJwYXJhbWV0ZXJLZXlzIiwiQXJyYXkiLCJpc0FycmF5IiwiT2JqZWN0Iiwia2V5cyIsInJlc2V0UGFyYW1ldGVycyIsIndpdGhQYXJhbWV0ZXJzIiwiZnVuYyIsIm5vY2F0Y2giLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/unified-parameter-api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/webgl-parameter-tables.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/state-tracker/webgl-parameter-tables.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GL_COMPOSITE_PARAMETER_SETTERS: () => (/* binding */ GL_COMPOSITE_PARAMETER_SETTERS),\n/* harmony export */   GL_HOOKED_SETTERS: () => (/* binding */ GL_HOOKED_SETTERS),\n/* harmony export */   GL_PARAMETER_DEFAULTS: () => (/* binding */ GL_PARAMETER_DEFAULTS),\n/* harmony export */   GL_PARAMETER_GETTERS: () => (/* binding */ GL_PARAMETER_GETTERS),\n/* harmony export */   GL_PARAMETER_SETTERS: () => (/* binding */ GL_PARAMETER_SETTERS)\n/* harmony export */ });\n/* harmony import */ var _utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/webgl-checks */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js\");\n\nconst GL_PARAMETER_DEFAULTS = {\n    [3042]: false,\n    [32773]: new Float32Array([\n        0,\n        0,\n        0,\n        0\n    ]),\n    [32777]: 32774,\n    [34877]: 32774,\n    [32969]: 1,\n    [32968]: 0,\n    [32971]: 1,\n    [32970]: 0,\n    [3106]: new Float32Array([\n        0,\n        0,\n        0,\n        0\n    ]),\n    [3107]: [\n        true,\n        true,\n        true,\n        true\n    ],\n    [2884]: false,\n    [2885]: 1029,\n    [2929]: false,\n    [2931]: 1,\n    [2932]: 513,\n    [2928]: new Float32Array([\n        0,\n        1\n    ]),\n    [2930]: true,\n    [3024]: true,\n    [36006]: null,\n    [2886]: 2305,\n    [33170]: 4352,\n    [2849]: 1,\n    [32823]: false,\n    [32824]: 0,\n    [10752]: 0,\n    [32938]: 1.0,\n    [32939]: false,\n    [3089]: false,\n    [3088]: new Int32Array([\n        0,\n        0,\n        1024,\n        1024\n    ]),\n    [2960]: false,\n    [2961]: 0,\n    [2968]: 0xffffffff,\n    [36005]: 0xffffffff,\n    [2962]: 519,\n    [2967]: 0,\n    [2963]: 0xffffffff,\n    [34816]: 519,\n    [36003]: 0,\n    [36004]: 0xffffffff,\n    [2964]: 7680,\n    [2965]: 7680,\n    [2966]: 7680,\n    [34817]: 7680,\n    [34818]: 7680,\n    [34819]: 7680,\n    [2978]: [\n        0,\n        0,\n        1024,\n        1024\n    ],\n    [3333]: 4,\n    [3317]: 4,\n    [37440]: false,\n    [37441]: false,\n    [37443]: 37444,\n    [35723]: 4352,\n    [36010]: null,\n    [35977]: false,\n    [3330]: 0,\n    [3332]: 0,\n    [3331]: 0,\n    [3314]: 0,\n    [32878]: 0,\n    [3316]: 0,\n    [3315]: 0,\n    [32877]: 0\n};\nconst enable = (gl, value, key)=>value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl, value, key)=>gl.hint(key, value);\nconst pixelStorei = (gl, value, key)=>gl.pixelStorei(key, value);\nconst drawFramebuffer = (gl, value)=>{\n    const target = (0,_utils_webgl_checks__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) ? 36009 : 36160;\n    return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value)=>{\n    return gl.bindFramebuffer(36008, value);\n};\nfunction isArray(array) {\n    return Array.isArray(array) || ArrayBuffer.isView(array);\n}\nconst GL_PARAMETER_SETTERS = {\n    [3042]: enable,\n    [32773]: (gl, value)=>gl.blendColor(...value),\n    [32777]: \"blendEquation\",\n    [34877]: \"blendEquation\",\n    [32969]: \"blendFunc\",\n    [32968]: \"blendFunc\",\n    [32971]: \"blendFunc\",\n    [32970]: \"blendFunc\",\n    [3106]: (gl, value)=>gl.clearColor(...value),\n    [3107]: (gl, value)=>gl.colorMask(...value),\n    [2884]: enable,\n    [2885]: (gl, value)=>gl.cullFace(value),\n    [2929]: enable,\n    [2931]: (gl, value)=>gl.clearDepth(value),\n    [2932]: (gl, value)=>gl.depthFunc(value),\n    [2928]: (gl, value)=>gl.depthRange(...value),\n    [2930]: (gl, value)=>gl.depthMask(value),\n    [3024]: enable,\n    [35723]: hint,\n    [36006]: drawFramebuffer,\n    [2886]: (gl, value)=>gl.frontFace(value),\n    [33170]: hint,\n    [2849]: (gl, value)=>gl.lineWidth(value),\n    [32823]: enable,\n    [32824]: \"polygonOffset\",\n    [10752]: \"polygonOffset\",\n    [35977]: enable,\n    [32938]: \"sampleCoverage\",\n    [32939]: \"sampleCoverage\",\n    [3089]: enable,\n    [3088]: (gl, value)=>gl.scissor(...value),\n    [2960]: enable,\n    [2961]: (gl, value)=>gl.clearStencil(value),\n    [2968]: (gl, value)=>gl.stencilMaskSeparate(1028, value),\n    [36005]: (gl, value)=>gl.stencilMaskSeparate(1029, value),\n    [2962]: \"stencilFuncFront\",\n    [2967]: \"stencilFuncFront\",\n    [2963]: \"stencilFuncFront\",\n    [34816]: \"stencilFuncBack\",\n    [36003]: \"stencilFuncBack\",\n    [36004]: \"stencilFuncBack\",\n    [2964]: \"stencilOpFront\",\n    [2965]: \"stencilOpFront\",\n    [2966]: \"stencilOpFront\",\n    [34817]: \"stencilOpBack\",\n    [34818]: \"stencilOpBack\",\n    [34819]: \"stencilOpBack\",\n    [2978]: (gl, value)=>gl.viewport(...value),\n    [3333]: pixelStorei,\n    [3317]: pixelStorei,\n    [37440]: pixelStorei,\n    [37441]: pixelStorei,\n    [37443]: pixelStorei,\n    [3330]: pixelStorei,\n    [3332]: pixelStorei,\n    [3331]: pixelStorei,\n    [36010]: readFramebuffer,\n    [3314]: pixelStorei,\n    [32878]: pixelStorei,\n    [3316]: pixelStorei,\n    [3315]: pixelStorei,\n    [32877]: pixelStorei,\n    framebuffer: (gl, framebuffer)=>{\n        const handle = framebuffer && \"handle\" in framebuffer ? framebuffer.handle : framebuffer;\n        return gl.bindFramebuffer(36160, handle);\n    },\n    blend: (gl, value)=>value ? gl.enable(3042) : gl.disable(3042),\n    blendColor: (gl, value)=>gl.blendColor(...value),\n    blendEquation: (gl, args)=>{\n        args = isArray(args) ? args : [\n            args,\n            args\n        ];\n        gl.blendEquationSeparate(...args);\n    },\n    blendFunc: (gl, args)=>{\n        args = isArray(args) && args.length === 2 ? [\n            ...args,\n            ...args\n        ] : args;\n        gl.blendFuncSeparate(...args);\n    },\n    clearColor: (gl, value)=>gl.clearColor(...value),\n    clearDepth: (gl, value)=>gl.clearDepth(value),\n    clearStencil: (gl, value)=>gl.clearStencil(value),\n    colorMask: (gl, value)=>gl.colorMask(...value),\n    cull: (gl, value)=>value ? gl.enable(2884) : gl.disable(2884),\n    cullFace: (gl, value)=>gl.cullFace(value),\n    depthTest: (gl, value)=>value ? gl.enable(2929) : gl.disable(2929),\n    depthFunc: (gl, value)=>gl.depthFunc(value),\n    depthMask: (gl, value)=>gl.depthMask(value),\n    depthRange: (gl, value)=>gl.depthRange(...value),\n    dither: (gl, value)=>value ? gl.enable(3024) : gl.disable(3024),\n    derivativeHint: (gl, value)=>{\n        gl.hint(35723, value);\n    },\n    frontFace: (gl, value)=>gl.frontFace(value),\n    mipmapHint: (gl, value)=>gl.hint(33170, value),\n    lineWidth: (gl, value)=>gl.lineWidth(value),\n    polygonOffsetFill: (gl, value)=>value ? gl.enable(32823) : gl.disable(32823),\n    polygonOffset: (gl, value)=>gl.polygonOffset(...value),\n    sampleCoverage: (gl, value)=>gl.sampleCoverage(...value),\n    scissorTest: (gl, value)=>value ? gl.enable(3089) : gl.disable(3089),\n    scissor: (gl, value)=>gl.scissor(...value),\n    stencilTest: (gl, value)=>value ? gl.enable(2960) : gl.disable(2960),\n    stencilMask: (gl, value)=>{\n        value = isArray(value) ? value : [\n            value,\n            value\n        ];\n        const [mask, backMask] = value;\n        gl.stencilMaskSeparate(1028, mask);\n        gl.stencilMaskSeparate(1029, backMask);\n    },\n    stencilFunc: (gl, args)=>{\n        args = isArray(args) && args.length === 3 ? [\n            ...args,\n            ...args\n        ] : args;\n        const [func, ref, mask, backFunc, backRef, backMask] = args;\n        gl.stencilFuncSeparate(1028, func, ref, mask);\n        gl.stencilFuncSeparate(1029, backFunc, backRef, backMask);\n    },\n    stencilOp: (gl, args)=>{\n        args = isArray(args) && args.length === 3 ? [\n            ...args,\n            ...args\n        ] : args;\n        const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n        gl.stencilOpSeparate(1028, sfail, dpfail, dppass);\n        gl.stencilOpSeparate(1029, backSfail, backDpfail, backDppass);\n    },\n    viewport: (gl, value)=>gl.viewport(...value)\n};\nfunction getValue(glEnum, values, cache) {\n    return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\nconst GL_COMPOSITE_PARAMETER_SETTERS = {\n    blendEquation: (gl, values, cache)=>gl.blendEquationSeparate(getValue(32777, values, cache), getValue(34877, values, cache)),\n    blendFunc: (gl, values, cache)=>gl.blendFuncSeparate(getValue(32969, values, cache), getValue(32968, values, cache), getValue(32971, values, cache), getValue(32970, values, cache)),\n    polygonOffset: (gl, values, cache)=>gl.polygonOffset(getValue(32824, values, cache), getValue(10752, values, cache)),\n    sampleCoverage: (gl, values, cache)=>gl.sampleCoverage(getValue(32938, values, cache), getValue(32939, values, cache)),\n    stencilFuncFront: (gl, values, cache)=>gl.stencilFuncSeparate(1028, getValue(2962, values, cache), getValue(2967, values, cache), getValue(2963, values, cache)),\n    stencilFuncBack: (gl, values, cache)=>gl.stencilFuncSeparate(1029, getValue(34816, values, cache), getValue(36003, values, cache), getValue(36004, values, cache)),\n    stencilOpFront: (gl, values, cache)=>gl.stencilOpSeparate(1028, getValue(2964, values, cache), getValue(2965, values, cache), getValue(2966, values, cache)),\n    stencilOpBack: (gl, values, cache)=>gl.stencilOpSeparate(1029, getValue(34817, values, cache), getValue(34818, values, cache), getValue(34819, values, cache))\n};\nconst GL_HOOKED_SETTERS = {\n    enable: (update, capability)=>update({\n            [capability]: true\n        }),\n    disable: (update, capability)=>update({\n            [capability]: false\n        }),\n    pixelStorei: (update, pname, value)=>update({\n            [pname]: value\n        }),\n    hint: (update, pname, hint)=>update({\n            [pname]: hint\n        }),\n    bindFramebuffer: (update, target, framebuffer)=>{\n        switch(target){\n            case 36160:\n                return update({\n                    [36006]: framebuffer,\n                    [36010]: framebuffer\n                });\n            case 36009:\n                return update({\n                    [36006]: framebuffer\n                });\n            case 36008:\n                return update({\n                    [36010]: framebuffer\n                });\n            default:\n                return null;\n        }\n    },\n    blendColor: (update, r, g, b, a)=>update({\n            [32773]: new Float32Array([\n                r,\n                g,\n                b,\n                a\n            ])\n        }),\n    blendEquation: (update, mode)=>update({\n            [32777]: mode,\n            [34877]: mode\n        }),\n    blendEquationSeparate: (update, modeRGB, modeAlpha)=>update({\n            [32777]: modeRGB,\n            [34877]: modeAlpha\n        }),\n    blendFunc: (update, src, dst)=>update({\n            [32969]: src,\n            [32968]: dst,\n            [32971]: src,\n            [32970]: dst\n        }),\n    blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha)=>update({\n            [32969]: srcRGB,\n            [32968]: dstRGB,\n            [32971]: srcAlpha,\n            [32970]: dstAlpha\n        }),\n    clearColor: (update, r, g, b, a)=>update({\n            [3106]: new Float32Array([\n                r,\n                g,\n                b,\n                a\n            ])\n        }),\n    clearDepth: (update, depth)=>update({\n            [2931]: depth\n        }),\n    clearStencil: (update, s)=>update({\n            [2961]: s\n        }),\n    colorMask: (update, r, g, b, a)=>update({\n            [3107]: [\n                r,\n                g,\n                b,\n                a\n            ]\n        }),\n    cullFace: (update, mode)=>update({\n            [2885]: mode\n        }),\n    depthFunc: (update, func)=>update({\n            [2932]: func\n        }),\n    depthRange: (update, zNear, zFar)=>update({\n            [2928]: new Float32Array([\n                zNear,\n                zFar\n            ])\n        }),\n    depthMask: (update, mask)=>update({\n            [2930]: mask\n        }),\n    frontFace: (update, face)=>update({\n            [2886]: face\n        }),\n    lineWidth: (update, width)=>update({\n            [2849]: width\n        }),\n    polygonOffset: (update, factor, units)=>update({\n            [32824]: factor,\n            [10752]: units\n        }),\n    sampleCoverage: (update, value, invert)=>update({\n            [32938]: value,\n            [32939]: invert\n        }),\n    scissor: (update, x, y, width, height)=>update({\n            [3088]: new Int32Array([\n                x,\n                y,\n                width,\n                height\n            ])\n        }),\n    stencilMask: (update, mask)=>update({\n            [2968]: mask,\n            [36005]: mask\n        }),\n    stencilMaskSeparate: (update, face, mask)=>update({\n            [face === 1028 ? 2968 : 36005]: mask\n        }),\n    stencilFunc: (update, func, ref, mask)=>update({\n            [2962]: func,\n            [2967]: ref,\n            [2963]: mask,\n            [34816]: func,\n            [36003]: ref,\n            [36004]: mask\n        }),\n    stencilFuncSeparate: (update, face, func, ref, mask)=>update({\n            [face === 1028 ? 2962 : 34816]: func,\n            [face === 1028 ? 2967 : 36003]: ref,\n            [face === 1028 ? 2963 : 36004]: mask\n        }),\n    stencilOp: (update, fail, zfail, zpass)=>update({\n            [2964]: fail,\n            [2965]: zfail,\n            [2966]: zpass,\n            [34817]: fail,\n            [34818]: zfail,\n            [34819]: zpass\n        }),\n    stencilOpSeparate: (update, face, fail, zfail, zpass)=>update({\n            [face === 1028 ? 2964 : 34817]: fail,\n            [face === 1028 ? 2965 : 34818]: zfail,\n            [face === 1028 ? 2966 : 34819]: zpass\n        }),\n    viewport: (update, x, y, width, height)=>update({\n            [2978]: [\n                x,\n                y,\n                width,\n                height\n            ]\n        })\n};\nconst isEnabled = (gl, key)=>gl.isEnabled(key);\nconst GL_PARAMETER_GETTERS = {\n    [3042]: isEnabled,\n    [2884]: isEnabled,\n    [2929]: isEnabled,\n    [3024]: isEnabled,\n    [32823]: isEnabled,\n    [32926]: isEnabled,\n    [32928]: isEnabled,\n    [3089]: isEnabled,\n    [2960]: isEnabled,\n    [35977]: isEnabled\n}; //# sourceMappingURL=webgl-parameter-tables.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/state-tracker/webgl-parameter-tables.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js":
/*!****************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: () => (/* binding */ assert)\n/* harmony export */ });\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || \"luma.gl: assertion failed.\");\n    }\n} //# sourceMappingURL=assert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS91dGlscy9hc3NlcnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLE9BQU9DLFNBQVMsRUFBRUMsT0FBTztJQUN2QyxJQUFJLENBQUNELFdBQVc7UUFDZCxNQUFNLElBQUlFLE1BQU1ELFdBQVc7SUFDN0I7QUFDRixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL2dsdG9vbHMvZGlzdC9lc20vdXRpbHMvYXNzZXJ0LmpzPzY1YzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFzc2VydChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSB8fCAnbHVtYS5nbDogYXNzZXJ0aW9uIGZhaWxlZC4nKTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXNzZXJ0LmpzLm1hcCJdLCJuYW1lcyI6WyJhc3NlcnQiLCJjb25kaXRpb24iLCJtZXNzYWdlIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/device-pixels.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/utils/device-pixels.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cssToDevicePixels: () => (/* binding */ cssToDevicePixels),\n/* harmony export */   cssToDeviceRatio: () => (/* binding */ cssToDeviceRatio),\n/* harmony export */   getDevicePixelRatio: () => (/* binding */ getDevicePixelRatio)\n/* harmony export */ });\nfunction cssToDeviceRatio(gl) {\n    const { luma } = gl;\n    if (gl.canvas && luma) {\n        const cachedSize = luma.canvasSizeInfo;\n        const clientWidth = \"clientWidth\" in cachedSize ? cachedSize.clientWidth : gl.canvas.clientWidth;\n        return clientWidth ? gl.drawingBufferWidth / clientWidth : 1;\n    }\n    return 1;\n}\nfunction cssToDevicePixels(gl, cssPixel) {\n    let yInvert = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const ratio = cssToDeviceRatio(gl);\n    const width = gl.drawingBufferWidth;\n    const height = gl.drawingBufferHeight;\n    return scalePixels(cssPixel, ratio, width, height, yInvert);\n}\nfunction getDevicePixelRatio(useDevicePixels) {\n    const windowRatio =  true ? 1 : 0;\n    if (Number.isFinite(useDevicePixels)) {\n        return useDevicePixels <= 0 ? 1 : useDevicePixels;\n    }\n    return useDevicePixels ? windowRatio : 1;\n}\nfunction scalePixels(pixel, ratio, width, height, yInvert) {\n    const x = scaleX(pixel[0], ratio, width);\n    let y = scaleY(pixel[1], ratio, height, yInvert);\n    let t = scaleX(pixel[0] + 1, ratio, width);\n    const xHigh = t === width - 1 ? t : t - 1;\n    t = scaleY(pixel[1] + 1, ratio, height, yInvert);\n    let yHigh;\n    if (yInvert) {\n        t = t === 0 ? t : t + 1;\n        yHigh = y;\n        y = t;\n    } else {\n        yHigh = t === height - 1 ? t : t - 1;\n    }\n    return {\n        x,\n        y,\n        width: Math.max(xHigh - x + 1, 1),\n        height: Math.max(yHigh - y + 1, 1)\n    };\n}\nfunction scaleX(x, ratio, width) {\n    const r = Math.min(Math.round(x * ratio), width - 1);\n    return r;\n}\nfunction scaleY(y, ratio, height, yInvert) {\n    return yInvert ? Math.max(0, height - 1 - Math.round(y * ratio)) : Math.min(Math.round(y * ratio), height - 1);\n} //# sourceMappingURL=device-pixels.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS91dGlscy9kZXZpY2UtcGl4ZWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLGlCQUFpQkMsRUFBRTtJQUNqQyxNQUFNLEVBQ0pDLElBQUksRUFDTCxHQUFHRDtJQUVKLElBQUlBLEdBQUdFLE1BQU0sSUFBSUQsTUFBTTtRQUNyQixNQUFNRSxhQUFhRixLQUFLRyxjQUFjO1FBQ3RDLE1BQU1DLGNBQWMsaUJBQWlCRixhQUFhQSxXQUFXRSxXQUFXLEdBQUdMLEdBQUdFLE1BQU0sQ0FBQ0csV0FBVztRQUNoRyxPQUFPQSxjQUFjTCxHQUFHTSxrQkFBa0IsR0FBR0QsY0FBYztJQUM3RDtJQUVBLE9BQU87QUFDVDtBQUNPLFNBQVNFLGtCQUFrQlAsRUFBRSxFQUFFUSxRQUFRO0lBQzVDLElBQUlDLFVBQVVDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHO0lBQ2xGLE1BQU1HLFFBQVFkLGlCQUFpQkM7SUFDL0IsTUFBTWMsUUFBUWQsR0FBR00sa0JBQWtCO0lBQ25DLE1BQU1TLFNBQVNmLEdBQUdnQixtQkFBbUI7SUFDckMsT0FBT0MsWUFBWVQsVUFBVUssT0FBT0MsT0FBT0MsUUFBUU47QUFDckQ7QUFDTyxTQUFTUyxvQkFBb0JDLGVBQWU7SUFDakQsTUFBTUMsY0FBYyxLQUFrQixHQUFjLElBQUlDLENBQTRCO0lBRXBGLElBQUlFLE9BQU9DLFFBQVEsQ0FBQ0wsa0JBQWtCO1FBQ3BDLE9BQU9BLG1CQUFtQixJQUFJLElBQUlBO0lBQ3BDO0lBRUEsT0FBT0Esa0JBQWtCQyxjQUFjO0FBQ3pDO0FBRUEsU0FBU0gsWUFBWVEsS0FBSyxFQUFFWixLQUFLLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFTixPQUFPO0lBQ3ZELE1BQU1pQixJQUFJQyxPQUFPRixLQUFLLENBQUMsRUFBRSxFQUFFWixPQUFPQztJQUNsQyxJQUFJYyxJQUFJQyxPQUFPSixLQUFLLENBQUMsRUFBRSxFQUFFWixPQUFPRSxRQUFRTjtJQUN4QyxJQUFJcUIsSUFBSUgsT0FBT0YsS0FBSyxDQUFDLEVBQUUsR0FBRyxHQUFHWixPQUFPQztJQUNwQyxNQUFNaUIsUUFBUUQsTUFBTWhCLFFBQVEsSUFBSWdCLElBQUlBLElBQUk7SUFDeENBLElBQUlELE9BQU9KLEtBQUssQ0FBQyxFQUFFLEdBQUcsR0FBR1osT0FBT0UsUUFBUU47SUFDeEMsSUFBSXVCO0lBRUosSUFBSXZCLFNBQVM7UUFDWHFCLElBQUlBLE1BQU0sSUFBSUEsSUFBSUEsSUFBSTtRQUN0QkUsUUFBUUo7UUFDUkEsSUFBSUU7SUFDTixPQUFPO1FBQ0xFLFFBQVFGLE1BQU1mLFNBQVMsSUFBSWUsSUFBSUEsSUFBSTtJQUNyQztJQUVBLE9BQU87UUFDTEo7UUFDQUU7UUFDQWQsT0FBT21CLEtBQUtDLEdBQUcsQ0FBQ0gsUUFBUUwsSUFBSSxHQUFHO1FBQy9CWCxRQUFRa0IsS0FBS0MsR0FBRyxDQUFDRixRQUFRSixJQUFJLEdBQUc7SUFDbEM7QUFDRjtBQUVBLFNBQVNELE9BQU9ELENBQUMsRUFBRWIsS0FBSyxFQUFFQyxLQUFLO0lBQzdCLE1BQU1xQixJQUFJRixLQUFLRyxHQUFHLENBQUNILEtBQUtJLEtBQUssQ0FBQ1gsSUFBSWIsUUFBUUMsUUFBUTtJQUNsRCxPQUFPcUI7QUFDVDtBQUVBLFNBQVNOLE9BQU9ELENBQUMsRUFBRWYsS0FBSyxFQUFFRSxNQUFNLEVBQUVOLE9BQU87SUFDdkMsT0FBT0EsVUFBVXdCLEtBQUtDLEdBQUcsQ0FBQyxHQUFHbkIsU0FBUyxJQUFJa0IsS0FBS0ksS0FBSyxDQUFDVCxJQUFJZixVQUFVb0IsS0FBS0csR0FBRyxDQUFDSCxLQUFLSSxLQUFLLENBQUNULElBQUlmLFFBQVFFLFNBQVM7QUFDOUcsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9nbHRvb2xzL2Rpc3QvZXNtL3V0aWxzL2RldmljZS1waXhlbHMuanM/ODhlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY3NzVG9EZXZpY2VSYXRpbyhnbCkge1xuICBjb25zdCB7XG4gICAgbHVtYVxuICB9ID0gZ2w7XG5cbiAgaWYgKGdsLmNhbnZhcyAmJiBsdW1hKSB7XG4gICAgY29uc3QgY2FjaGVkU2l6ZSA9IGx1bWEuY2FudmFzU2l6ZUluZm87XG4gICAgY29uc3QgY2xpZW50V2lkdGggPSAnY2xpZW50V2lkdGgnIGluIGNhY2hlZFNpemUgPyBjYWNoZWRTaXplLmNsaWVudFdpZHRoIDogZ2wuY2FudmFzLmNsaWVudFdpZHRoO1xuICAgIHJldHVybiBjbGllbnRXaWR0aCA/IGdsLmRyYXdpbmdCdWZmZXJXaWR0aCAvIGNsaWVudFdpZHRoIDogMTtcbiAgfVxuXG4gIHJldHVybiAxO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNzc1RvRGV2aWNlUGl4ZWxzKGdsLCBjc3NQaXhlbCkge1xuICBsZXQgeUludmVydCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogdHJ1ZTtcbiAgY29uc3QgcmF0aW8gPSBjc3NUb0RldmljZVJhdGlvKGdsKTtcbiAgY29uc3Qgd2lkdGggPSBnbC5kcmF3aW5nQnVmZmVyV2lkdGg7XG4gIGNvbnN0IGhlaWdodCA9IGdsLmRyYXdpbmdCdWZmZXJIZWlnaHQ7XG4gIHJldHVybiBzY2FsZVBpeGVscyhjc3NQaXhlbCwgcmF0aW8sIHdpZHRoLCBoZWlnaHQsIHlJbnZlcnQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERldmljZVBpeGVsUmF0aW8odXNlRGV2aWNlUGl4ZWxzKSB7XG4gIGNvbnN0IHdpbmRvd1JhdGlvID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyAxIDogd2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMTtcblxuICBpZiAoTnVtYmVyLmlzRmluaXRlKHVzZURldmljZVBpeGVscykpIHtcbiAgICByZXR1cm4gdXNlRGV2aWNlUGl4ZWxzIDw9IDAgPyAxIDogdXNlRGV2aWNlUGl4ZWxzO1xuICB9XG5cbiAgcmV0dXJuIHVzZURldmljZVBpeGVscyA/IHdpbmRvd1JhdGlvIDogMTtcbn1cblxuZnVuY3Rpb24gc2NhbGVQaXhlbHMocGl4ZWwsIHJhdGlvLCB3aWR0aCwgaGVpZ2h0LCB5SW52ZXJ0KSB7XG4gIGNvbnN0IHggPSBzY2FsZVgocGl4ZWxbMF0sIHJhdGlvLCB3aWR0aCk7XG4gIGxldCB5ID0gc2NhbGVZKHBpeGVsWzFdLCByYXRpbywgaGVpZ2h0LCB5SW52ZXJ0KTtcbiAgbGV0IHQgPSBzY2FsZVgocGl4ZWxbMF0gKyAxLCByYXRpbywgd2lkdGgpO1xuICBjb25zdCB4SGlnaCA9IHQgPT09IHdpZHRoIC0gMSA/IHQgOiB0IC0gMTtcbiAgdCA9IHNjYWxlWShwaXhlbFsxXSArIDEsIHJhdGlvLCBoZWlnaHQsIHlJbnZlcnQpO1xuICBsZXQgeUhpZ2g7XG5cbiAgaWYgKHlJbnZlcnQpIHtcbiAgICB0ID0gdCA9PT0gMCA/IHQgOiB0ICsgMTtcbiAgICB5SGlnaCA9IHk7XG4gICAgeSA9IHQ7XG4gIH0gZWxzZSB7XG4gICAgeUhpZ2ggPSB0ID09PSBoZWlnaHQgLSAxID8gdCA6IHQgLSAxO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGg6IE1hdGgubWF4KHhIaWdoIC0geCArIDEsIDEpLFxuICAgIGhlaWdodDogTWF0aC5tYXgoeUhpZ2ggLSB5ICsgMSwgMSlcbiAgfTtcbn1cblxuZnVuY3Rpb24gc2NhbGVYKHgsIHJhdGlvLCB3aWR0aCkge1xuICBjb25zdCByID0gTWF0aC5taW4oTWF0aC5yb3VuZCh4ICogcmF0aW8pLCB3aWR0aCAtIDEpO1xuICByZXR1cm4gcjtcbn1cblxuZnVuY3Rpb24gc2NhbGVZKHksIHJhdGlvLCBoZWlnaHQsIHlJbnZlcnQpIHtcbiAgcmV0dXJuIHlJbnZlcnQgPyBNYXRoLm1heCgwLCBoZWlnaHQgLSAxIC0gTWF0aC5yb3VuZCh5ICogcmF0aW8pKSA6IE1hdGgubWluKE1hdGgucm91bmQoeSAqIHJhdGlvKSwgaGVpZ2h0IC0gMSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXZpY2UtcGl4ZWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJjc3NUb0RldmljZVJhdGlvIiwiZ2wiLCJsdW1hIiwiY2FudmFzIiwiY2FjaGVkU2l6ZSIsImNhbnZhc1NpemVJbmZvIiwiY2xpZW50V2lkdGgiLCJkcmF3aW5nQnVmZmVyV2lkdGgiLCJjc3NUb0RldmljZVBpeGVscyIsImNzc1BpeGVsIiwieUludmVydCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInJhdGlvIiwid2lkdGgiLCJoZWlnaHQiLCJkcmF3aW5nQnVmZmVySGVpZ2h0Iiwic2NhbGVQaXhlbHMiLCJnZXREZXZpY2VQaXhlbFJhdGlvIiwidXNlRGV2aWNlUGl4ZWxzIiwid2luZG93UmF0aW8iLCJ3aW5kb3ciLCJkZXZpY2VQaXhlbFJhdGlvIiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJwaXhlbCIsIngiLCJzY2FsZVgiLCJ5Iiwic2NhbGVZIiwidCIsInhIaWdoIiwieUhpZ2giLCJNYXRoIiwibWF4IiwiciIsIm1pbiIsInJvdW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/device-pixels.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/log.js":
/*!*************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/utils/log.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log)\n/* harmony export */ });\n/* harmony import */ var _probe_gl_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @probe.gl/log */ \"(ssr)/./node_modules/@probe.gl/log/dist/esm/log.js\");\n\nconst log = new _probe_gl_log__WEBPACK_IMPORTED_MODULE_0__.Log({\n    id: \"luma.gl\"\n}); //# sourceMappingURL=log.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS91dGlscy9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDN0IsTUFBTUMsTUFBTSxJQUFJRCw4Q0FBR0EsQ0FBQztJQUN6QkUsSUFBSTtBQUNOLEdBQUcsQ0FDSCwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9nbHRvb2xzL2Rpc3QvZXNtL3V0aWxzL2xvZy5qcz85NzA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvZyB9IGZyb20gJ0Bwcm9iZS5nbC9sb2cnO1xuZXhwb3J0IGNvbnN0IGxvZyA9IG5ldyBMb2coe1xuICBpZDogJ2x1bWEuZ2wnXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5qcy5tYXAiXSwibmFtZXMiOlsiTG9nIiwibG9nIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/utils.js":
/*!***************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/utils/utils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepArrayEqual: () => (/* binding */ deepArrayEqual),\n/* harmony export */   isObjectEmpty: () => (/* binding */ isObjectEmpty)\n/* harmony export */ });\nfunction isObjectEmpty(object) {\n    for(const key in object){\n        return false;\n    }\n    return true;\n}\nfunction deepArrayEqual(x, y) {\n    if (x === y) {\n        return true;\n    }\n    const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n    const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n    if (isArrayX && isArrayY && x.length === y.length) {\n        for(let i = 0; i < x.length; ++i){\n            if (x[i] !== y[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS91dGlscy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLFNBQVNBLGNBQWNDLE1BQU07SUFDbEMsSUFBSyxNQUFNQyxPQUFPRCxPQUFRO1FBQ3hCLE9BQU87SUFDVDtJQUVBLE9BQU87QUFDVDtBQUNPLFNBQVNFLGVBQWVDLENBQUMsRUFBRUMsQ0FBQztJQUNqQyxJQUFJRCxNQUFNQyxHQUFHO1FBQ1gsT0FBTztJQUNUO0lBRUEsTUFBTUMsV0FBV0MsTUFBTUMsT0FBTyxDQUFDSixNQUFNSyxZQUFZQyxNQUFNLENBQUNOO0lBQ3hELE1BQU1PLFdBQVdKLE1BQU1DLE9BQU8sQ0FBQ0gsTUFBTUksWUFBWUMsTUFBTSxDQUFDTDtJQUV4RCxJQUFJQyxZQUFZSyxZQUFZUCxFQUFFUSxNQUFNLEtBQUtQLEVBQUVPLE1BQU0sRUFBRTtRQUNqRCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVQsRUFBRVEsTUFBTSxFQUFFLEVBQUVDLEVBQUc7WUFDakMsSUFBSVQsQ0FBQyxDQUFDUyxFQUFFLEtBQUtSLENBQUMsQ0FBQ1EsRUFBRSxFQUFFO2dCQUNqQixPQUFPO1lBQ1Q7UUFDRjtRQUVBLE9BQU87SUFDVDtJQUVBLE9BQU87QUFDVCxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL2dsdG9vbHMvZGlzdC9lc20vdXRpbHMvdXRpbHMuanM/ODlhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNPYmplY3RFbXB0eShvYmplY3QpIHtcbiAgZm9yIChjb25zdCBrZXkgaW4gb2JqZWN0KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVlcEFycmF5RXF1YWwoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgY29uc3QgaXNBcnJheVggPSBBcnJheS5pc0FycmF5KHgpIHx8IEFycmF5QnVmZmVyLmlzVmlldyh4KTtcbiAgY29uc3QgaXNBcnJheVkgPSBBcnJheS5pc0FycmF5KHkpIHx8IEFycmF5QnVmZmVyLmlzVmlldyh5KTtcblxuICBpZiAoaXNBcnJheVggJiYgaXNBcnJheVkgJiYgeC5sZW5ndGggPT09IHkubGVuZ3RoKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB4Lmxlbmd0aDsgKytpKSB7XG4gICAgICBpZiAoeFtpXSAhPT0geVtpXSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiaXNPYmplY3RFbXB0eSIsIm9iamVjdCIsImtleSIsImRlZXBBcnJheUVxdWFsIiwieCIsInkiLCJpc0FycmF5WCIsIkFycmF5IiwiaXNBcnJheSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiaXNBcnJheVkiLCJsZW5ndGgiLCJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERR_WEBGL: () => (/* binding */ ERR_WEBGL),\n/* harmony export */   ERR_WEBGL2: () => (/* binding */ ERR_WEBGL2),\n/* harmony export */   assertWebGL2Context: () => (/* binding */ assertWebGL2Context),\n/* harmony export */   assertWebGLContext: () => (/* binding */ assertWebGLContext),\n/* harmony export */   getWebGL2Context: () => (/* binding */ getWebGL2Context),\n/* harmony export */   isWebGL: () => (/* binding */ isWebGL),\n/* harmony export */   isWebGL2: () => (/* binding */ isWebGL2)\n/* harmony export */ });\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/assert.js\");\n\nconst ERR_CONTEXT = \"Invalid WebGLRenderingContext\";\nconst ERR_WEBGL = ERR_CONTEXT;\nconst ERR_WEBGL2 = \"Requires WebGL2\";\nfunction isWebGL(gl) {\n    if (typeof WebGLRenderingContext !== \"undefined\" && gl instanceof WebGLRenderingContext) {\n        return true;\n    }\n    if (typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext) {\n        return true;\n    }\n    return Boolean(gl && Number.isFinite(gl._version));\n}\nfunction isWebGL2(gl) {\n    if (typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext) {\n        return true;\n    }\n    return Boolean(gl && gl._version === 2);\n}\nfunction getWebGL2Context(gl) {\n    return isWebGL2(gl) ? gl : null;\n}\nfunction assertWebGLContext(gl) {\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(isWebGL(gl), ERR_CONTEXT);\n    return gl;\n}\nfunction assertWebGL2Context(gl) {\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(isWebGL2(gl), ERR_WEBGL2);\n    return gl;\n} //# sourceMappingURL=webgl-checks.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvZ2x0b29scy9kaXN0L2VzbS91dGlscy93ZWJnbC1jaGVja3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBa0M7QUFDbEMsTUFBTUMsY0FBYztBQUNiLE1BQU1DLFlBQVlELFlBQVk7QUFDOUIsTUFBTUUsYUFBYSxrQkFBa0I7QUFDckMsU0FBU0MsUUFBUUMsRUFBRTtJQUN4QixJQUFJLE9BQU9DLDBCQUEwQixlQUFlRCxjQUFjQyx1QkFBdUI7UUFDdkYsT0FBTztJQUNUO0lBRUEsSUFBSSxPQUFPQywyQkFBMkIsZUFBZUYsY0FBY0Usd0JBQXdCO1FBQ3pGLE9BQU87SUFDVDtJQUVBLE9BQU9DLFFBQVFILE1BQU1JLE9BQU9DLFFBQVEsQ0FBQ0wsR0FBR00sUUFBUTtBQUNsRDtBQUNPLFNBQVNDLFNBQVNQLEVBQUU7SUFDekIsSUFBSSxPQUFPRSwyQkFBMkIsZUFBZUYsY0FBY0Usd0JBQXdCO1FBQ3pGLE9BQU87SUFDVDtJQUVBLE9BQU9DLFFBQVFILE1BQU1BLEdBQUdNLFFBQVEsS0FBSztBQUN2QztBQUNPLFNBQVNFLGlCQUFpQlIsRUFBRTtJQUNqQyxPQUFPTyxTQUFTUCxNQUFNQSxLQUFLO0FBQzdCO0FBQ08sU0FBU1MsbUJBQW1CVCxFQUFFO0lBQ25DTCwrQ0FBTUEsQ0FBQ0ksUUFBUUMsS0FBS0o7SUFDcEIsT0FBT0k7QUFDVDtBQUNPLFNBQVNVLG9CQUFvQlYsRUFBRTtJQUNwQ0wsK0NBQU1BLENBQUNZLFNBQVNQLEtBQUtGO0lBQ3JCLE9BQU9FO0FBQ1QsRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9nbHRvb2xzL2Rpc3QvZXNtL3V0aWxzL3dlYmdsLWNoZWNrcy5qcz8yMWRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydCB9IGZyb20gJy4vYXNzZXJ0JztcbmNvbnN0IEVSUl9DT05URVhUID0gJ0ludmFsaWQgV2ViR0xSZW5kZXJpbmdDb250ZXh0JztcbmV4cG9ydCBjb25zdCBFUlJfV0VCR0wgPSBFUlJfQ09OVEVYVDtcbmV4cG9ydCBjb25zdCBFUlJfV0VCR0wyID0gJ1JlcXVpcmVzIFdlYkdMMic7XG5leHBvcnQgZnVuY3Rpb24gaXNXZWJHTChnbCkge1xuICBpZiAodHlwZW9mIFdlYkdMUmVuZGVyaW5nQ29udGV4dCAhPT0gJ3VuZGVmaW5lZCcgJiYgZ2wgaW5zdGFuY2VvZiBXZWJHTFJlbmRlcmluZ0NvbnRleHQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgV2ViR0wyUmVuZGVyaW5nQ29udGV4dCAhPT0gJ3VuZGVmaW5lZCcgJiYgZ2wgaW5zdGFuY2VvZiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0KSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gQm9vbGVhbihnbCAmJiBOdW1iZXIuaXNGaW5pdGUoZ2wuX3ZlcnNpb24pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1dlYkdMMihnbCkge1xuICBpZiAodHlwZW9mIFdlYkdMMlJlbmRlcmluZ0NvbnRleHQgIT09ICd1bmRlZmluZWQnICYmIGdsIGluc3RhbmNlb2YgV2ViR0wyUmVuZGVyaW5nQ29udGV4dCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIEJvb2xlYW4oZ2wgJiYgZ2wuX3ZlcnNpb24gPT09IDIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFdlYkdMMkNvbnRleHQoZ2wpIHtcbiAgcmV0dXJuIGlzV2ViR0wyKGdsKSA/IGdsIDogbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRXZWJHTENvbnRleHQoZ2wpIHtcbiAgYXNzZXJ0KGlzV2ViR0woZ2wpLCBFUlJfQ09OVEVYVCk7XG4gIHJldHVybiBnbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRXZWJHTDJDb250ZXh0KGdsKSB7XG4gIGFzc2VydChpc1dlYkdMMihnbCksIEVSUl9XRUJHTDIpO1xuICByZXR1cm4gZ2w7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJnbC1jaGVja3MuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsIkVSUl9DT05URVhUIiwiRVJSX1dFQkdMIiwiRVJSX1dFQkdMMiIsImlzV2ViR0wiLCJnbCIsIldlYkdMUmVuZGVyaW5nQ29udGV4dCIsIldlYkdMMlJlbmRlcmluZ0NvbnRleHQiLCJCb29sZWFuIiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJfdmVyc2lvbiIsImlzV2ViR0wyIiwiZ2V0V2ViR0wyQ29udGV4dCIsImFzc2VydFdlYkdMQ29udGV4dCIsImFzc2VydFdlYkdMMkNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/gltools/dist/esm/utils/webgl-checks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/assemble-shaders.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/lib/assemble-shaders.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assembleShaders: () => (/* binding */ assembleShaders)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/constants.js\");\n/* harmony import */ var _resolve_modules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resolve-modules */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/resolve-modules.js\");\n/* harmony import */ var _platform_defines__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./platform-defines */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/platform-defines.js\");\n/* harmony import */ var _inject_shader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inject-shader */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/inject-shader.js\");\n/* harmony import */ var _transpile_shader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./transpile-shader */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/transpile-shader.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js\");\n\n\n\n\n\n\nconst INJECT_SHADER_DECLARATIONS = \"\\n\\n\".concat(_inject_shader__WEBPACK_IMPORTED_MODULE_0__.DECLARATION_INJECT_MARKER, \"\\n\\n\");\nconst SHADER_TYPE = {\n    [_constants__WEBPACK_IMPORTED_MODULE_1__.VERTEX_SHADER]: \"vertex\",\n    [_constants__WEBPACK_IMPORTED_MODULE_1__.FRAGMENT_SHADER]: \"fragment\"\n};\nconst FRAGMENT_SHADER_PROLOGUE = \"precision highp float;\\n\\n\";\nfunction assembleShaders(gl, opts) {\n    const { vs, fs } = opts;\n    const modules = (0,_resolve_modules__WEBPACK_IMPORTED_MODULE_2__.resolveModules)(opts.modules || []);\n    return {\n        gl,\n        vs: assembleShader(gl, Object.assign({}, opts, {\n            source: vs,\n            type: _constants__WEBPACK_IMPORTED_MODULE_1__.VERTEX_SHADER,\n            modules\n        })),\n        fs: assembleShader(gl, Object.assign({}, opts, {\n            source: fs,\n            type: _constants__WEBPACK_IMPORTED_MODULE_1__.FRAGMENT_SHADER,\n            modules\n        })),\n        getUniforms: assembleGetUniforms(modules)\n    };\n}\nfunction assembleShader(gl, _ref) {\n    let { id, source, type, modules, defines = {}, hookFunctions = [], inject = {}, transpileToGLSL100 = false, prologue = true, log } = _ref;\n    (0,_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(typeof source === \"string\", \"shader source must be a string\");\n    const isVertex = type === _constants__WEBPACK_IMPORTED_MODULE_1__.VERTEX_SHADER;\n    const sourceLines = source.split(\"\\n\");\n    let glslVersion = 100;\n    let versionLine = \"\";\n    let coreSource = source;\n    if (sourceLines[0].indexOf(\"#version \") === 0) {\n        glslVersion = 300;\n        versionLine = sourceLines[0];\n        coreSource = sourceLines.slice(1).join(\"\\n\");\n    } else {\n        versionLine = \"#version \".concat(glslVersion);\n    }\n    const allDefines = {};\n    modules.forEach((module)=>{\n        Object.assign(allDefines, module.getDefines());\n    });\n    Object.assign(allDefines, defines);\n    let assembledSource = prologue ? \"\".concat(versionLine, \"\\n\").concat(getShaderName({\n        id,\n        source,\n        type\n    }), \"\\n\").concat(getShaderType({\n        type\n    }), \"\\n\").concat((0,_platform_defines__WEBPACK_IMPORTED_MODULE_4__.getPlatformShaderDefines)(gl), \"\\n\").concat((0,_platform_defines__WEBPACK_IMPORTED_MODULE_4__.getVersionDefines)(gl, glslVersion, !isVertex), \"\\n\").concat(getApplicationDefines(allDefines), \"\\n\").concat(isVertex ? \"\" : FRAGMENT_SHADER_PROLOGUE, \"\\n\") : \"\".concat(versionLine, \"\\n\");\n    const hookFunctionMap = normalizeHookFunctions(hookFunctions);\n    const hookInjections = {};\n    const declInjections = {};\n    const mainInjections = {};\n    for(const key in inject){\n        const injection = typeof inject[key] === \"string\" ? {\n            injection: inject[key],\n            order: 0\n        } : inject[key];\n        const match = key.match(/^(v|f)s:(#)?([\\w-]+)$/);\n        if (match) {\n            const hash = match[2];\n            const name = match[3];\n            if (hash) {\n                if (name === \"decl\") {\n                    declInjections[key] = [\n                        injection\n                    ];\n                } else {\n                    mainInjections[key] = [\n                        injection\n                    ];\n                }\n            } else {\n                hookInjections[key] = [\n                    injection\n                ];\n            }\n        } else {\n            mainInjections[key] = [\n                injection\n            ];\n        }\n    }\n    for (const module of modules){\n        if (log) {\n            module.checkDeprecations(coreSource, log);\n        }\n        const moduleSource = module.getModuleSource(type, glslVersion);\n        assembledSource += moduleSource;\n        const injections = module.injections[type];\n        for(const key in injections){\n            const match = key.match(/^(v|f)s:#([\\w-]+)$/);\n            if (match) {\n                const name = match[2];\n                const injectionType = name === \"decl\" ? declInjections : mainInjections;\n                injectionType[key] = injectionType[key] || [];\n                injectionType[key].push(injections[key]);\n            } else {\n                hookInjections[key] = hookInjections[key] || [];\n                hookInjections[key].push(injections[key]);\n            }\n        }\n    }\n    assembledSource += INJECT_SHADER_DECLARATIONS;\n    assembledSource = (0,_inject_shader__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(assembledSource, type, declInjections);\n    assembledSource += getHookFunctions(hookFunctionMap[type], hookInjections);\n    assembledSource += coreSource;\n    assembledSource = (0,_inject_shader__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(assembledSource, type, mainInjections);\n    assembledSource = (0,_transpile_shader__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(assembledSource, transpileToGLSL100 ? 100 : glslVersion, isVertex);\n    return assembledSource;\n}\nfunction assembleGetUniforms(modules) {\n    return function getUniforms(opts) {\n        const uniforms = {};\n        for (const module of modules){\n            const moduleUniforms = module.getUniforms(opts, uniforms);\n            Object.assign(uniforms, moduleUniforms);\n        }\n        return uniforms;\n    };\n}\nfunction getShaderType(_ref2) {\n    let { type } = _ref2;\n    return \"\\n#define SHADER_TYPE_\".concat(SHADER_TYPE[type].toUpperCase(), \"\\n\");\n}\nfunction getShaderName(_ref3) {\n    let { id, source, type } = _ref3;\n    const injectShaderName = id && typeof id === \"string\" && source.indexOf(\"SHADER_NAME\") === -1;\n    return injectShaderName ? \"\\n#define SHADER_NAME \".concat(id, \"_\").concat(SHADER_TYPE[type], \"\\n\\n\") : \"\";\n}\nfunction getApplicationDefines() {\n    let defines = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let count = 0;\n    let sourceText = \"\";\n    for(const define in defines){\n        if (count === 0) {\n            sourceText += \"\\n// APPLICATION DEFINES\\n\";\n        }\n        count++;\n        const value = defines[define];\n        if (value || Number.isFinite(value)) {\n            sourceText += \"#define \".concat(define.toUpperCase(), \" \").concat(defines[define], \"\\n\");\n        }\n    }\n    if (count === 0) {\n        sourceText += \"\\n\";\n    }\n    return sourceText;\n}\nfunction getHookFunctions(hookFunctions, hookInjections) {\n    let result = \"\";\n    for(const hookName in hookFunctions){\n        const hookFunction = hookFunctions[hookName];\n        result += \"void \".concat(hookFunction.signature, \" {\\n\");\n        if (hookFunction.header) {\n            result += \"  \".concat(hookFunction.header);\n        }\n        if (hookInjections[hookName]) {\n            const injections = hookInjections[hookName];\n            injections.sort((a, b)=>a.order - b.order);\n            for (const injection of injections){\n                result += \"  \".concat(injection.injection, \"\\n\");\n            }\n        }\n        if (hookFunction.footer) {\n            result += \"  \".concat(hookFunction.footer);\n        }\n        result += \"}\\n\";\n    }\n    return result;\n}\nfunction normalizeHookFunctions(hookFunctions) {\n    const result = {\n        vs: {},\n        fs: {}\n    };\n    hookFunctions.forEach((hook)=>{\n        let opts;\n        if (typeof hook !== \"string\") {\n            opts = hook;\n            hook = opts.hook;\n        } else {\n            opts = {};\n        }\n        hook = hook.trim();\n        const [stage, signature] = hook.split(\":\");\n        const name = hook.replace(/\\(.+/, \"\");\n        result[stage][name] = Object.assign(opts, {\n            signature\n        });\n    });\n    return result;\n} //# sourceMappingURL=assemble-shaders.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/assemble-shaders.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/constants.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/lib/constants.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FRAGMENT_SHADER: () => (/* binding */ FRAGMENT_SHADER),\n/* harmony export */   VERTEX_SHADER: () => (/* binding */ VERTEX_SHADER)\n/* harmony export */ });\nconst VERTEX_SHADER = \"vs\";\nconst FRAGMENT_SHADER = \"fs\"; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPLE1BQU1BLGdCQUFnQixLQUFLO0FBQzNCLE1BQU1DLGtCQUFrQixLQUFLLENBQ3BDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3NoYWRlcnRvb2xzL2Rpc3QvZXNtL2xpYi9jb25zdGFudHMuanM/ZGQ4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVkVSVEVYX1NIQURFUiA9ICd2cyc7XG5leHBvcnQgY29uc3QgRlJBR01FTlRfU0hBREVSID0gJ2ZzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiVkVSVEVYX1NIQURFUiIsIkZSQUdNRU5UX1NIQURFUiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/filters/prop-types.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/lib/filters/prop-types.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePropTypes: () => (/* binding */ parsePropTypes)\n/* harmony export */ });\nconst TYPE_DEFINITIONS = {\n    number: {\n        validate (value, propType) {\n            return Number.isFinite(value) && (!(\"max\" in propType) || value <= propType.max) && (!(\"min\" in propType) || value >= propType.min);\n        }\n    },\n    array: {\n        validate (value, propType) {\n            return Array.isArray(value) || ArrayBuffer.isView(value);\n        }\n    }\n};\nfunction parsePropTypes(propDefs) {\n    const propTypes = {};\n    for(const propName in propDefs){\n        const propDef = propDefs[propName];\n        const propType = parsePropType(propDef);\n        propTypes[propName] = propType;\n    }\n    return propTypes;\n}\nfunction parsePropType(propDef) {\n    let type = getTypeOf(propDef);\n    if (type === \"object\") {\n        if (!propDef) {\n            return {\n                type: \"object\",\n                value: null\n            };\n        }\n        if (\"type\" in propDef) {\n            return Object.assign({}, propDef, TYPE_DEFINITIONS[propDef.type]);\n        }\n        if (!(\"value\" in propDef)) {\n            return {\n                type: \"object\",\n                value: propDef\n            };\n        }\n        type = getTypeOf(propDef.value);\n        return Object.assign({\n            type\n        }, propDef, TYPE_DEFINITIONS[type]);\n    }\n    return Object.assign({\n        type,\n        value: propDef\n    }, TYPE_DEFINITIONS[type]);\n}\nfunction getTypeOf(value) {\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n        return \"array\";\n    }\n    return typeof value;\n} //# sourceMappingURL=prop-types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbGliL2ZpbHRlcnMvcHJvcC10eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsbUJBQW1CO0lBQ3ZCQyxRQUFRO1FBQ05DLFVBQVNDLEtBQUssRUFBRUMsUUFBUTtZQUN0QixPQUFPQyxPQUFPQyxRQUFRLENBQUNILFVBQVcsRUFBRSxVQUFTQyxRQUFPLEtBQU1ELFNBQVNDLFNBQVNHLEdBQUcsS0FBTSxFQUFFLFVBQVNILFFBQU8sS0FBTUQsU0FBU0MsU0FBU0ksR0FBRztRQUNwSTtJQUVGO0lBQ0FDLE9BQU87UUFDTFAsVUFBU0MsS0FBSyxFQUFFQyxRQUFRO1lBQ3RCLE9BQU9NLE1BQU1DLE9BQU8sQ0FBQ1IsVUFBVVMsWUFBWUMsTUFBTSxDQUFDVjtRQUNwRDtJQUVGO0FBQ0Y7QUFDTyxTQUFTVyxlQUFlQyxRQUFRO0lBQ3JDLE1BQU1DLFlBQVksQ0FBQztJQUVuQixJQUFLLE1BQU1DLFlBQVlGLFNBQVU7UUFDL0IsTUFBTUcsVUFBVUgsUUFBUSxDQUFDRSxTQUFTO1FBQ2xDLE1BQU1iLFdBQVdlLGNBQWNEO1FBQy9CRixTQUFTLENBQUNDLFNBQVMsR0FBR2I7SUFDeEI7SUFFQSxPQUFPWTtBQUNUO0FBRUEsU0FBU0csY0FBY0QsT0FBTztJQUM1QixJQUFJRSxPQUFPQyxVQUFVSDtJQUVyQixJQUFJRSxTQUFTLFVBQVU7UUFDckIsSUFBSSxDQUFDRixTQUFTO1lBQ1osT0FBTztnQkFDTEUsTUFBTTtnQkFDTmpCLE9BQU87WUFDVDtRQUNGO1FBRUEsSUFBSSxVQUFVZSxTQUFTO1lBQ3JCLE9BQU9JLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdMLFNBQVNsQixnQkFBZ0IsQ0FBQ2tCLFFBQVFFLElBQUksQ0FBQztRQUNsRTtRQUVBLElBQUksQ0FBRSxZQUFXRixPQUFNLEdBQUk7WUFDekIsT0FBTztnQkFDTEUsTUFBTTtnQkFDTmpCLE9BQU9lO1lBQ1Q7UUFDRjtRQUVBRSxPQUFPQyxVQUFVSCxRQUFRZixLQUFLO1FBQzlCLE9BQU9tQixPQUFPQyxNQUFNLENBQUM7WUFDbkJIO1FBQ0YsR0FBR0YsU0FBU2xCLGdCQUFnQixDQUFDb0IsS0FBSztJQUNwQztJQUVBLE9BQU9FLE9BQU9DLE1BQU0sQ0FBQztRQUNuQkg7UUFDQWpCLE9BQU9lO0lBQ1QsR0FBR2xCLGdCQUFnQixDQUFDb0IsS0FBSztBQUMzQjtBQUVBLFNBQVNDLFVBQVVsQixLQUFLO0lBQ3RCLElBQUlPLE1BQU1DLE9BQU8sQ0FBQ1IsVUFBVVMsWUFBWUMsTUFBTSxDQUFDVixRQUFRO1FBQ3JELE9BQU87SUFDVDtJQUVBLE9BQU8sT0FBT0E7QUFDaEIsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9zaGFkZXJ0b29scy9kaXN0L2VzbS9saWIvZmlsdGVycy9wcm9wLXR5cGVzLmpzPzZhZjAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVFlQRV9ERUZJTklUSU9OUyA9IHtcbiAgbnVtYmVyOiB7XG4gICAgdmFsaWRhdGUodmFsdWUsIHByb3BUeXBlKSB7XG4gICAgICByZXR1cm4gTnVtYmVyLmlzRmluaXRlKHZhbHVlKSAmJiAoISgnbWF4JyBpbiBwcm9wVHlwZSkgfHwgdmFsdWUgPD0gcHJvcFR5cGUubWF4KSAmJiAoISgnbWluJyBpbiBwcm9wVHlwZSkgfHwgdmFsdWUgPj0gcHJvcFR5cGUubWluKTtcbiAgICB9XG5cbiAgfSxcbiAgYXJyYXk6IHtcbiAgICB2YWxpZGF0ZSh2YWx1ZSwgcHJvcFR5cGUpIHtcbiAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKSB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcodmFsdWUpO1xuICAgIH1cblxuICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUHJvcFR5cGVzKHByb3BEZWZzKSB7XG4gIGNvbnN0IHByb3BUeXBlcyA9IHt9O1xuXG4gIGZvciAoY29uc3QgcHJvcE5hbWUgaW4gcHJvcERlZnMpIHtcbiAgICBjb25zdCBwcm9wRGVmID0gcHJvcERlZnNbcHJvcE5hbWVdO1xuICAgIGNvbnN0IHByb3BUeXBlID0gcGFyc2VQcm9wVHlwZShwcm9wRGVmKTtcbiAgICBwcm9wVHlwZXNbcHJvcE5hbWVdID0gcHJvcFR5cGU7XG4gIH1cblxuICByZXR1cm4gcHJvcFR5cGVzO1xufVxuXG5mdW5jdGlvbiBwYXJzZVByb3BUeXBlKHByb3BEZWYpIHtcbiAgbGV0IHR5cGUgPSBnZXRUeXBlT2YocHJvcERlZik7XG5cbiAgaWYgKHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgaWYgKCFwcm9wRGVmKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgICAgdmFsdWU6IG51bGxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKCd0eXBlJyBpbiBwcm9wRGVmKSB7XG4gICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgcHJvcERlZiwgVFlQRV9ERUZJTklUSU9OU1twcm9wRGVmLnR5cGVdKTtcbiAgICB9XG5cbiAgICBpZiAoISgndmFsdWUnIGluIHByb3BEZWYpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgICAgdmFsdWU6IHByb3BEZWZcbiAgICAgIH07XG4gICAgfVxuXG4gICAgdHlwZSA9IGdldFR5cGVPZihwcm9wRGVmLnZhbHVlKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7XG4gICAgICB0eXBlXG4gICAgfSwgcHJvcERlZiwgVFlQRV9ERUZJTklUSU9OU1t0eXBlXSk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7XG4gICAgdHlwZSxcbiAgICB2YWx1ZTogcHJvcERlZlxuICB9LCBUWVBFX0RFRklOSVRJT05TW3R5cGVdKTtcbn1cblxuZnVuY3Rpb24gZ2V0VHlwZU9mKHZhbHVlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSB8fCBBcnJheUJ1ZmZlci5pc1ZpZXcodmFsdWUpKSB7XG4gICAgcmV0dXJuICdhcnJheSc7XG4gIH1cblxuICByZXR1cm4gdHlwZW9mIHZhbHVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvcC10eXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiVFlQRV9ERUZJTklUSU9OUyIsIm51bWJlciIsInZhbGlkYXRlIiwidmFsdWUiLCJwcm9wVHlwZSIsIk51bWJlciIsImlzRmluaXRlIiwibWF4IiwibWluIiwiYXJyYXkiLCJBcnJheSIsImlzQXJyYXkiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsInBhcnNlUHJvcFR5cGVzIiwicHJvcERlZnMiLCJwcm9wVHlwZXMiLCJwcm9wTmFtZSIsInByb3BEZWYiLCJwYXJzZVByb3BUeXBlIiwidHlwZSIsImdldFR5cGVPZiIsIk9iamVjdCIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/filters/prop-types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/inject-shader.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/lib/inject-shader.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DECLARATION_INJECT_MARKER: () => (/* binding */ DECLARATION_INJECT_MARKER),\n/* harmony export */   combineInjects: () => (/* binding */ combineInjects),\n/* harmony export */   \"default\": () => (/* binding */ injectShader)\n/* harmony export */ });\n/* harmony import */ var _modules_module_injectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/module-injectors */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/module-injectors.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js\");\n\n\n\nconst MODULE_INJECTORS = {\n    [_constants__WEBPACK_IMPORTED_MODULE_0__.VERTEX_SHADER]: _modules_module_injectors__WEBPACK_IMPORTED_MODULE_1__.MODULE_INJECTORS_VS,\n    [_constants__WEBPACK_IMPORTED_MODULE_0__.FRAGMENT_SHADER]: _modules_module_injectors__WEBPACK_IMPORTED_MODULE_1__.MODULE_INJECTORS_FS\n};\nconst DECLARATION_INJECT_MARKER = \"__LUMA_INJECT_DECLARATIONS__\";\nconst REGEX_START_OF_MAIN = /void\\s+main\\s*\\([^)]*\\)\\s*\\{\\n?/;\nconst REGEX_END_OF_MAIN = /}\\n?[^{}]*$/;\nconst fragments = [];\nfunction injectShader(source, type, inject) {\n    let injectStandardStubs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    const isVertex = type === _constants__WEBPACK_IMPORTED_MODULE_0__.VERTEX_SHADER;\n    for(const key in inject){\n        const fragmentData = inject[key];\n        fragmentData.sort((a, b)=>a.order - b.order);\n        fragments.length = fragmentData.length;\n        for(let i = 0, len = fragmentData.length; i < len; ++i){\n            fragments[i] = fragmentData[i].injection;\n        }\n        const fragmentString = \"\".concat(fragments.join(\"\\n\"), \"\\n\");\n        switch(key){\n            case \"vs:#decl\":\n                if (isVertex) {\n                    source = source.replace(DECLARATION_INJECT_MARKER, fragmentString);\n                }\n                break;\n            case \"vs:#main-start\":\n                if (isVertex) {\n                    source = source.replace(REGEX_START_OF_MAIN, (match)=>match + fragmentString);\n                }\n                break;\n            case \"vs:#main-end\":\n                if (isVertex) {\n                    source = source.replace(REGEX_END_OF_MAIN, (match)=>fragmentString + match);\n                }\n                break;\n            case \"fs:#decl\":\n                if (!isVertex) {\n                    source = source.replace(DECLARATION_INJECT_MARKER, fragmentString);\n                }\n                break;\n            case \"fs:#main-start\":\n                if (!isVertex) {\n                    source = source.replace(REGEX_START_OF_MAIN, (match)=>match + fragmentString);\n                }\n                break;\n            case \"fs:#main-end\":\n                if (!isVertex) {\n                    source = source.replace(REGEX_END_OF_MAIN, (match)=>fragmentString + match);\n                }\n                break;\n            default:\n                source = source.replace(key, (match)=>match + fragmentString);\n        }\n    }\n    source = source.replace(DECLARATION_INJECT_MARKER, \"\");\n    if (injectStandardStubs) {\n        source = source.replace(/\\}\\s*$/, (match)=>match + MODULE_INJECTORS[type]);\n    }\n    return source;\n}\nfunction combineInjects(injects) {\n    const result = {};\n    (0,_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Array.isArray(injects) && injects.length > 1);\n    injects.forEach((inject)=>{\n        for(const key in inject){\n            result[key] = result[key] ? \"\".concat(result[key], \"\\n\").concat(inject[key]) : inject[key];\n        }\n    });\n    return result;\n} //# sourceMappingURL=inject-shader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbGliL2luamVjdC1zaGFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVGO0FBQzFCO0FBQzNCO0FBQ2xDLE1BQU1LLG1CQUFtQjtJQUN2QixDQUFDSCxxREFBYUEsQ0FBQyxFQUFFRiwwRUFBbUJBO0lBQ3BDLENBQUNHLHVEQUFlQSxDQUFDLEVBQUVGLDBFQUFtQkE7QUFDeEM7QUFDTyxNQUFNSyw0QkFBNEIsK0JBQStCO0FBQ3hFLE1BQU1DLHNCQUFzQjtBQUM1QixNQUFNQyxvQkFBb0I7QUFDMUIsTUFBTUMsWUFBWSxFQUFFO0FBQ0wsU0FBU0MsYUFBYUMsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE1BQU07SUFDdkQsSUFBSUMsc0JBQXNCQyxVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRztJQUM5RixNQUFNRyxXQUFXTixTQUFTVixxREFBYUE7SUFFdkMsSUFBSyxNQUFNaUIsT0FBT04sT0FBUTtRQUN4QixNQUFNTyxlQUFlUCxNQUFNLENBQUNNLElBQUk7UUFDaENDLGFBQWFDLElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUFNRCxFQUFFRSxLQUFLLEdBQUdELEVBQUVDLEtBQUs7UUFDN0NmLFVBQVVPLE1BQU0sR0FBR0ksYUFBYUosTUFBTTtRQUV0QyxJQUFLLElBQUlTLElBQUksR0FBR0MsTUFBTU4sYUFBYUosTUFBTSxFQUFFUyxJQUFJQyxLQUFLLEVBQUVELEVBQUc7WUFDdkRoQixTQUFTLENBQUNnQixFQUFFLEdBQUdMLFlBQVksQ0FBQ0ssRUFBRSxDQUFDRSxTQUFTO1FBQzFDO1FBRUEsTUFBTUMsaUJBQWlCLEdBQUdDLE1BQU0sQ0FBQ3BCLFVBQVVxQixJQUFJLENBQUMsT0FBTztRQUV2RCxPQUFRWDtZQUNOLEtBQUs7Z0JBQ0gsSUFBSUQsVUFBVTtvQkFDWlAsU0FBU0EsT0FBT29CLE9BQU8sQ0FBQ3pCLDJCQUEyQnNCO2dCQUNyRDtnQkFFQTtZQUVGLEtBQUs7Z0JBQ0gsSUFBSVYsVUFBVTtvQkFDWlAsU0FBU0EsT0FBT29CLE9BQU8sQ0FBQ3hCLHFCQUFxQnlCLENBQUFBLFFBQVNBLFFBQVFKO2dCQUNoRTtnQkFFQTtZQUVGLEtBQUs7Z0JBQ0gsSUFBSVYsVUFBVTtvQkFDWlAsU0FBU0EsT0FBT29CLE9BQU8sQ0FBQ3ZCLG1CQUFtQndCLENBQUFBLFFBQVNKLGlCQUFpQkk7Z0JBQ3ZFO2dCQUVBO1lBRUYsS0FBSztnQkFDSCxJQUFJLENBQUNkLFVBQVU7b0JBQ2JQLFNBQVNBLE9BQU9vQixPQUFPLENBQUN6QiwyQkFBMkJzQjtnQkFDckQ7Z0JBRUE7WUFFRixLQUFLO2dCQUNILElBQUksQ0FBQ1YsVUFBVTtvQkFDYlAsU0FBU0EsT0FBT29CLE9BQU8sQ0FBQ3hCLHFCQUFxQnlCLENBQUFBLFFBQVNBLFFBQVFKO2dCQUNoRTtnQkFFQTtZQUVGLEtBQUs7Z0JBQ0gsSUFBSSxDQUFDVixVQUFVO29CQUNiUCxTQUFTQSxPQUFPb0IsT0FBTyxDQUFDdkIsbUJBQW1Cd0IsQ0FBQUEsUUFBU0osaUJBQWlCSTtnQkFDdkU7Z0JBRUE7WUFFRjtnQkFDRXJCLFNBQVNBLE9BQU9vQixPQUFPLENBQUNaLEtBQUthLENBQUFBLFFBQVNBLFFBQVFKO1FBQ2xEO0lBQ0Y7SUFFQWpCLFNBQVNBLE9BQU9vQixPQUFPLENBQUN6QiwyQkFBMkI7SUFFbkQsSUFBSVEscUJBQXFCO1FBQ3ZCSCxTQUFTQSxPQUFPb0IsT0FBTyxDQUFDLFVBQVVDLENBQUFBLFFBQVNBLFFBQVEzQixnQkFBZ0IsQ0FBQ08sS0FBSztJQUMzRTtJQUVBLE9BQU9EO0FBQ1Q7QUFDTyxTQUFTc0IsZUFBZUMsT0FBTztJQUNwQyxNQUFNQyxTQUFTLENBQUM7SUFDaEIvQixrREFBTUEsQ0FBQ2dDLE1BQU1DLE9BQU8sQ0FBQ0gsWUFBWUEsUUFBUWxCLE1BQU0sR0FBRztJQUNsRGtCLFFBQVFJLE9BQU8sQ0FBQ3pCLENBQUFBO1FBQ2QsSUFBSyxNQUFNTSxPQUFPTixPQUFRO1lBQ3hCc0IsTUFBTSxDQUFDaEIsSUFBSSxHQUFHZ0IsTUFBTSxDQUFDaEIsSUFBSSxHQUFHLEdBQUdVLE1BQU0sQ0FBQ00sTUFBTSxDQUFDaEIsSUFBSSxFQUFFLE1BQU1VLE1BQU0sQ0FBQ2hCLE1BQU0sQ0FBQ00sSUFBSSxJQUFJTixNQUFNLENBQUNNLElBQUk7UUFDNUY7SUFDRjtJQUNBLE9BQU9nQjtBQUNULEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbGliL2luamVjdC1zaGFkZXIuanM/NGNmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNT0RVTEVfSU5KRUNUT1JTX1ZTLCBNT0RVTEVfSU5KRUNUT1JTX0ZTIH0gZnJvbSAnLi4vbW9kdWxlcy9tb2R1bGUtaW5qZWN0b3JzJztcbmltcG9ydCB7IFZFUlRFWF9TSEFERVIsIEZSQUdNRU5UX1NIQURFUiB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGFzc2VydCB9IGZyb20gJy4uL3V0aWxzJztcbmNvbnN0IE1PRFVMRV9JTkpFQ1RPUlMgPSB7XG4gIFtWRVJURVhfU0hBREVSXTogTU9EVUxFX0lOSkVDVE9SU19WUyxcbiAgW0ZSQUdNRU5UX1NIQURFUl06IE1PRFVMRV9JTkpFQ1RPUlNfRlNcbn07XG5leHBvcnQgY29uc3QgREVDTEFSQVRJT05fSU5KRUNUX01BUktFUiA9ICdfX0xVTUFfSU5KRUNUX0RFQ0xBUkFUSU9OU19fJztcbmNvbnN0IFJFR0VYX1NUQVJUX09GX01BSU4gPSAvdm9pZFxccyttYWluXFxzKlxcKFteKV0qXFwpXFxzKlxce1xcbj8vO1xuY29uc3QgUkVHRVhfRU5EX09GX01BSU4gPSAvfVxcbj9bXnt9XSokLztcbmNvbnN0IGZyYWdtZW50cyA9IFtdO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5qZWN0U2hhZGVyKHNvdXJjZSwgdHlwZSwgaW5qZWN0KSB7XG4gIGxldCBpbmplY3RTdGFuZGFyZFN0dWJzID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiBmYWxzZTtcbiAgY29uc3QgaXNWZXJ0ZXggPSB0eXBlID09PSBWRVJURVhfU0hBREVSO1xuXG4gIGZvciAoY29uc3Qga2V5IGluIGluamVjdCkge1xuICAgIGNvbnN0IGZyYWdtZW50RGF0YSA9IGluamVjdFtrZXldO1xuICAgIGZyYWdtZW50RGF0YS5zb3J0KChhLCBiKSA9PiBhLm9yZGVyIC0gYi5vcmRlcik7XG4gICAgZnJhZ21lbnRzLmxlbmd0aCA9IGZyYWdtZW50RGF0YS5sZW5ndGg7XG5cbiAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gZnJhZ21lbnREYXRhLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBmcmFnbWVudHNbaV0gPSBmcmFnbWVudERhdGFbaV0uaW5qZWN0aW9uO1xuICAgIH1cblxuICAgIGNvbnN0IGZyYWdtZW50U3RyaW5nID0gXCJcIi5jb25jYXQoZnJhZ21lbnRzLmpvaW4oJ1xcbicpLCBcIlxcblwiKTtcblxuICAgIHN3aXRjaCAoa2V5KSB7XG4gICAgICBjYXNlICd2czojZGVjbCc6XG4gICAgICAgIGlmIChpc1ZlcnRleCkge1xuICAgICAgICAgIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKERFQ0xBUkFUSU9OX0lOSkVDVF9NQVJLRVIsIGZyYWdtZW50U3RyaW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICd2czojbWFpbi1zdGFydCc6XG4gICAgICAgIGlmIChpc1ZlcnRleCkge1xuICAgICAgICAgIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKFJFR0VYX1NUQVJUX09GX01BSU4sIG1hdGNoID0+IG1hdGNoICsgZnJhZ21lbnRTdHJpbmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3ZzOiNtYWluLWVuZCc6XG4gICAgICAgIGlmIChpc1ZlcnRleCkge1xuICAgICAgICAgIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKFJFR0VYX0VORF9PRl9NQUlOLCBtYXRjaCA9PiBmcmFnbWVudFN0cmluZyArIG1hdGNoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdmczojZGVjbCc6XG4gICAgICAgIGlmICghaXNWZXJ0ZXgpIHtcbiAgICAgICAgICBzb3VyY2UgPSBzb3VyY2UucmVwbGFjZShERUNMQVJBVElPTl9JTkpFQ1RfTUFSS0VSLCBmcmFnbWVudFN0cmluZyk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnZnM6I21haW4tc3RhcnQnOlxuICAgICAgICBpZiAoIWlzVmVydGV4KSB7XG4gICAgICAgICAgc291cmNlID0gc291cmNlLnJlcGxhY2UoUkVHRVhfU1RBUlRfT0ZfTUFJTiwgbWF0Y2ggPT4gbWF0Y2ggKyBmcmFnbWVudFN0cmluZyk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnZnM6I21haW4tZW5kJzpcbiAgICAgICAgaWYgKCFpc1ZlcnRleCkge1xuICAgICAgICAgIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKFJFR0VYX0VORF9PRl9NQUlOLCBtYXRjaCA9PiBmcmFnbWVudFN0cmluZyArIG1hdGNoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzb3VyY2UgPSBzb3VyY2UucmVwbGFjZShrZXksIG1hdGNoID0+IG1hdGNoICsgZnJhZ21lbnRTdHJpbmcpO1xuICAgIH1cbiAgfVxuXG4gIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKERFQ0xBUkFUSU9OX0lOSkVDVF9NQVJLRVIsICcnKTtcblxuICBpZiAoaW5qZWN0U3RhbmRhcmRTdHVicykge1xuICAgIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKC9cXH1cXHMqJC8sIG1hdGNoID0+IG1hdGNoICsgTU9EVUxFX0lOSkVDVE9SU1t0eXBlXSk7XG4gIH1cblxuICByZXR1cm4gc291cmNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbWJpbmVJbmplY3RzKGluamVjdHMpIHtcbiAgY29uc3QgcmVzdWx0ID0ge307XG4gIGFzc2VydChBcnJheS5pc0FycmF5KGluamVjdHMpICYmIGluamVjdHMubGVuZ3RoID4gMSk7XG4gIGluamVjdHMuZm9yRWFjaChpbmplY3QgPT4ge1xuICAgIGZvciAoY29uc3Qga2V5IGluIGluamVjdCkge1xuICAgICAgcmVzdWx0W2tleV0gPSByZXN1bHRba2V5XSA/IFwiXCIuY29uY2F0KHJlc3VsdFtrZXldLCBcIlxcblwiKS5jb25jYXQoaW5qZWN0W2tleV0pIDogaW5qZWN0W2tleV07XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluamVjdC1zaGFkZXIuanMubWFwIl0sIm5hbWVzIjpbIk1PRFVMRV9JTkpFQ1RPUlNfVlMiLCJNT0RVTEVfSU5KRUNUT1JTX0ZTIiwiVkVSVEVYX1NIQURFUiIsIkZSQUdNRU5UX1NIQURFUiIsImFzc2VydCIsIk1PRFVMRV9JTkpFQ1RPUlMiLCJERUNMQVJBVElPTl9JTkpFQ1RfTUFSS0VSIiwiUkVHRVhfU1RBUlRfT0ZfTUFJTiIsIlJFR0VYX0VORF9PRl9NQUlOIiwiZnJhZ21lbnRzIiwiaW5qZWN0U2hhZGVyIiwic291cmNlIiwidHlwZSIsImluamVjdCIsImluamVjdFN0YW5kYXJkU3R1YnMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJpc1ZlcnRleCIsImtleSIsImZyYWdtZW50RGF0YSIsInNvcnQiLCJhIiwiYiIsIm9yZGVyIiwiaSIsImxlbiIsImluamVjdGlvbiIsImZyYWdtZW50U3RyaW5nIiwiY29uY2F0Iiwiam9pbiIsInJlcGxhY2UiLCJtYXRjaCIsImNvbWJpbmVJbmplY3RzIiwiaW5qZWN0cyIsInJlc3VsdCIsIkFycmF5IiwiaXNBcnJheSIsImZvckVhY2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/inject-shader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/platform-defines.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/lib/platform-defines.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlatformShaderDefines: () => (/* binding */ getPlatformShaderDefines),\n/* harmony export */   getVersionDefines: () => (/* binding */ getVersionDefines)\n/* harmony export */ });\n/* harmony import */ var _utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/webgl-info */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/webgl-info.js\");\n\nfunction getPlatformShaderDefines(gl) {\n    const debugInfo = (0,_utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.getContextInfo)(gl);\n    switch(debugInfo.gpuVendor.toLowerCase()){\n        case \"nvidia\":\n            return \"#define NVIDIA_GPU\\n// Nvidia optimizes away the calculation necessary for emulated fp64\\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\\n\";\n        case \"intel\":\n            return \"#define INTEL_GPU\\n// Intel optimizes away the calculation necessary for emulated fp64\\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\\n// Intel's built-in 'tan' function doesn't have acceptable precision\\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\\n\";\n        case \"amd\":\n            return \"#define AMD_GPU\\n\";\n        default:\n            return \"#define DEFAULT_GPU\\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\\n// Intel's built-in 'tan' function doesn't have acceptable precision\\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\\n\";\n    }\n}\nfunction getVersionDefines(gl, glslVersion, isFragment) {\n    let versionDefines = \"#if (__VERSION__ > 120)\\n\\n# define FEATURE_GLSL_DERIVATIVES\\n# define FEATURE_GLSL_DRAW_BUFFERS\\n# define FEATURE_GLSL_FRAG_DEPTH\\n# define FEATURE_GLSL_TEXTURE_LOD\\n\\n// DEPRECATED FLAGS, remove in v9\\n# define FRAG_DEPTH\\n# define DERIVATIVES\\n# define DRAW_BUFFERS\\n# define TEXTURE_LOD\\n\\n#endif // __VERSION\\n\";\n    if ((0,_utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.hasFeatures)(gl, _utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.FEATURES.GLSL_FRAG_DEPTH)) {\n        versionDefines += \"\\n// FRAG_DEPTH => gl_FragDepth is available\\n#ifdef GL_EXT_frag_depth\\n#extension GL_EXT_frag_depth : enable\\n# define FEATURE_GLSL_FRAG_DEPTH\\n# define FRAG_DEPTH\\n# define gl_FragDepth gl_FragDepthEXT\\n#endif\\n\";\n    }\n    if ((0,_utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.hasFeatures)(gl, _utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.FEATURES.GLSL_DERIVATIVES) && (0,_utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.canCompileGLGSExtension)(gl, _utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.FEATURES.GLSL_DERIVATIVES)) {\n        versionDefines += \"\\n// DERIVATIVES => dxdF, dxdY and fwidth are available\\n#ifdef GL_OES_standard_derivatives\\n#extension GL_OES_standard_derivatives : enable\\n# define FEATURE_GLSL_DERIVATIVES\\n# define DERIVATIVES\\n#endif\\n\";\n    }\n    if ((0,_utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.hasFeatures)(gl, _utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.FEATURES.GLSL_FRAG_DATA) && (0,_utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.canCompileGLGSExtension)(gl, _utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.FEATURES.GLSL_FRAG_DATA, {\n        behavior: \"require\"\n    })) {\n        versionDefines += \"\\n// DRAW_BUFFERS => gl_FragData[] is available\\n#ifdef GL_EXT_draw_buffers\\n#extension GL_EXT_draw_buffers : require\\n#define FEATURE_GLSL_DRAW_BUFFERS\\n#define DRAW_BUFFERS\\n#endif\\n\";\n    }\n    if ((0,_utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.hasFeatures)(gl, _utils_webgl_info__WEBPACK_IMPORTED_MODULE_0__.FEATURES.GLSL_TEXTURE_LOD)) {\n        versionDefines += \"// TEXTURE_LOD => texture2DLod etc are available\\n#ifdef GL_EXT_shader_texture_lod\\n#extension GL_EXT_shader_texture_lod : enable\\n\\n# define FEATURE_GLSL_TEXTURE_LOD\\n# define TEXTURE_LOD\\n\\n#endif\\n\";\n    }\n    return versionDefines;\n} //# sourceMappingURL=platform-defines.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbGliL3BsYXRmb3JtLWRlZmluZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFHO0FBQzlGLFNBQVNJLHlCQUF5QkMsRUFBRTtJQUN6QyxNQUFNQyxZQUFZTixpRUFBY0EsQ0FBQ0s7SUFFakMsT0FBUUMsVUFBVUMsU0FBUyxDQUFDQyxXQUFXO1FBQ3JDLEtBQUs7WUFDSCxPQUFPO1FBRVQsS0FBSztZQUNILE9BQU87UUFFVCxLQUFLO1lBQ0gsT0FBTztRQUVUO1lBQ0UsT0FBTztJQUNYO0FBQ0Y7QUFDTyxTQUFTQyxrQkFBa0JKLEVBQUUsRUFBRUssV0FBVyxFQUFFQyxVQUFVO0lBQzNELElBQUlDLGlCQUFpQjtJQUVyQixJQUFJWCw4REFBV0EsQ0FBQ0ksSUFBSUYsdURBQVFBLENBQUNVLGVBQWUsR0FBRztRQUM3Q0Qsa0JBQWtCO0lBQ3BCO0lBRUEsSUFBSVgsOERBQVdBLENBQUNJLElBQUlGLHVEQUFRQSxDQUFDVyxnQkFBZ0IsS0FBS1osMEVBQXVCQSxDQUFDRyxJQUFJRix1REFBUUEsQ0FBQ1csZ0JBQWdCLEdBQUc7UUFDeEdGLGtCQUFrQjtJQUNwQjtJQUVBLElBQUlYLDhEQUFXQSxDQUFDSSxJQUFJRix1REFBUUEsQ0FBQ1ksY0FBYyxLQUFLYiwwRUFBdUJBLENBQUNHLElBQUlGLHVEQUFRQSxDQUFDWSxjQUFjLEVBQUU7UUFDbkdDLFVBQVU7SUFDWixJQUFJO1FBQ0ZKLGtCQUFrQjtJQUNwQjtJQUVBLElBQUlYLDhEQUFXQSxDQUFDSSxJQUFJRix1REFBUUEsQ0FBQ2MsZ0JBQWdCLEdBQUc7UUFDOUNMLGtCQUFrQjtJQUNwQjtJQUVBLE9BQU9BO0FBQ1QsRUFDQSw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9zaGFkZXJ0b29scy9kaXN0L2VzbS9saWIvcGxhdGZvcm0tZGVmaW5lcy5qcz9kYTliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENvbnRleHRJbmZvLCBoYXNGZWF0dXJlcywgY2FuQ29tcGlsZUdMR1NFeHRlbnNpb24sIEZFQVRVUkVTIH0gZnJvbSAnLi4vdXRpbHMvd2ViZ2wtaW5mbyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0UGxhdGZvcm1TaGFkZXJEZWZpbmVzKGdsKSB7XG4gIGNvbnN0IGRlYnVnSW5mbyA9IGdldENvbnRleHRJbmZvKGdsKTtcblxuICBzd2l0Y2ggKGRlYnVnSW5mby5ncHVWZW5kb3IudG9Mb3dlckNhc2UoKSkge1xuICAgIGNhc2UgJ252aWRpYSc6XG4gICAgICByZXR1cm4gXCIjZGVmaW5lIE5WSURJQV9HUFVcXG4vLyBOdmlkaWEgb3B0aW1pemVzIGF3YXkgdGhlIGNhbGN1bGF0aW9uIG5lY2Vzc2FyeSBmb3IgZW11bGF0ZWQgZnA2NFxcbiNkZWZpbmUgTFVNQV9GUDY0X0NPREVfRUxJTUlOQVRJT05fV09SS0FST1VORCAxXFxuXCI7XG5cbiAgICBjYXNlICdpbnRlbCc6XG4gICAgICByZXR1cm4gXCIjZGVmaW5lIElOVEVMX0dQVVxcbi8vIEludGVsIG9wdGltaXplcyBhd2F5IHRoZSBjYWxjdWxhdGlvbiBuZWNlc3NhcnkgZm9yIGVtdWxhdGVkIGZwNjRcXG4jZGVmaW5lIExVTUFfRlA2NF9DT0RFX0VMSU1JTkFUSU9OX1dPUktBUk9VTkQgMVxcbi8vIEludGVsJ3MgYnVpbHQtaW4gJ3RhbicgZnVuY3Rpb24gZG9lc24ndCBoYXZlIGFjY2VwdGFibGUgcHJlY2lzaW9uXFxuI2RlZmluZSBMVU1BX0ZQMzJfVEFOX1BSRUNJU0lPTl9XT1JLQVJPVU5EIDFcXG4vLyBJbnRlbCBHUFUgZG9lc24ndCBoYXZlIGZ1bGwgMzIgYml0cyBwcmVjaXNpb24gaW4gc2FtZSBjYXNlcywgY2F1c2VzIG92ZXJmbG93XFxuI2RlZmluZSBMVU1BX0ZQNjRfSElHSF9CSVRTX09WRVJGTE9XX1dPUktBUk9VTkQgMVxcblwiO1xuXG4gICAgY2FzZSAnYW1kJzpcbiAgICAgIHJldHVybiBcIiNkZWZpbmUgQU1EX0dQVVxcblwiO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBcIiNkZWZpbmUgREVGQVVMVF9HUFVcXG4vLyBQcmV2ZW50IGRyaXZlciBmcm9tIG9wdGltaXppbmcgYXdheSB0aGUgY2FsY3VsYXRpb24gbmVjZXNzYXJ5IGZvciBlbXVsYXRlZCBmcDY0XFxuI2RlZmluZSBMVU1BX0ZQNjRfQ09ERV9FTElNSU5BVElPTl9XT1JLQVJPVU5EIDFcXG4vLyBJbnRlbCdzIGJ1aWx0LWluICd0YW4nIGZ1bmN0aW9uIGRvZXNuJ3QgaGF2ZSBhY2NlcHRhYmxlIHByZWNpc2lvblxcbiNkZWZpbmUgTFVNQV9GUDMyX1RBTl9QUkVDSVNJT05fV09SS0FST1VORCAxXFxuLy8gSW50ZWwgR1BVIGRvZXNuJ3QgaGF2ZSBmdWxsIDMyIGJpdHMgcHJlY2lzaW9uIGluIHNhbWUgY2FzZXMsIGNhdXNlcyBvdmVyZmxvd1xcbiNkZWZpbmUgTFVNQV9GUDY0X0hJR0hfQklUU19PVkVSRkxPV19XT1JLQVJPVU5EIDFcXG5cIjtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFZlcnNpb25EZWZpbmVzKGdsLCBnbHNsVmVyc2lvbiwgaXNGcmFnbWVudCkge1xuICBsZXQgdmVyc2lvbkRlZmluZXMgPSBcIiNpZiAoX19WRVJTSU9OX18gPiAxMjApXFxuXFxuIyBkZWZpbmUgRkVBVFVSRV9HTFNMX0RFUklWQVRJVkVTXFxuIyBkZWZpbmUgRkVBVFVSRV9HTFNMX0RSQVdfQlVGRkVSU1xcbiMgZGVmaW5lIEZFQVRVUkVfR0xTTF9GUkFHX0RFUFRIXFxuIyBkZWZpbmUgRkVBVFVSRV9HTFNMX1RFWFRVUkVfTE9EXFxuXFxuLy8gREVQUkVDQVRFRCBGTEFHUywgcmVtb3ZlIGluIHY5XFxuIyBkZWZpbmUgRlJBR19ERVBUSFxcbiMgZGVmaW5lIERFUklWQVRJVkVTXFxuIyBkZWZpbmUgRFJBV19CVUZGRVJTXFxuIyBkZWZpbmUgVEVYVFVSRV9MT0RcXG5cXG4jZW5kaWYgLy8gX19WRVJTSU9OXFxuXCI7XG5cbiAgaWYgKGhhc0ZlYXR1cmVzKGdsLCBGRUFUVVJFUy5HTFNMX0ZSQUdfREVQVEgpKSB7XG4gICAgdmVyc2lvbkRlZmluZXMgKz0gXCJcXG4vLyBGUkFHX0RFUFRIID0+IGdsX0ZyYWdEZXB0aCBpcyBhdmFpbGFibGVcXG4jaWZkZWYgR0xfRVhUX2ZyYWdfZGVwdGhcXG4jZXh0ZW5zaW9uIEdMX0VYVF9mcmFnX2RlcHRoIDogZW5hYmxlXFxuIyBkZWZpbmUgRkVBVFVSRV9HTFNMX0ZSQUdfREVQVEhcXG4jIGRlZmluZSBGUkFHX0RFUFRIXFxuIyBkZWZpbmUgZ2xfRnJhZ0RlcHRoIGdsX0ZyYWdEZXB0aEVYVFxcbiNlbmRpZlxcblwiO1xuICB9XG5cbiAgaWYgKGhhc0ZlYXR1cmVzKGdsLCBGRUFUVVJFUy5HTFNMX0RFUklWQVRJVkVTKSAmJiBjYW5Db21waWxlR0xHU0V4dGVuc2lvbihnbCwgRkVBVFVSRVMuR0xTTF9ERVJJVkFUSVZFUykpIHtcbiAgICB2ZXJzaW9uRGVmaW5lcyArPSBcIlxcbi8vIERFUklWQVRJVkVTID0+IGR4ZEYsIGR4ZFkgYW5kIGZ3aWR0aCBhcmUgYXZhaWxhYmxlXFxuI2lmZGVmIEdMX09FU19zdGFuZGFyZF9kZXJpdmF0aXZlc1xcbiNleHRlbnNpb24gR0xfT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzIDogZW5hYmxlXFxuIyBkZWZpbmUgRkVBVFVSRV9HTFNMX0RFUklWQVRJVkVTXFxuIyBkZWZpbmUgREVSSVZBVElWRVNcXG4jZW5kaWZcXG5cIjtcbiAgfVxuXG4gIGlmIChoYXNGZWF0dXJlcyhnbCwgRkVBVFVSRVMuR0xTTF9GUkFHX0RBVEEpICYmIGNhbkNvbXBpbGVHTEdTRXh0ZW5zaW9uKGdsLCBGRUFUVVJFUy5HTFNMX0ZSQUdfREFUQSwge1xuICAgIGJlaGF2aW9yOiAncmVxdWlyZSdcbiAgfSkpIHtcbiAgICB2ZXJzaW9uRGVmaW5lcyArPSBcIlxcbi8vIERSQVdfQlVGRkVSUyA9PiBnbF9GcmFnRGF0YVtdIGlzIGF2YWlsYWJsZVxcbiNpZmRlZiBHTF9FWFRfZHJhd19idWZmZXJzXFxuI2V4dGVuc2lvbiBHTF9FWFRfZHJhd19idWZmZXJzIDogcmVxdWlyZVxcbiNkZWZpbmUgRkVBVFVSRV9HTFNMX0RSQVdfQlVGRkVSU1xcbiNkZWZpbmUgRFJBV19CVUZGRVJTXFxuI2VuZGlmXFxuXCI7XG4gIH1cblxuICBpZiAoaGFzRmVhdHVyZXMoZ2wsIEZFQVRVUkVTLkdMU0xfVEVYVFVSRV9MT0QpKSB7XG4gICAgdmVyc2lvbkRlZmluZXMgKz0gXCIvLyBURVhUVVJFX0xPRCA9PiB0ZXh0dXJlMkRMb2QgZXRjIGFyZSBhdmFpbGFibGVcXG4jaWZkZWYgR0xfRVhUX3NoYWRlcl90ZXh0dXJlX2xvZFxcbiNleHRlbnNpb24gR0xfRVhUX3NoYWRlcl90ZXh0dXJlX2xvZCA6IGVuYWJsZVxcblxcbiMgZGVmaW5lIEZFQVRVUkVfR0xTTF9URVhUVVJFX0xPRFxcbiMgZGVmaW5lIFRFWFRVUkVfTE9EXFxuXFxuI2VuZGlmXFxuXCI7XG4gIH1cblxuICByZXR1cm4gdmVyc2lvbkRlZmluZXM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wbGF0Zm9ybS1kZWZpbmVzLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRDb250ZXh0SW5mbyIsImhhc0ZlYXR1cmVzIiwiY2FuQ29tcGlsZUdMR1NFeHRlbnNpb24iLCJGRUFUVVJFUyIsImdldFBsYXRmb3JtU2hhZGVyRGVmaW5lcyIsImdsIiwiZGVidWdJbmZvIiwiZ3B1VmVuZG9yIiwidG9Mb3dlckNhc2UiLCJnZXRWZXJzaW9uRGVmaW5lcyIsImdsc2xWZXJzaW9uIiwiaXNGcmFnbWVudCIsInZlcnNpb25EZWZpbmVzIiwiR0xTTF9GUkFHX0RFUFRIIiwiR0xTTF9ERVJJVkFUSVZFUyIsIkdMU0xfRlJBR19EQVRBIiwiYmVoYXZpb3IiLCJHTFNMX1RFWFRVUkVfTE9EIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/platform-defines.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/resolve-modules.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/lib/resolve-modules.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TEST_EXPORTS: () => (/* binding */ TEST_EXPORTS),\n/* harmony export */   resolveModules: () => (/* binding */ resolveModules)\n/* harmony export */ });\n/* harmony import */ var _shader_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shader-module */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/shader-module.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js\");\n\n\nfunction resolveModules(modules) {\n    return getShaderDependencies(instantiateModules(modules));\n}\nfunction getShaderDependencies(modules) {\n    const moduleMap = {};\n    const moduleDepth = {};\n    getDependencyGraph({\n        modules,\n        level: 0,\n        moduleMap,\n        moduleDepth\n    });\n    return Object.keys(moduleDepth).sort((a, b)=>moduleDepth[b] - moduleDepth[a]).map((name)=>moduleMap[name]);\n}\nfunction getDependencyGraph(_ref) {\n    let { modules, level, moduleMap, moduleDepth } = _ref;\n    if (level >= 5) {\n        throw new Error(\"Possible loop in shader dependency graph\");\n    }\n    for (const module of modules){\n        moduleMap[module.name] = module;\n        if (moduleDepth[module.name] === undefined || moduleDepth[module.name] < level) {\n            moduleDepth[module.name] = level;\n        }\n    }\n    for (const module of modules){\n        if (module.dependencies) {\n            getDependencyGraph({\n                modules: module.dependencies,\n                level: level + 1,\n                moduleMap,\n                moduleDepth\n            });\n        }\n    }\n}\nfunction instantiateModules(modules, seen) {\n    return modules.map((module)=>{\n        if (module instanceof _shader_module__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n            return module;\n        }\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(typeof module !== \"string\", \"Shader module use by name is deprecated. Import shader module '\".concat(module, \"' and use it directly.\"));\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(module.name, \"shader module has no name\");\n        module = new _shader_module__WEBPACK_IMPORTED_MODULE_0__[\"default\"](module);\n        module.dependencies = instantiateModules(module.dependencies);\n        return module;\n    });\n}\nconst TEST_EXPORTS = {\n    getShaderDependencies,\n    getDependencyGraph\n}; //# sourceMappingURL=resolve-modules.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbGliL3Jlc29sdmUtbW9kdWxlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDO0FBQ1Q7QUFDM0IsU0FBU0UsZUFBZUMsT0FBTztJQUNwQyxPQUFPQyxzQkFBc0JDLG1CQUFtQkY7QUFDbEQ7QUFFQSxTQUFTQyxzQkFBc0JELE9BQU87SUFDcEMsTUFBTUcsWUFBWSxDQUFDO0lBQ25CLE1BQU1DLGNBQWMsQ0FBQztJQUNyQkMsbUJBQW1CO1FBQ2pCTDtRQUNBTSxPQUFPO1FBQ1BIO1FBQ0FDO0lBQ0Y7SUFDQSxPQUFPRyxPQUFPQyxJQUFJLENBQUNKLGFBQWFLLElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUFNUCxXQUFXLENBQUNPLEVBQUUsR0FBR1AsV0FBVyxDQUFDTSxFQUFFLEVBQUVFLEdBQUcsQ0FBQ0MsQ0FBQUEsT0FBUVYsU0FBUyxDQUFDVSxLQUFLO0FBQzdHO0FBRUEsU0FBU1IsbUJBQW1CUyxJQUFJO0lBQzlCLElBQUksRUFDRmQsT0FBTyxFQUNQTSxLQUFLLEVBQ0xILFNBQVMsRUFDVEMsV0FBVyxFQUNaLEdBQUdVO0lBRUosSUFBSVIsU0FBUyxHQUFHO1FBQ2QsTUFBTSxJQUFJUyxNQUFNO0lBQ2xCO0lBRUEsS0FBSyxNQUFNQyxVQUFVaEIsUUFBUztRQUM1QkcsU0FBUyxDQUFDYSxPQUFPSCxJQUFJLENBQUMsR0FBR0c7UUFFekIsSUFBSVosV0FBVyxDQUFDWSxPQUFPSCxJQUFJLENBQUMsS0FBS0ksYUFBYWIsV0FBVyxDQUFDWSxPQUFPSCxJQUFJLENBQUMsR0FBR1AsT0FBTztZQUM5RUYsV0FBVyxDQUFDWSxPQUFPSCxJQUFJLENBQUMsR0FBR1A7UUFDN0I7SUFDRjtJQUVBLEtBQUssTUFBTVUsVUFBVWhCLFFBQVM7UUFDNUIsSUFBSWdCLE9BQU9FLFlBQVksRUFBRTtZQUN2QmIsbUJBQW1CO2dCQUNqQkwsU0FBU2dCLE9BQU9FLFlBQVk7Z0JBQzVCWixPQUFPQSxRQUFRO2dCQUNmSDtnQkFDQUM7WUFDRjtRQUNGO0lBQ0Y7QUFDRjtBQUVBLFNBQVNGLG1CQUFtQkYsT0FBTyxFQUFFbUIsSUFBSTtJQUN2QyxPQUFPbkIsUUFBUVksR0FBRyxDQUFDSSxDQUFBQTtRQUNqQixJQUFJQSxrQkFBa0JuQixzREFBWUEsRUFBRTtZQUNsQyxPQUFPbUI7UUFDVDtRQUVBbEIsa0RBQU1BLENBQUMsT0FBT2tCLFdBQVcsVUFBVSxrRUFBa0VJLE1BQU0sQ0FBQ0osUUFBUTtRQUNwSGxCLGtEQUFNQSxDQUFDa0IsT0FBT0gsSUFBSSxFQUFFO1FBQ3BCRyxTQUFTLElBQUluQixzREFBWUEsQ0FBQ21CO1FBQzFCQSxPQUFPRSxZQUFZLEdBQUdoQixtQkFBbUJjLE9BQU9FLFlBQVk7UUFDNUQsT0FBT0Y7SUFDVDtBQUNGO0FBRU8sTUFBTUssZUFBZTtJQUMxQnBCO0lBQ0FJO0FBQ0YsRUFBRSxDQUNGLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3NoYWRlcnRvb2xzL2Rpc3QvZXNtL2xpYi9yZXNvbHZlLW1vZHVsZXMuanM/ODUwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2hhZGVyTW9kdWxlIGZyb20gJy4vc2hhZGVyLW1vZHVsZSc7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tICcuLi91dGlscyc7XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZU1vZHVsZXMobW9kdWxlcykge1xuICByZXR1cm4gZ2V0U2hhZGVyRGVwZW5kZW5jaWVzKGluc3RhbnRpYXRlTW9kdWxlcyhtb2R1bGVzKSk7XG59XG5cbmZ1bmN0aW9uIGdldFNoYWRlckRlcGVuZGVuY2llcyhtb2R1bGVzKSB7XG4gIGNvbnN0IG1vZHVsZU1hcCA9IHt9O1xuICBjb25zdCBtb2R1bGVEZXB0aCA9IHt9O1xuICBnZXREZXBlbmRlbmN5R3JhcGgoe1xuICAgIG1vZHVsZXMsXG4gICAgbGV2ZWw6IDAsXG4gICAgbW9kdWxlTWFwLFxuICAgIG1vZHVsZURlcHRoXG4gIH0pO1xuICByZXR1cm4gT2JqZWN0LmtleXMobW9kdWxlRGVwdGgpLnNvcnQoKGEsIGIpID0+IG1vZHVsZURlcHRoW2JdIC0gbW9kdWxlRGVwdGhbYV0pLm1hcChuYW1lID0+IG1vZHVsZU1hcFtuYW1lXSk7XG59XG5cbmZ1bmN0aW9uIGdldERlcGVuZGVuY3lHcmFwaChfcmVmKSB7XG4gIGxldCB7XG4gICAgbW9kdWxlcyxcbiAgICBsZXZlbCxcbiAgICBtb2R1bGVNYXAsXG4gICAgbW9kdWxlRGVwdGhcbiAgfSA9IF9yZWY7XG5cbiAgaWYgKGxldmVsID49IDUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Bvc3NpYmxlIGxvb3AgaW4gc2hhZGVyIGRlcGVuZGVuY3kgZ3JhcGgnKTtcbiAgfVxuXG4gIGZvciAoY29uc3QgbW9kdWxlIG9mIG1vZHVsZXMpIHtcbiAgICBtb2R1bGVNYXBbbW9kdWxlLm5hbWVdID0gbW9kdWxlO1xuXG4gICAgaWYgKG1vZHVsZURlcHRoW21vZHVsZS5uYW1lXSA9PT0gdW5kZWZpbmVkIHx8IG1vZHVsZURlcHRoW21vZHVsZS5uYW1lXSA8IGxldmVsKSB7XG4gICAgICBtb2R1bGVEZXB0aFttb2R1bGUubmFtZV0gPSBsZXZlbDtcbiAgICB9XG4gIH1cblxuICBmb3IgKGNvbnN0IG1vZHVsZSBvZiBtb2R1bGVzKSB7XG4gICAgaWYgKG1vZHVsZS5kZXBlbmRlbmNpZXMpIHtcbiAgICAgIGdldERlcGVuZGVuY3lHcmFwaCh7XG4gICAgICAgIG1vZHVsZXM6IG1vZHVsZS5kZXBlbmRlbmNpZXMsXG4gICAgICAgIGxldmVsOiBsZXZlbCArIDEsXG4gICAgICAgIG1vZHVsZU1hcCxcbiAgICAgICAgbW9kdWxlRGVwdGhcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBpbnN0YW50aWF0ZU1vZHVsZXMobW9kdWxlcywgc2Vlbikge1xuICByZXR1cm4gbW9kdWxlcy5tYXAobW9kdWxlID0+IHtcbiAgICBpZiAobW9kdWxlIGluc3RhbmNlb2YgU2hhZGVyTW9kdWxlKSB7XG4gICAgICByZXR1cm4gbW9kdWxlO1xuICAgIH1cblxuICAgIGFzc2VydCh0eXBlb2YgbW9kdWxlICE9PSAnc3RyaW5nJywgXCJTaGFkZXIgbW9kdWxlIHVzZSBieSBuYW1lIGlzIGRlcHJlY2F0ZWQuIEltcG9ydCBzaGFkZXIgbW9kdWxlICdcIi5jb25jYXQobW9kdWxlLCBcIicgYW5kIHVzZSBpdCBkaXJlY3RseS5cIikpO1xuICAgIGFzc2VydChtb2R1bGUubmFtZSwgJ3NoYWRlciBtb2R1bGUgaGFzIG5vIG5hbWUnKTtcbiAgICBtb2R1bGUgPSBuZXcgU2hhZGVyTW9kdWxlKG1vZHVsZSk7XG4gICAgbW9kdWxlLmRlcGVuZGVuY2llcyA9IGluc3RhbnRpYXRlTW9kdWxlcyhtb2R1bGUuZGVwZW5kZW5jaWVzKTtcbiAgICByZXR1cm4gbW9kdWxlO1xuICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IFRFU1RfRVhQT1JUUyA9IHtcbiAgZ2V0U2hhZGVyRGVwZW5kZW5jaWVzLFxuICBnZXREZXBlbmRlbmN5R3JhcGhcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNvbHZlLW1vZHVsZXMuanMubWFwIl0sIm5hbWVzIjpbIlNoYWRlck1vZHVsZSIsImFzc2VydCIsInJlc29sdmVNb2R1bGVzIiwibW9kdWxlcyIsImdldFNoYWRlckRlcGVuZGVuY2llcyIsImluc3RhbnRpYXRlTW9kdWxlcyIsIm1vZHVsZU1hcCIsIm1vZHVsZURlcHRoIiwiZ2V0RGVwZW5kZW5jeUdyYXBoIiwibGV2ZWwiLCJPYmplY3QiLCJrZXlzIiwic29ydCIsImEiLCJiIiwibWFwIiwibmFtZSIsIl9yZWYiLCJFcnJvciIsIm1vZHVsZSIsInVuZGVmaW5lZCIsImRlcGVuZGVuY2llcyIsInNlZW4iLCJjb25jYXQiLCJURVNUX0VYUE9SVFMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/resolve-modules.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/shader-module.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/lib/shader-module.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ShaderModule),\n/* harmony export */   normalizeShaderModule: () => (/* binding */ normalizeShaderModule)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js\");\n/* harmony import */ var _filters_prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filters/prop-types */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/filters/prop-types.js\");\n\n\nconst VERTEX_SHADER = \"vs\";\nconst FRAGMENT_SHADER = \"fs\";\nclass ShaderModule {\n    constructor(_ref){\n        let { name, vs, fs, dependencies = [], uniforms, getUniforms, deprecations = [], defines = {}, inject = {}, vertexShader, fragmentShader } = _ref;\n        (0,_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(typeof name === \"string\");\n        this.name = name;\n        this.vs = vs || vertexShader;\n        this.fs = fs || fragmentShader;\n        this.getModuleUniforms = getUniforms;\n        this.dependencies = dependencies;\n        this.deprecations = this._parseDeprecationDefinitions(deprecations);\n        this.defines = defines;\n        this.injections = normalizeInjections(inject);\n        if (uniforms) {\n            this.uniforms = (0,_filters_prop_types__WEBPACK_IMPORTED_MODULE_1__.parsePropTypes)(uniforms);\n        }\n    }\n    getModuleSource(type) {\n        let moduleSource;\n        switch(type){\n            case VERTEX_SHADER:\n                moduleSource = this.vs || \"\";\n                break;\n            case FRAGMENT_SHADER:\n                moduleSource = this.fs || \"\";\n                break;\n            default:\n                (0,_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false);\n        }\n        return \"#define MODULE_\".concat(this.name.toUpperCase().replace(/[^0-9a-z]/gi, \"_\"), \"\\n\").concat(moduleSource, \"// END MODULE_\").concat(this.name, \"\\n\\n\");\n    }\n    getUniforms(opts, uniforms) {\n        if (this.getModuleUniforms) {\n            return this.getModuleUniforms(opts, uniforms);\n        }\n        if (this.uniforms) {\n            return this._defaultGetUniforms(opts);\n        }\n        return {};\n    }\n    getDefines() {\n        return this.defines;\n    }\n    checkDeprecations(shaderSource, log) {\n        this.deprecations.forEach((def)=>{\n            if (def.regex.test(shaderSource)) {\n                if (def.deprecated) {\n                    log.deprecated(def.old, def.new)();\n                } else {\n                    log.removed(def.old, def.new)();\n                }\n            }\n        });\n    }\n    _parseDeprecationDefinitions(deprecations) {\n        deprecations.forEach((def)=>{\n            switch(def.type){\n                case \"function\":\n                    def.regex = new RegExp(\"\\\\b\".concat(def.old, \"\\\\(\"));\n                    break;\n                default:\n                    def.regex = new RegExp(\"\".concat(def.type, \" \").concat(def.old, \";\"));\n            }\n        });\n        return deprecations;\n    }\n    _defaultGetUniforms() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const uniforms = {};\n        const propTypes = this.uniforms;\n        for(const key in propTypes){\n            const propDef = propTypes[key];\n            if (key in opts && !propDef.private) {\n                if (propDef.validate) {\n                    (0,_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(propDef.validate(opts[key], propDef), \"\".concat(this.name, \": invalid \").concat(key));\n                }\n                uniforms[key] = opts[key];\n            } else {\n                uniforms[key] = propDef.value;\n            }\n        }\n        return uniforms;\n    }\n}\nfunction normalizeShaderModule(module) {\n    if (!module.normalized) {\n        module.normalized = true;\n        if (module.uniforms && !module.getUniforms) {\n            const shaderModule = new ShaderModule(module);\n            module.getUniforms = shaderModule.getUniforms.bind(shaderModule);\n        }\n    }\n    return module;\n}\nfunction normalizeInjections(injections) {\n    const result = {\n        vs: {},\n        fs: {}\n    };\n    for(const hook in injections){\n        let injection = injections[hook];\n        const stage = hook.slice(0, 2);\n        if (typeof injection === \"string\") {\n            injection = {\n                order: 0,\n                injection\n            };\n        }\n        result[stage][hook] = injection;\n    }\n    return result;\n} //# sourceMappingURL=shader-module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/shader-module.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/transpile-shader.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/lib/transpile-shader.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ transpileShader)\n/* harmony export */ });\nfunction testVariable(qualifier) {\n    return new RegExp(\"\\\\b\".concat(qualifier, \"[ \\\\t]+(\\\\w+[ \\\\t]+\\\\w+(\\\\[\\\\w+\\\\])?;)\"), \"g\");\n}\nconst ES300_REPLACEMENTS = [\n    [\n        /^(#version[ \\t]+(100|300[ \\t]+es))?[ \\t]*\\n/,\n        \"#version 300 es\\n\"\n    ],\n    [\n        /\\btexture(2D|2DProj|Cube)Lod(EXT)?\\(/g,\n        \"textureLod(\"\n    ],\n    [\n        /\\btexture(2D|2DProj|Cube)(EXT)?\\(/g,\n        \"texture(\"\n    ]\n];\nconst ES300_VERTEX_REPLACEMENTS = [\n    ...ES300_REPLACEMENTS,\n    [\n        testVariable(\"attribute\"),\n        \"in $1\"\n    ],\n    [\n        testVariable(\"varying\"),\n        \"out $1\"\n    ]\n];\nconst ES300_FRAGMENT_REPLACEMENTS = [\n    ...ES300_REPLACEMENTS,\n    [\n        testVariable(\"varying\"),\n        \"in $1\"\n    ]\n];\nconst ES100_REPLACEMENTS = [\n    [\n        /^#version[ \\t]+300[ \\t]+es/,\n        \"#version 100\"\n    ],\n    [\n        /\\btexture(2D|2DProj|Cube)Lod\\(/g,\n        \"texture$1LodEXT(\"\n    ],\n    [\n        /\\btexture\\(/g,\n        \"texture2D(\"\n    ],\n    [\n        /\\btextureLod\\(/g,\n        \"texture2DLodEXT(\"\n    ]\n];\nconst ES100_VERTEX_REPLACEMENTS = [\n    ...ES100_REPLACEMENTS,\n    [\n        testVariable(\"in\"),\n        \"attribute $1\"\n    ],\n    [\n        testVariable(\"out\"),\n        \"varying $1\"\n    ]\n];\nconst ES100_FRAGMENT_REPLACEMENTS = [\n    ...ES100_REPLACEMENTS,\n    [\n        testVariable(\"in\"),\n        \"varying $1\"\n    ]\n];\nconst ES100_FRAGMENT_OUTPUT_NAME = \"gl_FragColor\";\nconst ES300_FRAGMENT_OUTPUT_REGEX = /\\bout[ \\t]+vec4[ \\t]+(\\w+)[ \\t]*;\\n?/;\nconst REGEX_START_OF_MAIN = /void\\s+main\\s*\\([^)]*\\)\\s*\\{\\n?/;\nfunction transpileShader(source, targetGLSLVersion, isVertex) {\n    switch(targetGLSLVersion){\n        case 300:\n            return isVertex ? convertShader(source, ES300_VERTEX_REPLACEMENTS) : convertFragmentShaderTo300(source);\n        case 100:\n            return isVertex ? convertShader(source, ES100_VERTEX_REPLACEMENTS) : convertFragmentShaderTo100(source);\n        default:\n            throw new Error(\"unknown GLSL version \".concat(targetGLSLVersion));\n    }\n}\nfunction convertShader(source, replacements) {\n    for (const [pattern, replacement] of replacements){\n        source = source.replace(pattern, replacement);\n    }\n    return source;\n}\nfunction convertFragmentShaderTo300(source) {\n    source = convertShader(source, ES300_FRAGMENT_REPLACEMENTS);\n    const outputMatch = source.match(ES300_FRAGMENT_OUTPUT_REGEX);\n    if (outputMatch) {\n        const outputName = outputMatch[1];\n        source = source.replace(new RegExp(\"\\\\b\".concat(ES100_FRAGMENT_OUTPUT_NAME, \"\\\\b\"), \"g\"), outputName);\n    } else {\n        const outputName = \"fragmentColor\";\n        source = source.replace(REGEX_START_OF_MAIN, (match)=>\"out vec4 \".concat(outputName, \";\\n\").concat(match)).replace(new RegExp(\"\\\\b\".concat(ES100_FRAGMENT_OUTPUT_NAME, \"\\\\b\"), \"g\"), outputName);\n    }\n    return source;\n}\nfunction convertFragmentShaderTo100(source) {\n    source = convertShader(source, ES100_FRAGMENT_REPLACEMENTS);\n    const outputMatch = source.match(ES300_FRAGMENT_OUTPUT_REGEX);\n    if (outputMatch) {\n        const outputName = outputMatch[1];\n        source = source.replace(ES300_FRAGMENT_OUTPUT_REGEX, \"\").replace(new RegExp(\"\\\\b\".concat(outputName, \"\\\\b\"), \"g\"), ES100_FRAGMENT_OUTPUT_NAME);\n    }\n    return source;\n} //# sourceMappingURL=transpile-shader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbGliL3RyYW5zcGlsZS1zaGFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLGFBQWFDLFNBQVM7SUFDN0IsT0FBTyxJQUFJQyxPQUFPLE1BQU1DLE1BQU0sQ0FBQ0YsV0FBVywyQ0FBMkM7QUFDdkY7QUFFQSxNQUFNRyxxQkFBcUI7SUFBQztRQUFDO1FBQStDO0tBQW9CO0lBQUU7UUFBQztRQUF5QztLQUFjO0lBQUU7UUFBQztRQUFzQztLQUFXO0NBQUM7QUFDL00sTUFBTUMsNEJBQTRCO09BQUlEO0lBQW9CO1FBQUNKLGFBQWE7UUFBYztLQUFRO0lBQUU7UUFBQ0EsYUFBYTtRQUFZO0tBQVM7Q0FBQztBQUNwSSxNQUFNTSw4QkFBOEI7T0FBSUY7SUFBb0I7UUFBQ0osYUFBYTtRQUFZO0tBQVE7Q0FBQztBQUMvRixNQUFNTyxxQkFBcUI7SUFBQztRQUFDO1FBQThCO0tBQWU7SUFBRTtRQUFDO1FBQW1DO0tBQW1CO0lBQUU7UUFBQztRQUFnQjtLQUFhO0lBQUU7UUFBQztRQUFtQjtLQUFtQjtDQUFDO0FBQzdNLE1BQU1DLDRCQUE0QjtPQUFJRDtJQUFvQjtRQUFDUCxhQUFhO1FBQU87S0FBZTtJQUFFO1FBQUNBLGFBQWE7UUFBUTtLQUFhO0NBQUM7QUFDcEksTUFBTVMsOEJBQThCO09BQUlGO0lBQW9CO1FBQUNQLGFBQWE7UUFBTztLQUFhO0NBQUM7QUFDL0YsTUFBTVUsNkJBQTZCO0FBQ25DLE1BQU1DLDhCQUE4QjtBQUNwQyxNQUFNQyxzQkFBc0I7QUFDYixTQUFTQyxnQkFBZ0JDLE1BQU0sRUFBRUMsaUJBQWlCLEVBQUVDLFFBQVE7SUFDekUsT0FBUUQ7UUFDTixLQUFLO1lBQ0gsT0FBT0MsV0FBV0MsY0FBY0gsUUFBUVQsNkJBQTZCYSwyQkFBMkJKO1FBRWxHLEtBQUs7WUFDSCxPQUFPRSxXQUFXQyxjQUFjSCxRQUFRTiw2QkFBNkJXLDJCQUEyQkw7UUFFbEc7WUFDRSxNQUFNLElBQUlNLE1BQU0sd0JBQXdCakIsTUFBTSxDQUFDWTtJQUNuRDtBQUNGO0FBRUEsU0FBU0UsY0FBY0gsTUFBTSxFQUFFTyxZQUFZO0lBQ3pDLEtBQUssTUFBTSxDQUFDQyxTQUFTQyxZQUFZLElBQUlGLGFBQWM7UUFDakRQLFNBQVNBLE9BQU9VLE9BQU8sQ0FBQ0YsU0FBU0M7SUFDbkM7SUFFQSxPQUFPVDtBQUNUO0FBRUEsU0FBU0ksMkJBQTJCSixNQUFNO0lBQ3hDQSxTQUFTRyxjQUFjSCxRQUFRUjtJQUMvQixNQUFNbUIsY0FBY1gsT0FBT1ksS0FBSyxDQUFDZjtJQUVqQyxJQUFJYyxhQUFhO1FBQ2YsTUFBTUUsYUFBYUYsV0FBVyxDQUFDLEVBQUU7UUFDakNYLFNBQVNBLE9BQU9VLE9BQU8sQ0FBQyxJQUFJdEIsT0FBTyxNQUFNQyxNQUFNLENBQUNPLDRCQUE0QixRQUFRLE1BQU1pQjtJQUM1RixPQUFPO1FBQ0wsTUFBTUEsYUFBYTtRQUNuQmIsU0FBU0EsT0FBT1UsT0FBTyxDQUFDWixxQkFBcUJjLENBQUFBLFFBQVMsWUFBWXZCLE1BQU0sQ0FBQ3dCLFlBQVksT0FBT3hCLE1BQU0sQ0FBQ3VCLFFBQVFGLE9BQU8sQ0FBQyxJQUFJdEIsT0FBTyxNQUFNQyxNQUFNLENBQUNPLDRCQUE0QixRQUFRLE1BQU1pQjtJQUN2TDtJQUVBLE9BQU9iO0FBQ1Q7QUFFQSxTQUFTSywyQkFBMkJMLE1BQU07SUFDeENBLFNBQVNHLGNBQWNILFFBQVFMO0lBQy9CLE1BQU1nQixjQUFjWCxPQUFPWSxLQUFLLENBQUNmO0lBRWpDLElBQUljLGFBQWE7UUFDZixNQUFNRSxhQUFhRixXQUFXLENBQUMsRUFBRTtRQUNqQ1gsU0FBU0EsT0FBT1UsT0FBTyxDQUFDYiw2QkFBNkIsSUFBSWEsT0FBTyxDQUFDLElBQUl0QixPQUFPLE1BQU1DLE1BQU0sQ0FBQ3dCLFlBQVksUUFBUSxNQUFNakI7SUFDckg7SUFFQSxPQUFPSTtBQUNULEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbGliL3RyYW5zcGlsZS1zaGFkZXIuanM/N2E5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB0ZXN0VmFyaWFibGUocXVhbGlmaWVyKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXFxcXGJcIi5jb25jYXQocXVhbGlmaWVyLCBcIlsgXFxcXHRdKyhcXFxcdytbIFxcXFx0XStcXFxcdysoXFxcXFtcXFxcdytcXFxcXSk/OylcIiksICdnJyk7XG59XG5cbmNvbnN0IEVTMzAwX1JFUExBQ0VNRU5UUyA9IFtbL14oI3ZlcnNpb25bIFxcdF0rKDEwMHwzMDBbIFxcdF0rZXMpKT9bIFxcdF0qXFxuLywgJyN2ZXJzaW9uIDMwMCBlc1xcbiddLCBbL1xcYnRleHR1cmUoMkR8MkRQcm9qfEN1YmUpTG9kKEVYVCk/XFwoL2csICd0ZXh0dXJlTG9kKCddLCBbL1xcYnRleHR1cmUoMkR8MkRQcm9qfEN1YmUpKEVYVCk/XFwoL2csICd0ZXh0dXJlKCddXTtcbmNvbnN0IEVTMzAwX1ZFUlRFWF9SRVBMQUNFTUVOVFMgPSBbLi4uRVMzMDBfUkVQTEFDRU1FTlRTLCBbdGVzdFZhcmlhYmxlKCdhdHRyaWJ1dGUnKSwgJ2luICQxJ10sIFt0ZXN0VmFyaWFibGUoJ3ZhcnlpbmcnKSwgJ291dCAkMSddXTtcbmNvbnN0IEVTMzAwX0ZSQUdNRU5UX1JFUExBQ0VNRU5UUyA9IFsuLi5FUzMwMF9SRVBMQUNFTUVOVFMsIFt0ZXN0VmFyaWFibGUoJ3ZhcnlpbmcnKSwgJ2luICQxJ11dO1xuY29uc3QgRVMxMDBfUkVQTEFDRU1FTlRTID0gW1svXiN2ZXJzaW9uWyBcXHRdKzMwMFsgXFx0XStlcy8sICcjdmVyc2lvbiAxMDAnXSwgWy9cXGJ0ZXh0dXJlKDJEfDJEUHJvanxDdWJlKUxvZFxcKC9nLCAndGV4dHVyZSQxTG9kRVhUKCddLCBbL1xcYnRleHR1cmVcXCgvZywgJ3RleHR1cmUyRCgnXSwgWy9cXGJ0ZXh0dXJlTG9kXFwoL2csICd0ZXh0dXJlMkRMb2RFWFQoJ11dO1xuY29uc3QgRVMxMDBfVkVSVEVYX1JFUExBQ0VNRU5UUyA9IFsuLi5FUzEwMF9SRVBMQUNFTUVOVFMsIFt0ZXN0VmFyaWFibGUoJ2luJyksICdhdHRyaWJ1dGUgJDEnXSwgW3Rlc3RWYXJpYWJsZSgnb3V0JyksICd2YXJ5aW5nICQxJ11dO1xuY29uc3QgRVMxMDBfRlJBR01FTlRfUkVQTEFDRU1FTlRTID0gWy4uLkVTMTAwX1JFUExBQ0VNRU5UUywgW3Rlc3RWYXJpYWJsZSgnaW4nKSwgJ3ZhcnlpbmcgJDEnXV07XG5jb25zdCBFUzEwMF9GUkFHTUVOVF9PVVRQVVRfTkFNRSA9ICdnbF9GcmFnQ29sb3InO1xuY29uc3QgRVMzMDBfRlJBR01FTlRfT1VUUFVUX1JFR0VYID0gL1xcYm91dFsgXFx0XSt2ZWM0WyBcXHRdKyhcXHcrKVsgXFx0XSo7XFxuPy87XG5jb25zdCBSRUdFWF9TVEFSVF9PRl9NQUlOID0gL3ZvaWRcXHMrbWFpblxccypcXChbXildKlxcKVxccypcXHtcXG4/LztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zcGlsZVNoYWRlcihzb3VyY2UsIHRhcmdldEdMU0xWZXJzaW9uLCBpc1ZlcnRleCkge1xuICBzd2l0Y2ggKHRhcmdldEdMU0xWZXJzaW9uKSB7XG4gICAgY2FzZSAzMDA6XG4gICAgICByZXR1cm4gaXNWZXJ0ZXggPyBjb252ZXJ0U2hhZGVyKHNvdXJjZSwgRVMzMDBfVkVSVEVYX1JFUExBQ0VNRU5UUykgOiBjb252ZXJ0RnJhZ21lbnRTaGFkZXJUbzMwMChzb3VyY2UpO1xuXG4gICAgY2FzZSAxMDA6XG4gICAgICByZXR1cm4gaXNWZXJ0ZXggPyBjb252ZXJ0U2hhZGVyKHNvdXJjZSwgRVMxMDBfVkVSVEVYX1JFUExBQ0VNRU5UUykgOiBjb252ZXJ0RnJhZ21lbnRTaGFkZXJUbzEwMChzb3VyY2UpO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihcInVua25vd24gR0xTTCB2ZXJzaW9uIFwiLmNvbmNhdCh0YXJnZXRHTFNMVmVyc2lvbikpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRTaGFkZXIoc291cmNlLCByZXBsYWNlbWVudHMpIHtcbiAgZm9yIChjb25zdCBbcGF0dGVybiwgcmVwbGFjZW1lbnRdIG9mIHJlcGxhY2VtZW50cykge1xuICAgIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKHBhdHRlcm4sIHJlcGxhY2VtZW50KTtcbiAgfVxuXG4gIHJldHVybiBzb3VyY2U7XG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRGcmFnbWVudFNoYWRlclRvMzAwKHNvdXJjZSkge1xuICBzb3VyY2UgPSBjb252ZXJ0U2hhZGVyKHNvdXJjZSwgRVMzMDBfRlJBR01FTlRfUkVQTEFDRU1FTlRTKTtcbiAgY29uc3Qgb3V0cHV0TWF0Y2ggPSBzb3VyY2UubWF0Y2goRVMzMDBfRlJBR01FTlRfT1VUUFVUX1JFR0VYKTtcblxuICBpZiAob3V0cHV0TWF0Y2gpIHtcbiAgICBjb25zdCBvdXRwdXROYW1lID0gb3V0cHV0TWF0Y2hbMV07XG4gICAgc291cmNlID0gc291cmNlLnJlcGxhY2UobmV3IFJlZ0V4cChcIlxcXFxiXCIuY29uY2F0KEVTMTAwX0ZSQUdNRU5UX09VVFBVVF9OQU1FLCBcIlxcXFxiXCIpLCAnZycpLCBvdXRwdXROYW1lKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBvdXRwdXROYW1lID0gJ2ZyYWdtZW50Q29sb3InO1xuICAgIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKFJFR0VYX1NUQVJUX09GX01BSU4sIG1hdGNoID0+IFwib3V0IHZlYzQgXCIuY29uY2F0KG91dHB1dE5hbWUsIFwiO1xcblwiKS5jb25jYXQobWF0Y2gpKS5yZXBsYWNlKG5ldyBSZWdFeHAoXCJcXFxcYlwiLmNvbmNhdChFUzEwMF9GUkFHTUVOVF9PVVRQVVRfTkFNRSwgXCJcXFxcYlwiKSwgJ2cnKSwgb3V0cHV0TmFtZSk7XG4gIH1cblxuICByZXR1cm4gc291cmNlO1xufVxuXG5mdW5jdGlvbiBjb252ZXJ0RnJhZ21lbnRTaGFkZXJUbzEwMChzb3VyY2UpIHtcbiAgc291cmNlID0gY29udmVydFNoYWRlcihzb3VyY2UsIEVTMTAwX0ZSQUdNRU5UX1JFUExBQ0VNRU5UUyk7XG4gIGNvbnN0IG91dHB1dE1hdGNoID0gc291cmNlLm1hdGNoKEVTMzAwX0ZSQUdNRU5UX09VVFBVVF9SRUdFWCk7XG5cbiAgaWYgKG91dHB1dE1hdGNoKSB7XG4gICAgY29uc3Qgb3V0cHV0TmFtZSA9IG91dHB1dE1hdGNoWzFdO1xuICAgIHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKEVTMzAwX0ZSQUdNRU5UX09VVFBVVF9SRUdFWCwgJycpLnJlcGxhY2UobmV3IFJlZ0V4cChcIlxcXFxiXCIuY29uY2F0KG91dHB1dE5hbWUsIFwiXFxcXGJcIiksICdnJyksIEVTMTAwX0ZSQUdNRU5UX09VVFBVVF9OQU1FKTtcbiAgfVxuXG4gIHJldHVybiBzb3VyY2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc3BpbGUtc2hhZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJ0ZXN0VmFyaWFibGUiLCJxdWFsaWZpZXIiLCJSZWdFeHAiLCJjb25jYXQiLCJFUzMwMF9SRVBMQUNFTUVOVFMiLCJFUzMwMF9WRVJURVhfUkVQTEFDRU1FTlRTIiwiRVMzMDBfRlJBR01FTlRfUkVQTEFDRU1FTlRTIiwiRVMxMDBfUkVQTEFDRU1FTlRTIiwiRVMxMDBfVkVSVEVYX1JFUExBQ0VNRU5UUyIsIkVTMTAwX0ZSQUdNRU5UX1JFUExBQ0VNRU5UUyIsIkVTMTAwX0ZSQUdNRU5UX09VVFBVVF9OQU1FIiwiRVMzMDBfRlJBR01FTlRfT1VUUFVUX1JFR0VYIiwiUkVHRVhfU1RBUlRfT0ZfTUFJTiIsInRyYW5zcGlsZVNoYWRlciIsInNvdXJjZSIsInRhcmdldEdMU0xWZXJzaW9uIiwiaXNWZXJ0ZXgiLCJjb252ZXJ0U2hhZGVyIiwiY29udmVydEZyYWdtZW50U2hhZGVyVG8zMDAiLCJjb252ZXJ0RnJhZ21lbnRTaGFkZXJUbzEwMCIsIkVycm9yIiwicmVwbGFjZW1lbnRzIiwicGF0dGVybiIsInJlcGxhY2VtZW50IiwicmVwbGFjZSIsIm91dHB1dE1hdGNoIiwibWF0Y2giLCJvdXRwdXROYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/lib/transpile-shader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/fp32/fp32.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/modules/fp32/fp32.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fp32: () => (/* binding */ fp32)\n/* harmony export */ });\nconst fp32shader = \"#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\\nconst float TWO_PI = 6.2831854820251465;\\nconst float PI_2 = 1.5707963705062866;\\nconst float PI_16 = 0.1963495463132858;\\n\\nconst float SIN_TABLE_0 = 0.19509032368659973;\\nconst float SIN_TABLE_1 = 0.3826834261417389;\\nconst float SIN_TABLE_2 = 0.5555702447891235;\\nconst float SIN_TABLE_3 = 0.7071067690849304;\\n\\nconst float COS_TABLE_0 = 0.9807852506637573;\\nconst float COS_TABLE_1 = 0.9238795042037964;\\nconst float COS_TABLE_2 = 0.8314695954322815;\\nconst float COS_TABLE_3 = 0.7071067690849304;\\n\\nconst float INVERSE_FACTORIAL_3 = 1.666666716337204e-01;\\nconst float INVERSE_FACTORIAL_5 = 8.333333767950535e-03;\\nconst float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04;\\nconst float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06;\\n\\nfloat sin_taylor_fp32(float a) {\\n  float r, s, t, x;\\n\\n  if (a == 0.0) {\\n    return 0.0;\\n  }\\n\\n  x = -a * a;\\n  s = a;\\n  r = a;\\n\\n  r = r * x;\\n  t = r * INVERSE_FACTORIAL_3;\\n  s = s + t;\\n\\n  r = r * x;\\n  t = r * INVERSE_FACTORIAL_5;\\n  s = s + t;\\n\\n  r = r * x;\\n  t = r * INVERSE_FACTORIAL_7;\\n  s = s + t;\\n\\n  r = r * x;\\n  t = r * INVERSE_FACTORIAL_9;\\n  s = s + t;\\n\\n  return s;\\n}\\n\\nvoid sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {\\n  if (a == 0.0) {\\n    sin_t = 0.0;\\n    cos_t = 1.0;\\n  }\\n  sin_t = sin_taylor_fp32(a);\\n  cos_t = sqrt(1.0 - sin_t * sin_t);\\n}\\n\\nfloat tan_taylor_fp32(float a) {\\n    float sin_a;\\n    float cos_a;\\n\\n    if (a == 0.0) {\\n        return 0.0;\\n    }\\n    float z = floor(a / TWO_PI);\\n    float r = a - TWO_PI * z;\\n\\n    float t;\\n    float q = floor(r / PI_2 + 0.5);\\n    int j = int(q);\\n\\n    if (j < -2 || j > 2) {\\n        return 1.0 / 0.0;\\n    }\\n\\n    t = r - PI_2 * q;\\n\\n    q = floor(t / PI_16 + 0.5);\\n    int k = int(q);\\n    int abs_k = int(abs(float(k)));\\n\\n    if (abs_k > 4) {\\n        return 1.0 / 0.0;\\n    } else {\\n        t = t - PI_16 * q;\\n    }\\n\\n    float u = 0.0;\\n    float v = 0.0;\\n\\n    float sin_t, cos_t;\\n    float s, c;\\n    sincos_taylor_fp32(t, sin_t, cos_t);\\n\\n    if (k == 0) {\\n        s = sin_t;\\n        c = cos_t;\\n    } else {\\n        if (abs(float(abs_k) - 1.0) < 0.5) {\\n            u = COS_TABLE_0;\\n            v = SIN_TABLE_0;\\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\\n            u = COS_TABLE_1;\\n            v = SIN_TABLE_1;\\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\\n            u = COS_TABLE_2;\\n            v = SIN_TABLE_2;\\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\\n            u = COS_TABLE_3;\\n            v = SIN_TABLE_3;\\n        }\\n        if (k > 0) {\\n            s = u * sin_t + v * cos_t;\\n            c = u * cos_t - v * sin_t;\\n        } else {\\n            s = u * sin_t - v * cos_t;\\n            c = u * cos_t + v * sin_t;\\n        }\\n    }\\n\\n    if (j == 0) {\\n        sin_a = s;\\n        cos_a = c;\\n    } else if (j == 1) {\\n        sin_a = c;\\n        cos_a = -s;\\n    } else if (j == -1) {\\n        sin_a = -c;\\n        cos_a = s;\\n    } else {\\n        sin_a = -s;\\n        cos_a = -c;\\n    }\\n    return sin_a / cos_a;\\n}\\n#endif\\n\\nfloat tan_fp32(float a) {\\n#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\\n  return tan_taylor_fp32(a);\\n#else\\n  return tan(a);\\n#endif\\n}\\n\";\nconst fp32 = {\n    name: \"fp32\",\n    vs: fp32shader,\n    fs: null\n}; //# sourceMappingURL=fp32.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9mcDMyL2ZwMzIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGFBQWE7QUFDWixNQUFNQyxPQUFPO0lBQ2xCQyxNQUFNO0lBQ05DLElBQUlIO0lBQ0pJLElBQUk7QUFDTixFQUFFLENBQ0YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9mcDMyL2ZwMzIuanM/N2IzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcDMyc2hhZGVyID0gXCIjaWZkZWYgTFVNQV9GUDMyX1RBTl9QUkVDSVNJT05fV09SS0FST1VORFxcbmNvbnN0IGZsb2F0IFRXT19QSSA9IDYuMjgzMTg1NDgyMDI1MTQ2NTtcXG5jb25zdCBmbG9hdCBQSV8yID0gMS41NzA3OTYzNzA1MDYyODY2O1xcbmNvbnN0IGZsb2F0IFBJXzE2ID0gMC4xOTYzNDk1NDYzMTMyODU4O1xcblxcbmNvbnN0IGZsb2F0IFNJTl9UQUJMRV8wID0gMC4xOTUwOTAzMjM2ODY1OTk3MztcXG5jb25zdCBmbG9hdCBTSU5fVEFCTEVfMSA9IDAuMzgyNjgzNDI2MTQxNzM4OTtcXG5jb25zdCBmbG9hdCBTSU5fVEFCTEVfMiA9IDAuNTU1NTcwMjQ0Nzg5MTIzNTtcXG5jb25zdCBmbG9hdCBTSU5fVEFCTEVfMyA9IDAuNzA3MTA2NzY5MDg0OTMwNDtcXG5cXG5jb25zdCBmbG9hdCBDT1NfVEFCTEVfMCA9IDAuOTgwNzg1MjUwNjYzNzU3MztcXG5jb25zdCBmbG9hdCBDT1NfVEFCTEVfMSA9IDAuOTIzODc5NTA0MjAzNzk2NDtcXG5jb25zdCBmbG9hdCBDT1NfVEFCTEVfMiA9IDAuODMxNDY5NTk1NDMyMjgxNTtcXG5jb25zdCBmbG9hdCBDT1NfVEFCTEVfMyA9IDAuNzA3MTA2NzY5MDg0OTMwNDtcXG5cXG5jb25zdCBmbG9hdCBJTlZFUlNFX0ZBQ1RPUklBTF8zID0gMS42NjY2NjY3MTYzMzcyMDRlLTAxO1xcbmNvbnN0IGZsb2F0IElOVkVSU0VfRkFDVE9SSUFMXzUgPSA4LjMzMzMzMzc2Nzk1MDUzNWUtMDM7XFxuY29uc3QgZmxvYXQgSU5WRVJTRV9GQUNUT1JJQUxfNyA9IDEuOTg0MTI3MDExMzgyOTUyM2UtMDQ7XFxuY29uc3QgZmxvYXQgSU5WRVJTRV9GQUNUT1JJQUxfOSA9IDIuNzU1NzMxODg0NDYyODc1MzNlLTA2O1xcblxcbmZsb2F0IHNpbl90YXlsb3JfZnAzMihmbG9hdCBhKSB7XFxuICBmbG9hdCByLCBzLCB0LCB4O1xcblxcbiAgaWYgKGEgPT0gMC4wKSB7XFxuICAgIHJldHVybiAwLjA7XFxuICB9XFxuXFxuICB4ID0gLWEgKiBhO1xcbiAgcyA9IGE7XFxuICByID0gYTtcXG5cXG4gIHIgPSByICogeDtcXG4gIHQgPSByICogSU5WRVJTRV9GQUNUT1JJQUxfMztcXG4gIHMgPSBzICsgdDtcXG5cXG4gIHIgPSByICogeDtcXG4gIHQgPSByICogSU5WRVJTRV9GQUNUT1JJQUxfNTtcXG4gIHMgPSBzICsgdDtcXG5cXG4gIHIgPSByICogeDtcXG4gIHQgPSByICogSU5WRVJTRV9GQUNUT1JJQUxfNztcXG4gIHMgPSBzICsgdDtcXG5cXG4gIHIgPSByICogeDtcXG4gIHQgPSByICogSU5WRVJTRV9GQUNUT1JJQUxfOTtcXG4gIHMgPSBzICsgdDtcXG5cXG4gIHJldHVybiBzO1xcbn1cXG5cXG52b2lkIHNpbmNvc190YXlsb3JfZnAzMihmbG9hdCBhLCBvdXQgZmxvYXQgc2luX3QsIG91dCBmbG9hdCBjb3NfdCkge1xcbiAgaWYgKGEgPT0gMC4wKSB7XFxuICAgIHNpbl90ID0gMC4wO1xcbiAgICBjb3NfdCA9IDEuMDtcXG4gIH1cXG4gIHNpbl90ID0gc2luX3RheWxvcl9mcDMyKGEpO1xcbiAgY29zX3QgPSBzcXJ0KDEuMCAtIHNpbl90ICogc2luX3QpO1xcbn1cXG5cXG5mbG9hdCB0YW5fdGF5bG9yX2ZwMzIoZmxvYXQgYSkge1xcbiAgICBmbG9hdCBzaW5fYTtcXG4gICAgZmxvYXQgY29zX2E7XFxuXFxuICAgIGlmIChhID09IDAuMCkge1xcbiAgICAgICAgcmV0dXJuIDAuMDtcXG4gICAgfVxcbiAgICBmbG9hdCB6ID0gZmxvb3IoYSAvIFRXT19QSSk7XFxuICAgIGZsb2F0IHIgPSBhIC0gVFdPX1BJICogejtcXG5cXG4gICAgZmxvYXQgdDtcXG4gICAgZmxvYXQgcSA9IGZsb29yKHIgLyBQSV8yICsgMC41KTtcXG4gICAgaW50IGogPSBpbnQocSk7XFxuXFxuICAgIGlmIChqIDwgLTIgfHwgaiA+IDIpIHtcXG4gICAgICAgIHJldHVybiAxLjAgLyAwLjA7XFxuICAgIH1cXG5cXG4gICAgdCA9IHIgLSBQSV8yICogcTtcXG5cXG4gICAgcSA9IGZsb29yKHQgLyBQSV8xNiArIDAuNSk7XFxuICAgIGludCBrID0gaW50KHEpO1xcbiAgICBpbnQgYWJzX2sgPSBpbnQoYWJzKGZsb2F0KGspKSk7XFxuXFxuICAgIGlmIChhYnNfayA+IDQpIHtcXG4gICAgICAgIHJldHVybiAxLjAgLyAwLjA7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgICB0ID0gdCAtIFBJXzE2ICogcTtcXG4gICAgfVxcblxcbiAgICBmbG9hdCB1ID0gMC4wO1xcbiAgICBmbG9hdCB2ID0gMC4wO1xcblxcbiAgICBmbG9hdCBzaW5fdCwgY29zX3Q7XFxuICAgIGZsb2F0IHMsIGM7XFxuICAgIHNpbmNvc190YXlsb3JfZnAzMih0LCBzaW5fdCwgY29zX3QpO1xcblxcbiAgICBpZiAoayA9PSAwKSB7XFxuICAgICAgICBzID0gc2luX3Q7XFxuICAgICAgICBjID0gY29zX3Q7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgICBpZiAoYWJzKGZsb2F0KGFic19rKSAtIDEuMCkgPCAwLjUpIHtcXG4gICAgICAgICAgICB1ID0gQ09TX1RBQkxFXzA7XFxuICAgICAgICAgICAgdiA9IFNJTl9UQUJMRV8wO1xcbiAgICAgICAgfSBlbHNlIGlmIChhYnMoZmxvYXQoYWJzX2spIC0gMi4wKSA8IDAuNSkge1xcbiAgICAgICAgICAgIHUgPSBDT1NfVEFCTEVfMTtcXG4gICAgICAgICAgICB2ID0gU0lOX1RBQkxFXzE7XFxuICAgICAgICB9IGVsc2UgaWYgKGFicyhmbG9hdChhYnNfaykgLSAzLjApIDwgMC41KSB7XFxuICAgICAgICAgICAgdSA9IENPU19UQUJMRV8yO1xcbiAgICAgICAgICAgIHYgPSBTSU5fVEFCTEVfMjtcXG4gICAgICAgIH0gZWxzZSBpZiAoYWJzKGZsb2F0KGFic19rKSAtIDQuMCkgPCAwLjUpIHtcXG4gICAgICAgICAgICB1ID0gQ09TX1RBQkxFXzM7XFxuICAgICAgICAgICAgdiA9IFNJTl9UQUJMRV8zO1xcbiAgICAgICAgfVxcbiAgICAgICAgaWYgKGsgPiAwKSB7XFxuICAgICAgICAgICAgcyA9IHUgKiBzaW5fdCArIHYgKiBjb3NfdDtcXG4gICAgICAgICAgICBjID0gdSAqIGNvc190IC0gdiAqIHNpbl90O1xcbiAgICAgICAgfSBlbHNlIHtcXG4gICAgICAgICAgICBzID0gdSAqIHNpbl90IC0gdiAqIGNvc190O1xcbiAgICAgICAgICAgIGMgPSB1ICogY29zX3QgKyB2ICogc2luX3Q7XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgaWYgKGogPT0gMCkge1xcbiAgICAgICAgc2luX2EgPSBzO1xcbiAgICAgICAgY29zX2EgPSBjO1xcbiAgICB9IGVsc2UgaWYgKGogPT0gMSkge1xcbiAgICAgICAgc2luX2EgPSBjO1xcbiAgICAgICAgY29zX2EgPSAtcztcXG4gICAgfSBlbHNlIGlmIChqID09IC0xKSB7XFxuICAgICAgICBzaW5fYSA9IC1jO1xcbiAgICAgICAgY29zX2EgPSBzO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgICAgc2luX2EgPSAtcztcXG4gICAgICAgIGNvc19hID0gLWM7XFxuICAgIH1cXG4gICAgcmV0dXJuIHNpbl9hIC8gY29zX2E7XFxufVxcbiNlbmRpZlxcblxcbmZsb2F0IHRhbl9mcDMyKGZsb2F0IGEpIHtcXG4jaWZkZWYgTFVNQV9GUDMyX1RBTl9QUkVDSVNJT05fV09SS0FST1VORFxcbiAgcmV0dXJuIHRhbl90YXlsb3JfZnAzMihhKTtcXG4jZWxzZVxcbiAgcmV0dXJuIHRhbihhKTtcXG4jZW5kaWZcXG59XFxuXCI7XG5leHBvcnQgY29uc3QgZnAzMiA9IHtcbiAgbmFtZTogJ2ZwMzInLFxuICB2czogZnAzMnNoYWRlcixcbiAgZnM6IG51bGxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mcDMyLmpzLm1hcCJdLCJuYW1lcyI6WyJmcDMyc2hhZGVyIiwiZnAzMiIsIm5hbWUiLCJ2cyIsImZzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/fp32/fp32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\\n\\nstruct AmbientLight {\\n vec3 color;\\n};\\n\\nstruct PointLight {\\n vec3 color;\\n vec3 position;\\n vec3 attenuation;\\n};\\n\\nstruct DirectionalLight {\\n  vec3 color;\\n  vec3 direction;\\n};\\n\\nuniform AmbientLight lighting_uAmbientLight;\\nuniform PointLight lighting_uPointLight[MAX_LIGHTS];\\nuniform DirectionalLight lighting_uDirectionalLight[MAX_LIGHTS];\\nuniform int lighting_uPointLightCount;\\nuniform int lighting_uDirectionalLightCount;\\n\\nuniform bool lighting_uEnabled;\\n\\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\\n  return pointLight.attenuation.x\\n       + pointLight.attenuation.y * distance\\n       + pointLight.attenuation.z * distance * distance;\\n}\\n\\n#endif\\n\"); //# sourceMappingURL=lights.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9saWdodHMvbGlnaHRzLmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGswQkFBazBCLEVBQUMsQ0FDbDFCLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3NoYWRlcnRvb2xzL2Rpc3QvZXNtL21vZHVsZXMvbGlnaHRzL2xpZ2h0cy5nbHNsLmpzP2UyYjQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjaWYgKGRlZmluZWQoU0hBREVSX1RZUEVfRlJBR01FTlQpICYmIGRlZmluZWQoTElHSFRJTkdfRlJBR01FTlQpKSB8fCAoZGVmaW5lZChTSEFERVJfVFlQRV9WRVJURVgpICYmIGRlZmluZWQoTElHSFRJTkdfVkVSVEVYKSlcXG5cXG5zdHJ1Y3QgQW1iaWVudExpZ2h0IHtcXG4gdmVjMyBjb2xvcjtcXG59O1xcblxcbnN0cnVjdCBQb2ludExpZ2h0IHtcXG4gdmVjMyBjb2xvcjtcXG4gdmVjMyBwb3NpdGlvbjtcXG4gdmVjMyBhdHRlbnVhdGlvbjtcXG59O1xcblxcbnN0cnVjdCBEaXJlY3Rpb25hbExpZ2h0IHtcXG4gIHZlYzMgY29sb3I7XFxuICB2ZWMzIGRpcmVjdGlvbjtcXG59O1xcblxcbnVuaWZvcm0gQW1iaWVudExpZ2h0IGxpZ2h0aW5nX3VBbWJpZW50TGlnaHQ7XFxudW5pZm9ybSBQb2ludExpZ2h0IGxpZ2h0aW5nX3VQb2ludExpZ2h0W01BWF9MSUdIVFNdO1xcbnVuaWZvcm0gRGlyZWN0aW9uYWxMaWdodCBsaWdodGluZ191RGlyZWN0aW9uYWxMaWdodFtNQVhfTElHSFRTXTtcXG51bmlmb3JtIGludCBsaWdodGluZ191UG9pbnRMaWdodENvdW50O1xcbnVuaWZvcm0gaW50IGxpZ2h0aW5nX3VEaXJlY3Rpb25hbExpZ2h0Q291bnQ7XFxuXFxudW5pZm9ybSBib29sIGxpZ2h0aW5nX3VFbmFibGVkO1xcblxcbmZsb2F0IGdldFBvaW50TGlnaHRBdHRlbnVhdGlvbihQb2ludExpZ2h0IHBvaW50TGlnaHQsIGZsb2F0IGRpc3RhbmNlKSB7XFxuICByZXR1cm4gcG9pbnRMaWdodC5hdHRlbnVhdGlvbi54XFxuICAgICAgICsgcG9pbnRMaWdodC5hdHRlbnVhdGlvbi55ICogZGlzdGFuY2VcXG4gICAgICAgKyBwb2ludExpZ2h0LmF0dGVudWF0aW9uLnogKiBkaXN0YW5jZSAqIGRpc3RhbmNlO1xcbn1cXG5cXG4jZW5kaWZcXG5cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpZ2h0cy5nbHNsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lights: () => (/* binding */ lights)\n/* harmony export */ });\n/* harmony import */ var _lights_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lights.glsl */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.glsl.js\");\n\nconst INITIAL_MODULE_OPTIONS = {\n    lightSources: {}\n};\nfunction convertColor() {\n    let { color = [\n        0,\n        0,\n        0\n    ], intensity = 1.0 } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return color.map((component)=>component * intensity / 255.0);\n}\nfunction getLightSourceUniforms(_ref) {\n    let { ambientLight, pointLights = [], directionalLights = [] } = _ref;\n    const lightSourceUniforms = {};\n    if (ambientLight) {\n        lightSourceUniforms[\"lighting_uAmbientLight.color\"] = convertColor(ambientLight);\n    } else {\n        lightSourceUniforms[\"lighting_uAmbientLight.color\"] = [\n            0,\n            0,\n            0\n        ];\n    }\n    pointLights.forEach((pointLight, index)=>{\n        lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].color\")] = convertColor(pointLight);\n        lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].position\")] = pointLight.position;\n        lightSourceUniforms[\"lighting_uPointLight[\".concat(index, \"].attenuation\")] = pointLight.attenuation || [\n            1,\n            0,\n            0\n        ];\n    });\n    lightSourceUniforms.lighting_uPointLightCount = pointLights.length;\n    directionalLights.forEach((directionalLight, index)=>{\n        lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].color\")] = convertColor(directionalLight);\n        lightSourceUniforms[\"lighting_uDirectionalLight[\".concat(index, \"].direction\")] = directionalLight.direction;\n    });\n    lightSourceUniforms.lighting_uDirectionalLightCount = directionalLights.length;\n    return lightSourceUniforms;\n}\nfunction getUniforms() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n    if (\"lightSources\" in opts) {\n        const { ambientLight, pointLights, directionalLights } = opts.lightSources || {};\n        const hasLights = ambientLight || pointLights && pointLights.length > 0 || directionalLights && directionalLights.length > 0;\n        if (!hasLights) {\n            return {\n                lighting_uEnabled: false\n            };\n        }\n        return Object.assign({}, getLightSourceUniforms({\n            ambientLight,\n            pointLights,\n            directionalLights\n        }), {\n            lighting_uEnabled: true\n        });\n    }\n    if (\"lights\" in opts) {\n        const lightSources = {\n            pointLights: [],\n            directionalLights: []\n        };\n        for (const light of opts.lights || []){\n            switch(light.type){\n                case \"ambient\":\n                    lightSources.ambientLight = light;\n                    break;\n                case \"directional\":\n                    lightSources.directionalLights.push(light);\n                    break;\n                case \"point\":\n                    lightSources.pointLights.push(light);\n                    break;\n                default:\n            }\n        }\n        return getUniforms({\n            lightSources\n        });\n    }\n    return {};\n}\nconst lights = {\n    name: \"lights\",\n    vs: _lights_glsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    fs: _lights_glsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    getUniforms,\n    defines: {\n        MAX_LIGHTS: 3\n    }\n}; //# sourceMappingURL=lights.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9saWdodHMvbGlnaHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDO0FBQzNDLE1BQU1DLHlCQUF5QjtJQUM3QkMsY0FBYyxDQUFDO0FBQ2pCO0FBRUEsU0FBU0M7SUFDUCxJQUFJLEVBQ0ZDLFFBQVE7UUFBQztRQUFHO1FBQUc7S0FBRSxFQUNqQkMsWUFBWSxHQUFHLEVBQ2hCLEdBQUdDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHLENBQUM7SUFDekUsT0FBT0YsTUFBTUssR0FBRyxDQUFDQyxDQUFBQSxZQUFhQSxZQUFZTCxZQUFZO0FBQ3hEO0FBRUEsU0FBU00sdUJBQXVCQyxJQUFJO0lBQ2xDLElBQUksRUFDRkMsWUFBWSxFQUNaQyxjQUFjLEVBQUUsRUFDaEJDLG9CQUFvQixFQUFFLEVBQ3ZCLEdBQUdIO0lBQ0osTUFBTUksc0JBQXNCLENBQUM7SUFFN0IsSUFBSUgsY0FBYztRQUNoQkcsbUJBQW1CLENBQUMsK0JBQStCLEdBQUdiLGFBQWFVO0lBQ3JFLE9BQU87UUFDTEcsbUJBQW1CLENBQUMsK0JBQStCLEdBQUc7WUFBQztZQUFHO1lBQUc7U0FBRTtJQUNqRTtJQUVBRixZQUFZRyxPQUFPLENBQUMsQ0FBQ0MsWUFBWUM7UUFDL0JILG1CQUFtQixDQUFDLHdCQUF3QkksTUFBTSxDQUFDRCxPQUFPLFdBQVcsR0FBR2hCLGFBQWFlO1FBQ3JGRixtQkFBbUIsQ0FBQyx3QkFBd0JJLE1BQU0sQ0FBQ0QsT0FBTyxjQUFjLEdBQUdELFdBQVdHLFFBQVE7UUFDOUZMLG1CQUFtQixDQUFDLHdCQUF3QkksTUFBTSxDQUFDRCxPQUFPLGlCQUFpQixHQUFHRCxXQUFXSSxXQUFXLElBQUk7WUFBQztZQUFHO1lBQUc7U0FBRTtJQUNuSDtJQUNBTixvQkFBb0JPLHlCQUF5QixHQUFHVCxZQUFZUCxNQUFNO0lBQ2xFUSxrQkFBa0JFLE9BQU8sQ0FBQyxDQUFDTyxrQkFBa0JMO1FBQzNDSCxtQkFBbUIsQ0FBQyw4QkFBOEJJLE1BQU0sQ0FBQ0QsT0FBTyxXQUFXLEdBQUdoQixhQUFhcUI7UUFDM0ZSLG1CQUFtQixDQUFDLDhCQUE4QkksTUFBTSxDQUFDRCxPQUFPLGVBQWUsR0FBR0ssaUJBQWlCQyxTQUFTO0lBQzlHO0lBQ0FULG9CQUFvQlUsK0JBQStCLEdBQUdYLGtCQUFrQlIsTUFBTTtJQUM5RSxPQUFPUztBQUNUO0FBRUEsU0FBU1c7SUFDUCxJQUFJQyxPQUFPdEIsVUFBVUMsTUFBTSxHQUFHLEtBQUtELFNBQVMsQ0FBQyxFQUFFLEtBQUtFLFlBQVlGLFNBQVMsQ0FBQyxFQUFFLEdBQUdMO0lBRS9FLElBQUksa0JBQWtCMkIsTUFBTTtRQUMxQixNQUFNLEVBQ0pmLFlBQVksRUFDWkMsV0FBVyxFQUNYQyxpQkFBaUIsRUFDbEIsR0FBR2EsS0FBSzFCLFlBQVksSUFBSSxDQUFDO1FBQzFCLE1BQU0yQixZQUFZaEIsZ0JBQWdCQyxlQUFlQSxZQUFZUCxNQUFNLEdBQUcsS0FBS1EscUJBQXFCQSxrQkFBa0JSLE1BQU0sR0FBRztRQUUzSCxJQUFJLENBQUNzQixXQUFXO1lBQ2QsT0FBTztnQkFDTEMsbUJBQW1CO1lBQ3JCO1FBQ0Y7UUFFQSxPQUFPQyxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHckIsdUJBQXVCO1lBQzlDRTtZQUNBQztZQUNBQztRQUNGLElBQUk7WUFDRmUsbUJBQW1CO1FBQ3JCO0lBQ0Y7SUFFQSxJQUFJLFlBQVlGLE1BQU07UUFDcEIsTUFBTTFCLGVBQWU7WUFDbkJZLGFBQWEsRUFBRTtZQUNmQyxtQkFBbUIsRUFBRTtRQUN2QjtRQUVBLEtBQUssTUFBTWtCLFNBQVNMLEtBQUtNLE1BQU0sSUFBSSxFQUFFLENBQUU7WUFDckMsT0FBUUQsTUFBTUUsSUFBSTtnQkFDaEIsS0FBSztvQkFDSGpDLGFBQWFXLFlBQVksR0FBR29CO29CQUM1QjtnQkFFRixLQUFLO29CQUNIL0IsYUFBYWEsaUJBQWlCLENBQUNxQixJQUFJLENBQUNIO29CQUNwQztnQkFFRixLQUFLO29CQUNIL0IsYUFBYVksV0FBVyxDQUFDc0IsSUFBSSxDQUFDSDtvQkFDOUI7Z0JBRUY7WUFDRjtRQUNGO1FBRUEsT0FBT04sWUFBWTtZQUNqQnpCO1FBQ0Y7SUFDRjtJQUVBLE9BQU8sQ0FBQztBQUNWO0FBRU8sTUFBTWdDLFNBQVM7SUFDcEJHLE1BQU07SUFDTkMsSUFBSXRDLG9EQUFjQTtJQUNsQnVDLElBQUl2QyxvREFBY0E7SUFDbEIyQjtJQUNBYSxTQUFTO1FBQ1BDLFlBQVk7SUFDZDtBQUNGLEVBQUUsQ0FDRixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9zaGFkZXJ0b29scy9kaXN0L2VzbS9tb2R1bGVzL2xpZ2h0cy9saWdodHMuanM/NjI5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbGlnaHRpbmdTaGFkZXIgZnJvbSAnLi9saWdodHMuZ2xzbCc7XG5jb25zdCBJTklUSUFMX01PRFVMRV9PUFRJT05TID0ge1xuICBsaWdodFNvdXJjZXM6IHt9XG59O1xuXG5mdW5jdGlvbiBjb252ZXJ0Q29sb3IoKSB7XG4gIGxldCB7XG4gICAgY29sb3IgPSBbMCwgMCwgMF0sXG4gICAgaW50ZW5zaXR5ID0gMS4wXG4gIH0gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICByZXR1cm4gY29sb3IubWFwKGNvbXBvbmVudCA9PiBjb21wb25lbnQgKiBpbnRlbnNpdHkgLyAyNTUuMCk7XG59XG5cbmZ1bmN0aW9uIGdldExpZ2h0U291cmNlVW5pZm9ybXMoX3JlZikge1xuICBsZXQge1xuICAgIGFtYmllbnRMaWdodCxcbiAgICBwb2ludExpZ2h0cyA9IFtdLFxuICAgIGRpcmVjdGlvbmFsTGlnaHRzID0gW11cbiAgfSA9IF9yZWY7XG4gIGNvbnN0IGxpZ2h0U291cmNlVW5pZm9ybXMgPSB7fTtcblxuICBpZiAoYW1iaWVudExpZ2h0KSB7XG4gICAgbGlnaHRTb3VyY2VVbmlmb3Jtc1snbGlnaHRpbmdfdUFtYmllbnRMaWdodC5jb2xvciddID0gY29udmVydENvbG9yKGFtYmllbnRMaWdodCk7XG4gIH0gZWxzZSB7XG4gICAgbGlnaHRTb3VyY2VVbmlmb3Jtc1snbGlnaHRpbmdfdUFtYmllbnRMaWdodC5jb2xvciddID0gWzAsIDAsIDBdO1xuICB9XG5cbiAgcG9pbnRMaWdodHMuZm9yRWFjaCgocG9pbnRMaWdodCwgaW5kZXgpID0+IHtcbiAgICBsaWdodFNvdXJjZVVuaWZvcm1zW1wibGlnaHRpbmdfdVBvaW50TGlnaHRbXCIuY29uY2F0KGluZGV4LCBcIl0uY29sb3JcIildID0gY29udmVydENvbG9yKHBvaW50TGlnaHQpO1xuICAgIGxpZ2h0U291cmNlVW5pZm9ybXNbXCJsaWdodGluZ191UG9pbnRMaWdodFtcIi5jb25jYXQoaW5kZXgsIFwiXS5wb3NpdGlvblwiKV0gPSBwb2ludExpZ2h0LnBvc2l0aW9uO1xuICAgIGxpZ2h0U291cmNlVW5pZm9ybXNbXCJsaWdodGluZ191UG9pbnRMaWdodFtcIi5jb25jYXQoaW5kZXgsIFwiXS5hdHRlbnVhdGlvblwiKV0gPSBwb2ludExpZ2h0LmF0dGVudWF0aW9uIHx8IFsxLCAwLCAwXTtcbiAgfSk7XG4gIGxpZ2h0U291cmNlVW5pZm9ybXMubGlnaHRpbmdfdVBvaW50TGlnaHRDb3VudCA9IHBvaW50TGlnaHRzLmxlbmd0aDtcbiAgZGlyZWN0aW9uYWxMaWdodHMuZm9yRWFjaCgoZGlyZWN0aW9uYWxMaWdodCwgaW5kZXgpID0+IHtcbiAgICBsaWdodFNvdXJjZVVuaWZvcm1zW1wibGlnaHRpbmdfdURpcmVjdGlvbmFsTGlnaHRbXCIuY29uY2F0KGluZGV4LCBcIl0uY29sb3JcIildID0gY29udmVydENvbG9yKGRpcmVjdGlvbmFsTGlnaHQpO1xuICAgIGxpZ2h0U291cmNlVW5pZm9ybXNbXCJsaWdodGluZ191RGlyZWN0aW9uYWxMaWdodFtcIi5jb25jYXQoaW5kZXgsIFwiXS5kaXJlY3Rpb25cIildID0gZGlyZWN0aW9uYWxMaWdodC5kaXJlY3Rpb247XG4gIH0pO1xuICBsaWdodFNvdXJjZVVuaWZvcm1zLmxpZ2h0aW5nX3VEaXJlY3Rpb25hbExpZ2h0Q291bnQgPSBkaXJlY3Rpb25hbExpZ2h0cy5sZW5ndGg7XG4gIHJldHVybiBsaWdodFNvdXJjZVVuaWZvcm1zO1xufVxuXG5mdW5jdGlvbiBnZXRVbmlmb3JtcygpIHtcbiAgbGV0IG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IElOSVRJQUxfTU9EVUxFX09QVElPTlM7XG5cbiAgaWYgKCdsaWdodFNvdXJjZXMnIGluIG9wdHMpIHtcbiAgICBjb25zdCB7XG4gICAgICBhbWJpZW50TGlnaHQsXG4gICAgICBwb2ludExpZ2h0cyxcbiAgICAgIGRpcmVjdGlvbmFsTGlnaHRzXG4gICAgfSA9IG9wdHMubGlnaHRTb3VyY2VzIHx8IHt9O1xuICAgIGNvbnN0IGhhc0xpZ2h0cyA9IGFtYmllbnRMaWdodCB8fCBwb2ludExpZ2h0cyAmJiBwb2ludExpZ2h0cy5sZW5ndGggPiAwIHx8IGRpcmVjdGlvbmFsTGlnaHRzICYmIGRpcmVjdGlvbmFsTGlnaHRzLmxlbmd0aCA+IDA7XG5cbiAgICBpZiAoIWhhc0xpZ2h0cykge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGlnaHRpbmdfdUVuYWJsZWQ6IGZhbHNlXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBnZXRMaWdodFNvdXJjZVVuaWZvcm1zKHtcbiAgICAgIGFtYmllbnRMaWdodCxcbiAgICAgIHBvaW50TGlnaHRzLFxuICAgICAgZGlyZWN0aW9uYWxMaWdodHNcbiAgICB9KSwge1xuICAgICAgbGlnaHRpbmdfdUVuYWJsZWQ6IHRydWVcbiAgICB9KTtcbiAgfVxuXG4gIGlmICgnbGlnaHRzJyBpbiBvcHRzKSB7XG4gICAgY29uc3QgbGlnaHRTb3VyY2VzID0ge1xuICAgICAgcG9pbnRMaWdodHM6IFtdLFxuICAgICAgZGlyZWN0aW9uYWxMaWdodHM6IFtdXG4gICAgfTtcblxuICAgIGZvciAoY29uc3QgbGlnaHQgb2Ygb3B0cy5saWdodHMgfHwgW10pIHtcbiAgICAgIHN3aXRjaCAobGlnaHQudHlwZSkge1xuICAgICAgICBjYXNlICdhbWJpZW50JzpcbiAgICAgICAgICBsaWdodFNvdXJjZXMuYW1iaWVudExpZ2h0ID0gbGlnaHQ7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnZGlyZWN0aW9uYWwnOlxuICAgICAgICAgIGxpZ2h0U291cmNlcy5kaXJlY3Rpb25hbExpZ2h0cy5wdXNoKGxpZ2h0KTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdwb2ludCc6XG4gICAgICAgICAgbGlnaHRTb3VyY2VzLnBvaW50TGlnaHRzLnB1c2gobGlnaHQpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldFVuaWZvcm1zKHtcbiAgICAgIGxpZ2h0U291cmNlc1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHt9O1xufVxuXG5leHBvcnQgY29uc3QgbGlnaHRzID0ge1xuICBuYW1lOiAnbGlnaHRzJyxcbiAgdnM6IGxpZ2h0aW5nU2hhZGVyLFxuICBmczogbGlnaHRpbmdTaGFkZXIsXG4gIGdldFVuaWZvcm1zLFxuICBkZWZpbmVzOiB7XG4gICAgTUFYX0xJR0hUUzogM1xuICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlnaHRzLmpzLm1hcCJdLCJuYW1lcyI6WyJsaWdodGluZ1NoYWRlciIsIklOSVRJQUxfTU9EVUxFX09QVElPTlMiLCJsaWdodFNvdXJjZXMiLCJjb252ZXJ0Q29sb3IiLCJjb2xvciIsImludGVuc2l0eSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIm1hcCIsImNvbXBvbmVudCIsImdldExpZ2h0U291cmNlVW5pZm9ybXMiLCJfcmVmIiwiYW1iaWVudExpZ2h0IiwicG9pbnRMaWdodHMiLCJkaXJlY3Rpb25hbExpZ2h0cyIsImxpZ2h0U291cmNlVW5pZm9ybXMiLCJmb3JFYWNoIiwicG9pbnRMaWdodCIsImluZGV4IiwiY29uY2F0IiwicG9zaXRpb24iLCJhdHRlbnVhdGlvbiIsImxpZ2h0aW5nX3VQb2ludExpZ2h0Q291bnQiLCJkaXJlY3Rpb25hbExpZ2h0IiwiZGlyZWN0aW9uIiwibGlnaHRpbmdfdURpcmVjdGlvbmFsTGlnaHRDb3VudCIsImdldFVuaWZvcm1zIiwib3B0cyIsImhhc0xpZ2h0cyIsImxpZ2h0aW5nX3VFbmFibGVkIiwiT2JqZWN0IiwiYXNzaWduIiwibGlnaHQiLCJsaWdodHMiLCJ0eXBlIiwicHVzaCIsIm5hbWUiLCJ2cyIsImZzIiwiZGVmaW5lcyIsIk1BWF9MSUdIVFMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/module-injectors.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/modules/module-injectors.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MODULE_INJECTORS_FS: () => (/* binding */ MODULE_INJECTORS_FS),\n/* harmony export */   MODULE_INJECTORS_VS: () => (/* binding */ MODULE_INJECTORS_VS)\n/* harmony export */ });\nconst MODULE_INJECTORS_VS = \"#ifdef MODULE_LOGDEPTH\\n  logdepth_adjustPosition(gl_Position);\\n#endif\\n\";\nconst MODULE_INJECTORS_FS = \"#ifdef MODULE_MATERIAL\\n  gl_FragColor = material_filterColor(gl_FragColor);\\n#endif\\n\\n#ifdef MODULE_LIGHTING\\n  gl_FragColor = lighting_filterColor(gl_FragColor);\\n#endif\\n\\n#ifdef MODULE_FOG\\n  gl_FragColor = fog_filterColor(gl_FragColor);\\n#endif\\n\\n#ifdef MODULE_PICKING\\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\\n#endif\\n\\n#ifdef MODULE_LOGDEPTH\\n  logdepth_setFragDepth();\\n#endif\\n\"; //# sourceMappingURL=module-injectors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9tb2R1bGUtaW5qZWN0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEsc0JBQXNCLDRFQUE0RTtBQUN4RyxNQUFNQyxzQkFBc0Isd2RBQXdkLENBQzNmLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3NoYWRlcnRvb2xzL2Rpc3QvZXNtL21vZHVsZXMvbW9kdWxlLWluamVjdG9ycy5qcz8yMjg1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBNT0RVTEVfSU5KRUNUT1JTX1ZTID0gXCIjaWZkZWYgTU9EVUxFX0xPR0RFUFRIXFxuICBsb2dkZXB0aF9hZGp1c3RQb3NpdGlvbihnbF9Qb3NpdGlvbik7XFxuI2VuZGlmXFxuXCI7XG5leHBvcnQgY29uc3QgTU9EVUxFX0lOSkVDVE9SU19GUyA9IFwiI2lmZGVmIE1PRFVMRV9NQVRFUklBTFxcbiAgZ2xfRnJhZ0NvbG9yID0gbWF0ZXJpYWxfZmlsdGVyQ29sb3IoZ2xfRnJhZ0NvbG9yKTtcXG4jZW5kaWZcXG5cXG4jaWZkZWYgTU9EVUxFX0xJR0hUSU5HXFxuICBnbF9GcmFnQ29sb3IgPSBsaWdodGluZ19maWx0ZXJDb2xvcihnbF9GcmFnQ29sb3IpO1xcbiNlbmRpZlxcblxcbiNpZmRlZiBNT0RVTEVfRk9HXFxuICBnbF9GcmFnQ29sb3IgPSBmb2dfZmlsdGVyQ29sb3IoZ2xfRnJhZ0NvbG9yKTtcXG4jZW5kaWZcXG5cXG4jaWZkZWYgTU9EVUxFX1BJQ0tJTkdcXG4gIGdsX0ZyYWdDb2xvciA9IHBpY2tpbmdfZmlsdGVySGlnaGxpZ2h0Q29sb3IoZ2xfRnJhZ0NvbG9yKTtcXG4gIGdsX0ZyYWdDb2xvciA9IHBpY2tpbmdfZmlsdGVyUGlja2luZ0NvbG9yKGdsX0ZyYWdDb2xvcik7XFxuI2VuZGlmXFxuXFxuI2lmZGVmIE1PRFVMRV9MT0dERVBUSFxcbiAgbG9nZGVwdGhfc2V0RnJhZ0RlcHRoKCk7XFxuI2VuZGlmXFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb2R1bGUtaW5qZWN0b3JzLmpzLm1hcCJdLCJuYW1lcyI6WyJNT0RVTEVfSU5KRUNUT1JTX1ZTIiwiTU9EVUxFX0lOSkVDVE9SU19GUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/module-injectors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.glsl.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.glsl.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nuniform float lighting_uAmbient;\\nuniform float lighting_uDiffuse;\\nuniform float lighting_uShininess;\\nuniform vec3  lighting_uSpecularColor;\\n\\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\\n    vec3 halfway_direction = normalize(light_direction + view_direction);\\n    float lambertian = dot(light_direction, normal_worldspace);\\n    float specular = 0.0;\\n    if (lambertian > 0.0) {\\n      float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\\n      specular = pow(specular_angle, lighting_uShininess);\\n    }\\n    lambertian = max(lambertian, 0.0);\\n    return (lambertian * lighting_uDiffuse * surfaceColor + specular * lighting_uSpecularColor) * color;\\n}\\n\\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\\n  vec3 lightColor = surfaceColor;\\n\\n  if (lighting_uEnabled) {\\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\\n    lightColor = lighting_uAmbient * surfaceColor * lighting_uAmbientLight.color;\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uPointLightCount) {\\n        break;\\n      }\\n      PointLight pointLight = lighting_uPointLight[i];\\n      vec3 light_position_worldspace = pointLight.position;\\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\\n    }\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uDirectionalLightCount) {\\n        break;\\n      }\\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\\n    }\\n  }\\n  return lightColor;\\n}\\n\\nvec3 lighting_getSpecularLightColor(vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\\n  vec3 lightColor = vec3(0, 0, 0);\\n  vec3 surfaceColor = vec3(0, 0, 0);\\n\\n  if (lighting_uEnabled) {\\n    vec3 view_direction = normalize(cameraPosition - position_worldspace);\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uPointLightCount) {\\n        break;\\n      }\\n      PointLight pointLight = lighting_uPointLight[i];\\n      vec3 light_position_worldspace = pointLight.position;\\n      vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\\n      lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color);\\n    }\\n\\n    for (int i = 0; i < MAX_LIGHTS; i++) {\\n      if (i >= lighting_uDirectionalLightCount) {\\n        break;\\n      }\\n      DirectionalLight directionalLight = lighting_uDirectionalLight[i];\\n      lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\\n    }\\n  }\\n  return lightColor;\\n}\\n\"); //# sourceMappingURL=phong-lighting.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9waG9uZy1saWdodGluZy9waG9uZy1saWdodGluZy5nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxtaEdBQW1oRyxFQUFDLENBQ25pRywrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9zaGFkZXJ0b29scy9kaXN0L2VzbS9tb2R1bGVzL3Bob25nLWxpZ2h0aW5nL3Bob25nLWxpZ2h0aW5nLmdsc2wuanM/MWY0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIlxcbnVuaWZvcm0gZmxvYXQgbGlnaHRpbmdfdUFtYmllbnQ7XFxudW5pZm9ybSBmbG9hdCBsaWdodGluZ191RGlmZnVzZTtcXG51bmlmb3JtIGZsb2F0IGxpZ2h0aW5nX3VTaGluaW5lc3M7XFxudW5pZm9ybSB2ZWMzICBsaWdodGluZ191U3BlY3VsYXJDb2xvcjtcXG5cXG52ZWMzIGxpZ2h0aW5nX2dldExpZ2h0Q29sb3IodmVjMyBzdXJmYWNlQ29sb3IsIHZlYzMgbGlnaHRfZGlyZWN0aW9uLCB2ZWMzIHZpZXdfZGlyZWN0aW9uLCB2ZWMzIG5vcm1hbF93b3JsZHNwYWNlLCB2ZWMzIGNvbG9yKSB7XFxuICAgIHZlYzMgaGFsZndheV9kaXJlY3Rpb24gPSBub3JtYWxpemUobGlnaHRfZGlyZWN0aW9uICsgdmlld19kaXJlY3Rpb24pO1xcbiAgICBmbG9hdCBsYW1iZXJ0aWFuID0gZG90KGxpZ2h0X2RpcmVjdGlvbiwgbm9ybWFsX3dvcmxkc3BhY2UpO1xcbiAgICBmbG9hdCBzcGVjdWxhciA9IDAuMDtcXG4gICAgaWYgKGxhbWJlcnRpYW4gPiAwLjApIHtcXG4gICAgICBmbG9hdCBzcGVjdWxhcl9hbmdsZSA9IG1heChkb3Qobm9ybWFsX3dvcmxkc3BhY2UsIGhhbGZ3YXlfZGlyZWN0aW9uKSwgMC4wKTtcXG4gICAgICBzcGVjdWxhciA9IHBvdyhzcGVjdWxhcl9hbmdsZSwgbGlnaHRpbmdfdVNoaW5pbmVzcyk7XFxuICAgIH1cXG4gICAgbGFtYmVydGlhbiA9IG1heChsYW1iZXJ0aWFuLCAwLjApO1xcbiAgICByZXR1cm4gKGxhbWJlcnRpYW4gKiBsaWdodGluZ191RGlmZnVzZSAqIHN1cmZhY2VDb2xvciArIHNwZWN1bGFyICogbGlnaHRpbmdfdVNwZWN1bGFyQ29sb3IpICogY29sb3I7XFxufVxcblxcbnZlYzMgbGlnaHRpbmdfZ2V0TGlnaHRDb2xvcih2ZWMzIHN1cmZhY2VDb2xvciwgdmVjMyBjYW1lcmFQb3NpdGlvbiwgdmVjMyBwb3NpdGlvbl93b3JsZHNwYWNlLCB2ZWMzIG5vcm1hbF93b3JsZHNwYWNlKSB7XFxuICB2ZWMzIGxpZ2h0Q29sb3IgPSBzdXJmYWNlQ29sb3I7XFxuXFxuICBpZiAobGlnaHRpbmdfdUVuYWJsZWQpIHtcXG4gICAgdmVjMyB2aWV3X2RpcmVjdGlvbiA9IG5vcm1hbGl6ZShjYW1lcmFQb3NpdGlvbiAtIHBvc2l0aW9uX3dvcmxkc3BhY2UpO1xcbiAgICBsaWdodENvbG9yID0gbGlnaHRpbmdfdUFtYmllbnQgKiBzdXJmYWNlQ29sb3IgKiBsaWdodGluZ191QW1iaWVudExpZ2h0LmNvbG9yO1xcblxcbiAgICBmb3IgKGludCBpID0gMDsgaSA8IE1BWF9MSUdIVFM7IGkrKykge1xcbiAgICAgIGlmIChpID49IGxpZ2h0aW5nX3VQb2ludExpZ2h0Q291bnQpIHtcXG4gICAgICAgIGJyZWFrO1xcbiAgICAgIH1cXG4gICAgICBQb2ludExpZ2h0IHBvaW50TGlnaHQgPSBsaWdodGluZ191UG9pbnRMaWdodFtpXTtcXG4gICAgICB2ZWMzIGxpZ2h0X3Bvc2l0aW9uX3dvcmxkc3BhY2UgPSBwb2ludExpZ2h0LnBvc2l0aW9uO1xcbiAgICAgIHZlYzMgbGlnaHRfZGlyZWN0aW9uID0gbm9ybWFsaXplKGxpZ2h0X3Bvc2l0aW9uX3dvcmxkc3BhY2UgLSBwb3NpdGlvbl93b3JsZHNwYWNlKTtcXG4gICAgICBsaWdodENvbG9yICs9IGxpZ2h0aW5nX2dldExpZ2h0Q29sb3Ioc3VyZmFjZUNvbG9yLCBsaWdodF9kaXJlY3Rpb24sIHZpZXdfZGlyZWN0aW9uLCBub3JtYWxfd29ybGRzcGFjZSwgcG9pbnRMaWdodC5jb2xvcik7XFxuICAgIH1cXG5cXG4gICAgZm9yIChpbnQgaSA9IDA7IGkgPCBNQVhfTElHSFRTOyBpKyspIHtcXG4gICAgICBpZiAoaSA+PSBsaWdodGluZ191RGlyZWN0aW9uYWxMaWdodENvdW50KSB7XFxuICAgICAgICBicmVhaztcXG4gICAgICB9XFxuICAgICAgRGlyZWN0aW9uYWxMaWdodCBkaXJlY3Rpb25hbExpZ2h0ID0gbGlnaHRpbmdfdURpcmVjdGlvbmFsTGlnaHRbaV07XFxuICAgICAgbGlnaHRDb2xvciArPSBsaWdodGluZ19nZXRMaWdodENvbG9yKHN1cmZhY2VDb2xvciwgLWRpcmVjdGlvbmFsTGlnaHQuZGlyZWN0aW9uLCB2aWV3X2RpcmVjdGlvbiwgbm9ybWFsX3dvcmxkc3BhY2UsIGRpcmVjdGlvbmFsTGlnaHQuY29sb3IpO1xcbiAgICB9XFxuICB9XFxuICByZXR1cm4gbGlnaHRDb2xvcjtcXG59XFxuXFxudmVjMyBsaWdodGluZ19nZXRTcGVjdWxhckxpZ2h0Q29sb3IodmVjMyBjYW1lcmFQb3NpdGlvbiwgdmVjMyBwb3NpdGlvbl93b3JsZHNwYWNlLCB2ZWMzIG5vcm1hbF93b3JsZHNwYWNlKSB7XFxuICB2ZWMzIGxpZ2h0Q29sb3IgPSB2ZWMzKDAsIDAsIDApO1xcbiAgdmVjMyBzdXJmYWNlQ29sb3IgPSB2ZWMzKDAsIDAsIDApO1xcblxcbiAgaWYgKGxpZ2h0aW5nX3VFbmFibGVkKSB7XFxuICAgIHZlYzMgdmlld19kaXJlY3Rpb24gPSBub3JtYWxpemUoY2FtZXJhUG9zaXRpb24gLSBwb3NpdGlvbl93b3JsZHNwYWNlKTtcXG5cXG4gICAgZm9yIChpbnQgaSA9IDA7IGkgPCBNQVhfTElHSFRTOyBpKyspIHtcXG4gICAgICBpZiAoaSA+PSBsaWdodGluZ191UG9pbnRMaWdodENvdW50KSB7XFxuICAgICAgICBicmVhaztcXG4gICAgICB9XFxuICAgICAgUG9pbnRMaWdodCBwb2ludExpZ2h0ID0gbGlnaHRpbmdfdVBvaW50TGlnaHRbaV07XFxuICAgICAgdmVjMyBsaWdodF9wb3NpdGlvbl93b3JsZHNwYWNlID0gcG9pbnRMaWdodC5wb3NpdGlvbjtcXG4gICAgICB2ZWMzIGxpZ2h0X2RpcmVjdGlvbiA9IG5vcm1hbGl6ZShsaWdodF9wb3NpdGlvbl93b3JsZHNwYWNlIC0gcG9zaXRpb25fd29ybGRzcGFjZSk7XFxuICAgICAgbGlnaHRDb2xvciArPSBsaWdodGluZ19nZXRMaWdodENvbG9yKHN1cmZhY2VDb2xvciwgbGlnaHRfZGlyZWN0aW9uLCB2aWV3X2RpcmVjdGlvbiwgbm9ybWFsX3dvcmxkc3BhY2UsIHBvaW50TGlnaHQuY29sb3IpO1xcbiAgICB9XFxuXFxuICAgIGZvciAoaW50IGkgPSAwOyBpIDwgTUFYX0xJR0hUUzsgaSsrKSB7XFxuICAgICAgaWYgKGkgPj0gbGlnaHRpbmdfdURpcmVjdGlvbmFsTGlnaHRDb3VudCkge1xcbiAgICAgICAgYnJlYWs7XFxuICAgICAgfVxcbiAgICAgIERpcmVjdGlvbmFsTGlnaHQgZGlyZWN0aW9uYWxMaWdodCA9IGxpZ2h0aW5nX3VEaXJlY3Rpb25hbExpZ2h0W2ldO1xcbiAgICAgIGxpZ2h0Q29sb3IgKz0gbGlnaHRpbmdfZ2V0TGlnaHRDb2xvcihzdXJmYWNlQ29sb3IsIC1kaXJlY3Rpb25hbExpZ2h0LmRpcmVjdGlvbiwgdmlld19kaXJlY3Rpb24sIG5vcm1hbF93b3JsZHNwYWNlLCBkaXJlY3Rpb25hbExpZ2h0LmNvbG9yKTtcXG4gICAgfVxcbiAgfVxcbiAgcmV0dXJuIGxpZ2h0Q29sb3I7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGhvbmctbGlnaHRpbmcuZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gouraudLighting: () => (/* binding */ gouraudLighting),\n/* harmony export */   phongLighting: () => (/* binding */ phongLighting)\n/* harmony export */ });\n/* harmony import */ var _lights_lights__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lights/lights */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/lights/lights.js\");\n/* harmony import */ var _phong_lighting_glsl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./phong-lighting.glsl */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.glsl.js\");\n\n\nconst INITIAL_MODULE_OPTIONS = {};\nfunction getMaterialUniforms(material) {\n    const { ambient = 0.35, diffuse = 0.6, shininess = 32, specularColor = [\n        30,\n        30,\n        30\n    ] } = material;\n    return {\n        lighting_uAmbient: ambient,\n        lighting_uDiffuse: diffuse,\n        lighting_uShininess: shininess,\n        lighting_uSpecularColor: specularColor.map((x)=>x / 255)\n    };\n}\nfunction getUniforms() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n    if (!(\"material\" in opts)) {\n        return {};\n    }\n    const { material } = opts;\n    if (!material) {\n        return {\n            lighting_uEnabled: false\n        };\n    }\n    return getMaterialUniforms(material);\n}\nconst gouraudLighting = {\n    name: \"gouraud-lighting\",\n    dependencies: [\n        _lights_lights__WEBPACK_IMPORTED_MODULE_0__.lights\n    ],\n    vs: _phong_lighting_glsl__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    defines: {\n        LIGHTING_VERTEX: 1\n    },\n    getUniforms\n};\nconst phongLighting = {\n    name: \"phong-lighting\",\n    dependencies: [\n        _lights_lights__WEBPACK_IMPORTED_MODULE_0__.lights\n    ],\n    fs: _phong_lighting_glsl__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    defines: {\n        LIGHTING_FRAGMENT: 1\n    },\n    getUniforms\n}; //# sourceMappingURL=phong-lighting.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9waG9uZy1saWdodGluZy9waG9uZy1saWdodGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ1M7QUFDbkQsTUFBTUUseUJBQXlCLENBQUM7QUFFaEMsU0FBU0Msb0JBQW9CQyxRQUFRO0lBQ25DLE1BQU0sRUFDSkMsVUFBVSxJQUFJLEVBQ2RDLFVBQVUsR0FBRyxFQUNiQyxZQUFZLEVBQUUsRUFDZEMsZ0JBQWdCO1FBQUM7UUFBSTtRQUFJO0tBQUcsRUFDN0IsR0FBR0o7SUFDSixPQUFPO1FBQ0xLLG1CQUFtQko7UUFDbkJLLG1CQUFtQko7UUFDbkJLLHFCQUFxQko7UUFDckJLLHlCQUF5QkosY0FBY0ssR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxJQUFJO0lBQ3REO0FBQ0Y7QUFFQSxTQUFTQztJQUNQLElBQUlDLE9BQU9DLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHZjtJQUUvRSxJQUFJLENBQUUsZUFBY2MsSUFBRyxHQUFJO1FBQ3pCLE9BQU8sQ0FBQztJQUNWO0lBRUEsTUFBTSxFQUNKWixRQUFRLEVBQ1QsR0FBR1k7SUFFSixJQUFJLENBQUNaLFVBQVU7UUFDYixPQUFPO1lBQ0xnQixtQkFBbUI7UUFDckI7SUFDRjtJQUVBLE9BQU9qQixvQkFBb0JDO0FBQzdCO0FBRU8sTUFBTWlCLGtCQUFrQjtJQUM3QkMsTUFBTTtJQUNOQyxjQUFjO1FBQUN2QixrREFBTUE7S0FBQztJQUN0QndCLElBQUl2Qiw0REFBY0E7SUFDbEJ3QixTQUFTO1FBQ1BDLGlCQUFpQjtJQUNuQjtJQUNBWDtBQUNGLEVBQUU7QUFDSyxNQUFNWSxnQkFBZ0I7SUFDM0JMLE1BQU07SUFDTkMsY0FBYztRQUFDdkIsa0RBQU1BO0tBQUM7SUFDdEI0QixJQUFJM0IsNERBQWNBO0lBQ2xCd0IsU0FBUztRQUNQSSxtQkFBbUI7SUFDckI7SUFDQWQ7QUFDRixFQUFFLENBQ0YsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9waG9uZy1saWdodGluZy9waG9uZy1saWdodGluZy5qcz9lNzRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxpZ2h0cyB9IGZyb20gJy4uL2xpZ2h0cy9saWdodHMnO1xuaW1wb3J0IGxpZ2h0aW5nU2hhZGVyIGZyb20gJy4vcGhvbmctbGlnaHRpbmcuZ2xzbCc7XG5jb25zdCBJTklUSUFMX01PRFVMRV9PUFRJT05TID0ge307XG5cbmZ1bmN0aW9uIGdldE1hdGVyaWFsVW5pZm9ybXMobWF0ZXJpYWwpIHtcbiAgY29uc3Qge1xuICAgIGFtYmllbnQgPSAwLjM1LFxuICAgIGRpZmZ1c2UgPSAwLjYsXG4gICAgc2hpbmluZXNzID0gMzIsXG4gICAgc3BlY3VsYXJDb2xvciA9IFszMCwgMzAsIDMwXVxuICB9ID0gbWF0ZXJpYWw7XG4gIHJldHVybiB7XG4gICAgbGlnaHRpbmdfdUFtYmllbnQ6IGFtYmllbnQsXG4gICAgbGlnaHRpbmdfdURpZmZ1c2U6IGRpZmZ1c2UsXG4gICAgbGlnaHRpbmdfdVNoaW5pbmVzczogc2hpbmluZXNzLFxuICAgIGxpZ2h0aW5nX3VTcGVjdWxhckNvbG9yOiBzcGVjdWxhckNvbG9yLm1hcCh4ID0+IHggLyAyNTUpXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFVuaWZvcm1zKCkge1xuICBsZXQgb3B0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogSU5JVElBTF9NT0RVTEVfT1BUSU9OUztcblxuICBpZiAoISgnbWF0ZXJpYWwnIGluIG9wdHMpKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgY29uc3Qge1xuICAgIG1hdGVyaWFsXG4gIH0gPSBvcHRzO1xuXG4gIGlmICghbWF0ZXJpYWwpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbGlnaHRpbmdfdUVuYWJsZWQ6IGZhbHNlXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBnZXRNYXRlcmlhbFVuaWZvcm1zKG1hdGVyaWFsKTtcbn1cblxuZXhwb3J0IGNvbnN0IGdvdXJhdWRMaWdodGluZyA9IHtcbiAgbmFtZTogJ2dvdXJhdWQtbGlnaHRpbmcnLFxuICBkZXBlbmRlbmNpZXM6IFtsaWdodHNdLFxuICB2czogbGlnaHRpbmdTaGFkZXIsXG4gIGRlZmluZXM6IHtcbiAgICBMSUdIVElOR19WRVJURVg6IDFcbiAgfSxcbiAgZ2V0VW5pZm9ybXNcbn07XG5leHBvcnQgY29uc3QgcGhvbmdMaWdodGluZyA9IHtcbiAgbmFtZTogJ3Bob25nLWxpZ2h0aW5nJyxcbiAgZGVwZW5kZW5jaWVzOiBbbGlnaHRzXSxcbiAgZnM6IGxpZ2h0aW5nU2hhZGVyLFxuICBkZWZpbmVzOiB7XG4gICAgTElHSFRJTkdfRlJBR01FTlQ6IDFcbiAgfSxcbiAgZ2V0VW5pZm9ybXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1waG9uZy1saWdodGluZy5qcy5tYXAiXSwibmFtZXMiOlsibGlnaHRzIiwibGlnaHRpbmdTaGFkZXIiLCJJTklUSUFMX01PRFVMRV9PUFRJT05TIiwiZ2V0TWF0ZXJpYWxVbmlmb3JtcyIsIm1hdGVyaWFsIiwiYW1iaWVudCIsImRpZmZ1c2UiLCJzaGluaW5lc3MiLCJzcGVjdWxhckNvbG9yIiwibGlnaHRpbmdfdUFtYmllbnQiLCJsaWdodGluZ191RGlmZnVzZSIsImxpZ2h0aW5nX3VTaGluaW5lc3MiLCJsaWdodGluZ191U3BlY3VsYXJDb2xvciIsIm1hcCIsIngiLCJnZXRVbmlmb3JtcyIsIm9wdHMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJsaWdodGluZ191RW5hYmxlZCIsImdvdXJhdWRMaWdodGluZyIsIm5hbWUiLCJkZXBlbmRlbmNpZXMiLCJ2cyIsImRlZmluZXMiLCJMSUdIVElOR19WRVJURVgiLCJwaG9uZ0xpZ2h0aW5nIiwiZnMiLCJMSUdIVElOR19GUkFHTUVOVCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/picking/picking.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/modules/picking/picking.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   picking: () => (/* binding */ picking)\n/* harmony export */ });\nconst DEFAULT_HIGHLIGHT_COLOR = new Uint8Array([\n    0,\n    255,\n    255,\n    255\n]);\nconst DEFAULT_MODULE_OPTIONS = {\n    pickingSelectedColor: null,\n    pickingHighlightColor: DEFAULT_HIGHLIGHT_COLOR,\n    pickingActive: false,\n    pickingAttribute: false\n};\nfunction getUniforms() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_MODULE_OPTIONS;\n    const uniforms = {};\n    if (opts.pickingSelectedColor !== undefined) {\n        if (!opts.pickingSelectedColor) {\n            uniforms.picking_uSelectedColorValid = 0;\n        } else {\n            const selectedColor = opts.pickingSelectedColor.slice(0, 3);\n            uniforms.picking_uSelectedColorValid = 1;\n            uniforms.picking_uSelectedColor = selectedColor;\n        }\n    }\n    if (opts.pickingHighlightColor) {\n        const color = Array.from(opts.pickingHighlightColor, (x)=>x / 255);\n        if (!Number.isFinite(color[3])) {\n            color[3] = 1;\n        }\n        uniforms.picking_uHighlightColor = color;\n    }\n    if (opts.pickingActive !== undefined) {\n        uniforms.picking_uActive = Boolean(opts.pickingActive);\n        uniforms.picking_uAttribute = Boolean(opts.pickingAttribute);\n    }\n    return uniforms;\n}\nconst vs = \"uniform bool picking_uActive;\\nuniform bool picking_uAttribute;\\nuniform vec3 picking_uSelectedColor;\\nuniform bool picking_uSelectedColorValid;\\n\\nout vec4 picking_vRGBcolor_Avalid;\\n\\nconst float COLOR_SCALE = 1. / 255.;\\n\\nbool picking_isColorValid(vec3 color) {\\n  return dot(color, vec3(1.0)) > 0.001;\\n}\\n\\nbool isVertexPicked(vec3 vertexColor) {\\n  return\\n    picking_uSelectedColorValid &&\\n    !picking_isColorValid(abs(vertexColor - picking_uSelectedColor));\\n}\\n\\nvoid picking_setPickingColor(vec3 pickingColor) {\\n  if (picking_uActive) {\\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\\n\\n    if (!picking_uAttribute) {\\n      picking_vRGBcolor_Avalid.rgb = pickingColor * COLOR_SCALE;\\n    }\\n  } else {\\n    picking_vRGBcolor_Avalid.a = float(isVertexPicked(pickingColor));\\n  }\\n}\\n\\nvoid picking_setPickingAttribute(float value) {\\n  if (picking_uAttribute) {\\n    picking_vRGBcolor_Avalid.r = value;\\n  }\\n}\\nvoid picking_setPickingAttribute(vec2 value) {\\n  if (picking_uAttribute) {\\n    picking_vRGBcolor_Avalid.rg = value;\\n  }\\n}\\nvoid picking_setPickingAttribute(vec3 value) {\\n  if (picking_uAttribute) {\\n    picking_vRGBcolor_Avalid.rgb = value;\\n  }\\n}\\n\";\nconst fs = \"uniform bool picking_uActive;\\nuniform vec3 picking_uSelectedColor;\\nuniform vec4 picking_uHighlightColor;\\n\\nin vec4 picking_vRGBcolor_Avalid;\\nvec4 picking_filterHighlightColor(vec4 color) {\\n  if (picking_uActive) {\\n    return color;\\n  }\\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\\n\\n  if (selected) {\\n    float highLightAlpha = picking_uHighlightColor.a;\\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\\n    float highLightRatio = highLightAlpha / blendedAlpha;\\n\\n    vec3 blendedRGB = mix(color.rgb, picking_uHighlightColor.rgb, highLightRatio);\\n    return vec4(blendedRGB, blendedAlpha);\\n  } else {\\n    return color;\\n  }\\n}\\nvec4 picking_filterPickingColor(vec4 color) {\\n  if (picking_uActive) {\\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\\n      discard;\\n    }\\n    return picking_vRGBcolor_Avalid;\\n  }\\n  return color;\\n}\\nvec4 picking_filterColor(vec4 color) {\\n  vec4 highightColor = picking_filterHighlightColor(color);\\n  return picking_filterPickingColor(highightColor);\\n}\\n\\n\";\nconst picking = {\n    name: \"picking\",\n    vs,\n    fs,\n    getUniforms\n}; //# sourceMappingURL=picking.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy9waWNraW5nL3BpY2tpbmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLDBCQUEwQixJQUFJQyxXQUFXO0lBQUM7SUFBRztJQUFLO0lBQUs7Q0FBSTtBQUNqRSxNQUFNQyx5QkFBeUI7SUFDN0JDLHNCQUFzQjtJQUN0QkMsdUJBQXVCSjtJQUN2QkssZUFBZTtJQUNmQyxrQkFBa0I7QUFDcEI7QUFFQSxTQUFTQztJQUNQLElBQUlDLE9BQU9DLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHUDtJQUMvRSxNQUFNVSxXQUFXLENBQUM7SUFFbEIsSUFBSUosS0FBS0wsb0JBQW9CLEtBQUtRLFdBQVc7UUFDM0MsSUFBSSxDQUFDSCxLQUFLTCxvQkFBb0IsRUFBRTtZQUM5QlMsU0FBU0MsMkJBQTJCLEdBQUc7UUFDekMsT0FBTztZQUNMLE1BQU1DLGdCQUFnQk4sS0FBS0wsb0JBQW9CLENBQUNZLEtBQUssQ0FBQyxHQUFHO1lBQ3pESCxTQUFTQywyQkFBMkIsR0FBRztZQUN2Q0QsU0FBU0ksc0JBQXNCLEdBQUdGO1FBQ3BDO0lBQ0Y7SUFFQSxJQUFJTixLQUFLSixxQkFBcUIsRUFBRTtRQUM5QixNQUFNYSxRQUFRQyxNQUFNQyxJQUFJLENBQUNYLEtBQUtKLHFCQUFxQixFQUFFZ0IsQ0FBQUEsSUFBS0EsSUFBSTtRQUU5RCxJQUFJLENBQUNDLE9BQU9DLFFBQVEsQ0FBQ0wsS0FBSyxDQUFDLEVBQUUsR0FBRztZQUM5QkEsS0FBSyxDQUFDLEVBQUUsR0FBRztRQUNiO1FBRUFMLFNBQVNXLHVCQUF1QixHQUFHTjtJQUNyQztJQUVBLElBQUlULEtBQUtILGFBQWEsS0FBS00sV0FBVztRQUNwQ0MsU0FBU1ksZUFBZSxHQUFHQyxRQUFRakIsS0FBS0gsYUFBYTtRQUNyRE8sU0FBU2Msa0JBQWtCLEdBQUdELFFBQVFqQixLQUFLRixnQkFBZ0I7SUFDN0Q7SUFFQSxPQUFPTTtBQUNUO0FBRUEsTUFBTWUsS0FBSztBQUNYLE1BQU1DLEtBQUs7QUFDSixNQUFNQyxVQUFVO0lBQ3JCQyxNQUFNO0lBQ05IO0lBQ0FDO0lBQ0FyQjtBQUNGLEVBQUUsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9zaGFkZXJ0b29scy9kaXN0L2VzbS9tb2R1bGVzL3BpY2tpbmcvcGlja2luZy5qcz9mODRkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERFRkFVTFRfSElHSExJR0hUX0NPTE9SID0gbmV3IFVpbnQ4QXJyYXkoWzAsIDI1NSwgMjU1LCAyNTVdKTtcbmNvbnN0IERFRkFVTFRfTU9EVUxFX09QVElPTlMgPSB7XG4gIHBpY2tpbmdTZWxlY3RlZENvbG9yOiBudWxsLFxuICBwaWNraW5nSGlnaGxpZ2h0Q29sb3I6IERFRkFVTFRfSElHSExJR0hUX0NPTE9SLFxuICBwaWNraW5nQWN0aXZlOiBmYWxzZSxcbiAgcGlja2luZ0F0dHJpYnV0ZTogZmFsc2Vcbn07XG5cbmZ1bmN0aW9uIGdldFVuaWZvcm1zKCkge1xuICBsZXQgb3B0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogREVGQVVMVF9NT0RVTEVfT1BUSU9OUztcbiAgY29uc3QgdW5pZm9ybXMgPSB7fTtcblxuICBpZiAob3B0cy5waWNraW5nU2VsZWN0ZWRDb2xvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKCFvcHRzLnBpY2tpbmdTZWxlY3RlZENvbG9yKSB7XG4gICAgICB1bmlmb3Jtcy5waWNraW5nX3VTZWxlY3RlZENvbG9yVmFsaWQgPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBzZWxlY3RlZENvbG9yID0gb3B0cy5waWNraW5nU2VsZWN0ZWRDb2xvci5zbGljZSgwLCAzKTtcbiAgICAgIHVuaWZvcm1zLnBpY2tpbmdfdVNlbGVjdGVkQ29sb3JWYWxpZCA9IDE7XG4gICAgICB1bmlmb3Jtcy5waWNraW5nX3VTZWxlY3RlZENvbG9yID0gc2VsZWN0ZWRDb2xvcjtcbiAgICB9XG4gIH1cblxuICBpZiAob3B0cy5waWNraW5nSGlnaGxpZ2h0Q29sb3IpIHtcbiAgICBjb25zdCBjb2xvciA9IEFycmF5LmZyb20ob3B0cy5waWNraW5nSGlnaGxpZ2h0Q29sb3IsIHggPT4geCAvIDI1NSk7XG5cbiAgICBpZiAoIU51bWJlci5pc0Zpbml0ZShjb2xvclszXSkpIHtcbiAgICAgIGNvbG9yWzNdID0gMTtcbiAgICB9XG5cbiAgICB1bmlmb3Jtcy5waWNraW5nX3VIaWdobGlnaHRDb2xvciA9IGNvbG9yO1xuICB9XG5cbiAgaWYgKG9wdHMucGlja2luZ0FjdGl2ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdW5pZm9ybXMucGlja2luZ191QWN0aXZlID0gQm9vbGVhbihvcHRzLnBpY2tpbmdBY3RpdmUpO1xuICAgIHVuaWZvcm1zLnBpY2tpbmdfdUF0dHJpYnV0ZSA9IEJvb2xlYW4ob3B0cy5waWNraW5nQXR0cmlidXRlKTtcbiAgfVxuXG4gIHJldHVybiB1bmlmb3Jtcztcbn1cblxuY29uc3QgdnMgPSBcInVuaWZvcm0gYm9vbCBwaWNraW5nX3VBY3RpdmU7XFxudW5pZm9ybSBib29sIHBpY2tpbmdfdUF0dHJpYnV0ZTtcXG51bmlmb3JtIHZlYzMgcGlja2luZ191U2VsZWN0ZWRDb2xvcjtcXG51bmlmb3JtIGJvb2wgcGlja2luZ191U2VsZWN0ZWRDb2xvclZhbGlkO1xcblxcbm91dCB2ZWM0IHBpY2tpbmdfdlJHQmNvbG9yX0F2YWxpZDtcXG5cXG5jb25zdCBmbG9hdCBDT0xPUl9TQ0FMRSA9IDEuIC8gMjU1LjtcXG5cXG5ib29sIHBpY2tpbmdfaXNDb2xvclZhbGlkKHZlYzMgY29sb3IpIHtcXG4gIHJldHVybiBkb3QoY29sb3IsIHZlYzMoMS4wKSkgPiAwLjAwMTtcXG59XFxuXFxuYm9vbCBpc1ZlcnRleFBpY2tlZCh2ZWMzIHZlcnRleENvbG9yKSB7XFxuICByZXR1cm5cXG4gICAgcGlja2luZ191U2VsZWN0ZWRDb2xvclZhbGlkICYmXFxuICAgICFwaWNraW5nX2lzQ29sb3JWYWxpZChhYnModmVydGV4Q29sb3IgLSBwaWNraW5nX3VTZWxlY3RlZENvbG9yKSk7XFxufVxcblxcbnZvaWQgcGlja2luZ19zZXRQaWNraW5nQ29sb3IodmVjMyBwaWNraW5nQ29sb3IpIHtcXG4gIGlmIChwaWNraW5nX3VBY3RpdmUpIHtcXG4gICAgcGlja2luZ192UkdCY29sb3JfQXZhbGlkLmEgPSBmbG9hdChwaWNraW5nX2lzQ29sb3JWYWxpZChwaWNraW5nQ29sb3IpKTtcXG5cXG4gICAgaWYgKCFwaWNraW5nX3VBdHRyaWJ1dGUpIHtcXG4gICAgICBwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQucmdiID0gcGlja2luZ0NvbG9yICogQ09MT1JfU0NBTEU7XFxuICAgIH1cXG4gIH0gZWxzZSB7XFxuICAgIHBpY2tpbmdfdlJHQmNvbG9yX0F2YWxpZC5hID0gZmxvYXQoaXNWZXJ0ZXhQaWNrZWQocGlja2luZ0NvbG9yKSk7XFxuICB9XFxufVxcblxcbnZvaWQgcGlja2luZ19zZXRQaWNraW5nQXR0cmlidXRlKGZsb2F0IHZhbHVlKSB7XFxuICBpZiAocGlja2luZ191QXR0cmlidXRlKSB7XFxuICAgIHBpY2tpbmdfdlJHQmNvbG9yX0F2YWxpZC5yID0gdmFsdWU7XFxuICB9XFxufVxcbnZvaWQgcGlja2luZ19zZXRQaWNraW5nQXR0cmlidXRlKHZlYzIgdmFsdWUpIHtcXG4gIGlmIChwaWNraW5nX3VBdHRyaWJ1dGUpIHtcXG4gICAgcGlja2luZ192UkdCY29sb3JfQXZhbGlkLnJnID0gdmFsdWU7XFxuICB9XFxufVxcbnZvaWQgcGlja2luZ19zZXRQaWNraW5nQXR0cmlidXRlKHZlYzMgdmFsdWUpIHtcXG4gIGlmIChwaWNraW5nX3VBdHRyaWJ1dGUpIHtcXG4gICAgcGlja2luZ192UkdCY29sb3JfQXZhbGlkLnJnYiA9IHZhbHVlO1xcbiAgfVxcbn1cXG5cIjtcbmNvbnN0IGZzID0gXCJ1bmlmb3JtIGJvb2wgcGlja2luZ191QWN0aXZlO1xcbnVuaWZvcm0gdmVjMyBwaWNraW5nX3VTZWxlY3RlZENvbG9yO1xcbnVuaWZvcm0gdmVjNCBwaWNraW5nX3VIaWdobGlnaHRDb2xvcjtcXG5cXG5pbiB2ZWM0IHBpY2tpbmdfdlJHQmNvbG9yX0F2YWxpZDtcXG52ZWM0IHBpY2tpbmdfZmlsdGVySGlnaGxpZ2h0Q29sb3IodmVjNCBjb2xvcikge1xcbiAgaWYgKHBpY2tpbmdfdUFjdGl2ZSkge1xcbiAgICByZXR1cm4gY29sb3I7XFxuICB9XFxuICBib29sIHNlbGVjdGVkID0gYm9vbChwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQuYSk7XFxuXFxuICBpZiAoc2VsZWN0ZWQpIHtcXG4gICAgZmxvYXQgaGlnaExpZ2h0QWxwaGEgPSBwaWNraW5nX3VIaWdobGlnaHRDb2xvci5hO1xcbiAgICBmbG9hdCBibGVuZGVkQWxwaGEgPSBoaWdoTGlnaHRBbHBoYSArIGNvbG9yLmEgKiAoMS4wIC0gaGlnaExpZ2h0QWxwaGEpO1xcbiAgICBmbG9hdCBoaWdoTGlnaHRSYXRpbyA9IGhpZ2hMaWdodEFscGhhIC8gYmxlbmRlZEFscGhhO1xcblxcbiAgICB2ZWMzIGJsZW5kZWRSR0IgPSBtaXgoY29sb3IucmdiLCBwaWNraW5nX3VIaWdobGlnaHRDb2xvci5yZ2IsIGhpZ2hMaWdodFJhdGlvKTtcXG4gICAgcmV0dXJuIHZlYzQoYmxlbmRlZFJHQiwgYmxlbmRlZEFscGhhKTtcXG4gIH0gZWxzZSB7XFxuICAgIHJldHVybiBjb2xvcjtcXG4gIH1cXG59XFxudmVjNCBwaWNraW5nX2ZpbHRlclBpY2tpbmdDb2xvcih2ZWM0IGNvbG9yKSB7XFxuICBpZiAocGlja2luZ191QWN0aXZlKSB7XFxuICAgIGlmIChwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQuYSA9PSAwLjApIHtcXG4gICAgICBkaXNjYXJkO1xcbiAgICB9XFxuICAgIHJldHVybiBwaWNraW5nX3ZSR0Jjb2xvcl9BdmFsaWQ7XFxuICB9XFxuICByZXR1cm4gY29sb3I7XFxufVxcbnZlYzQgcGlja2luZ19maWx0ZXJDb2xvcih2ZWM0IGNvbG9yKSB7XFxuICB2ZWM0IGhpZ2hpZ2h0Q29sb3IgPSBwaWNraW5nX2ZpbHRlckhpZ2hsaWdodENvbG9yKGNvbG9yKTtcXG4gIHJldHVybiBwaWNraW5nX2ZpbHRlclBpY2tpbmdDb2xvcihoaWdoaWdodENvbG9yKTtcXG59XFxuXFxuXCI7XG5leHBvcnQgY29uc3QgcGlja2luZyA9IHtcbiAgbmFtZTogJ3BpY2tpbmcnLFxuICB2cyxcbiAgZnMsXG4gIGdldFVuaWZvcm1zXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlja2luZy5qcy5tYXAiXSwibmFtZXMiOlsiREVGQVVMVF9ISUdITElHSFRfQ09MT1IiLCJVaW50OEFycmF5IiwiREVGQVVMVF9NT0RVTEVfT1BUSU9OUyIsInBpY2tpbmdTZWxlY3RlZENvbG9yIiwicGlja2luZ0hpZ2hsaWdodENvbG9yIiwicGlja2luZ0FjdGl2ZSIsInBpY2tpbmdBdHRyaWJ1dGUiLCJnZXRVbmlmb3JtcyIsIm9wdHMiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJ1bmlmb3JtcyIsInBpY2tpbmdfdVNlbGVjdGVkQ29sb3JWYWxpZCIsInNlbGVjdGVkQ29sb3IiLCJzbGljZSIsInBpY2tpbmdfdVNlbGVjdGVkQ29sb3IiLCJjb2xvciIsIkFycmF5IiwiZnJvbSIsIngiLCJOdW1iZXIiLCJpc0Zpbml0ZSIsInBpY2tpbmdfdUhpZ2hsaWdodENvbG9yIiwicGlja2luZ191QWN0aXZlIiwiQm9vbGVhbiIsInBpY2tpbmdfdUF0dHJpYnV0ZSIsInZzIiwiZnMiLCJwaWNraW5nIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/picking/picking.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/transform/transform.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/modules/transform/transform.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transform: () => (/* binding */ transform)\n/* harmony export */ });\nconst vs = \"attribute float transform_elementID;\\nvec2 transform_getPixelSizeHalf(vec2 size) {\\n  return vec2(1.) / (2. * size);\\n}\\n\\nvec2 transform_getPixelIndices(vec2 texSize, vec2 pixelSizeHalf) {\\n  float yIndex = floor((transform_elementID / texSize[0]) + pixelSizeHalf[1]);\\n  float xIndex = transform_elementID - (yIndex * texSize[0]);\\n  return vec2(xIndex, yIndex);\\n}\\nvec2 transform_getTexCoord(vec2 size) {\\n  vec2 pixelSizeHalf = transform_getPixelSizeHalf(size);\\n  vec2 indices = transform_getPixelIndices(size, pixelSizeHalf);\\n  vec2 coord = indices / size + pixelSizeHalf;\\n  return coord;\\n}\\nvec2 transform_getPos(vec2 size) {\\n  vec2 texCoord = transform_getTexCoord(size);\\n  vec2 pos = (texCoord * (2.0, 2.0)) - (1., 1.);\\n  return pos;\\n}\\nvec4 transform_getInput(sampler2D texSampler, vec2 size) {\\n  vec2 texCoord = transform_getTexCoord(size);\\n  vec4 textureColor = texture2D(texSampler, texCoord);\\n  return textureColor;\\n}\\n\";\nconst transform = {\n    name: \"transform\",\n    vs,\n    fs: null\n}; //# sourceMappingURL=transform.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vbW9kdWxlcy90cmFuc2Zvcm0vdHJhbnNmb3JtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxLQUFLO0FBQ0osTUFBTUMsWUFBWTtJQUN2QkMsTUFBTTtJQUNORjtJQUNBRyxJQUFJO0FBQ04sRUFBRSxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3NoYWRlcnRvb2xzL2Rpc3QvZXNtL21vZHVsZXMvdHJhbnNmb3JtL3RyYW5zZm9ybS5qcz84NWQwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHZzID0gXCJhdHRyaWJ1dGUgZmxvYXQgdHJhbnNmb3JtX2VsZW1lbnRJRDtcXG52ZWMyIHRyYW5zZm9ybV9nZXRQaXhlbFNpemVIYWxmKHZlYzIgc2l6ZSkge1xcbiAgcmV0dXJuIHZlYzIoMS4pIC8gKDIuICogc2l6ZSk7XFxufVxcblxcbnZlYzIgdHJhbnNmb3JtX2dldFBpeGVsSW5kaWNlcyh2ZWMyIHRleFNpemUsIHZlYzIgcGl4ZWxTaXplSGFsZikge1xcbiAgZmxvYXQgeUluZGV4ID0gZmxvb3IoKHRyYW5zZm9ybV9lbGVtZW50SUQgLyB0ZXhTaXplWzBdKSArIHBpeGVsU2l6ZUhhbGZbMV0pO1xcbiAgZmxvYXQgeEluZGV4ID0gdHJhbnNmb3JtX2VsZW1lbnRJRCAtICh5SW5kZXggKiB0ZXhTaXplWzBdKTtcXG4gIHJldHVybiB2ZWMyKHhJbmRleCwgeUluZGV4KTtcXG59XFxudmVjMiB0cmFuc2Zvcm1fZ2V0VGV4Q29vcmQodmVjMiBzaXplKSB7XFxuICB2ZWMyIHBpeGVsU2l6ZUhhbGYgPSB0cmFuc2Zvcm1fZ2V0UGl4ZWxTaXplSGFsZihzaXplKTtcXG4gIHZlYzIgaW5kaWNlcyA9IHRyYW5zZm9ybV9nZXRQaXhlbEluZGljZXMoc2l6ZSwgcGl4ZWxTaXplSGFsZik7XFxuICB2ZWMyIGNvb3JkID0gaW5kaWNlcyAvIHNpemUgKyBwaXhlbFNpemVIYWxmO1xcbiAgcmV0dXJuIGNvb3JkO1xcbn1cXG52ZWMyIHRyYW5zZm9ybV9nZXRQb3ModmVjMiBzaXplKSB7XFxuICB2ZWMyIHRleENvb3JkID0gdHJhbnNmb3JtX2dldFRleENvb3JkKHNpemUpO1xcbiAgdmVjMiBwb3MgPSAodGV4Q29vcmQgKiAoMi4wLCAyLjApKSAtICgxLiwgMS4pO1xcbiAgcmV0dXJuIHBvcztcXG59XFxudmVjNCB0cmFuc2Zvcm1fZ2V0SW5wdXQoc2FtcGxlcjJEIHRleFNhbXBsZXIsIHZlYzIgc2l6ZSkge1xcbiAgdmVjMiB0ZXhDb29yZCA9IHRyYW5zZm9ybV9nZXRUZXhDb29yZChzaXplKTtcXG4gIHZlYzQgdGV4dHVyZUNvbG9yID0gdGV4dHVyZTJEKHRleFNhbXBsZXIsIHRleENvb3JkKTtcXG4gIHJldHVybiB0ZXh0dXJlQ29sb3I7XFxufVxcblwiO1xuZXhwb3J0IGNvbnN0IHRyYW5zZm9ybSA9IHtcbiAgbmFtZTogJ3RyYW5zZm9ybScsXG4gIHZzLFxuICBmczogbnVsbFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zZm9ybS5qcy5tYXAiXSwibmFtZXMiOlsidnMiLCJ0cmFuc2Zvcm0iLCJuYW1lIiwiZnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/transform/transform.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ assert)\n/* harmony export */ });\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || \"shadertools: assertion failed.\");\n    }\n} //# sourceMappingURL=assert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vdXRpbHMvYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxTQUFTQSxPQUFPQyxTQUFTLEVBQUVDLE9BQU87SUFDL0MsSUFBSSxDQUFDRCxXQUFXO1FBQ2QsTUFBTSxJQUFJRSxNQUFNRCxXQUFXO0lBQzdCO0FBQ0YsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC9zaGFkZXJ0b29scy9kaXN0L2VzbS91dGlscy9hc3NlcnQuanM/ZGU5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhc3NlcnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UgfHwgJ3NoYWRlcnRvb2xzOiBhc3NlcnRpb24gZmFpbGVkLicpO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3NlcnQuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/is-old-ie.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/utils/is-old-ie.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isOldIE)\n/* harmony export */ });\nfunction isOldIE() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const navigator =  false ? 0 : {};\n    const userAgent = opts.userAgent || navigator.userAgent || \"\";\n    const isMSIE = userAgent.indexOf(\"MSIE \") !== -1;\n    const isTrident = userAgent.indexOf(\"Trident/\") !== -1;\n    return isMSIE || isTrident;\n} //# sourceMappingURL=is-old-ie.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vdXRpbHMvaXMtb2xkLWllLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxTQUFTQTtJQUN0QixJQUFJQyxPQUFPQyxVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRyxDQUFDO0lBQ2hGLE1BQU1HLFlBQVksTUFBa0IsR0FBY0MsQ0FBc0IsR0FBRyxDQUFDO0lBQzVFLE1BQU1DLFlBQVlOLEtBQUtNLFNBQVMsSUFBSUYsVUFBVUUsU0FBUyxJQUFJO0lBQzNELE1BQU1DLFNBQVNELFVBQVVFLE9BQU8sQ0FBQyxhQUFhLENBQUM7SUFDL0MsTUFBTUMsWUFBWUgsVUFBVUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0lBQ3JELE9BQU9ELFVBQVVFO0FBQ25CLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vdXRpbHMvaXMtb2xkLWllLmpzPzI2YzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNPbGRJRSgpIHtcbiAgbGV0IG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICBjb25zdCBuYXZpZ2F0b3IgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdy5uYXZpZ2F0b3IgfHwge30gOiB7fTtcbiAgY29uc3QgdXNlckFnZW50ID0gb3B0cy51c2VyQWdlbnQgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudCB8fCAnJztcbiAgY29uc3QgaXNNU0lFID0gdXNlckFnZW50LmluZGV4T2YoJ01TSUUgJykgIT09IC0xO1xuICBjb25zdCBpc1RyaWRlbnQgPSB1c2VyQWdlbnQuaW5kZXhPZignVHJpZGVudC8nKSAhPT0gLTE7XG4gIHJldHVybiBpc01TSUUgfHwgaXNUcmlkZW50O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtb2xkLWllLmpzLm1hcCJdLCJuYW1lcyI6WyJpc09sZElFIiwib3B0cyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIm5hdmlnYXRvciIsIndpbmRvdyIsInVzZXJBZ2VudCIsImlzTVNJRSIsImluZGV4T2YiLCJpc1RyaWRlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/is-old-ie.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/shader-utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/utils/shader-utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertToVec4: () => (/* binding */ convertToVec4),\n/* harmony export */   getPassthroughFS: () => (/* binding */ getPassthroughFS),\n/* harmony export */   getQualifierDetails: () => (/* binding */ getQualifierDetails),\n/* harmony export */   typeToChannelCount: () => (/* binding */ typeToChannelCount),\n/* harmony export */   typeToChannelSuffix: () => (/* binding */ typeToChannelSuffix)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js\");\n\nconst FS100 = \"void main() {gl_FragColor = vec4(0);}\";\nconst FS_GLES = \"out vec4 transform_output;\\nvoid main() {\\n  transform_output = vec4(0);\\n}\";\nconst FS300 = \"#version 300 es\\n\".concat(FS_GLES);\nfunction getQualifierDetails(line, qualifiers) {\n    qualifiers = Array.isArray(qualifiers) ? qualifiers : [\n        qualifiers\n    ];\n    const words = line.replace(/^\\s+/, \"\").split(/\\s+/);\n    const [qualifier, type, definition] = words;\n    if (!qualifiers.includes(qualifier) || !type || !definition) {\n        return null;\n    }\n    const name = definition.split(\";\")[0];\n    return {\n        qualifier,\n        type,\n        name\n    };\n}\nfunction getPassthroughFS() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const { version = 100, input, inputType, output } = options;\n    if (!input) {\n        if (version === 300) {\n            return FS300;\n        } else if (version > 300) {\n            return \"#version \".concat(version, \"\\n\").concat(FS_GLES);\n        }\n        return FS100;\n    }\n    const outputValue = convertToVec4(input, inputType);\n    if (version >= 300) {\n        return \"#version \".concat(version, \" \").concat(version === 300 ? \"es\" : \"\", \"\\nin \").concat(inputType, \" \").concat(input, \";\\nout vec4 \").concat(output, \";\\nvoid main() {\\n  \").concat(output, \" = \").concat(outputValue, \";\\n}\");\n    }\n    return \"varying \".concat(inputType, \" \").concat(input, \";\\nvoid main() {\\n  gl_FragColor = \").concat(outputValue, \";\\n}\");\n}\nfunction typeToChannelSuffix(type) {\n    switch(type){\n        case \"float\":\n            return \"x\";\n        case \"vec2\":\n            return \"xy\";\n        case \"vec3\":\n            return \"xyz\";\n        case \"vec4\":\n            return \"xyzw\";\n        default:\n            (0,_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false);\n            return null;\n    }\n}\nfunction typeToChannelCount(type) {\n    switch(type){\n        case \"float\":\n            return 1;\n        case \"vec2\":\n            return 2;\n        case \"vec3\":\n            return 3;\n        case \"vec4\":\n            return 4;\n        default:\n            (0,_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false);\n            return null;\n    }\n}\nfunction convertToVec4(variable, type) {\n    switch(type){\n        case \"float\":\n            return \"vec4(\".concat(variable, \", 0.0, 0.0, 1.0)\");\n        case \"vec2\":\n            return \"vec4(\".concat(variable, \", 0.0, 1.0)\");\n        case \"vec3\":\n            return \"vec4(\".concat(variable, \", 1.0)\");\n        case \"vec4\":\n            return variable;\n        default:\n            (0,_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false);\n            return null;\n    }\n} //# sourceMappingURL=shader-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vdXRpbHMvc2hhZGVyLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFrQztBQUNsQyxNQUFNQyxRQUFRO0FBQ2QsTUFBTUMsVUFBVTtBQUNoQixNQUFNQyxRQUFRLG9CQUFvQkMsTUFBTSxDQUFDRjtBQUNsQyxTQUFTRyxvQkFBb0JDLElBQUksRUFBRUMsVUFBVTtJQUNsREEsYUFBYUMsTUFBTUMsT0FBTyxDQUFDRixjQUFjQSxhQUFhO1FBQUNBO0tBQVc7SUFDbEUsTUFBTUcsUUFBUUosS0FBS0ssT0FBTyxDQUFDLFFBQVEsSUFBSUMsS0FBSyxDQUFDO0lBQzdDLE1BQU0sQ0FBQ0MsV0FBV0MsTUFBTUMsV0FBVyxHQUFHTDtJQUV0QyxJQUFJLENBQUNILFdBQVdTLFFBQVEsQ0FBQ0gsY0FBYyxDQUFDQyxRQUFRLENBQUNDLFlBQVk7UUFDM0QsT0FBTztJQUNUO0lBRUEsTUFBTUUsT0FBT0YsV0FBV0gsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQ3JDLE9BQU87UUFDTEM7UUFDQUM7UUFDQUc7SUFDRjtBQUNGO0FBQ08sU0FBU0M7SUFDZCxJQUFJQyxVQUFVQyxVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRyxDQUFDO0lBQ25GLE1BQU0sRUFDSkcsVUFBVSxHQUFHLEVBQ2JDLEtBQUssRUFDTEMsU0FBUyxFQUNUQyxNQUFNLEVBQ1AsR0FBR1A7SUFFSixJQUFJLENBQUNLLE9BQU87UUFDVixJQUFJRCxZQUFZLEtBQUs7WUFDbkIsT0FBT3BCO1FBQ1QsT0FBTyxJQUFJb0IsVUFBVSxLQUFLO1lBQ3hCLE9BQU8sWUFBWW5CLE1BQU0sQ0FBQ21CLFNBQVMsTUFBTW5CLE1BQU0sQ0FBQ0Y7UUFDbEQ7UUFFQSxPQUFPRDtJQUNUO0lBRUEsTUFBTTBCLGNBQWNDLGNBQWNKLE9BQU9DO0lBRXpDLElBQUlGLFdBQVcsS0FBSztRQUNsQixPQUFPLFlBQVluQixNQUFNLENBQUNtQixTQUFTLEtBQUtuQixNQUFNLENBQUNtQixZQUFZLE1BQU0sT0FBTyxJQUFJLFNBQVNuQixNQUFNLENBQUNxQixXQUFXLEtBQUtyQixNQUFNLENBQUNvQixPQUFPLGdCQUFnQnBCLE1BQU0sQ0FBQ3NCLFFBQVEsd0JBQXdCdEIsTUFBTSxDQUFDc0IsUUFBUSxPQUFPdEIsTUFBTSxDQUFDdUIsYUFBYTtJQUM3TjtJQUVBLE9BQU8sV0FBV3ZCLE1BQU0sQ0FBQ3FCLFdBQVcsS0FBS3JCLE1BQU0sQ0FBQ29CLE9BQU8sdUNBQXVDcEIsTUFBTSxDQUFDdUIsYUFBYTtBQUNwSDtBQUNPLFNBQVNFLG9CQUFvQmYsSUFBSTtJQUN0QyxPQUFRQTtRQUNOLEtBQUs7WUFDSCxPQUFPO1FBRVQsS0FBSztZQUNILE9BQU87UUFFVCxLQUFLO1lBQ0gsT0FBTztRQUVULEtBQUs7WUFDSCxPQUFPO1FBRVQ7WUFDRWQsa0RBQU1BLENBQUM7WUFDUCxPQUFPO0lBQ1g7QUFDRjtBQUNPLFNBQVM4QixtQkFBbUJoQixJQUFJO0lBQ3JDLE9BQVFBO1FBQ04sS0FBSztZQUNILE9BQU87UUFFVCxLQUFLO1lBQ0gsT0FBTztRQUVULEtBQUs7WUFDSCxPQUFPO1FBRVQsS0FBSztZQUNILE9BQU87UUFFVDtZQUNFZCxrREFBTUEsQ0FBQztZQUNQLE9BQU87SUFDWDtBQUNGO0FBQ08sU0FBUzRCLGNBQWNHLFFBQVEsRUFBRWpCLElBQUk7SUFDMUMsT0FBUUE7UUFDTixLQUFLO1lBQ0gsT0FBTyxRQUFRVixNQUFNLENBQUMyQixVQUFVO1FBRWxDLEtBQUs7WUFDSCxPQUFPLFFBQVEzQixNQUFNLENBQUMyQixVQUFVO1FBRWxDLEtBQUs7WUFDSCxPQUFPLFFBQVEzQixNQUFNLENBQUMyQixVQUFVO1FBRWxDLEtBQUs7WUFDSCxPQUFPQTtRQUVUO1lBQ0UvQixrREFBTUEsQ0FBQztZQUNQLE9BQU87SUFDWDtBQUNGLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvc2hhZGVydG9vbHMvZGlzdC9lc20vdXRpbHMvc2hhZGVyLXV0aWxzLmpzP2E1ZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnLi4vdXRpbHMnO1xuY29uc3QgRlMxMDAgPSBcInZvaWQgbWFpbigpIHtnbF9GcmFnQ29sb3IgPSB2ZWM0KDApO31cIjtcbmNvbnN0IEZTX0dMRVMgPSBcIm91dCB2ZWM0IHRyYW5zZm9ybV9vdXRwdXQ7XFxudm9pZCBtYWluKCkge1xcbiAgdHJhbnNmb3JtX291dHB1dCA9IHZlYzQoMCk7XFxufVwiO1xuY29uc3QgRlMzMDAgPSBcIiN2ZXJzaW9uIDMwMCBlc1xcblwiLmNvbmNhdChGU19HTEVTKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRRdWFsaWZpZXJEZXRhaWxzKGxpbmUsIHF1YWxpZmllcnMpIHtcbiAgcXVhbGlmaWVycyA9IEFycmF5LmlzQXJyYXkocXVhbGlmaWVycykgPyBxdWFsaWZpZXJzIDogW3F1YWxpZmllcnNdO1xuICBjb25zdCB3b3JkcyA9IGxpbmUucmVwbGFjZSgvXlxccysvLCAnJykuc3BsaXQoL1xccysvKTtcbiAgY29uc3QgW3F1YWxpZmllciwgdHlwZSwgZGVmaW5pdGlvbl0gPSB3b3JkcztcblxuICBpZiAoIXF1YWxpZmllcnMuaW5jbHVkZXMocXVhbGlmaWVyKSB8fCAhdHlwZSB8fCAhZGVmaW5pdGlvbikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgbmFtZSA9IGRlZmluaXRpb24uc3BsaXQoJzsnKVswXTtcbiAgcmV0dXJuIHtcbiAgICBxdWFsaWZpZXIsXG4gICAgdHlwZSxcbiAgICBuYW1lXG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UGFzc3Rocm91Z2hGUygpIHtcbiAgbGV0IG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICBjb25zdCB7XG4gICAgdmVyc2lvbiA9IDEwMCxcbiAgICBpbnB1dCxcbiAgICBpbnB1dFR5cGUsXG4gICAgb3V0cHV0XG4gIH0gPSBvcHRpb25zO1xuXG4gIGlmICghaW5wdXQpIHtcbiAgICBpZiAodmVyc2lvbiA9PT0gMzAwKSB7XG4gICAgICByZXR1cm4gRlMzMDA7XG4gICAgfSBlbHNlIGlmICh2ZXJzaW9uID4gMzAwKSB7XG4gICAgICByZXR1cm4gXCIjdmVyc2lvbiBcIi5jb25jYXQodmVyc2lvbiwgXCJcXG5cIikuY29uY2F0KEZTX0dMRVMpO1xuICAgIH1cblxuICAgIHJldHVybiBGUzEwMDtcbiAgfVxuXG4gIGNvbnN0IG91dHB1dFZhbHVlID0gY29udmVydFRvVmVjNChpbnB1dCwgaW5wdXRUeXBlKTtcblxuICBpZiAodmVyc2lvbiA+PSAzMDApIHtcbiAgICByZXR1cm4gXCIjdmVyc2lvbiBcIi5jb25jYXQodmVyc2lvbiwgXCIgXCIpLmNvbmNhdCh2ZXJzaW9uID09PSAzMDAgPyAnZXMnIDogJycsIFwiXFxuaW4gXCIpLmNvbmNhdChpbnB1dFR5cGUsIFwiIFwiKS5jb25jYXQoaW5wdXQsIFwiO1xcbm91dCB2ZWM0IFwiKS5jb25jYXQob3V0cHV0LCBcIjtcXG52b2lkIG1haW4oKSB7XFxuICBcIikuY29uY2F0KG91dHB1dCwgXCIgPSBcIikuY29uY2F0KG91dHB1dFZhbHVlLCBcIjtcXG59XCIpO1xuICB9XG5cbiAgcmV0dXJuIFwidmFyeWluZyBcIi5jb25jYXQoaW5wdXRUeXBlLCBcIiBcIikuY29uY2F0KGlucHV0LCBcIjtcXG52b2lkIG1haW4oKSB7XFxuICBnbF9GcmFnQ29sb3IgPSBcIikuY29uY2F0KG91dHB1dFZhbHVlLCBcIjtcXG59XCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHR5cGVUb0NoYW5uZWxTdWZmaXgodHlwZSkge1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICdmbG9hdCc6XG4gICAgICByZXR1cm4gJ3gnO1xuXG4gICAgY2FzZSAndmVjMic6XG4gICAgICByZXR1cm4gJ3h5JztcblxuICAgIGNhc2UgJ3ZlYzMnOlxuICAgICAgcmV0dXJuICd4eXonO1xuXG4gICAgY2FzZSAndmVjNCc6XG4gICAgICByZXR1cm4gJ3h5encnO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIGFzc2VydChmYWxzZSk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHR5cGVUb0NoYW5uZWxDb3VudCh0eXBlKSB7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ2Zsb2F0JzpcbiAgICAgIHJldHVybiAxO1xuXG4gICAgY2FzZSAndmVjMic6XG4gICAgICByZXR1cm4gMjtcblxuICAgIGNhc2UgJ3ZlYzMnOlxuICAgICAgcmV0dXJuIDM7XG5cbiAgICBjYXNlICd2ZWM0JzpcbiAgICAgIHJldHVybiA0O1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIGFzc2VydChmYWxzZSk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRUb1ZlYzQodmFyaWFibGUsIHR5cGUpIHtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAnZmxvYXQnOlxuICAgICAgcmV0dXJuIFwidmVjNChcIi5jb25jYXQodmFyaWFibGUsIFwiLCAwLjAsIDAuMCwgMS4wKVwiKTtcblxuICAgIGNhc2UgJ3ZlYzInOlxuICAgICAgcmV0dXJuIFwidmVjNChcIi5jb25jYXQodmFyaWFibGUsIFwiLCAwLjAsIDEuMClcIik7XG5cbiAgICBjYXNlICd2ZWMzJzpcbiAgICAgIHJldHVybiBcInZlYzQoXCIuY29uY2F0KHZhcmlhYmxlLCBcIiwgMS4wKVwiKTtcblxuICAgIGNhc2UgJ3ZlYzQnOlxuICAgICAgcmV0dXJuIHZhcmlhYmxlO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIGFzc2VydChmYWxzZSk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhZGVyLXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJhc3NlcnQiLCJGUzEwMCIsIkZTX0dMRVMiLCJGUzMwMCIsImNvbmNhdCIsImdldFF1YWxpZmllckRldGFpbHMiLCJsaW5lIiwicXVhbGlmaWVycyIsIkFycmF5IiwiaXNBcnJheSIsIndvcmRzIiwicmVwbGFjZSIsInNwbGl0IiwicXVhbGlmaWVyIiwidHlwZSIsImRlZmluaXRpb24iLCJpbmNsdWRlcyIsIm5hbWUiLCJnZXRQYXNzdGhyb3VnaEZTIiwib3B0aW9ucyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInZlcnNpb24iLCJpbnB1dCIsImlucHV0VHlwZSIsIm91dHB1dCIsIm91dHB1dFZhbHVlIiwiY29udmVydFRvVmVjNCIsInR5cGVUb0NoYW5uZWxTdWZmaXgiLCJ0eXBlVG9DaGFubmVsQ291bnQiLCJ2YXJpYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/shader-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/webgl-info.js":
/*!************************************************************************!*\
  !*** ./node_modules/@luma.gl/shadertools/dist/esm/utils/webgl-info.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FEATURES: () => (/* binding */ FEATURES),\n/* harmony export */   canCompileGLGSExtension: () => (/* binding */ canCompileGLGSExtension),\n/* harmony export */   getContextInfo: () => (/* binding */ getContextInfo),\n/* harmony export */   hasFeatures: () => (/* binding */ hasFeatures)\n/* harmony export */ });\n/* harmony import */ var _is_old_ie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is-old-ie */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/is-old-ie.js\");\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/assert.js\");\n\n\nconst GL_VENDOR = 0x1f00;\nconst GL_RENDERER = 0x1f01;\nconst GL_VERSION = 0x1f02;\nconst GL_SHADING_LANGUAGE_VERSION = 0x8b8c;\nconst WEBGL_FEATURES = {\n    GLSL_FRAG_DATA: [\n        \"WEBGL_draw_buffers\",\n        true\n    ],\n    GLSL_FRAG_DEPTH: [\n        \"EXT_frag_depth\",\n        true\n    ],\n    GLSL_DERIVATIVES: [\n        \"OES_standard_derivatives\",\n        true\n    ],\n    GLSL_TEXTURE_LOD: [\n        \"EXT_shader_texture_lod\",\n        true\n    ]\n};\nconst FEATURES = {};\nObject.keys(WEBGL_FEATURES).forEach((key)=>{\n    FEATURES[key] = key;\n});\n\nfunction isWebGL2(gl) {\n    if (typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext) {\n        return true;\n    }\n    return Boolean(gl && gl._version === 2);\n}\nfunction getContextInfo(gl) {\n    const info = gl.getExtension(\"WEBGL_debug_renderer_info\");\n    const vendor = gl.getParameter(info && info.UNMASKED_VENDOR_WEBGL || GL_VENDOR);\n    const renderer = gl.getParameter(info && info.UNMASKED_RENDERER_WEBGL || GL_RENDERER);\n    const gpuVendor = identifyGPUVendor(vendor, renderer);\n    const gpuInfo = {\n        gpuVendor,\n        vendor,\n        renderer,\n        version: gl.getParameter(GL_VERSION),\n        shadingLanguageVersion: gl.getParameter(GL_SHADING_LANGUAGE_VERSION)\n    };\n    return gpuInfo;\n}\nfunction identifyGPUVendor(vendor, renderer) {\n    if (vendor.match(/NVIDIA/i) || renderer.match(/NVIDIA/i)) {\n        return \"NVIDIA\";\n    }\n    if (vendor.match(/INTEL/i) || renderer.match(/INTEL/i)) {\n        return \"INTEL\";\n    }\n    if (vendor.match(/AMD/i) || renderer.match(/AMD/i) || vendor.match(/ATI/i) || renderer.match(/ATI/i)) {\n        return \"AMD\";\n    }\n    return \"UNKNOWN GPU\";\n}\nconst compiledGlslExtensions = {};\nfunction canCompileGLGSExtension(gl, cap) {\n    let opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const feature = WEBGL_FEATURES[cap];\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(feature, cap);\n    if (!(0,_is_old_ie__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(opts)) {\n        return true;\n    }\n    if (cap in compiledGlslExtensions) {\n        return compiledGlslExtensions[cap];\n    }\n    const extensionName = feature[0];\n    const behavior = opts.behavior || \"enable\";\n    const source = \"#extension GL_\".concat(extensionName, \" : \").concat(behavior, \"\\nvoid main(void) {}\");\n    const shader = gl.createShader(35633);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const canCompile = gl.getShaderParameter(shader, 35713);\n    gl.deleteShader(shader);\n    compiledGlslExtensions[cap] = canCompile;\n    return canCompile;\n}\nfunction getFeature(gl, cap) {\n    const feature = WEBGL_FEATURES[cap];\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(feature, cap);\n    const extensionName = isWebGL2(gl) ? feature[1] || feature[0] : feature[0];\n    const value = typeof extensionName === \"string\" ? Boolean(gl.getExtension(extensionName)) : extensionName;\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value === false || value === true);\n    return value;\n}\nfunction hasFeatures(gl, features) {\n    features = Array.isArray(features) ? features : [\n        features\n    ];\n    return features.every((feature)=>getFeature(gl, feature));\n} //# sourceMappingURL=webgl-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/utils/webgl-info.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/accessor.js":
/*!******************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/accessor.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ACCESSOR_VALUES: () => (/* binding */ DEFAULT_ACCESSOR_VALUES),\n/* harmony export */   \"default\": () => (/* binding */ Accessor)\n/* harmony export */ });\n/* harmony import */ var _webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../webgl-utils/typed-array-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/typed-array-utils.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_check_props__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/check-props */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/check-props.js\");\n\n\n\nconst DEFAULT_ACCESSOR_VALUES = {\n    offset: 0,\n    stride: 0,\n    type: 5126,\n    size: 1,\n    divisor: 0,\n    normalized: false,\n    integer: false\n};\nconst PROP_CHECKS = {\n    deprecatedProps: {\n        instanced: \"divisor\",\n        isInstanced: \"divisor\"\n    }\n};\nclass Accessor {\n    static getBytesPerElement(accessor) {\n        const ArrayType = (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_0__.getTypedArrayFromGLType)(accessor.type || 5126);\n        return ArrayType.BYTES_PER_ELEMENT;\n    }\n    static getBytesPerVertex(accessor) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(accessor.size);\n        const ArrayType = (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_0__.getTypedArrayFromGLType)(accessor.type || 5126);\n        return ArrayType.BYTES_PER_ELEMENT * accessor.size;\n    }\n    static resolve() {\n        for(var _len = arguments.length, accessors = new Array(_len), _key = 0; _key < _len; _key++){\n            accessors[_key] = arguments[_key];\n        }\n        return new Accessor(...[\n            DEFAULT_ACCESSOR_VALUES,\n            ...accessors\n        ]);\n    }\n    constructor(){\n        for(var _len2 = arguments.length, accessors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            accessors[_key2] = arguments[_key2];\n        }\n        accessors.forEach((accessor)=>this._assign(accessor));\n        Object.freeze(this);\n    }\n    toString() {\n        return JSON.stringify(this);\n    }\n    get BYTES_PER_ELEMENT() {\n        return Accessor.getBytesPerElement(this);\n    }\n    get BYTES_PER_VERTEX() {\n        return Accessor.getBytesPerVertex(this);\n    }\n    _assign() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        props = (0,_utils_check_props__WEBPACK_IMPORTED_MODULE_2__.checkProps)(\"Accessor\", props, PROP_CHECKS);\n        if (props.type !== undefined) {\n            this.type = props.type;\n            if (props.type === 5124 || props.type === 5125) {\n                this.integer = true;\n            }\n        }\n        if (props.size !== undefined) {\n            this.size = props.size;\n        }\n        if (props.offset !== undefined) {\n            this.offset = props.offset;\n        }\n        if (props.stride !== undefined) {\n            this.stride = props.stride;\n        }\n        if (props.normalized !== undefined) {\n            this.normalized = props.normalized;\n        }\n        if (props.integer !== undefined) {\n            this.integer = props.integer;\n        }\n        if (props.divisor !== undefined) {\n            this.divisor = props.divisor;\n        }\n        if (props.buffer !== undefined) {\n            this.buffer = props.buffer;\n        }\n        if (props.index !== undefined) {\n            if (typeof props.index === \"boolean\") {\n                this.index = props.index ? 1 : 0;\n            } else {\n                this.index = props.index;\n            }\n        }\n        if (props.instanced !== undefined) {\n            this.divisor = props.instanced ? 1 : 0;\n        }\n        if (props.isInstanced !== undefined) {\n            this.divisor = props.isInstanced ? 1 : 0;\n        }\n        return this;\n    }\n}\n //# sourceMappingURL=accessor.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/accessor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Buffer)\n/* harmony export */ });\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./accessor */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/accessor.js\");\n/* harmony import */ var _webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../webgl-utils/typed-array-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/typed-array-utils.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_check_props__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/check-props */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/check-props.js\");\n\n\n\n\n\n\nconst DEBUG_DATA_LENGTH = 10;\nconst DEPRECATED_PROPS = {\n    offset: \"accessor.offset\",\n    stride: \"accessor.stride\",\n    type: \"accessor.type\",\n    size: \"accessor.size\",\n    divisor: \"accessor.divisor\",\n    normalized: \"accessor.normalized\",\n    integer: \"accessor.integer\",\n    instanced: \"accessor.divisor\",\n    isInstanced: \"accessor.divisor\"\n};\nconst PROP_CHECKS_INITIALIZE = {\n    removedProps: {},\n    replacedProps: {\n        bytes: \"byteLength\"\n    },\n    deprecatedProps: DEPRECATED_PROPS\n};\nconst PROP_CHECKS_SET_PROPS = {\n    removedProps: DEPRECATED_PROPS\n};\nclass Buffer extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Buffer\";\n    }\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        super(gl, props);\n        this.stubRemovedMethods(\"Buffer\", \"v6.0\", [\n            \"layout\",\n            \"setLayout\",\n            \"getIndexedParameter\"\n        ]);\n        this.target = props.target || (this.gl.webgl2 ? 36662 : 34962);\n        this.initialize(props);\n        Object.seal(this);\n    }\n    getElementCount() {\n        let accessor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.accessor;\n        return Math.round(this.byteLength / _accessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBytesPerElement(accessor));\n    }\n    getVertexCount() {\n        let accessor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.accessor;\n        return Math.round(this.byteLength / _accessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getBytesPerVertex(accessor));\n    }\n    initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (ArrayBuffer.isView(props)) {\n            props = {\n                data: props\n            };\n        }\n        if (Number.isFinite(props)) {\n            props = {\n                byteLength: props\n            };\n        }\n        props = (0,_utils_check_props__WEBPACK_IMPORTED_MODULE_3__.checkProps)(\"Buffer\", props, PROP_CHECKS_INITIALIZE);\n        this.usage = props.usage || 35044;\n        this.debugData = null;\n        this.setAccessor(Object.assign({}, props, props.accessor));\n        if (props.data) {\n            this._setData(props.data, props.offset, props.byteLength);\n        } else {\n            this._setByteLength(props.byteLength || 0);\n        }\n        return this;\n    }\n    setProps(props) {\n        props = (0,_utils_check_props__WEBPACK_IMPORTED_MODULE_3__.checkProps)(\"Buffer\", props, PROP_CHECKS_SET_PROPS);\n        if (\"accessor\" in props) {\n            this.setAccessor(props.accessor);\n        }\n        return this;\n    }\n    setAccessor(accessor) {\n        accessor = Object.assign({}, accessor);\n        delete accessor.buffer;\n        this.accessor = new _accessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"](accessor);\n        return this;\n    }\n    reallocate(byteLength) {\n        if (byteLength > this.byteLength) {\n            this._setByteLength(byteLength);\n            return true;\n        }\n        this.bytesUsed = byteLength;\n        return false;\n    }\n    setData(props) {\n        return this.initialize(props);\n    }\n    subData(props) {\n        if (ArrayBuffer.isView(props)) {\n            props = {\n                data: props\n            };\n        }\n        const { data, offset = 0, srcOffset = 0 } = props;\n        const byteLength = props.byteLength || props.length;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(data);\n        const target = this.gl.webgl2 ? 36663 : this.target;\n        this.gl.bindBuffer(target, this.handle);\n        if (srcOffset !== 0 || byteLength !== undefined) {\n            (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(this.gl);\n            this.gl.bufferSubData(this.target, offset, data, srcOffset, byteLength);\n        } else {\n            this.gl.bufferSubData(target, offset, data);\n        }\n        this.gl.bindBuffer(target, null);\n        this.debugData = null;\n        this._inferType(data);\n        return this;\n    }\n    copyData(_ref) {\n        let { sourceBuffer, readOffset = 0, writeOffset = 0, size } = _ref;\n        const { gl } = this;\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n        gl.bindBuffer(36662, sourceBuffer.handle);\n        gl.bindBuffer(36663, this.handle);\n        gl.copyBufferSubData(36662, 36663, readOffset, writeOffset, size);\n        gl.bindBuffer(36662, null);\n        gl.bindBuffer(36663, null);\n        this.debugData = null;\n        return this;\n    }\n    getData() {\n        let { dstData = null, srcByteOffset = 0, dstOffset = 0, length = 0 } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(this.gl);\n        const ArrayType = (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_5__.getTypedArrayFromGLType)(this.accessor.type || 5126, {\n            clamped: false\n        });\n        const sourceAvailableElementCount = this._getAvailableElementCount(srcByteOffset);\n        const dstElementOffset = dstOffset;\n        let dstAvailableElementCount;\n        let dstElementCount;\n        if (dstData) {\n            dstElementCount = dstData.length;\n            dstAvailableElementCount = dstElementCount - dstElementOffset;\n        } else {\n            dstAvailableElementCount = Math.min(sourceAvailableElementCount, length || sourceAvailableElementCount);\n            dstElementCount = dstElementOffset + dstAvailableElementCount;\n        }\n        const copyElementCount = Math.min(sourceAvailableElementCount, dstAvailableElementCount);\n        length = length || copyElementCount;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(length <= copyElementCount);\n        dstData = dstData || new ArrayType(dstElementCount);\n        this.gl.bindBuffer(36662, this.handle);\n        this.gl.getBufferSubData(36662, srcByteOffset, dstData, dstOffset, length);\n        this.gl.bindBuffer(36662, null);\n        return dstData;\n    }\n    bind() {\n        let { target = this.target, index = this.accessor && this.accessor.index, offset = 0, size } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (target === 35345 || target === 35982) {\n            if (size !== undefined) {\n                this.gl.bindBufferRange(target, index, this.handle, offset, size);\n            } else {\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(offset === 0);\n                this.gl.bindBufferBase(target, index, this.handle);\n            }\n        } else {\n            this.gl.bindBuffer(target, this.handle);\n        }\n        return this;\n    }\n    unbind() {\n        let { target = this.target, index = this.accessor && this.accessor.index } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const isIndexedBuffer = target === 35345 || target === 35982;\n        if (isIndexedBuffer) {\n            this.gl.bindBufferBase(target, index, null);\n        } else {\n            this.gl.bindBuffer(target, null);\n        }\n        return this;\n    }\n    getDebugData() {\n        if (!this.debugData) {\n            this.debugData = this.getData({\n                length: Math.min(DEBUG_DATA_LENGTH, this.byteLength)\n            });\n            return {\n                data: this.debugData,\n                changed: true\n            };\n        }\n        return {\n            data: this.debugData,\n            changed: false\n        };\n    }\n    invalidateDebugData() {\n        this.debugData = null;\n    }\n    _setData(data) {\n        let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        let byteLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : data.byteLength + offset;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(ArrayBuffer.isView(data));\n        this._trackDeallocatedMemory();\n        const target = this._getTarget();\n        this.gl.bindBuffer(target, this.handle);\n        this.gl.bufferData(target, byteLength, this.usage);\n        this.gl.bufferSubData(target, offset, data);\n        this.gl.bindBuffer(target, null);\n        this.debugData = data.slice(0, DEBUG_DATA_LENGTH);\n        this.bytesUsed = byteLength;\n        this._trackAllocatedMemory(byteLength);\n        const type = (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_5__.getGLTypeFromTypedArray)(data);\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(type);\n        this.setAccessor(new _accessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.accessor, {\n            type\n        }));\n        return this;\n    }\n    _setByteLength(byteLength) {\n        let usage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.usage;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(byteLength >= 0);\n        this._trackDeallocatedMemory();\n        let data = byteLength;\n        if (byteLength === 0) {\n            data = new Float32Array(0);\n        }\n        const target = this._getTarget();\n        this.gl.bindBuffer(target, this.handle);\n        this.gl.bufferData(target, data, usage);\n        this.gl.bindBuffer(target, null);\n        this.usage = usage;\n        this.debugData = null;\n        this.bytesUsed = byteLength;\n        this._trackAllocatedMemory(byteLength);\n        return this;\n    }\n    _getTarget() {\n        return this.gl.webgl2 ? 36663 : this.target;\n    }\n    _getAvailableElementCount(srcByteOffset) {\n        const ArrayType = (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_5__.getTypedArrayFromGLType)(this.accessor.type || 5126, {\n            clamped: false\n        });\n        const sourceElementOffset = srcByteOffset / ArrayType.BYTES_PER_ELEMENT;\n        return this.getElementCount() - sourceElementOffset;\n    }\n    _inferType(data) {\n        if (!this.accessor.type) {\n            this.setAccessor(new _accessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.accessor, {\n                type: (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_5__.getGLTypeFromTypedArray)(data)\n            }));\n        }\n    }\n    _createHandle() {\n        return this.gl.createBuffer();\n    }\n    _deleteHandle() {\n        this.gl.deleteBuffer(this.handle);\n        this._trackDeallocatedMemory();\n    }\n    _getParameter(pname) {\n        this.gl.bindBuffer(this.target, this.handle);\n        const value = this.gl.getBufferParameter(this.target, pname);\n        this.gl.bindBuffer(this.target, null);\n        return value;\n    }\n    get type() {\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"Buffer.type\", \"Buffer.accessor.type\")();\n        return this.accessor.type;\n    }\n    get bytes() {\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"Buffer.bytes\", \"Buffer.byteLength\")();\n        return this.byteLength;\n    }\n    setByteLength(byteLength) {\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"setByteLength\", \"reallocate\")();\n        return this.reallocate(byteLength);\n    }\n    updateAccessor(opts) {\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"updateAccessor(...)\", \"setAccessor(new Accessor(buffer.accessor, ...)\")();\n        this.accessor = new _accessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.accessor, opts);\n        return this;\n    }\n} //# sourceMappingURL=buffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/clear.js":
/*!***************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/clear.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clear: () => (/* binding */ clear),\n/* harmony export */   clearBuffer: () => (/* binding */ clearBuffer)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\nconst GL_DEPTH_BUFFER_BIT = 0x00000100;\nconst GL_STENCIL_BUFFER_BIT = 0x00000400;\nconst GL_COLOR_BUFFER_BIT = 0x00004000;\nconst GL_COLOR = 0x1800;\nconst GL_DEPTH = 0x1801;\nconst GL_STENCIL = 0x1802;\nconst GL_DEPTH_STENCIL = 0x84f9;\nconst ERR_ARGUMENTS = \"clear: bad arguments\";\nfunction clear(gl) {\n    let { framebuffer = null, color = null, depth = null, stencil = null } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const parameters = {};\n    if (framebuffer) {\n        parameters.framebuffer = framebuffer;\n    }\n    let clearFlags = 0;\n    if (color) {\n        clearFlags |= GL_COLOR_BUFFER_BIT;\n        if (color !== true) {\n            parameters.clearColor = color;\n        }\n    }\n    if (depth) {\n        clearFlags |= GL_DEPTH_BUFFER_BIT;\n        if (depth !== true) {\n            parameters.clearDepth = depth;\n        }\n    }\n    if (stencil) {\n        clearFlags |= GL_STENCIL_BUFFER_BIT;\n        if (depth !== true) {\n            parameters.clearStencil = depth;\n        }\n    }\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(clearFlags !== 0, ERR_ARGUMENTS);\n    (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.withParameters)(gl, parameters, ()=>{\n        gl.clear(clearFlags);\n    });\n}\nfunction clearBuffer(gl) {\n    let { framebuffer = null, buffer = GL_COLOR, drawBuffer = 0, value = [\n        0,\n        0,\n        0,\n        0\n    ] } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n    (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.withParameters)(gl, {\n        framebuffer\n    }, ()=>{\n        switch(buffer){\n            case GL_COLOR:\n                switch(value.constructor){\n                    case Int32Array:\n                        gl.clearBufferiv(buffer, drawBuffer, value);\n                        break;\n                    case Uint32Array:\n                        gl.clearBufferuiv(buffer, drawBuffer, value);\n                        break;\n                    case Float32Array:\n                    default:\n                        gl.clearBufferfv(buffer, drawBuffer, value);\n                }\n                break;\n            case GL_DEPTH:\n                gl.clearBufferfv(GL_DEPTH, 0, [\n                    value\n                ]);\n                break;\n            case GL_STENCIL:\n                gl.clearBufferiv(GL_STENCIL, 0, [\n                    value\n                ]);\n                break;\n            case GL_DEPTH_STENCIL:\n                const [depth, stencil] = value;\n                gl.clearBufferfi(GL_DEPTH_STENCIL, 0, depth, stencil);\n                break;\n            default:\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(false, ERR_ARGUMENTS);\n        }\n    });\n} //# sourceMappingURL=clear.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vY2xhc3Nlcy9jbGVhci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVFO0FBQzlCO0FBQ3pDLE1BQU1HLHNCQUFzQjtBQUM1QixNQUFNQyx3QkFBd0I7QUFDOUIsTUFBTUMsc0JBQXNCO0FBQzVCLE1BQU1DLFdBQVc7QUFDakIsTUFBTUMsV0FBVztBQUNqQixNQUFNQyxhQUFhO0FBQ25CLE1BQU1DLG1CQUFtQjtBQUN6QixNQUFNQyxnQkFBZ0I7QUFDZixTQUFTQyxNQUFNQyxFQUFFO0lBQ3RCLElBQUksRUFDRkMsY0FBYyxJQUFJLEVBQ2xCQyxRQUFRLElBQUksRUFDWkMsUUFBUSxJQUFJLEVBQ1pDLFVBQVUsSUFBSSxFQUNmLEdBQUdDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHLENBQUM7SUFDekUsTUFBTUcsYUFBYSxDQUFDO0lBRXBCLElBQUlQLGFBQWE7UUFDZk8sV0FBV1AsV0FBVyxHQUFHQTtJQUMzQjtJQUVBLElBQUlRLGFBQWE7SUFFakIsSUFBSVAsT0FBTztRQUNUTyxjQUFjaEI7UUFFZCxJQUFJUyxVQUFVLE1BQU07WUFDbEJNLFdBQVdFLFVBQVUsR0FBR1I7UUFDMUI7SUFDRjtJQUVBLElBQUlDLE9BQU87UUFDVE0sY0FBY2xCO1FBRWQsSUFBSVksVUFBVSxNQUFNO1lBQ2xCSyxXQUFXRyxVQUFVLEdBQUdSO1FBQzFCO0lBQ0Y7SUFFQSxJQUFJQyxTQUFTO1FBQ1hLLGNBQWNqQjtRQUVkLElBQUlXLFVBQVUsTUFBTTtZQUNsQkssV0FBV0ksWUFBWSxHQUFHVDtRQUM1QjtJQUNGO0lBRUFiLHFEQUFNQSxDQUFDbUIsZUFBZSxHQUFHWDtJQUN6QlQsZ0VBQWNBLENBQUNXLElBQUlRLFlBQVk7UUFDN0JSLEdBQUdELEtBQUssQ0FBQ1U7SUFDWDtBQUNGO0FBQ08sU0FBU0ksWUFBWWIsRUFBRTtJQUM1QixJQUFJLEVBQ0ZDLGNBQWMsSUFBSSxFQUNsQmEsU0FBU3BCLFFBQVEsRUFDakJxQixhQUFhLENBQUMsRUFDZEMsUUFBUTtRQUFDO1FBQUc7UUFBRztRQUFHO0tBQUUsRUFDckIsR0FBR1gsVUFBVUMsTUFBTSxHQUFHLEtBQUtELFNBQVMsQ0FBQyxFQUFFLEtBQUtFLFlBQVlGLFNBQVMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztJQUN6RWpCLHFFQUFtQkEsQ0FBQ1k7SUFDcEJYLGdFQUFjQSxDQUFDVyxJQUFJO1FBQ2pCQztJQUNGLEdBQUc7UUFDRCxPQUFRYTtZQUNOLEtBQUtwQjtnQkFDSCxPQUFRc0IsTUFBTUMsV0FBVztvQkFDdkIsS0FBS0M7d0JBQ0hsQixHQUFHbUIsYUFBYSxDQUFDTCxRQUFRQyxZQUFZQzt3QkFDckM7b0JBRUYsS0FBS0k7d0JBQ0hwQixHQUFHcUIsY0FBYyxDQUFDUCxRQUFRQyxZQUFZQzt3QkFDdEM7b0JBRUYsS0FBS007b0JBQ0w7d0JBQ0V0QixHQUFHdUIsYUFBYSxDQUFDVCxRQUFRQyxZQUFZQztnQkFDekM7Z0JBRUE7WUFFRixLQUFLckI7Z0JBQ0hLLEdBQUd1QixhQUFhLENBQUM1QixVQUFVLEdBQUc7b0JBQUNxQjtpQkFBTTtnQkFDckM7WUFFRixLQUFLcEI7Z0JBQ0hJLEdBQUdtQixhQUFhLENBQUN2QixZQUFZLEdBQUc7b0JBQUNvQjtpQkFBTTtnQkFDdkM7WUFFRixLQUFLbkI7Z0JBQ0gsTUFBTSxDQUFDTSxPQUFPQyxRQUFRLEdBQUdZO2dCQUN6QmhCLEdBQUd3QixhQUFhLENBQUMzQixrQkFBa0IsR0FBR00sT0FBT0M7Z0JBQzdDO1lBRUY7Z0JBQ0VkLHFEQUFNQSxDQUFDLE9BQU9RO1FBQ2xCO0lBQ0Y7QUFDRixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3dlYmdsL2Rpc3QvZXNtL2NsYXNzZXMvY2xlYXIuanM/Y2ZjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRXZWJHTDJDb250ZXh0LCB3aXRoUGFyYW1ldGVycyB9IGZyb20gJ0BsdW1hLmdsL2dsdG9vbHMnO1xuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnLi4vdXRpbHMvYXNzZXJ0JztcbmNvbnN0IEdMX0RFUFRIX0JVRkZFUl9CSVQgPSAweDAwMDAwMTAwO1xuY29uc3QgR0xfU1RFTkNJTF9CVUZGRVJfQklUID0gMHgwMDAwMDQwMDtcbmNvbnN0IEdMX0NPTE9SX0JVRkZFUl9CSVQgPSAweDAwMDA0MDAwO1xuY29uc3QgR0xfQ09MT1IgPSAweDE4MDA7XG5jb25zdCBHTF9ERVBUSCA9IDB4MTgwMTtcbmNvbnN0IEdMX1NURU5DSUwgPSAweDE4MDI7XG5jb25zdCBHTF9ERVBUSF9TVEVOQ0lMID0gMHg4NGY5O1xuY29uc3QgRVJSX0FSR1VNRU5UUyA9ICdjbGVhcjogYmFkIGFyZ3VtZW50cyc7XG5leHBvcnQgZnVuY3Rpb24gY2xlYXIoZ2wpIHtcbiAgbGV0IHtcbiAgICBmcmFtZWJ1ZmZlciA9IG51bGwsXG4gICAgY29sb3IgPSBudWxsLFxuICAgIGRlcHRoID0gbnVsbCxcbiAgICBzdGVuY2lsID0gbnVsbFxuICB9ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgY29uc3QgcGFyYW1ldGVycyA9IHt9O1xuXG4gIGlmIChmcmFtZWJ1ZmZlcikge1xuICAgIHBhcmFtZXRlcnMuZnJhbWVidWZmZXIgPSBmcmFtZWJ1ZmZlcjtcbiAgfVxuXG4gIGxldCBjbGVhckZsYWdzID0gMDtcblxuICBpZiAoY29sb3IpIHtcbiAgICBjbGVhckZsYWdzIHw9IEdMX0NPTE9SX0JVRkZFUl9CSVQ7XG5cbiAgICBpZiAoY29sb3IgIT09IHRydWUpIHtcbiAgICAgIHBhcmFtZXRlcnMuY2xlYXJDb2xvciA9IGNvbG9yO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkZXB0aCkge1xuICAgIGNsZWFyRmxhZ3MgfD0gR0xfREVQVEhfQlVGRkVSX0JJVDtcblxuICAgIGlmIChkZXB0aCAhPT0gdHJ1ZSkge1xuICAgICAgcGFyYW1ldGVycy5jbGVhckRlcHRoID0gZGVwdGg7XG4gICAgfVxuICB9XG5cbiAgaWYgKHN0ZW5jaWwpIHtcbiAgICBjbGVhckZsYWdzIHw9IEdMX1NURU5DSUxfQlVGRkVSX0JJVDtcblxuICAgIGlmIChkZXB0aCAhPT0gdHJ1ZSkge1xuICAgICAgcGFyYW1ldGVycy5jbGVhclN0ZW5jaWwgPSBkZXB0aDtcbiAgICB9XG4gIH1cblxuICBhc3NlcnQoY2xlYXJGbGFncyAhPT0gMCwgRVJSX0FSR1VNRU5UUyk7XG4gIHdpdGhQYXJhbWV0ZXJzKGdsLCBwYXJhbWV0ZXJzLCAoKSA9PiB7XG4gICAgZ2wuY2xlYXIoY2xlYXJGbGFncyk7XG4gIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQnVmZmVyKGdsKSB7XG4gIGxldCB7XG4gICAgZnJhbWVidWZmZXIgPSBudWxsLFxuICAgIGJ1ZmZlciA9IEdMX0NPTE9SLFxuICAgIGRyYXdCdWZmZXIgPSAwLFxuICAgIHZhbHVlID0gWzAsIDAsIDAsIDBdXG4gIH0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICBhc3NlcnRXZWJHTDJDb250ZXh0KGdsKTtcbiAgd2l0aFBhcmFtZXRlcnMoZ2wsIHtcbiAgICBmcmFtZWJ1ZmZlclxuICB9LCAoKSA9PiB7XG4gICAgc3dpdGNoIChidWZmZXIpIHtcbiAgICAgIGNhc2UgR0xfQ09MT1I6XG4gICAgICAgIHN3aXRjaCAodmFsdWUuY29uc3RydWN0b3IpIHtcbiAgICAgICAgICBjYXNlIEludDMyQXJyYXk6XG4gICAgICAgICAgICBnbC5jbGVhckJ1ZmZlcml2KGJ1ZmZlciwgZHJhd0J1ZmZlciwgdmFsdWUpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIFVpbnQzMkFycmF5OlxuICAgICAgICAgICAgZ2wuY2xlYXJCdWZmZXJ1aXYoYnVmZmVyLCBkcmF3QnVmZmVyLCB2YWx1ZSk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgRmxvYXQzMkFycmF5OlxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBnbC5jbGVhckJ1ZmZlcmZ2KGJ1ZmZlciwgZHJhd0J1ZmZlciwgdmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgR0xfREVQVEg6XG4gICAgICAgIGdsLmNsZWFyQnVmZmVyZnYoR0xfREVQVEgsIDAsIFt2YWx1ZV0pO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBHTF9TVEVOQ0lMOlxuICAgICAgICBnbC5jbGVhckJ1ZmZlcml2KEdMX1NURU5DSUwsIDAsIFt2YWx1ZV0pO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBHTF9ERVBUSF9TVEVOQ0lMOlxuICAgICAgICBjb25zdCBbZGVwdGgsIHN0ZW5jaWxdID0gdmFsdWU7XG4gICAgICAgIGdsLmNsZWFyQnVmZmVyZmkoR0xfREVQVEhfU1RFTkNJTCwgMCwgZGVwdGgsIHN0ZW5jaWwpO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYXNzZXJ0KGZhbHNlLCBFUlJfQVJHVU1FTlRTKTtcbiAgICB9XG4gIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xlYXIuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydFdlYkdMMkNvbnRleHQiLCJ3aXRoUGFyYW1ldGVycyIsImFzc2VydCIsIkdMX0RFUFRIX0JVRkZFUl9CSVQiLCJHTF9TVEVOQ0lMX0JVRkZFUl9CSVQiLCJHTF9DT0xPUl9CVUZGRVJfQklUIiwiR0xfQ09MT1IiLCJHTF9ERVBUSCIsIkdMX1NURU5DSUwiLCJHTF9ERVBUSF9TVEVOQ0lMIiwiRVJSX0FSR1VNRU5UUyIsImNsZWFyIiwiZ2wiLCJmcmFtZWJ1ZmZlciIsImNvbG9yIiwiZGVwdGgiLCJzdGVuY2lsIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwicGFyYW1ldGVycyIsImNsZWFyRmxhZ3MiLCJjbGVhckNvbG9yIiwiY2xlYXJEZXB0aCIsImNsZWFyU3RlbmNpbCIsImNsZWFyQnVmZmVyIiwiYnVmZmVyIiwiZHJhd0J1ZmZlciIsInZhbHVlIiwiY29uc3RydWN0b3IiLCJJbnQzMkFycmF5IiwiY2xlYXJCdWZmZXJpdiIsIlVpbnQzMkFycmF5IiwiY2xlYXJCdWZmZXJ1aXYiLCJGbG9hdDMyQXJyYXkiLCJjbGVhckJ1ZmZlcmZ2IiwiY2xlYXJCdWZmZXJmaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/clear.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blit: () => (/* binding */ blit),\n/* harmony export */   copyToDataUrl: () => (/* binding */ copyToDataUrl),\n/* harmony export */   copyToImage: () => (/* binding */ copyToImage),\n/* harmony export */   copyToTexture: () => (/* binding */ copyToTexture),\n/* harmony export */   readPixelsToArray: () => (/* binding */ readPixelsToArray),\n/* harmony export */   readPixelsToBuffer: () => (/* binding */ readPixelsToBuffer)\n/* harmony export */ });\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./buffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _framebuffer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./framebuffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _texture__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./texture */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../webgl-utils/typed-array-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/typed-array-utils.js\");\n/* harmony import */ var _webgl_utils_format_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../webgl-utils/format-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/format-utils.js\");\n/* harmony import */ var _webgl_utils_texture_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../webgl-utils/texture-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/texture-utils.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\n\n\n\n\n\n\n\nfunction readPixelsToArray(source) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const { sourceX = 0, sourceY = 0, sourceFormat = 6408 } = options;\n    let { sourceAttachment = 36064, target = null, sourceWidth, sourceHeight, sourceType } = options;\n    const { framebuffer, deleteFramebuffer } = getFramebuffer(source);\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(framebuffer);\n    const { gl, handle, attachments } = framebuffer;\n    sourceWidth = sourceWidth || framebuffer.width;\n    sourceHeight = sourceHeight || framebuffer.height;\n    if (sourceAttachment === 36064 && handle === null) {\n        sourceAttachment = 1028;\n    }\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(attachments[sourceAttachment]);\n    sourceType = sourceType || attachments[sourceAttachment].type;\n    target = getPixelArray(target, sourceType, sourceFormat, sourceWidth, sourceHeight);\n    sourceType = sourceType || (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_2__.getGLTypeFromTypedArray)(target);\n    const prevHandle = gl.bindFramebuffer(36160, handle);\n    gl.readPixels(sourceX, sourceY, sourceWidth, sourceHeight, sourceFormat, sourceType, target);\n    gl.bindFramebuffer(36160, prevHandle || null);\n    if (deleteFramebuffer) {\n        framebuffer.delete();\n    }\n    return target;\n}\nfunction readPixelsToBuffer(source, _ref) {\n    let { sourceX = 0, sourceY = 0, sourceFormat = 6408, target = null, targetByteOffset = 0, sourceWidth, sourceHeight, sourceType } = _ref;\n    const { framebuffer, deleteFramebuffer } = getFramebuffer(source);\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(framebuffer);\n    sourceWidth = sourceWidth || framebuffer.width;\n    sourceHeight = sourceHeight || framebuffer.height;\n    const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(framebuffer.gl);\n    sourceType = sourceType || (target ? target.type : 5121);\n    if (!target) {\n        const components = (0,_webgl_utils_format_utils__WEBPACK_IMPORTED_MODULE_3__.glFormatToComponents)(sourceFormat);\n        const byteCount = (0,_webgl_utils_format_utils__WEBPACK_IMPORTED_MODULE_3__.glTypeToBytes)(sourceType);\n        const byteLength = targetByteOffset + sourceWidth * sourceHeight * components * byteCount;\n        target = new _buffer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](gl2, {\n            byteLength,\n            accessor: {\n                type: sourceType,\n                size: components\n            }\n        });\n    }\n    target.bind({\n        target: 35051\n    });\n    (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.withParameters)(gl2, {\n        framebuffer\n    }, ()=>{\n        gl2.readPixels(sourceX, sourceY, sourceWidth, sourceHeight, sourceFormat, sourceType, targetByteOffset);\n    });\n    target.unbind({\n        target: 35051\n    });\n    if (deleteFramebuffer) {\n        framebuffer.delete();\n    }\n    return target;\n}\nfunction copyToDataUrl(source) {\n    let { sourceAttachment = 36064, targetMaxHeight = Number.MAX_SAFE_INTEGER } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let data = readPixelsToArray(source, {\n        sourceAttachment\n    });\n    let { width, height } = source;\n    while(height > targetMaxHeight){\n        ({ data, width, height } = (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_2__.scalePixels)({\n            data,\n            width,\n            height\n        }));\n    }\n    (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_2__.flipRows)({\n        data,\n        width,\n        height\n    });\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext(\"2d\");\n    const imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    context.putImageData(imageData, 0, 0);\n    return canvas.toDataURL();\n}\nfunction copyToImage(source) {\n    let { sourceAttachment = 36064, targetImage = null } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const dataUrl = copyToDataUrl(source, {\n        sourceAttachment\n    });\n    targetImage = targetImage || new Image();\n    targetImage.src = dataUrl;\n    return targetImage;\n}\nfunction copyToTexture(source, target) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const { sourceX = 0, sourceY = 0, targetMipmaplevel = 0, targetInternalFormat = 6408 } = options;\n    let { targetX, targetY, targetZ, width, height } = options;\n    const { framebuffer, deleteFramebuffer } = getFramebuffer(source);\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(framebuffer);\n    const { gl, handle } = framebuffer;\n    const isSubCopy = typeof targetX !== \"undefined\" || typeof targetY !== \"undefined\" || typeof targetZ !== \"undefined\";\n    targetX = targetX || 0;\n    targetY = targetY || 0;\n    targetZ = targetZ || 0;\n    const prevHandle = gl.bindFramebuffer(36160, handle);\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(target);\n    let texture = null;\n    if (target instanceof _texture__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n        texture = target;\n        width = Number.isFinite(width) ? width : texture.width;\n        height = Number.isFinite(height) ? height : texture.height;\n        texture.bind(0);\n        target = texture.target;\n    }\n    if (!isSubCopy) {\n        gl.copyTexImage2D(target, targetMipmaplevel, targetInternalFormat, sourceX, sourceY, width, height, 0);\n    } else {\n        switch(target){\n            case 3553:\n            case 34067:\n                gl.copyTexSubImage2D(target, targetMipmaplevel, targetX, targetY, sourceX, sourceY, width, height);\n                break;\n            case 35866:\n            case 32879:\n                const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n                gl2.copyTexSubImage3D(target, targetMipmaplevel, targetX, targetY, targetZ, sourceX, sourceY, width, height);\n                break;\n            default:\n        }\n    }\n    if (texture) {\n        texture.unbind();\n    }\n    gl.bindFramebuffer(36160, prevHandle || null);\n    if (deleteFramebuffer) {\n        framebuffer.delete();\n    }\n    return texture;\n}\nfunction blit(source, target) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const { sourceX0 = 0, sourceY0 = 0, targetX0 = 0, targetY0 = 0, color = true, depth = false, stencil = false, filter = 9728 } = options;\n    let { sourceX1, sourceY1, targetX1, targetY1, sourceAttachment = 36064, mask = 0 } = options;\n    const { framebuffer: srcFramebuffer, deleteFramebuffer: deleteSrcFramebuffer } = getFramebuffer(source);\n    const { framebuffer: dstFramebuffer, deleteFramebuffer: deleteDstFramebuffer } = getFramebuffer(target);\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(srcFramebuffer);\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(dstFramebuffer);\n    const { gl, handle, width, height, readBuffer } = dstFramebuffer;\n    const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n    if (!srcFramebuffer.handle && sourceAttachment === 36064) {\n        sourceAttachment = 1028;\n    }\n    if (color) {\n        mask |= 16384;\n    }\n    if (depth) {\n        mask |= 256;\n    }\n    if (stencil) {\n        mask |= 1024;\n    }\n    if (deleteSrcFramebuffer || deleteDstFramebuffer) {\n        if (mask & (256 | 1024)) {\n            mask = 16384;\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"Blitting from or into a Texture object, forcing mask to GL.COLOR_BUFFER_BIT\")();\n        }\n    }\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__.assert)(mask);\n    sourceX1 = sourceX1 === undefined ? srcFramebuffer.width : sourceX1;\n    sourceY1 = sourceY1 === undefined ? srcFramebuffer.height : sourceY1;\n    targetX1 = targetX1 === undefined ? width : targetX1;\n    targetY1 = targetY1 === undefined ? height : targetY1;\n    const prevDrawHandle = gl.bindFramebuffer(36009, handle);\n    const prevReadHandle = gl.bindFramebuffer(36008, srcFramebuffer.handle);\n    gl2.readBuffer(sourceAttachment);\n    gl2.blitFramebuffer(sourceX0, sourceY0, sourceX1, sourceY1, targetX0, targetY0, targetX1, targetY1, mask, filter);\n    gl2.readBuffer(readBuffer);\n    gl2.bindFramebuffer(36008, prevReadHandle || null);\n    gl2.bindFramebuffer(36009, prevDrawHandle || null);\n    if (deleteSrcFramebuffer) {\n        srcFramebuffer.delete();\n    }\n    if (deleteDstFramebuffer) {\n        dstFramebuffer.delete();\n    }\n    return dstFramebuffer;\n}\nfunction getFramebuffer(source) {\n    if (!(source instanceof _framebuffer__WEBPACK_IMPORTED_MODULE_6__[\"default\"])) {\n        return {\n            framebuffer: (0,_webgl_utils_texture_utils__WEBPACK_IMPORTED_MODULE_7__.toFramebuffer)(source),\n            deleteFramebuffer: true\n        };\n    }\n    return {\n        framebuffer: source,\n        deleteFramebuffer: false\n    };\n}\nfunction getPixelArray(pixelArray, type, format, width, height) {\n    if (pixelArray) {\n        return pixelArray;\n    }\n    type = type || 5121;\n    const ArrayType = (0,_webgl_utils_typed_array_utils__WEBPACK_IMPORTED_MODULE_2__.getTypedArrayFromGLType)(type, {\n        clamped: false\n    });\n    const components = (0,_webgl_utils_format_utils__WEBPACK_IMPORTED_MODULE_3__.glFormatToComponents)(format);\n    return new ArrayType(width * height * components);\n} //# sourceMappingURL=copy-and-blit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FRAMEBUFFER_ATTACHMENT_PARAMETERS: () => (/* binding */ FRAMEBUFFER_ATTACHMENT_PARAMETERS),\n/* harmony export */   \"default\": () => (/* binding */ Framebuffer)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n/* harmony import */ var _texture_2d__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./texture-2d */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _renderbuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./renderbuffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer.js\");\n/* harmony import */ var _clear__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clear */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/clear.js\");\n/* harmony import */ var _copy_and_blit_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./copy-and-blit.js */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js\");\n/* harmony import */ var _features__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../features */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/features.js\");\n/* harmony import */ var _webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../webgl-utils/constants-to-keys */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/constants-to-keys.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\n\n\n\n\n\n\n\nconst ERR_MULTIPLE_RENDERTARGETS = \"Multiple render targets not supported\";\nclass Framebuffer extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Framebuffer\";\n    }\n    static isSupported(gl) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const { colorBufferFloat, colorBufferHalfFloat } = options;\n        let supported = true;\n        if (colorBufferFloat) {\n            supported = Boolean(gl.getExtension(\"EXT_color_buffer_float\") || gl.getExtension(\"WEBGL_color_buffer_float\") || gl.getExtension(\"OES_texture_float\"));\n        }\n        if (colorBufferHalfFloat) {\n            supported = supported && Boolean(gl.getExtension(\"EXT_color_buffer_float\") || gl.getExtension(\"EXT_color_buffer_half_float\"));\n        }\n        return supported;\n    }\n    static getDefaultFramebuffer(gl) {\n        gl.luma = gl.luma || {};\n        gl.luma.defaultFramebuffer = gl.luma.defaultFramebuffer || new Framebuffer(gl, {\n            id: \"default-framebuffer\",\n            handle: null,\n            attachments: {}\n        });\n        return gl.luma.defaultFramebuffer;\n    }\n    get MAX_COLOR_ATTACHMENTS() {\n        const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(this.gl);\n        return gl2.getParameter(gl2.MAX_COLOR_ATTACHMENTS);\n    }\n    get MAX_DRAW_BUFFERS() {\n        const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(this.gl);\n        return gl2.getParameter(gl2.MAX_DRAW_BUFFERS);\n    }\n    constructor(gl){\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        super(gl, opts);\n        this.width = null;\n        this.height = null;\n        this.attachments = {};\n        this.readBuffer = 36064;\n        this.drawBuffers = [\n            36064\n        ];\n        this.ownResources = [];\n        this.initialize(opts);\n        Object.seal(this);\n    }\n    get color() {\n        return this.attachments[36064] || null;\n    }\n    get texture() {\n        return this.attachments[36064] || null;\n    }\n    get depth() {\n        return this.attachments[36096] || this.attachments[33306] || null;\n    }\n    get stencil() {\n        return this.attachments[36128] || this.attachments[33306] || null;\n    }\n    initialize(_ref) {\n        let { width = 1, height = 1, attachments = null, color = true, depth = true, stencil = false, check = true, readBuffer = undefined, drawBuffers = undefined } = _ref;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(width >= 0 && height >= 0, \"Width and height need to be integers\");\n        this.width = width;\n        this.height = height;\n        if (attachments) {\n            for(const attachment in attachments){\n                const target = attachments[attachment];\n                const object = Array.isArray(target) ? target[0] : target;\n                object.resize({\n                    width,\n                    height\n                });\n            }\n        } else {\n            attachments = this._createDefaultAttachments(color, depth, stencil, width, height);\n        }\n        this.update({\n            clearAttachments: true,\n            attachments,\n            readBuffer,\n            drawBuffers\n        });\n        if (attachments && check) {\n            this.checkStatus();\n        }\n    }\n    delete() {\n        for (const resource of this.ownResources){\n            resource.delete();\n        }\n        super.delete();\n        return this;\n    }\n    update(_ref2) {\n        let { attachments = {}, readBuffer, drawBuffers, clearAttachments = false, resizeAttachments = true } = _ref2;\n        this.attach(attachments, {\n            clearAttachments,\n            resizeAttachments\n        });\n        const { gl } = this;\n        const prevHandle = gl.bindFramebuffer(36160, this.handle);\n        if (readBuffer) {\n            this._setReadBuffer(readBuffer);\n        }\n        if (drawBuffers) {\n            this._setDrawBuffers(drawBuffers);\n        }\n        gl.bindFramebuffer(36160, prevHandle || null);\n        return this;\n    }\n    resize() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let { width, height } = options;\n        if (this.handle === null) {\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(width === undefined && height === undefined);\n            this.width = this.gl.drawingBufferWidth;\n            this.height = this.gl.drawingBufferHeight;\n            return this;\n        }\n        if (width === undefined) {\n            width = this.gl.drawingBufferWidth;\n        }\n        if (height === undefined) {\n            height = this.gl.drawingBufferHeight;\n        }\n        if (width !== this.width && height !== this.height) {\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.log(2, \"Resizing framebuffer \".concat(this.id, \" to \").concat(width, \"x\").concat(height))();\n        }\n        for(const attachmentPoint in this.attachments){\n            this.attachments[attachmentPoint].resize({\n                width,\n                height\n            });\n        }\n        this.width = width;\n        this.height = height;\n        return this;\n    }\n    attach(attachments) {\n        let { clearAttachments = false, resizeAttachments = true } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const newAttachments = {};\n        if (clearAttachments) {\n            Object.keys(this.attachments).forEach((key)=>{\n                newAttachments[key] = null;\n            });\n        }\n        Object.assign(newAttachments, attachments);\n        const prevHandle = this.gl.bindFramebuffer(36160, this.handle);\n        for(const key in newAttachments){\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(key !== undefined, \"Misspelled framebuffer binding point?\");\n            const attachment = Number(key);\n            const descriptor = newAttachments[attachment];\n            let object = descriptor;\n            if (!object) {\n                this._unattach(attachment);\n            } else if (object instanceof _renderbuffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n                this._attachRenderbuffer({\n                    attachment,\n                    renderbuffer: object\n                });\n            } else if (Array.isArray(descriptor)) {\n                const [texture, layer = 0, level = 0] = descriptor;\n                object = texture;\n                this._attachTexture({\n                    attachment,\n                    texture,\n                    layer,\n                    level\n                });\n            } else {\n                this._attachTexture({\n                    attachment,\n                    texture: object,\n                    layer: 0,\n                    level: 0\n                });\n            }\n            if (resizeAttachments && object) {\n                object.resize({\n                    width: this.width,\n                    height: this.height\n                });\n            }\n        }\n        this.gl.bindFramebuffer(36160, prevHandle || null);\n        Object.assign(this.attachments, attachments);\n        Object.keys(this.attachments).filter((key)=>!this.attachments[key]).forEach((key)=>{\n            delete this.attachments[key];\n        });\n    }\n    checkStatus() {\n        const { gl } = this;\n        const status = this.getStatus();\n        if (status !== 36053) {\n            throw new Error(_getFrameBufferStatus(status));\n        }\n        return this;\n    }\n    getStatus() {\n        const { gl } = this;\n        const prevHandle = gl.bindFramebuffer(36160, this.handle);\n        const status = gl.checkFramebufferStatus(36160);\n        gl.bindFramebuffer(36160, prevHandle || null);\n        return status;\n    }\n    clear() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { color, depth, stencil, drawBuffers = [] } = options;\n        const prevHandle = this.gl.bindFramebuffer(36160, this.handle);\n        if (color || depth || stencil) {\n            (0,_clear__WEBPACK_IMPORTED_MODULE_4__.clear)(this.gl, {\n                color,\n                depth,\n                stencil\n            });\n        }\n        drawBuffers.forEach((value, drawBuffer)=>{\n            (0,_clear__WEBPACK_IMPORTED_MODULE_4__.clearBuffer)(this.gl, {\n                drawBuffer,\n                value\n            });\n        });\n        this.gl.bindFramebuffer(36160, prevHandle || null);\n        return this;\n    }\n    readPixels() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.error(\"Framebuffer.readPixels() is no logner supported, use readPixelsToArray(framebuffer)\")();\n        return null;\n    }\n    readPixelsToBuffer() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.error(\"Framebuffer.readPixelsToBuffer()is no logner supported, use readPixelsToBuffer(framebuffer)\")();\n        return null;\n    }\n    copyToDataUrl() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.error(\"Framebuffer.copyToDataUrl() is no logner supported, use copyToDataUrl(framebuffer)\")();\n        return null;\n    }\n    copyToImage() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.error(\"Framebuffer.copyToImage() is no logner supported, use copyToImage(framebuffer)\")();\n        return null;\n    }\n    copyToTexture() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.error(\"Framebuffer.copyToTexture({...}) is no logner supported, use copyToTexture(source, target, opts})\")();\n        return null;\n    }\n    blit() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.error(\"Framebuffer.blit({...}) is no logner supported, use blit(source, target, opts)\")();\n        return null;\n    }\n    invalidate(_ref3) {\n        let { attachments = [], x = 0, y = 0, width, height } = _ref3;\n        const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(this.gl);\n        const prevHandle = gl2.bindFramebuffer(36008, this.handle);\n        const invalidateAll = x === 0 && y === 0 && width === undefined && height === undefined;\n        if (invalidateAll) {\n            gl2.invalidateFramebuffer(36008, attachments);\n        } else {\n            gl2.invalidateFramebuffer(36008, attachments, x, y, width, height);\n        }\n        gl2.bindFramebuffer(36008, prevHandle);\n        return this;\n    }\n    getAttachmentParameter(attachment, pname, keys) {\n        let value = this._getAttachmentParameterFallback(pname);\n        if (value === null) {\n            this.gl.bindFramebuffer(36160, this.handle);\n            value = this.gl.getFramebufferAttachmentParameter(36160, attachment, pname);\n            this.gl.bindFramebuffer(36160, null);\n        }\n        if (keys && value > 1000) {\n            value = (0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_5__.getKey)(this.gl, value);\n        }\n        return value;\n    }\n    getAttachmentParameters() {\n        let attachment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 36064;\n        let keys = arguments.length > 1 ? arguments[1] : undefined;\n        let parameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.constructor.ATTACHMENT_PARAMETERS || [];\n        const values = {};\n        for (const pname of parameters){\n            const key = keys ? (0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_5__.getKey)(this.gl, pname) : pname;\n            values[key] = this.getAttachmentParameter(attachment, pname, keys);\n        }\n        return values;\n    }\n    getParameters() {\n        let keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        const attachments = Object.keys(this.attachments);\n        const parameters = {};\n        for (const attachmentName of attachments){\n            const attachment = Number(attachmentName);\n            const key = keys ? (0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_5__.getKey)(this.gl, attachment) : attachment;\n            parameters[key] = this.getAttachmentParameters(attachment, keys);\n        }\n        return parameters;\n    }\n    show() {\n        if (false) {}\n        return this;\n    }\n    log() {\n        let logLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n        if (logLevel > _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.level || \"undefined\" === \"undefined\") {\n            return this;\n        }\n        message = message || \"Framebuffer \".concat(this.id);\n        const image = (0,_copy_and_blit_js__WEBPACK_IMPORTED_MODULE_6__.copyToDataUrl)(this, {\n            targetMaxHeight: 100\n        });\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.image({\n            logLevel,\n            message,\n            image\n        }, message)();\n        return this;\n    }\n    bind() {\n        let { target = 36160 } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.gl.bindFramebuffer(target, this.handle);\n        return this;\n    }\n    unbind() {\n        let { target = 36160 } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.gl.bindFramebuffer(target, null);\n        return this;\n    }\n    _createDefaultAttachments(color, depth, stencil, width, height) {\n        let defaultAttachments = null;\n        if (color) {\n            defaultAttachments = defaultAttachments || {};\n            defaultAttachments[36064] = new _texture_2d__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this.gl, {\n                id: \"\".concat(this.id, \"-color0\"),\n                pixels: null,\n                format: 6408,\n                type: 5121,\n                width,\n                height,\n                mipmaps: false,\n                parameters: {\n                    [10241]: 9729,\n                    [10240]: 9729,\n                    [10242]: 33071,\n                    [10243]: 33071\n                }\n            });\n            this.ownResources.push(defaultAttachments[36064]);\n        }\n        if (depth && stencil) {\n            defaultAttachments = defaultAttachments || {};\n            defaultAttachments[33306] = new _renderbuffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.gl, {\n                id: \"\".concat(this.id, \"-depth-stencil\"),\n                format: 35056,\n                width,\n                height: 111\n            });\n            this.ownResources.push(defaultAttachments[33306]);\n        } else if (depth) {\n            defaultAttachments = defaultAttachments || {};\n            defaultAttachments[36096] = new _renderbuffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.gl, {\n                id: \"\".concat(this.id, \"-depth\"),\n                format: 33189,\n                width,\n                height\n            });\n            this.ownResources.push(defaultAttachments[36096]);\n        } else if (stencil) {\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(false);\n        }\n        return defaultAttachments;\n    }\n    _unattach(attachment) {\n        const oldAttachment = this.attachments[attachment];\n        if (!oldAttachment) {\n            return;\n        }\n        if (oldAttachment instanceof _renderbuffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n            this.gl.framebufferRenderbuffer(36160, attachment, 36161, null);\n        } else {\n            this.gl.framebufferTexture2D(36160, attachment, 3553, null, 0);\n        }\n        delete this.attachments[attachment];\n    }\n    _attachRenderbuffer(_ref4) {\n        let { attachment = 36064, renderbuffer } = _ref4;\n        const { gl } = this;\n        gl.framebufferRenderbuffer(36160, attachment, 36161, renderbuffer.handle);\n        this.attachments[attachment] = renderbuffer;\n    }\n    _attachTexture(_ref5) {\n        let { attachment = 36064, texture, layer, level } = _ref5;\n        const { gl } = this;\n        gl.bindTexture(texture.target, texture.handle);\n        switch(texture.target){\n            case 35866:\n            case 32879:\n                const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n                gl2.framebufferTextureLayer(36160, attachment, texture.target, level, layer);\n                break;\n            case 34067:\n                const face = mapIndexToCubeMapFace(layer);\n                gl.framebufferTexture2D(36160, attachment, face, texture.handle, level);\n                break;\n            case 3553:\n                gl.framebufferTexture2D(36160, attachment, 3553, texture.handle, level);\n                break;\n            default:\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(false, \"Illegal texture type\");\n        }\n        gl.bindTexture(texture.target, null);\n        this.attachments[attachment] = texture;\n    }\n    _setReadBuffer(readBuffer) {\n        const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.getWebGL2Context)(this.gl);\n        if (gl2) {\n            gl2.readBuffer(readBuffer);\n        } else {\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(readBuffer === 36064 || readBuffer === 1029, ERR_MULTIPLE_RENDERTARGETS);\n        }\n        this.readBuffer = readBuffer;\n    }\n    _setDrawBuffers(drawBuffers) {\n        const { gl } = this;\n        const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n        if (gl2) {\n            gl2.drawBuffers(drawBuffers);\n        } else {\n            const ext = gl.getExtension(\"WEBGL_draw_buffers\");\n            if (ext) {\n                ext.drawBuffersWEBGL(drawBuffers);\n            } else {\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(drawBuffers.length === 1 && (drawBuffers[0] === 36064 || drawBuffers[0] === 1029), ERR_MULTIPLE_RENDERTARGETS);\n            }\n        }\n        this.drawBuffers = drawBuffers;\n    }\n    _getAttachmentParameterFallback(pname) {\n        const caps = (0,_features__WEBPACK_IMPORTED_MODULE_8__.getFeatures)(this.gl);\n        switch(pname){\n            case 36052:\n                return !caps.WEBGL2 ? 0 : null;\n            case 33298:\n            case 33299:\n            case 33300:\n            case 33301:\n            case 33302:\n            case 33303:\n                return !caps.WEBGL2 ? 8 : null;\n            case 33297:\n                return !caps.WEBGL2 ? 5125 : null;\n            case 33296:\n                return !caps.WEBGL2 && !caps.EXT_sRGB ? 9729 : null;\n            default:\n                return null;\n        }\n    }\n    _createHandle() {\n        return this.gl.createFramebuffer();\n    }\n    _deleteHandle() {\n        this.gl.deleteFramebuffer(this.handle);\n    }\n    _bindHandle(handle) {\n        return this.gl.bindFramebuffer(36160, handle);\n    }\n}\nfunction mapIndexToCubeMapFace(layer) {\n    return layer < 34069 ? layer + 34069 : layer;\n}\nfunction _getFrameBufferStatus(status) {\n    const STATUS = Framebuffer.STATUS || {};\n    return STATUS[status] || \"Framebuffer error \".concat(status);\n}\nconst FRAMEBUFFER_ATTACHMENT_PARAMETERS = [\n    36049,\n    36048,\n    33296,\n    33298,\n    33299,\n    33300,\n    33301,\n    33302,\n    33303\n];\nFramebuffer.ATTACHMENT_PARAMETERS = FRAMEBUFFER_ATTACHMENT_PARAMETERS; //# sourceMappingURL=framebuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/program-configuration.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/program-configuration.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ProgramConfiguration)\n/* harmony export */ });\n/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./accessor */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/accessor.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl-utils/attribute-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/attribute-utils.js\");\n\n\n\nclass ProgramConfiguration {\n    constructor(program){\n        this.id = program.id;\n        this.attributeInfos = [];\n        this.attributeInfosByName = {};\n        this.attributeInfosByLocation = [];\n        this.varyingInfos = [];\n        this.varyingInfosByName = {};\n        Object.seal(this);\n        this._readAttributesFromProgram(program);\n        this._readVaryingsFromProgram(program);\n    }\n    getAttributeInfo(locationOrName) {\n        const location = Number(locationOrName);\n        if (Number.isFinite(location)) {\n            return this.attributeInfosByLocation[location];\n        }\n        return this.attributeInfosByName[locationOrName] || null;\n    }\n    getAttributeLocation(locationOrName) {\n        const attributeInfo = this.getAttributeInfo(locationOrName);\n        return attributeInfo ? attributeInfo.location : -1;\n    }\n    getAttributeAccessor(locationOrName) {\n        const attributeInfo = this.getAttributeInfo(locationOrName);\n        return attributeInfo ? attributeInfo.accessor : null;\n    }\n    getVaryingInfo(locationOrName) {\n        const location = Number(locationOrName);\n        if (Number.isFinite(location)) {\n            return this.varyingInfos[location];\n        }\n        return this.varyingInfosByName[locationOrName] || null;\n    }\n    getVaryingIndex(locationOrName) {\n        const varying = this.getVaryingInfo();\n        return varying ? varying.location : -1;\n    }\n    getVaryingAccessor(locationOrName) {\n        const varying = this.getVaryingInfo();\n        return varying ? varying.accessor : null;\n    }\n    _readAttributesFromProgram(program) {\n        const { gl } = program;\n        const count = gl.getProgramParameter(program.handle, 35721);\n        for(let index = 0; index < count; index++){\n            const { name, type, size } = gl.getActiveAttrib(program.handle, index);\n            const location = gl.getAttribLocation(program.handle, name);\n            if (location >= 0) {\n                this._addAttribute(location, name, type, size);\n            }\n        }\n        this.attributeInfos.sort((a, b)=>a.location - b.location);\n    }\n    _readVaryingsFromProgram(program) {\n        const { gl } = program;\n        if (!(0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl)) {\n            return;\n        }\n        const count = gl.getProgramParameter(program.handle, 35971);\n        for(let location = 0; location < count; location++){\n            const { name, type, size } = gl.getTransformFeedbackVarying(program.handle, location);\n            this._addVarying(location, name, type, size);\n        }\n        this.varyingInfos.sort((a, b)=>a.location - b.location);\n    }\n    _addAttribute(location, name, compositeType, size) {\n        const { type, components } = (0,_webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_1__.decomposeCompositeGLType)(compositeType);\n        const accessor = {\n            type,\n            size: size * components\n        };\n        this._inferProperties(location, name, accessor);\n        const attributeInfo = {\n            location,\n            name,\n            accessor: new _accessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"](accessor)\n        };\n        this.attributeInfos.push(attributeInfo);\n        this.attributeInfosByLocation[location] = attributeInfo;\n        this.attributeInfosByName[attributeInfo.name] = attributeInfo;\n    }\n    _inferProperties(location, name, accessor) {\n        if (/instance/i.test(name)) {\n            accessor.divisor = 1;\n        }\n    }\n    _addVarying(location, name, compositeType, size) {\n        const { type, components } = (0,_webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_1__.decomposeCompositeGLType)(compositeType);\n        const accessor = new _accessor__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            type,\n            size: size * components\n        });\n        const varying = {\n            location,\n            name,\n            accessor\n        };\n        this.varyingInfos.push(varying);\n        this.varyingInfosByName[varying.name] = varying;\n    }\n} //# sourceMappingURL=program-configuration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/program-configuration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/program.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/program.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Program)\n/* harmony export */ });\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n/* harmony import */ var _texture__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./texture */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js\");\n/* harmony import */ var _framebuffer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./framebuffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _uniforms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./uniforms */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/uniforms.js\");\n/* harmony import */ var _shader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shader */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/shader.js\");\n/* harmony import */ var _program_configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./program-configuration */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/program-configuration.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../webgl-utils/constants-to-keys */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/constants-to-keys.js\");\n/* harmony import */ var _webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../webgl-utils/attribute-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/attribute-utils.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst LOG_PROGRAM_PERF_PRIORITY = 4;\nconst GL_SEPARATE_ATTRIBS = 0x8c8d;\nconst V6_DEPRECATED_METHODS = [\n    \"setVertexArray\",\n    \"setAttributes\",\n    \"setBuffers\",\n    \"unsetBuffers\",\n    \"use\",\n    \"getUniformCount\",\n    \"getUniformInfo\",\n    \"getUniformLocation\",\n    \"getUniformValue\",\n    \"getVarying\",\n    \"getFragDataLocation\",\n    \"getAttachedShaders\",\n    \"getAttributeCount\",\n    \"getAttributeLocation\",\n    \"getAttributeInfo\"\n];\nclass Program extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Program\";\n    }\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        super(gl, props);\n        this.stubRemovedMethods(\"Program\", \"v6.0\", V6_DEPRECATED_METHODS);\n        this._isCached = false;\n        this.initialize(props);\n        Object.seal(this);\n        this._setId(props.id);\n    }\n    initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { hash, vs, fs, varyings, bufferMode = GL_SEPARATE_ATTRIBS } = props;\n        this.hash = hash || \"\";\n        this.vs = typeof vs === \"string\" ? new _shader__WEBPACK_IMPORTED_MODULE_2__.VertexShader(this.gl, {\n            id: \"\".concat(props.id, \"-vs\"),\n            source: vs\n        }) : vs;\n        this.fs = typeof fs === \"string\" ? new _shader__WEBPACK_IMPORTED_MODULE_2__.FragmentShader(this.gl, {\n            id: \"\".concat(props.id, \"-fs\"),\n            source: fs\n        }) : fs;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(this.vs instanceof _shader__WEBPACK_IMPORTED_MODULE_2__.VertexShader);\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(this.fs instanceof _shader__WEBPACK_IMPORTED_MODULE_2__.FragmentShader);\n        this.uniforms = {};\n        this._textureUniforms = {};\n        if (varyings && varyings.length > 0) {\n            (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(this.gl);\n            this.varyings = varyings;\n            this.gl2.transformFeedbackVaryings(this.handle, varyings, bufferMode);\n        }\n        this._compileAndLink();\n        this._readUniformLocationsFromLinkedProgram();\n        this.configuration = new _program_configuration__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this);\n        return this.setProps(props);\n    }\n    delete() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (this._isCached) {\n            return this;\n        }\n        return super.delete(options);\n    }\n    setProps(props) {\n        if (\"uniforms\" in props) {\n            this.setUniforms(props.uniforms);\n        }\n        return this;\n    }\n    draw(_ref) {\n        let { logPriority, drawMode = 4, vertexCount, offset = 0, start, end, isIndexed = false, indexType = 5123, instanceCount = 0, isInstanced = instanceCount > 0, vertexArray = null, transformFeedback, framebuffer, parameters = {}, uniforms, samplers } = _ref;\n        if (uniforms || samplers) {\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"Program.draw({uniforms})\", \"Program.setUniforms(uniforms)\")();\n            this.setUniforms(uniforms || {});\n        }\n        if (_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.priority >= logPriority) {\n            const fb = framebuffer ? framebuffer.id : \"default\";\n            const message = \"mode=\".concat((0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_5__.getKey)(this.gl, drawMode), \" verts=\").concat(vertexCount, \" \") + \"instances=\".concat(instanceCount, \" indexType=\").concat((0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_5__.getKey)(this.gl, indexType), \" \") + \"isInstanced=\".concat(isInstanced, \" isIndexed=\").concat(isIndexed, \" \") + \"Framebuffer=\".concat(fb);\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.log(logPriority, message)();\n        }\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(vertexArray);\n        this.gl.useProgram(this.handle);\n        if (!this._areTexturesRenderable() || vertexCount === 0 || isInstanced && instanceCount === 0) {\n            return false;\n        }\n        vertexArray.bindForDraw(vertexCount, instanceCount, ()=>{\n            if (framebuffer !== undefined) {\n                parameters = Object.assign({}, parameters, {\n                    framebuffer\n                });\n            }\n            if (transformFeedback) {\n                const primitiveMode = (0,_webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_6__.getPrimitiveDrawMode)(drawMode);\n                transformFeedback.begin(primitiveMode);\n            }\n            this._bindTextures();\n            (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.withParameters)(this.gl, parameters, ()=>{\n                if (isIndexed && isInstanced) {\n                    this.gl2.drawElementsInstanced(drawMode, vertexCount, indexType, offset, instanceCount);\n                } else if (isIndexed && (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(this.gl) && !isNaN(start) && !isNaN(end)) {\n                    this.gl2.drawRangeElements(drawMode, start, end, vertexCount, indexType, offset);\n                } else if (isIndexed) {\n                    this.gl.drawElements(drawMode, vertexCount, indexType, offset);\n                } else if (isInstanced) {\n                    this.gl2.drawArraysInstanced(drawMode, offset, vertexCount, instanceCount);\n                } else {\n                    this.gl.drawArrays(drawMode, offset, vertexCount);\n                }\n            });\n            if (transformFeedback) {\n                transformFeedback.end();\n            }\n        });\n        return true;\n    }\n    setUniforms() {\n        let uniforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.priority >= 2) {\n            (0,_uniforms__WEBPACK_IMPORTED_MODULE_7__.checkUniformValues)(uniforms, this.id, this._uniformSetters);\n        }\n        this.gl.useProgram(this.handle);\n        for(const uniformName in uniforms){\n            const uniform = uniforms[uniformName];\n            const uniformSetter = this._uniformSetters[uniformName];\n            if (uniformSetter) {\n                let value = uniform;\n                let textureUpdate = false;\n                if (value instanceof _framebuffer__WEBPACK_IMPORTED_MODULE_8__[\"default\"]) {\n                    value = value.texture;\n                }\n                if (value instanceof _texture__WEBPACK_IMPORTED_MODULE_9__[\"default\"]) {\n                    textureUpdate = this.uniforms[uniformName] !== uniform;\n                    if (textureUpdate) {\n                        if (uniformSetter.textureIndex === undefined) {\n                            uniformSetter.textureIndex = this._textureIndexCounter++;\n                        }\n                        const texture = value;\n                        const { textureIndex } = uniformSetter;\n                        texture.bind(textureIndex);\n                        value = textureIndex;\n                        this._textureUniforms[uniformName] = texture;\n                    } else {\n                        value = uniformSetter.textureIndex;\n                    }\n                } else if (this._textureUniforms[uniformName]) {\n                    delete this._textureUniforms[uniformName];\n                }\n                if (uniformSetter(value) || textureUpdate) {\n                    (0,_uniforms__WEBPACK_IMPORTED_MODULE_7__.copyUniform)(this.uniforms, uniformName, uniform);\n                }\n            }\n        }\n        return this;\n    }\n    _areTexturesRenderable() {\n        let texturesRenderable = true;\n        for(const uniformName in this._textureUniforms){\n            const texture = this._textureUniforms[uniformName];\n            texture.update();\n            texturesRenderable = texturesRenderable && texture.loaded;\n        }\n        return texturesRenderable;\n    }\n    _bindTextures() {\n        for(const uniformName in this._textureUniforms){\n            const textureIndex = this._uniformSetters[uniformName].textureIndex;\n            this._textureUniforms[uniformName].bind(textureIndex);\n        }\n    }\n    _createHandle() {\n        return this.gl.createProgram();\n    }\n    _deleteHandle() {\n        this.gl.deleteProgram(this.handle);\n    }\n    _getOptionsFromHandle(handle) {\n        const shaderHandles = this.gl.getAttachedShaders(handle);\n        const opts = {};\n        for (const shaderHandle of shaderHandles){\n            const type = this.gl.getShaderParameter(this.handle, 35663);\n            switch(type){\n                case 35633:\n                    opts.vs = new _shader__WEBPACK_IMPORTED_MODULE_2__.VertexShader({\n                        handle: shaderHandle\n                    });\n                    break;\n                case 35632:\n                    opts.fs = new _shader__WEBPACK_IMPORTED_MODULE_2__.FragmentShader({\n                        handle: shaderHandle\n                    });\n                    break;\n                default:\n            }\n        }\n        return opts;\n    }\n    _getParameter(pname) {\n        return this.gl.getProgramParameter(this.handle, pname);\n    }\n    _setId(id) {\n        if (!id) {\n            const programName = this._getName();\n            this.id = (0,_utils_utils__WEBPACK_IMPORTED_MODULE_10__.uid)(programName);\n        }\n    }\n    _getName() {\n        let programName = this.vs.getName() || this.fs.getName();\n        programName = programName.replace(/shader/i, \"\");\n        programName = programName ? \"\".concat(programName, \"-program\") : \"program\";\n        return programName;\n    }\n    _compileAndLink() {\n        const { gl } = this;\n        gl.attachShader(this.handle, this.vs.handle);\n        gl.attachShader(this.handle, this.fs.handle);\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.time(LOG_PROGRAM_PERF_PRIORITY, \"linkProgram for \".concat(this._getName()))();\n        gl.linkProgram(this.handle);\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.timeEnd(LOG_PROGRAM_PERF_PRIORITY, \"linkProgram for \".concat(this._getName()))();\n        if (gl.debug || _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.level > 0) {\n            const linked = gl.getProgramParameter(this.handle, 35714);\n            if (!linked) {\n                throw new Error(\"Error linking: \".concat(gl.getProgramInfoLog(this.handle)));\n            }\n            gl.validateProgram(this.handle);\n            const validated = gl.getProgramParameter(this.handle, 35715);\n            if (!validated) {\n                throw new Error(\"Error validating: \".concat(gl.getProgramInfoLog(this.handle)));\n            }\n        }\n    }\n    _readUniformLocationsFromLinkedProgram() {\n        const { gl } = this;\n        this._uniformSetters = {};\n        this._uniformCount = this._getParameter(35718);\n        for(let i = 0; i < this._uniformCount; i++){\n            const info = this.gl.getActiveUniform(this.handle, i);\n            const { name } = (0,_uniforms__WEBPACK_IMPORTED_MODULE_7__.parseUniformName)(info.name);\n            let location = gl.getUniformLocation(this.handle, name);\n            this._uniformSetters[name] = (0,_uniforms__WEBPACK_IMPORTED_MODULE_7__.getUniformSetter)(gl, location, info);\n            if (info.size > 1) {\n                for(let l = 0; l < info.size; l++){\n                    location = gl.getUniformLocation(this.handle, \"\".concat(name, \"[\").concat(l, \"]\"));\n                    this._uniformSetters[\"\".concat(name, \"[\").concat(l, \"]\")] = (0,_uniforms__WEBPACK_IMPORTED_MODULE_7__.getUniformSetter)(gl, location, info);\n                }\n            }\n        }\n        this._textureIndexCounter = 0;\n    }\n    getActiveUniforms(uniformIndices, pname) {\n        return this.gl2.getActiveUniforms(this.handle, uniformIndices, pname);\n    }\n    getUniformBlockIndex(blockName) {\n        return this.gl2.getUniformBlockIndex(this.handle, blockName);\n    }\n    getActiveUniformBlockParameter(blockIndex, pname) {\n        return this.gl2.getActiveUniformBlockParameter(this.handle, blockIndex, pname);\n    }\n    uniformBlockBinding(blockIndex, blockBinding) {\n        this.gl2.uniformBlockBinding(this.handle, blockIndex, blockBinding);\n    }\n} //# sourceMappingURL=program.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/program.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/query.js":
/*!***************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/query.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Query)\n/* harmony export */ });\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n/* harmony import */ var _features__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../features */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/features.js\");\n/* harmony import */ var _features__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../features */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\n\n\nconst GL_QUERY_RESULT = 0x8866;\nconst GL_QUERY_RESULT_AVAILABLE = 0x8867;\nconst GL_TIME_ELAPSED_EXT = 0x88bf;\nconst GL_GPU_DISJOINT_EXT = 0x8fbb;\nconst GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88;\nconst GL_ANY_SAMPLES_PASSED = 0x8c2f;\nconst GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8d6a;\nclass Query extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Query\";\n    }\n    static isSupported(gl) {\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        const webgl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl);\n        const hasTimerQuery = (0,_features__WEBPACK_IMPORTED_MODULE_2__.hasFeatures)(gl, _features__WEBPACK_IMPORTED_MODULE_3__.FEATURES.TIMER_QUERY);\n        let supported = webgl2 || hasTimerQuery;\n        for (const key of opts){\n            switch(key){\n                case \"queries\":\n                    supported = supported && webgl2;\n                    break;\n                case \"timers\":\n                    supported = supported && hasTimerQuery;\n                    break;\n                default:\n                    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(false);\n            }\n        }\n        return supported;\n    }\n    constructor(gl){\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        super(gl, opts);\n        this.target = null;\n        this._queryPending = false;\n        this._pollingPromise = null;\n        Object.seal(this);\n    }\n    beginTimeElapsedQuery() {\n        return this.begin(GL_TIME_ELAPSED_EXT);\n    }\n    beginOcclusionQuery() {\n        let { conservative = false } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return this.begin(conservative ? GL_ANY_SAMPLES_PASSED_CONSERVATIVE : GL_ANY_SAMPLES_PASSED);\n    }\n    beginTransformFeedbackQuery() {\n        return this.begin(GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN);\n    }\n    begin(target) {\n        if (this._queryPending) {\n            return this;\n        }\n        this.target = target;\n        this.gl2.beginQuery(this.target, this.handle);\n        return this;\n    }\n    end() {\n        if (this._queryPending) {\n            return this;\n        }\n        if (this.target) {\n            this.gl2.endQuery(this.target);\n            this.target = null;\n            this._queryPending = true;\n        }\n        return this;\n    }\n    isResultAvailable() {\n        if (!this._queryPending) {\n            return false;\n        }\n        const resultAvailable = this.gl2.getQueryParameter(this.handle, GL_QUERY_RESULT_AVAILABLE);\n        if (resultAvailable) {\n            this._queryPending = false;\n        }\n        return resultAvailable;\n    }\n    isTimerDisjoint() {\n        return this.gl2.getParameter(GL_GPU_DISJOINT_EXT);\n    }\n    getResult() {\n        return this.gl2.getQueryParameter(this.handle, GL_QUERY_RESULT);\n    }\n    getTimerMilliseconds() {\n        return this.getResult() / 1e6;\n    }\n    createPoll() {\n        let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.POSITIVE_INFINITY;\n        if (this._pollingPromise) {\n            return this._pollingPromise;\n        }\n        let counter = 0;\n        this._pollingPromise = new Promise((resolve, reject)=>{\n            const poll = ()=>{\n                if (this.isResultAvailable()) {\n                    resolve(this.getResult());\n                    this._pollingPromise = null;\n                } else if (counter++ > limit) {\n                    reject(\"Timed out\");\n                    this._pollingPromise = null;\n                } else {\n                    requestAnimationFrame(poll);\n                }\n            };\n            requestAnimationFrame(poll);\n        });\n        return this._pollingPromise;\n    }\n    _createHandle() {\n        return Query.isSupported(this.gl) ? this.gl2.createQuery() : null;\n    }\n    _deleteHandle() {\n        this.gl2.deleteQuery(this.handle);\n    }\n} //# sourceMappingURL=query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer-formats.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer-formats.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst EXT_FLOAT_WEBGL2 = \"EXT_color_buffer_float\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    [33189]: {\n        bpp: 2\n    },\n    [33190]: {\n        gl2: true,\n        bpp: 3\n    },\n    [36012]: {\n        gl2: true,\n        bpp: 4\n    },\n    [36168]: {\n        bpp: 1\n    },\n    [34041]: {\n        bpp: 4\n    },\n    [35056]: {\n        gl2: true,\n        bpp: 4\n    },\n    [36013]: {\n        gl2: true,\n        bpp: 5\n    },\n    [32854]: {\n        bpp: 2\n    },\n    [36194]: {\n        bpp: 2\n    },\n    [32855]: {\n        bpp: 2\n    },\n    [33321]: {\n        gl2: true,\n        bpp: 1\n    },\n    [33330]: {\n        gl2: true,\n        bpp: 1\n    },\n    [33329]: {\n        gl2: true,\n        bpp: 1\n    },\n    [33332]: {\n        gl2: true,\n        bpp: 2\n    },\n    [33331]: {\n        gl2: true,\n        bpp: 2\n    },\n    [33334]: {\n        gl2: true,\n        bpp: 4\n    },\n    [33333]: {\n        gl2: true,\n        bpp: 4\n    },\n    [33323]: {\n        gl2: true,\n        bpp: 2\n    },\n    [33336]: {\n        gl2: true,\n        bpp: 2\n    },\n    [33335]: {\n        gl2: true,\n        bpp: 2\n    },\n    [33338]: {\n        gl2: true,\n        bpp: 4\n    },\n    [33337]: {\n        gl2: true,\n        bpp: 4\n    },\n    [33340]: {\n        gl2: true,\n        bpp: 8\n    },\n    [33339]: {\n        gl2: true,\n        bpp: 8\n    },\n    [32849]: {\n        gl2: true,\n        bpp: 3\n    },\n    [32856]: {\n        gl2: true,\n        bpp: 4\n    },\n    [32857]: {\n        gl2: true,\n        bpp: 4\n    },\n    [36220]: {\n        gl2: true,\n        bpp: 4\n    },\n    [36238]: {\n        gl2: true,\n        bpp: 4\n    },\n    [36975]: {\n        gl2: true,\n        bpp: 4\n    },\n    [36214]: {\n        gl2: true,\n        bpp: 8\n    },\n    [36232]: {\n        gl2: true,\n        bpp: 8\n    },\n    [36226]: {\n        gl2: true,\n        bpp: 16\n    },\n    [36208]: {\n        gl2: true,\n        bpp: 16\n    },\n    [33325]: {\n        gl2: EXT_FLOAT_WEBGL2,\n        bpp: 2\n    },\n    [33327]: {\n        gl2: EXT_FLOAT_WEBGL2,\n        bpp: 4\n    },\n    [34842]: {\n        gl2: EXT_FLOAT_WEBGL2,\n        bpp: 8\n    },\n    [33326]: {\n        gl2: EXT_FLOAT_WEBGL2,\n        bpp: 4\n    },\n    [33328]: {\n        gl2: EXT_FLOAT_WEBGL2,\n        bpp: 8\n    },\n    [34836]: {\n        gl2: EXT_FLOAT_WEBGL2,\n        bpp: 16\n    },\n    [35898]: {\n        gl2: EXT_FLOAT_WEBGL2,\n        bpp: 4\n    }\n}); //# sourceMappingURL=renderbuffer-formats.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vY2xhc3Nlcy9yZW5kZXJidWZmZXItZm9ybWF0cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsbUJBQW1CO0FBQ3pCLGlFQUFlO0lBQ2IsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BBLEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BBLEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQSxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQSxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQSxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLO1FBQ0xELEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BDLEtBQUs7UUFDTEQsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEMsS0FBSztRQUNMRCxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLRjtRQUNMQyxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLRjtRQUNMQyxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLRjtRQUNMQyxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLRjtRQUNMQyxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLRjtRQUNMQyxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLRjtRQUNMQyxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQQyxLQUFLRjtRQUNMQyxLQUFLO0lBQ1A7QUFDRixDQUFDLEVBQUMsQ0FDRixnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS9jbGFzc2VzL3JlbmRlcmJ1ZmZlci1mb3JtYXRzLmpzPzk0ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRVhUX0ZMT0FUX1dFQkdMMiA9ICdFWFRfY29sb3JfYnVmZmVyX2Zsb2F0JztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgWzMzMTg5XToge1xuICAgIGJwcDogMlxuICB9LFxuICBbMzMxOTBdOiB7XG4gICAgZ2wyOiB0cnVlLFxuICAgIGJwcDogM1xuICB9LFxuICBbMzYwMTJdOiB7XG4gICAgZ2wyOiB0cnVlLFxuICAgIGJwcDogNFxuICB9LFxuICBbMzYxNjhdOiB7XG4gICAgYnBwOiAxXG4gIH0sXG4gIFszNDA0MV06IHtcbiAgICBicHA6IDRcbiAgfSxcbiAgWzM1MDU2XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzM2MDEzXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDVcbiAgfSxcbiAgWzMyODU0XToge1xuICAgIGJwcDogMlxuICB9LFxuICBbMzYxOTRdOiB7XG4gICAgYnBwOiAyXG4gIH0sXG4gIFszMjg1NV06IHtcbiAgICBicHA6IDJcbiAgfSxcbiAgWzMzMzIxXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDFcbiAgfSxcbiAgWzMzMzMwXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDFcbiAgfSxcbiAgWzMzMzI5XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDFcbiAgfSxcbiAgWzMzMzMyXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDJcbiAgfSxcbiAgWzMzMzMxXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDJcbiAgfSxcbiAgWzMzMzM0XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzMzMzMzXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzMzMzIzXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDJcbiAgfSxcbiAgWzMzMzM2XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDJcbiAgfSxcbiAgWzMzMzM1XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDJcbiAgfSxcbiAgWzMzMzM4XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzMzMzM3XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzMzMzQwXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDhcbiAgfSxcbiAgWzMzMzM5XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDhcbiAgfSxcbiAgWzMyODQ5XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDNcbiAgfSxcbiAgWzMyODU2XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzMyODU3XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzM2MjIwXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzM2MjM4XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzM2OTc1XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDRcbiAgfSxcbiAgWzM2MjE0XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDhcbiAgfSxcbiAgWzM2MjMyXToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDhcbiAgfSxcbiAgWzM2MjI2XToge1xuICAgIGdsMjogdHJ1ZSxcbiAgICBicHA6IDE2XG4gIH0sXG4gIFszNjIwOF06IHtcbiAgICBnbDI6IHRydWUsXG4gICAgYnBwOiAxNlxuICB9LFxuICBbMzMzMjVdOiB7XG4gICAgZ2wyOiBFWFRfRkxPQVRfV0VCR0wyLFxuICAgIGJwcDogMlxuICB9LFxuICBbMzMzMjddOiB7XG4gICAgZ2wyOiBFWFRfRkxPQVRfV0VCR0wyLFxuICAgIGJwcDogNFxuICB9LFxuICBbMzQ4NDJdOiB7XG4gICAgZ2wyOiBFWFRfRkxPQVRfV0VCR0wyLFxuICAgIGJwcDogOFxuICB9LFxuICBbMzMzMjZdOiB7XG4gICAgZ2wyOiBFWFRfRkxPQVRfV0VCR0wyLFxuICAgIGJwcDogNFxuICB9LFxuICBbMzMzMjhdOiB7XG4gICAgZ2wyOiBFWFRfRkxPQVRfV0VCR0wyLFxuICAgIGJwcDogOFxuICB9LFxuICBbMzQ4MzZdOiB7XG4gICAgZ2wyOiBFWFRfRkxPQVRfV0VCR0wyLFxuICAgIGJwcDogMTZcbiAgfSxcbiAgWzM1ODk4XToge1xuICAgIGdsMjogRVhUX0ZMT0FUX1dFQkdMMixcbiAgICBicHA6IDRcbiAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbmRlcmJ1ZmZlci1mb3JtYXRzLmpzLm1hcCJdLCJuYW1lcyI6WyJFWFRfRkxPQVRfV0VCR0wyIiwiYnBwIiwiZ2wyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer-formats.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Renderbuffer)\n/* harmony export */ });\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n/* harmony import */ var _renderbuffer_formats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderbuffer-formats */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer-formats.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\n\n\nfunction isFormatSupported(gl, format, formats) {\n    const info = formats[format];\n    if (!info) {\n        return false;\n    }\n    const value = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) ? info.gl2 || info.gl1 : info.gl1;\n    if (typeof value === \"string\") {\n        return gl.getExtension(value);\n    }\n    return value;\n}\nclass Renderbuffer extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Renderbuffer\";\n    }\n    static isSupported(gl) {\n        let { format } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            format: null\n        };\n        return !format || isFormatSupported(gl, format, _renderbuffer_formats__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    }\n    static getSamplesForFormat(gl, _ref) {\n        let { format } = _ref;\n        return gl.getInternalformatParameter(36161, format, 32937);\n    }\n    constructor(gl){\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        super(gl, opts);\n        this.initialize(opts);\n        Object.seal(this);\n    }\n    initialize(_ref2) {\n        let { format, width = 1, height = 1, samples = 0 } = _ref2;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(format, \"Needs format\");\n        this._trackDeallocatedMemory();\n        this.gl.bindRenderbuffer(36161, this.handle);\n        if (samples !== 0 && (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(this.gl)) {\n            this.gl.renderbufferStorageMultisample(36161, samples, format, width, height);\n        } else {\n            this.gl.renderbufferStorage(36161, format, width, height);\n        }\n        this.format = format;\n        this.width = width;\n        this.height = height;\n        this.samples = samples;\n        this._trackAllocatedMemory(this.width * this.height * (this.samples || 1) * _renderbuffer_formats__WEBPACK_IMPORTED_MODULE_2__[\"default\"][this.format].bpp);\n        return this;\n    }\n    resize(_ref3) {\n        let { width, height } = _ref3;\n        if (width !== this.width || height !== this.height) {\n            return this.initialize({\n                width,\n                height,\n                format: this.format,\n                samples: this.samples\n            });\n        }\n        return this;\n    }\n    _createHandle() {\n        return this.gl.createRenderbuffer();\n    }\n    _deleteHandle() {\n        this.gl.deleteRenderbuffer(this.handle);\n        this._trackDeallocatedMemory();\n    }\n    _bindHandle(handle) {\n        this.gl.bindRenderbuffer(36161, handle);\n    }\n    _syncHandle(handle) {\n        this.format = this.getParameter(36164);\n        this.width = this.getParameter(36162);\n        this.height = this.getParameter(36163);\n        this.samples = this.getParameter(36011);\n    }\n    _getParameter(pname) {\n        this.gl.bindRenderbuffer(36161, this.handle);\n        const value = this.gl.getRenderbufferParameter(36161, pname);\n        return value;\n    }\n} //# sourceMappingURL=renderbuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js":
/*!******************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Resource)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../init */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/init.js\");\n/* harmony import */ var _webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../webgl-utils/constants-to-keys */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/constants-to-keys.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n/* harmony import */ var _utils_stub_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/stub-methods */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/stub-methods.js\");\n\n\n\n\n\n\nconst ERR_RESOURCE_METHOD_UNDEFINED = \"Resource subclass must define virtual methods\";\nclass Resource {\n    get [Symbol.toStringTag]() {\n        return \"Resource\";\n    }\n    constructor(gl){\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGLContext)(gl);\n        const { id, userData = {} } = opts;\n        this.gl = gl;\n        this.gl2 = gl;\n        this.id = id || (0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.uid)(this[Symbol.toStringTag]);\n        this.userData = userData;\n        this._bound = false;\n        this._handle = opts.handle;\n        if (this._handle === undefined) {\n            this._handle = this._createHandle();\n        }\n        this.byteLength = 0;\n        this._addStats();\n    }\n    toString() {\n        return \"\".concat(this[Symbol.toStringTag] || this.constructor.name, \"(\").concat(this.id, \")\");\n    }\n    get handle() {\n        return this._handle;\n    }\n    delete() {\n        let { deleteChildren = false } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const children = this._handle && this._deleteHandle(this._handle);\n        if (this._handle) {\n            this._removeStats();\n        }\n        this._handle = null;\n        if (children && deleteChildren) {\n            children.filter(Boolean).forEach((child)=>child.delete());\n        }\n        return this;\n    }\n    bind() {\n        let funcOrHandle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.handle;\n        if (typeof funcOrHandle !== \"function\") {\n            this._bindHandle(funcOrHandle);\n            return this;\n        }\n        let value;\n        if (!this._bound) {\n            this._bindHandle(this.handle);\n            this._bound = true;\n            value = funcOrHandle();\n            this._bound = false;\n            this._bindHandle(null);\n        } else {\n            value = funcOrHandle();\n        }\n        return value;\n    }\n    unbind() {\n        this.bind(null);\n    }\n    getParameter(pname) {\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        pname = (0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_2__.getKeyValue)(this.gl, pname);\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(pname);\n        const parameters = this.constructor.PARAMETERS || {};\n        const parameter = parameters[pname];\n        if (parameter) {\n            const isWebgl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(this.gl);\n            const parameterAvailable = (!(\"webgl2\" in parameter) || isWebgl2) && (!(\"extension\" in parameter) || this.gl.getExtension(parameter.extension));\n            if (!parameterAvailable) {\n                const webgl1Default = parameter.webgl1;\n                const webgl2Default = \"webgl2\" in parameter ? parameter.webgl2 : parameter.webgl1;\n                const defaultValue = isWebgl2 ? webgl2Default : webgl1Default;\n                return defaultValue;\n            }\n        }\n        return this._getParameter(pname, opts);\n    }\n    getParameters() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { parameters, keys } = options;\n        const PARAMETERS = this.constructor.PARAMETERS || {};\n        const isWebgl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(this.gl);\n        const values = {};\n        const parameterKeys = parameters || Object.keys(PARAMETERS);\n        for (const pname of parameterKeys){\n            const parameter = PARAMETERS[pname];\n            const parameterAvailable = parameter && (!(\"webgl2\" in parameter) || isWebgl2) && (!(\"extension\" in parameter) || this.gl.getExtension(parameter.extension));\n            if (parameterAvailable) {\n                const key = keys ? (0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_2__.getKey)(this.gl, pname) : pname;\n                values[key] = this.getParameter(pname, options);\n                if (keys && parameter.type === \"GLenum\") {\n                    values[key] = (0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_2__.getKey)(this.gl, values[key]);\n                }\n            }\n        }\n        return values;\n    }\n    setParameter(pname, value) {\n        pname = (0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_2__.getKeyValue)(this.gl, pname);\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(pname);\n        const parameters = this.constructor.PARAMETERS || {};\n        const parameter = parameters[pname];\n        if (parameter) {\n            const isWebgl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(this.gl);\n            const parameterAvailable = (!(\"webgl2\" in parameter) || isWebgl2) && (!(\"extension\" in parameter) || this.gl.getExtension(parameter.extension));\n            if (!parameterAvailable) {\n                throw new Error(\"Parameter not available on this platform\");\n            }\n            if (parameter.type === \"GLenum\") {\n                value = (0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_2__.getKeyValue)(value);\n            }\n        }\n        this._setParameter(pname, value);\n        return this;\n    }\n    setParameters(parameters) {\n        for(const pname in parameters){\n            this.setParameter(pname, parameters[pname]);\n        }\n        return this;\n    }\n    stubRemovedMethods(className, version, methodNames) {\n        return (0,_utils_stub_methods__WEBPACK_IMPORTED_MODULE_4__.stubRemovedMethods)(this, className, version, methodNames);\n    }\n    initialize(opts) {}\n    _createHandle() {\n        throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n    }\n    _deleteHandle() {\n        throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n    }\n    _bindHandle(handle) {\n        throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n    }\n    _getOptsFromHandle() {\n        throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n    }\n    _getParameter(pname, opts) {\n        throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n    }\n    _setParameter(pname, value) {\n        throw new Error(ERR_RESOURCE_METHOD_UNDEFINED);\n    }\n    _context() {\n        this.gl.luma = this.gl.luma || {};\n        return this.gl.luma;\n    }\n    _addStats() {\n        const name = this[Symbol.toStringTag];\n        const stats = _init__WEBPACK_IMPORTED_MODULE_5__.lumaStats.get(\"Resource Counts\");\n        stats.get(\"Resources Created\").incrementCount();\n        stats.get(\"\".concat(name, \"s Created\")).incrementCount();\n        stats.get(\"\".concat(name, \"s Active\")).incrementCount();\n    }\n    _removeStats() {\n        const name = this[Symbol.toStringTag];\n        const stats = _init__WEBPACK_IMPORTED_MODULE_5__.lumaStats.get(\"Resource Counts\");\n        stats.get(\"\".concat(name, \"s Active\")).decrementCount();\n    }\n    _trackAllocatedMemory(bytes) {\n        let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this[Symbol.toStringTag];\n        this._trackAllocatedMemoryForContext(bytes, name);\n        this._trackAllocatedMemoryForContext(bytes, name, this.gl.canvas && this.gl.canvas.id);\n        this.byteLength = bytes;\n    }\n    _trackAllocatedMemoryForContext(bytes) {\n        let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this[Symbol.toStringTag];\n        let id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n        const stats = _init__WEBPACK_IMPORTED_MODULE_5__.lumaStats.get(\"Memory Usage\".concat(id));\n        stats.get(\"GPU Memory\").addCount(bytes);\n        stats.get(\"\".concat(name, \" Memory\")).addCount(bytes);\n    }\n    _trackDeallocatedMemory() {\n        let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this[Symbol.toStringTag];\n        this._trackDeallocatedMemoryForContext(name);\n        this._trackDeallocatedMemoryForContext(name, this.gl.canvas && this.gl.canvas.id);\n        this.byteLength = 0;\n    }\n    _trackDeallocatedMemoryForContext() {\n        let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this[Symbol.toStringTag];\n        let id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n        const stats = _init__WEBPACK_IMPORTED_MODULE_5__.lumaStats.get(\"Memory Usage\".concat(id));\n        stats.get(\"GPU Memory\").subtractCount(this.byteLength);\n        stats.get(\"\".concat(name, \" Memory\")).subtractCount(this.byteLength);\n    }\n} //# sourceMappingURL=resource.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/shader.js":
/*!****************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/shader.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FragmentShader: () => (/* binding */ FragmentShader),\n/* harmony export */   Shader: () => (/* binding */ Shader),\n/* harmony export */   VertexShader: () => (/* binding */ VertexShader)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _glsl_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../glsl-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-name.js\");\n/* harmony import */ var _glsl_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../glsl-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/format-glsl-error.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n\n\n\n\n\nconst ERR_SOURCE = \"Shader: GLSL source code must be a JavaScript string\";\nclass Shader extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Shader\";\n    }\n    static getTypeName(shaderType) {\n        switch(shaderType){\n            case 35633:\n                return \"vertex-shader\";\n            case 35632:\n                return \"fragment-shader\";\n            default:\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(false);\n                return \"unknown\";\n        }\n    }\n    constructor(gl, props){\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGLContext)(gl);\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(typeof props.source === \"string\", ERR_SOURCE);\n        const id = (0,_glsl_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(props.source, null) || props.id || (0,_utils_utils__WEBPACK_IMPORTED_MODULE_4__.uid)(\"unnamed \".concat(Shader.getTypeName(props.shaderType)));\n        super(gl, {\n            id\n        });\n        this.shaderType = props.shaderType;\n        this.source = props.source;\n        this.initialize(props);\n    }\n    initialize(_ref) {\n        let { source } = _ref;\n        const shaderName = (0,_glsl_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(source, null);\n        if (shaderName) {\n            this.id = (0,_utils_utils__WEBPACK_IMPORTED_MODULE_4__.uid)(shaderName);\n        }\n        this._compile(source);\n    }\n    getParameter(pname) {\n        return this.gl.getShaderParameter(this.handle, pname);\n    }\n    toString() {\n        return \"\".concat(Shader.getTypeName(this.shaderType), \":\").concat(this.id);\n    }\n    getName() {\n        return (0,_glsl_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.source) || \"unnamed-shader\";\n    }\n    getSource() {\n        return this.gl.getShaderSource(this.handle);\n    }\n    getTranslatedSource() {\n        const extension = this.gl.getExtension(\"WEBGL_debug_shaders\");\n        return extension ? extension.getTranslatedShaderSource(this.handle) : \"No translated source available. WEBGL_debug_shaders not implemented\";\n    }\n    _compile() {\n        let source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.source;\n        if (!source.startsWith(\"#version \")) {\n            source = \"#version 100\\n\".concat(source);\n        }\n        this.source = source;\n        this.gl.shaderSource(this.handle, this.source);\n        this.gl.compileShader(this.handle);\n        const compileStatus = this.getParameter(35713);\n        if (!compileStatus) {\n            const infoLog = this.gl.getShaderInfoLog(this.handle);\n            const { shaderName, errors, warnings } = (0,_glsl_utils__WEBPACK_IMPORTED_MODULE_5__.parseGLSLCompilerError)(infoLog, this.source, this.shaderType, this.id);\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.error(\"GLSL compilation errors in \".concat(shaderName, \"\\n\").concat(errors))();\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"GLSL compilation warnings in \".concat(shaderName, \"\\n\").concat(warnings))();\n            throw new Error(\"GLSL compilation errors in \".concat(shaderName));\n        }\n    }\n    _deleteHandle() {\n        this.gl.deleteShader(this.handle);\n    }\n    _getOptsFromHandle() {\n        return {\n            type: this.getParameter(35663),\n            source: this.getSource()\n        };\n    }\n}\nclass VertexShader extends Shader {\n    get [Symbol.toStringTag]() {\n        return \"VertexShader\";\n    }\n    constructor(gl, props){\n        if (typeof props === \"string\") {\n            props = {\n                source: props\n            };\n        }\n        super(gl, Object.assign({}, props, {\n            shaderType: 35633\n        }));\n    }\n    _createHandle() {\n        return this.gl.createShader(35633);\n    }\n}\nclass FragmentShader extends Shader {\n    get [Symbol.toStringTag]() {\n        return \"FragmentShader\";\n    }\n    constructor(gl, props){\n        if (typeof props === \"string\") {\n            props = {\n                source: props\n            };\n        }\n        super(gl, Object.assign({}, props, {\n            shaderType: 35632\n        }));\n    }\n    _createHandle() {\n        return this.gl.createShader(35632);\n    }\n} //# sourceMappingURL=shader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vY2xhc3Nlcy9zaGFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTJEO0FBQ1c7QUFDN0I7QUFDSjtBQUNIO0FBQ2xDLE1BQU1PLGFBQWE7QUFDWixNQUFNQyxlQUFlRixpREFBUUE7SUFDbEMsSUFBSSxDQUFDRyxPQUFPQyxXQUFXLENBQUMsR0FBRztRQUN6QixPQUFPO0lBQ1Q7SUFFQSxPQUFPQyxZQUFZQyxVQUFVLEVBQUU7UUFDN0IsT0FBUUE7WUFDTixLQUFLO2dCQUNILE9BQU87WUFFVCxLQUFLO2dCQUNILE9BQU87WUFFVDtnQkFDRVIscURBQU1BLENBQUM7Z0JBQ1AsT0FBTztRQUNYO0lBQ0Y7SUFFQVMsWUFBWUMsRUFBRSxFQUFFQyxLQUFLLENBQUU7UUFDckJmLG9FQUFrQkEsQ0FBQ2M7UUFDbkJWLHFEQUFNQSxDQUFDLE9BQU9XLE1BQU1DLE1BQU0sS0FBSyxVQUFVVDtRQUN6QyxNQUFNVSxLQUFLZCx1REFBYUEsQ0FBQ1ksTUFBTUMsTUFBTSxFQUFFLFNBQVNELE1BQU1FLEVBQUUsSUFBSVosaURBQUdBLENBQUMsV0FBV2EsTUFBTSxDQUFDVixPQUFPRyxXQUFXLENBQUNJLE1BQU1ILFVBQVU7UUFDckgsS0FBSyxDQUFDRSxJQUFJO1lBQ1JHO1FBQ0Y7UUFDQSxJQUFJLENBQUNMLFVBQVUsR0FBR0csTUFBTUgsVUFBVTtRQUNsQyxJQUFJLENBQUNJLE1BQU0sR0FBR0QsTUFBTUMsTUFBTTtRQUMxQixJQUFJLENBQUNHLFVBQVUsQ0FBQ0o7SUFDbEI7SUFFQUksV0FBV0MsSUFBSSxFQUFFO1FBQ2YsSUFBSSxFQUNGSixNQUFNLEVBQ1AsR0FBR0k7UUFDSixNQUFNQyxhQUFhbEIsdURBQWFBLENBQUNhLFFBQVE7UUFFekMsSUFBSUssWUFBWTtZQUNkLElBQUksQ0FBQ0osRUFBRSxHQUFHWixpREFBR0EsQ0FBQ2dCO1FBQ2hCO1FBRUEsSUFBSSxDQUFDQyxRQUFRLENBQUNOO0lBQ2hCO0lBRUFPLGFBQWFDLEtBQUssRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ1YsRUFBRSxDQUFDVyxrQkFBa0IsQ0FBQyxJQUFJLENBQUNDLE1BQU0sRUFBRUY7SUFDakQ7SUFFQUcsV0FBVztRQUNULE9BQU8sR0FBR1QsTUFBTSxDQUFDVixPQUFPRyxXQUFXLENBQUMsSUFBSSxDQUFDQyxVQUFVLEdBQUcsS0FBS00sTUFBTSxDQUFDLElBQUksQ0FBQ0QsRUFBRTtJQUMzRTtJQUVBVyxVQUFVO1FBQ1IsT0FBT3pCLHVEQUFhQSxDQUFDLElBQUksQ0FBQ2EsTUFBTSxLQUFLO0lBQ3ZDO0lBRUFhLFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQ2YsRUFBRSxDQUFDZ0IsZUFBZSxDQUFDLElBQUksQ0FBQ0osTUFBTTtJQUM1QztJQUVBSyxzQkFBc0I7UUFDcEIsTUFBTUMsWUFBWSxJQUFJLENBQUNsQixFQUFFLENBQUNtQixZQUFZLENBQUM7UUFDdkMsT0FBT0QsWUFBWUEsVUFBVUUseUJBQXlCLENBQUMsSUFBSSxDQUFDUixNQUFNLElBQUk7SUFDeEU7SUFFQUosV0FBVztRQUNULElBQUlOLFNBQVNtQixVQUFVQyxNQUFNLEdBQUcsS0FBS0QsU0FBUyxDQUFDLEVBQUUsS0FBS0UsWUFBWUYsU0FBUyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUNuQixNQUFNO1FBRTVGLElBQUksQ0FBQ0EsT0FBT3NCLFVBQVUsQ0FBQyxjQUFjO1lBQ25DdEIsU0FBUyxpQkFBaUJFLE1BQU0sQ0FBQ0Y7UUFDbkM7UUFFQSxJQUFJLENBQUNBLE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNGLEVBQUUsQ0FBQ3lCLFlBQVksQ0FBQyxJQUFJLENBQUNiLE1BQU0sRUFBRSxJQUFJLENBQUNWLE1BQU07UUFDN0MsSUFBSSxDQUFDRixFQUFFLENBQUMwQixhQUFhLENBQUMsSUFBSSxDQUFDZCxNQUFNO1FBQ2pDLE1BQU1lLGdCQUFnQixJQUFJLENBQUNsQixZQUFZLENBQUM7UUFFeEMsSUFBSSxDQUFDa0IsZUFBZTtZQUNsQixNQUFNQyxVQUFVLElBQUksQ0FBQzVCLEVBQUUsQ0FBQzZCLGdCQUFnQixDQUFDLElBQUksQ0FBQ2pCLE1BQU07WUFDcEQsTUFBTSxFQUNKTCxVQUFVLEVBQ1Z1QixNQUFNLEVBQ05DLFFBQVEsRUFDVCxHQUFHM0MsbUVBQXNCQSxDQUFDd0MsU0FBUyxJQUFJLENBQUMxQixNQUFNLEVBQUUsSUFBSSxDQUFDSixVQUFVLEVBQUUsSUFBSSxDQUFDSyxFQUFFO1lBQ3pFaEIsaURBQUdBLENBQUM2QyxLQUFLLENBQUMsOEJBQThCNUIsTUFBTSxDQUFDRyxZQUFZLE1BQU1ILE1BQU0sQ0FBQzBCO1lBQ3hFM0MsaURBQUdBLENBQUM4QyxJQUFJLENBQUMsZ0NBQWdDN0IsTUFBTSxDQUFDRyxZQUFZLE1BQU1ILE1BQU0sQ0FBQzJCO1lBQ3pFLE1BQU0sSUFBSUcsTUFBTSw4QkFBOEI5QixNQUFNLENBQUNHO1FBQ3ZEO0lBQ0Y7SUFFQTRCLGdCQUFnQjtRQUNkLElBQUksQ0FBQ25DLEVBQUUsQ0FBQ29DLFlBQVksQ0FBQyxJQUFJLENBQUN4QixNQUFNO0lBQ2xDO0lBRUF5QixxQkFBcUI7UUFDbkIsT0FBTztZQUNMQyxNQUFNLElBQUksQ0FBQzdCLFlBQVksQ0FBQztZQUN4QlAsUUFBUSxJQUFJLENBQUNhLFNBQVM7UUFDeEI7SUFDRjtBQUVGO0FBQ08sTUFBTXdCLHFCQUFxQjdDO0lBQ2hDLElBQUksQ0FBQ0MsT0FBT0MsV0FBVyxDQUFDLEdBQUc7UUFDekIsT0FBTztJQUNUO0lBRUFHLFlBQVlDLEVBQUUsRUFBRUMsS0FBSyxDQUFFO1FBQ3JCLElBQUksT0FBT0EsVUFBVSxVQUFVO1lBQzdCQSxRQUFRO2dCQUNOQyxRQUFRRDtZQUNWO1FBQ0Y7UUFFQSxLQUFLLENBQUNELElBQUl3QyxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHeEMsT0FBTztZQUNqQ0gsWUFBWTtRQUNkO0lBQ0Y7SUFFQTRDLGdCQUFnQjtRQUNkLE9BQU8sSUFBSSxDQUFDMUMsRUFBRSxDQUFDMkMsWUFBWSxDQUFDO0lBQzlCO0FBRUY7QUFDTyxNQUFNQyx1QkFBdUJsRDtJQUNsQyxJQUFJLENBQUNDLE9BQU9DLFdBQVcsQ0FBQyxHQUFHO1FBQ3pCLE9BQU87SUFDVDtJQUVBRyxZQUFZQyxFQUFFLEVBQUVDLEtBQUssQ0FBRTtRQUNyQixJQUFJLE9BQU9BLFVBQVUsVUFBVTtZQUM3QkEsUUFBUTtnQkFDTkMsUUFBUUQ7WUFDVjtRQUNGO1FBRUEsS0FBSyxDQUFDRCxJQUFJd0MsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBR3hDLE9BQU87WUFDakNILFlBQVk7UUFDZDtJQUNGO0lBRUE0QyxnQkFBZ0I7UUFDZCxPQUFPLElBQUksQ0FBQzFDLEVBQUUsQ0FBQzJDLFlBQVksQ0FBQztJQUM5QjtBQUVGLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vY2xhc3Nlcy9zaGFkZXIuanM/ZTBhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRXZWJHTENvbnRleHQsIGxvZyB9IGZyb20gJ0BsdW1hLmdsL2dsdG9vbHMnO1xuaW1wb3J0IHsgcGFyc2VHTFNMQ29tcGlsZXJFcnJvciwgZ2V0U2hhZGVyTmFtZSB9IGZyb20gJy4uL2dsc2wtdXRpbHMnO1xuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnLi4vdXRpbHMvYXNzZXJ0JztcbmltcG9ydCB7IHVpZCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcbmltcG9ydCBSZXNvdXJjZSBmcm9tICcuL3Jlc291cmNlJztcbmNvbnN0IEVSUl9TT1VSQ0UgPSAnU2hhZGVyOiBHTFNMIHNvdXJjZSBjb2RlIG11c3QgYmUgYSBKYXZhU2NyaXB0IHN0cmluZyc7XG5leHBvcnQgY2xhc3MgU2hhZGVyIGV4dGVuZHMgUmVzb3VyY2Uge1xuICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgcmV0dXJuICdTaGFkZXInO1xuICB9XG5cbiAgc3RhdGljIGdldFR5cGVOYW1lKHNoYWRlclR5cGUpIHtcbiAgICBzd2l0Y2ggKHNoYWRlclR5cGUpIHtcbiAgICAgIGNhc2UgMzU2MzM6XG4gICAgICAgIHJldHVybiAndmVydGV4LXNoYWRlcic7XG5cbiAgICAgIGNhc2UgMzU2MzI6XG4gICAgICAgIHJldHVybiAnZnJhZ21lbnQtc2hhZGVyJztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYXNzZXJ0KGZhbHNlKTtcbiAgICAgICAgcmV0dXJuICd1bmtub3duJztcbiAgICB9XG4gIH1cblxuICBjb25zdHJ1Y3RvcihnbCwgcHJvcHMpIHtcbiAgICBhc3NlcnRXZWJHTENvbnRleHQoZ2wpO1xuICAgIGFzc2VydCh0eXBlb2YgcHJvcHMuc291cmNlID09PSAnc3RyaW5nJywgRVJSX1NPVVJDRSk7XG4gICAgY29uc3QgaWQgPSBnZXRTaGFkZXJOYW1lKHByb3BzLnNvdXJjZSwgbnVsbCkgfHwgcHJvcHMuaWQgfHwgdWlkKFwidW5uYW1lZCBcIi5jb25jYXQoU2hhZGVyLmdldFR5cGVOYW1lKHByb3BzLnNoYWRlclR5cGUpKSk7XG4gICAgc3VwZXIoZ2wsIHtcbiAgICAgIGlkXG4gICAgfSk7XG4gICAgdGhpcy5zaGFkZXJUeXBlID0gcHJvcHMuc2hhZGVyVHlwZTtcbiAgICB0aGlzLnNvdXJjZSA9IHByb3BzLnNvdXJjZTtcbiAgICB0aGlzLmluaXRpYWxpemUocHJvcHMpO1xuICB9XG5cbiAgaW5pdGlhbGl6ZShfcmVmKSB7XG4gICAgbGV0IHtcbiAgICAgIHNvdXJjZVxuICAgIH0gPSBfcmVmO1xuICAgIGNvbnN0IHNoYWRlck5hbWUgPSBnZXRTaGFkZXJOYW1lKHNvdXJjZSwgbnVsbCk7XG5cbiAgICBpZiAoc2hhZGVyTmFtZSkge1xuICAgICAgdGhpcy5pZCA9IHVpZChzaGFkZXJOYW1lKTtcbiAgICB9XG5cbiAgICB0aGlzLl9jb21waWxlKHNvdXJjZSk7XG4gIH1cblxuICBnZXRQYXJhbWV0ZXIocG5hbWUpIHtcbiAgICByZXR1cm4gdGhpcy5nbC5nZXRTaGFkZXJQYXJhbWV0ZXIodGhpcy5oYW5kbGUsIHBuYW1lKTtcbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChTaGFkZXIuZ2V0VHlwZU5hbWUodGhpcy5zaGFkZXJUeXBlKSwgXCI6XCIpLmNvbmNhdCh0aGlzLmlkKTtcbiAgfVxuXG4gIGdldE5hbWUoKSB7XG4gICAgcmV0dXJuIGdldFNoYWRlck5hbWUodGhpcy5zb3VyY2UpIHx8ICd1bm5hbWVkLXNoYWRlcic7XG4gIH1cblxuICBnZXRTb3VyY2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2wuZ2V0U2hhZGVyU291cmNlKHRoaXMuaGFuZGxlKTtcbiAgfVxuXG4gIGdldFRyYW5zbGF0ZWRTb3VyY2UoKSB7XG4gICAgY29uc3QgZXh0ZW5zaW9uID0gdGhpcy5nbC5nZXRFeHRlbnNpb24oJ1dFQkdMX2RlYnVnX3NoYWRlcnMnKTtcbiAgICByZXR1cm4gZXh0ZW5zaW9uID8gZXh0ZW5zaW9uLmdldFRyYW5zbGF0ZWRTaGFkZXJTb3VyY2UodGhpcy5oYW5kbGUpIDogJ05vIHRyYW5zbGF0ZWQgc291cmNlIGF2YWlsYWJsZS4gV0VCR0xfZGVidWdfc2hhZGVycyBub3QgaW1wbGVtZW50ZWQnO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgbGV0IHNvdXJjZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogdGhpcy5zb3VyY2U7XG5cbiAgICBpZiAoIXNvdXJjZS5zdGFydHNXaXRoKCcjdmVyc2lvbiAnKSkge1xuICAgICAgc291cmNlID0gXCIjdmVyc2lvbiAxMDBcXG5cIi5jb25jYXQoc291cmNlKTtcbiAgICB9XG5cbiAgICB0aGlzLnNvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLmdsLnNoYWRlclNvdXJjZSh0aGlzLmhhbmRsZSwgdGhpcy5zb3VyY2UpO1xuICAgIHRoaXMuZ2wuY29tcGlsZVNoYWRlcih0aGlzLmhhbmRsZSk7XG4gICAgY29uc3QgY29tcGlsZVN0YXR1cyA9IHRoaXMuZ2V0UGFyYW1ldGVyKDM1NzEzKTtcblxuICAgIGlmICghY29tcGlsZVN0YXR1cykge1xuICAgICAgY29uc3QgaW5mb0xvZyA9IHRoaXMuZ2wuZ2V0U2hhZGVySW5mb0xvZyh0aGlzLmhhbmRsZSk7XG4gICAgICBjb25zdCB7XG4gICAgICAgIHNoYWRlck5hbWUsXG4gICAgICAgIGVycm9ycyxcbiAgICAgICAgd2FybmluZ3NcbiAgICAgIH0gPSBwYXJzZUdMU0xDb21waWxlckVycm9yKGluZm9Mb2csIHRoaXMuc291cmNlLCB0aGlzLnNoYWRlclR5cGUsIHRoaXMuaWQpO1xuICAgICAgbG9nLmVycm9yKFwiR0xTTCBjb21waWxhdGlvbiBlcnJvcnMgaW4gXCIuY29uY2F0KHNoYWRlck5hbWUsIFwiXFxuXCIpLmNvbmNhdChlcnJvcnMpKSgpO1xuICAgICAgbG9nLndhcm4oXCJHTFNMIGNvbXBpbGF0aW9uIHdhcm5pbmdzIGluIFwiLmNvbmNhdChzaGFkZXJOYW1lLCBcIlxcblwiKS5jb25jYXQod2FybmluZ3MpKSgpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR0xTTCBjb21waWxhdGlvbiBlcnJvcnMgaW4gXCIuY29uY2F0KHNoYWRlck5hbWUpKTtcbiAgICB9XG4gIH1cblxuICBfZGVsZXRlSGFuZGxlKCkge1xuICAgIHRoaXMuZ2wuZGVsZXRlU2hhZGVyKHRoaXMuaGFuZGxlKTtcbiAgfVxuXG4gIF9nZXRPcHRzRnJvbUhhbmRsZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogdGhpcy5nZXRQYXJhbWV0ZXIoMzU2NjMpLFxuICAgICAgc291cmNlOiB0aGlzLmdldFNvdXJjZSgpXG4gICAgfTtcbiAgfVxuXG59XG5leHBvcnQgY2xhc3MgVmVydGV4U2hhZGVyIGV4dGVuZHMgU2hhZGVyIHtcbiAgZ2V0IFtTeW1ib2wudG9TdHJpbmdUYWddKCkge1xuICAgIHJldHVybiAnVmVydGV4U2hhZGVyJztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGdsLCBwcm9wcykge1xuICAgIGlmICh0eXBlb2YgcHJvcHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICBwcm9wcyA9IHtcbiAgICAgICAgc291cmNlOiBwcm9wc1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBzdXBlcihnbCwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgIHNoYWRlclR5cGU6IDM1NjMzXG4gICAgfSkpO1xuICB9XG5cbiAgX2NyZWF0ZUhhbmRsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5nbC5jcmVhdGVTaGFkZXIoMzU2MzMpO1xuICB9XG5cbn1cbmV4cG9ydCBjbGFzcyBGcmFnbWVudFNoYWRlciBleHRlbmRzIFNoYWRlciB7XG4gIGdldCBbU3ltYm9sLnRvU3RyaW5nVGFnXSgpIHtcbiAgICByZXR1cm4gJ0ZyYWdtZW50U2hhZGVyJztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGdsLCBwcm9wcykge1xuICAgIGlmICh0eXBlb2YgcHJvcHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICBwcm9wcyA9IHtcbiAgICAgICAgc291cmNlOiBwcm9wc1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBzdXBlcihnbCwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMsIHtcbiAgICAgIHNoYWRlclR5cGU6IDM1NjMyXG4gICAgfSkpO1xuICB9XG5cbiAgX2NyZWF0ZUhhbmRsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5nbC5jcmVhdGVTaGFkZXIoMzU2MzIpO1xuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYWRlci5qcy5tYXAiXSwibmFtZXMiOlsiYXNzZXJ0V2ViR0xDb250ZXh0IiwibG9nIiwicGFyc2VHTFNMQ29tcGlsZXJFcnJvciIsImdldFNoYWRlck5hbWUiLCJhc3NlcnQiLCJ1aWQiLCJSZXNvdXJjZSIsIkVSUl9TT1VSQ0UiLCJTaGFkZXIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsImdldFR5cGVOYW1lIiwic2hhZGVyVHlwZSIsImNvbnN0cnVjdG9yIiwiZ2wiLCJwcm9wcyIsInNvdXJjZSIsImlkIiwiY29uY2F0IiwiaW5pdGlhbGl6ZSIsIl9yZWYiLCJzaGFkZXJOYW1lIiwiX2NvbXBpbGUiLCJnZXRQYXJhbWV0ZXIiLCJwbmFtZSIsImdldFNoYWRlclBhcmFtZXRlciIsImhhbmRsZSIsInRvU3RyaW5nIiwiZ2V0TmFtZSIsImdldFNvdXJjZSIsImdldFNoYWRlclNvdXJjZSIsImdldFRyYW5zbGF0ZWRTb3VyY2UiLCJleHRlbnNpb24iLCJnZXRFeHRlbnNpb24iLCJnZXRUcmFuc2xhdGVkU2hhZGVyU291cmNlIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwic3RhcnRzV2l0aCIsInNoYWRlclNvdXJjZSIsImNvbXBpbGVTaGFkZXIiLCJjb21waWxlU3RhdHVzIiwiaW5mb0xvZyIsImdldFNoYWRlckluZm9Mb2ciLCJlcnJvcnMiLCJ3YXJuaW5ncyIsImVycm9yIiwid2FybiIsIkVycm9yIiwiX2RlbGV0ZUhhbmRsZSIsImRlbGV0ZVNoYWRlciIsIl9nZXRPcHRzRnJvbUhhbmRsZSIsInR5cGUiLCJWZXJ0ZXhTaGFkZXIiLCJPYmplY3QiLCJhc3NpZ24iLCJfY3JlYXRlSGFuZGxlIiwiY3JlYXRlU2hhZGVyIiwiRnJhZ21lbnRTaGFkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/shader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Texture2D)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _texture__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./texture */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js\");\n/* harmony import */ var _utils_load_file__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/load-file */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/load-file.js\");\n\n\n\nclass Texture2D extends _texture__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Texture2D\";\n    }\n    static isSupported(gl, opts) {\n        return _texture__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isSupported(gl, opts);\n    }\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGLContext)(gl);\n        if (props instanceof Promise || typeof props === \"string\") {\n            props = {\n                data: props\n            };\n        }\n        if (typeof props.data === \"string\") {\n            props = Object.assign({}, props, {\n                data: (0,_utils_load_file__WEBPACK_IMPORTED_MODULE_2__.loadImage)(props.data)\n            });\n        }\n        super(gl, Object.assign({}, props, {\n            target: 3553\n        }));\n        this.initialize(props);\n        Object.seal(this);\n    }\n} //# sourceMappingURL=texture-2d.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vY2xhc3Nlcy90ZXh0dXJlLTJkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0Q7QUFDdEI7QUFDZTtBQUNoQyxNQUFNRyxrQkFBa0JGLGdEQUFPQTtJQUM1QyxJQUFJLENBQUNHLE9BQU9DLFdBQVcsQ0FBQyxHQUFHO1FBQ3pCLE9BQU87SUFDVDtJQUVBLE9BQU9DLFlBQVlDLEVBQUUsRUFBRUMsSUFBSSxFQUFFO1FBQzNCLE9BQU9QLGdEQUFPQSxDQUFDSyxXQUFXLENBQUNDLElBQUlDO0lBQ2pDO0lBRUFDLFlBQVlGLEVBQUUsQ0FBRTtRQUNkLElBQUlHLFFBQVFDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHLENBQUM7UUFDakZYLG9FQUFrQkEsQ0FBQ087UUFFbkIsSUFBSUcsaUJBQWlCSSxXQUFXLE9BQU9KLFVBQVUsVUFBVTtZQUN6REEsUUFBUTtnQkFDTkssTUFBTUw7WUFDUjtRQUNGO1FBRUEsSUFBSSxPQUFPQSxNQUFNSyxJQUFJLEtBQUssVUFBVTtZQUNsQ0wsUUFBUU0sT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBR1AsT0FBTztnQkFDL0JLLE1BQU1iLDJEQUFTQSxDQUFDUSxNQUFNSyxJQUFJO1lBQzVCO1FBQ0Y7UUFFQSxLQUFLLENBQUNSLElBQUlTLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdQLE9BQU87WUFDakNRLFFBQVE7UUFDVjtRQUNBLElBQUksQ0FBQ0MsVUFBVSxDQUFDVDtRQUNoQk0sT0FBT0ksSUFBSSxDQUFDLElBQUk7SUFDbEI7QUFFRixFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3dlYmdsL2Rpc3QvZXNtL2NsYXNzZXMvdGV4dHVyZS0yZC5qcz83Yjk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydFdlYkdMQ29udGV4dCB9IGZyb20gJ0BsdW1hLmdsL2dsdG9vbHMnO1xuaW1wb3J0IFRleHR1cmUgZnJvbSAnLi90ZXh0dXJlJztcbmltcG9ydCB7IGxvYWRJbWFnZSB9IGZyb20gJy4uL3V0aWxzL2xvYWQtZmlsZSc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXh0dXJlMkQgZXh0ZW5kcyBUZXh0dXJlIHtcbiAgZ2V0IFtTeW1ib2wudG9TdHJpbmdUYWddKCkge1xuICAgIHJldHVybiAnVGV4dHVyZTJEJztcbiAgfVxuXG4gIHN0YXRpYyBpc1N1cHBvcnRlZChnbCwgb3B0cykge1xuICAgIHJldHVybiBUZXh0dXJlLmlzU3VwcG9ydGVkKGdsLCBvcHRzKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGdsKSB7XG4gICAgbGV0IHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICBhc3NlcnRXZWJHTENvbnRleHQoZ2wpO1xuXG4gICAgaWYgKHByb3BzIGluc3RhbmNlb2YgUHJvbWlzZSB8fCB0eXBlb2YgcHJvcHMgPT09ICdzdHJpbmcnKSB7XG4gICAgICBwcm9wcyA9IHtcbiAgICAgICAgZGF0YTogcHJvcHNcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5kYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgcHJvcHMgPSBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgICBkYXRhOiBsb2FkSW1hZ2UocHJvcHMuZGF0YSlcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHN1cGVyKGdsLCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywge1xuICAgICAgdGFyZ2V0OiAzNTUzXG4gICAgfSkpO1xuICAgIHRoaXMuaW5pdGlhbGl6ZShwcm9wcyk7XG4gICAgT2JqZWN0LnNlYWwodGhpcyk7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGV4dHVyZS0yZC5qcy5tYXAiXSwibmFtZXMiOlsiYXNzZXJ0V2ViR0xDb250ZXh0IiwiVGV4dHVyZSIsImxvYWRJbWFnZSIsIlRleHR1cmUyRCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwiaXNTdXBwb3J0ZWQiLCJnbCIsIm9wdHMiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiUHJvbWlzZSIsImRhdGEiLCJPYmplY3QiLCJhc3NpZ24iLCJ0YXJnZXQiLCJpbml0aWFsaXplIiwic2VhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-3d.js":
/*!********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/texture-3d.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Texture3D)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _texture__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./texture */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js\");\n/* harmony import */ var _texture_formats__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./texture-formats */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-formats.js\");\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n\n\n\n\nclass Texture3D extends _texture__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Texture3D\";\n    }\n    static isSupported(gl) {\n        return (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl);\n    }\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n        props = Object.assign({\n            depth: 1\n        }, props, {\n            target: 32879,\n            unpackFlipY: false\n        });\n        super(gl, props);\n        this.initialize(props);\n        Object.seal(this);\n    }\n    setImageData(_ref) {\n        let { level = 0, dataFormat = 6408, width, height, depth = 1, border = 0, format, type = 5121, offset = 0, data, parameters = {} } = _ref;\n        this._trackDeallocatedMemory(\"Texture\");\n        this.gl.bindTexture(this.target, this.handle);\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.withParameters)(this.gl, parameters, ()=>{\n            if (ArrayBuffer.isView(data)) {\n                this.gl.texImage3D(this.target, level, dataFormat, width, height, depth, border, format, type, data);\n            }\n            if (data instanceof _buffer__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n                this.gl.bindBuffer(35052, data.handle);\n                this.gl.texImage3D(this.target, level, dataFormat, width, height, depth, border, format, type, offset);\n            }\n        });\n        if (data && data.byteLength) {\n            this._trackAllocatedMemory(data.byteLength, \"Texture\");\n        } else {\n            const channels = _texture_formats__WEBPACK_IMPORTED_MODULE_3__.DATA_FORMAT_CHANNELS[this.dataFormat] || 4;\n            const channelSize = _texture_formats__WEBPACK_IMPORTED_MODULE_3__.TYPE_SIZES[this.type] || 1;\n            this._trackAllocatedMemory(this.width * this.height * this.depth * channels * channelSize, \"Texture\");\n        }\n        this.loaded = true;\n        return this;\n    }\n} //# sourceMappingURL=texture-3d.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vY2xhc3Nlcy90ZXh0dXJlLTNkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlGO0FBQ2pEO0FBQ3FDO0FBQ3ZDO0FBQ2YsTUFBTU8sa0JBQWtCSixnREFBT0E7SUFDNUMsSUFBSSxDQUFDSyxPQUFPQyxXQUFXLENBQUMsR0FBRztRQUN6QixPQUFPO0lBQ1Q7SUFFQSxPQUFPQyxZQUFZQyxFQUFFLEVBQUU7UUFDckIsT0FBT1gsMERBQVFBLENBQUNXO0lBQ2xCO0lBRUFDLFlBQVlELEVBQUUsQ0FBRTtRQUNkLElBQUlFLFFBQVFDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHLENBQUM7UUFDakZiLHFFQUFtQkEsQ0FBQ1U7UUFDcEJFLFFBQVFJLE9BQU9DLE1BQU0sQ0FBQztZQUNwQkMsT0FBTztRQUNULEdBQUdOLE9BQU87WUFDUk8sUUFBUTtZQUNSQyxhQUFhO1FBQ2Y7UUFDQSxLQUFLLENBQUNWLElBQUlFO1FBQ1YsSUFBSSxDQUFDUyxVQUFVLENBQUNUO1FBQ2hCSSxPQUFPTSxJQUFJLENBQUMsSUFBSTtJQUNsQjtJQUVBQyxhQUFhQyxJQUFJLEVBQUU7UUFDakIsSUFBSSxFQUNGQyxRQUFRLENBQUMsRUFDVEMsYUFBYSxJQUFJLEVBQ2pCQyxLQUFLLEVBQ0xDLE1BQU0sRUFDTlYsUUFBUSxDQUFDLEVBQ1RXLFNBQVMsQ0FBQyxFQUNWQyxNQUFNLEVBQ05DLE9BQU8sSUFBSSxFQUNYQyxTQUFTLENBQUMsRUFDVkMsSUFBSSxFQUNKQyxhQUFhLENBQUMsQ0FBQyxFQUNoQixHQUFHVjtRQUVKLElBQUksQ0FBQ1csdUJBQXVCLENBQUM7UUFFN0IsSUFBSSxDQUFDekIsRUFBRSxDQUFDMEIsV0FBVyxDQUFDLElBQUksQ0FBQ2pCLE1BQU0sRUFBRSxJQUFJLENBQUNrQixNQUFNO1FBQzVDcEMsZ0VBQWNBLENBQUMsSUFBSSxDQUFDUyxFQUFFLEVBQUV3QixZQUFZO1lBQ2xDLElBQUlJLFlBQVlDLE1BQU0sQ0FBQ04sT0FBTztnQkFDNUIsSUFBSSxDQUFDdkIsRUFBRSxDQUFDOEIsVUFBVSxDQUFDLElBQUksQ0FBQ3JCLE1BQU0sRUFBRU0sT0FBT0MsWUFBWUMsT0FBT0MsUUFBUVYsT0FBT1csUUFBUUMsUUFBUUMsTUFBTUU7WUFDakc7WUFFQSxJQUFJQSxnQkFBZ0I1QiwrQ0FBTUEsRUFBRTtnQkFDMUIsSUFBSSxDQUFDSyxFQUFFLENBQUMrQixVQUFVLENBQUMsT0FBT1IsS0FBS0ksTUFBTTtnQkFDckMsSUFBSSxDQUFDM0IsRUFBRSxDQUFDOEIsVUFBVSxDQUFDLElBQUksQ0FBQ3JCLE1BQU0sRUFBRU0sT0FBT0MsWUFBWUMsT0FBT0MsUUFBUVYsT0FBT1csUUFBUUMsUUFBUUMsTUFBTUM7WUFDakc7UUFDRjtRQUVBLElBQUlDLFFBQVFBLEtBQUtTLFVBQVUsRUFBRTtZQUMzQixJQUFJLENBQUNDLHFCQUFxQixDQUFDVixLQUFLUyxVQUFVLEVBQUU7UUFDOUMsT0FBTztZQUNMLE1BQU1FLFdBQVd6QyxrRUFBb0IsQ0FBQyxJQUFJLENBQUN1QixVQUFVLENBQUMsSUFBSTtZQUMxRCxNQUFNbUIsY0FBY3pDLHdEQUFVLENBQUMsSUFBSSxDQUFDMkIsSUFBSSxDQUFDLElBQUk7WUFFN0MsSUFBSSxDQUFDWSxxQkFBcUIsQ0FBQyxJQUFJLENBQUNoQixLQUFLLEdBQUcsSUFBSSxDQUFDQyxNQUFNLEdBQUcsSUFBSSxDQUFDVixLQUFLLEdBQUcwQixXQUFXQyxhQUFhO1FBQzdGO1FBRUEsSUFBSSxDQUFDQyxNQUFNLEdBQUc7UUFDZCxPQUFPLElBQUk7SUFDYjtBQUVGLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vY2xhc3Nlcy90ZXh0dXJlLTNkLmpzPzAwNWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNXZWJHTDIsIGFzc2VydFdlYkdMMkNvbnRleHQsIHdpdGhQYXJhbWV0ZXJzIH0gZnJvbSAnQGx1bWEuZ2wvZ2x0b29scyc7XG5pbXBvcnQgVGV4dHVyZSBmcm9tICcuL3RleHR1cmUnO1xuaW1wb3J0IHsgREFUQV9GT1JNQVRfQ0hBTk5FTFMsIFRZUEVfU0laRVMgfSBmcm9tICcuL3RleHR1cmUtZm9ybWF0cyc7XG5pbXBvcnQgQnVmZmVyIGZyb20gJy4vYnVmZmVyJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRleHR1cmUzRCBleHRlbmRzIFRleHR1cmUge1xuICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgcmV0dXJuICdUZXh0dXJlM0QnO1xuICB9XG5cbiAgc3RhdGljIGlzU3VwcG9ydGVkKGdsKSB7XG4gICAgcmV0dXJuIGlzV2ViR0wyKGdsKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKGdsKSB7XG4gICAgbGV0IHByb3BzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICBhc3NlcnRXZWJHTDJDb250ZXh0KGdsKTtcbiAgICBwcm9wcyA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgZGVwdGg6IDFcbiAgICB9LCBwcm9wcywge1xuICAgICAgdGFyZ2V0OiAzMjg3OSxcbiAgICAgIHVucGFja0ZsaXBZOiBmYWxzZVxuICAgIH0pO1xuICAgIHN1cGVyKGdsLCBwcm9wcyk7XG4gICAgdGhpcy5pbml0aWFsaXplKHByb3BzKTtcbiAgICBPYmplY3Quc2VhbCh0aGlzKTtcbiAgfVxuXG4gIHNldEltYWdlRGF0YShfcmVmKSB7XG4gICAgbGV0IHtcbiAgICAgIGxldmVsID0gMCxcbiAgICAgIGRhdGFGb3JtYXQgPSA2NDA4LFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICBkZXB0aCA9IDEsXG4gICAgICBib3JkZXIgPSAwLFxuICAgICAgZm9ybWF0LFxuICAgICAgdHlwZSA9IDUxMjEsXG4gICAgICBvZmZzZXQgPSAwLFxuICAgICAgZGF0YSxcbiAgICAgIHBhcmFtZXRlcnMgPSB7fVxuICAgIH0gPSBfcmVmO1xuXG4gICAgdGhpcy5fdHJhY2tEZWFsbG9jYXRlZE1lbW9yeSgnVGV4dHVyZScpO1xuXG4gICAgdGhpcy5nbC5iaW5kVGV4dHVyZSh0aGlzLnRhcmdldCwgdGhpcy5oYW5kbGUpO1xuICAgIHdpdGhQYXJhbWV0ZXJzKHRoaXMuZ2wsIHBhcmFtZXRlcnMsICgpID0+IHtcbiAgICAgIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoZGF0YSkpIHtcbiAgICAgICAgdGhpcy5nbC50ZXhJbWFnZTNEKHRoaXMudGFyZ2V0LCBsZXZlbCwgZGF0YUZvcm1hdCwgd2lkdGgsIGhlaWdodCwgZGVwdGgsIGJvcmRlciwgZm9ybWF0LCB0eXBlLCBkYXRhKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBCdWZmZXIpIHtcbiAgICAgICAgdGhpcy5nbC5iaW5kQnVmZmVyKDM1MDUyLCBkYXRhLmhhbmRsZSk7XG4gICAgICAgIHRoaXMuZ2wudGV4SW1hZ2UzRCh0aGlzLnRhcmdldCwgbGV2ZWwsIGRhdGFGb3JtYXQsIHdpZHRoLCBoZWlnaHQsIGRlcHRoLCBib3JkZXIsIGZvcm1hdCwgdHlwZSwgb2Zmc2V0KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmIChkYXRhICYmIGRhdGEuYnl0ZUxlbmd0aCkge1xuICAgICAgdGhpcy5fdHJhY2tBbGxvY2F0ZWRNZW1vcnkoZGF0YS5ieXRlTGVuZ3RoLCAnVGV4dHVyZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBjaGFubmVscyA9IERBVEFfRk9STUFUX0NIQU5ORUxTW3RoaXMuZGF0YUZvcm1hdF0gfHwgNDtcbiAgICAgIGNvbnN0IGNoYW5uZWxTaXplID0gVFlQRV9TSVpFU1t0aGlzLnR5cGVdIHx8IDE7XG5cbiAgICAgIHRoaXMuX3RyYWNrQWxsb2NhdGVkTWVtb3J5KHRoaXMud2lkdGggKiB0aGlzLmhlaWdodCAqIHRoaXMuZGVwdGggKiBjaGFubmVscyAqIGNoYW5uZWxTaXplLCAnVGV4dHVyZScpO1xuICAgIH1cblxuICAgIHRoaXMubG9hZGVkID0gdHJ1ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0dXJlLTNkLmpzLm1hcCJdLCJuYW1lcyI6WyJpc1dlYkdMMiIsImFzc2VydFdlYkdMMkNvbnRleHQiLCJ3aXRoUGFyYW1ldGVycyIsIlRleHR1cmUiLCJEQVRBX0ZPUk1BVF9DSEFOTkVMUyIsIlRZUEVfU0laRVMiLCJCdWZmZXIiLCJUZXh0dXJlM0QiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsImlzU3VwcG9ydGVkIiwiZ2wiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVwdGgiLCJ0YXJnZXQiLCJ1bnBhY2tGbGlwWSIsImluaXRpYWxpemUiLCJzZWFsIiwic2V0SW1hZ2VEYXRhIiwiX3JlZiIsImxldmVsIiwiZGF0YUZvcm1hdCIsIndpZHRoIiwiaGVpZ2h0IiwiYm9yZGVyIiwiZm9ybWF0IiwidHlwZSIsIm9mZnNldCIsImRhdGEiLCJwYXJhbWV0ZXJzIiwiX3RyYWNrRGVhbGxvY2F0ZWRNZW1vcnkiLCJiaW5kVGV4dHVyZSIsImhhbmRsZSIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwidGV4SW1hZ2UzRCIsImJpbmRCdWZmZXIiLCJieXRlTGVuZ3RoIiwiX3RyYWNrQWxsb2NhdGVkTWVtb3J5IiwiY2hhbm5lbHMiLCJjaGFubmVsU2l6ZSIsImxvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-3d.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-cube.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/texture-cube.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TextureCube)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _texture__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./texture */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js\");\n\n\nconst FACES = [\n    34069,\n    34070,\n    34071,\n    34072,\n    34073,\n    34074\n];\nclass TextureCube extends _texture__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"TextureCube\";\n    }\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGLContext)(gl);\n        super(gl, Object.assign({}, props, {\n            target: 34067\n        }));\n        this.initialize(props);\n        Object.seal(this);\n    }\n    initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const { mipmaps = true, parameters = {} } = props;\n        this.opts = props;\n        this.setCubeMapImageData(props).then(()=>{\n            this.loaded = true;\n            if (mipmaps) {\n                this.generateMipmap(props);\n            }\n            this.setParameters(parameters);\n        });\n        return this;\n    }\n    subImage(_ref) {\n        let { face, data, x = 0, y = 0, mipmapLevel = 0 } = _ref;\n        return this._subImage({\n            target: face,\n            data,\n            x,\n            y,\n            mipmapLevel\n        });\n    }\n    async setCubeMapImageData(_ref2) {\n        let { width, height, pixels, data, border = 0, format = 6408, type = 5121 } = _ref2;\n        const { gl } = this;\n        const imageDataMap = pixels || data;\n        const resolvedFaces = await Promise.all(FACES.map((face)=>{\n            const facePixels = imageDataMap[face];\n            return Promise.all(Array.isArray(facePixels) ? facePixels : [\n                facePixels\n            ]);\n        }));\n        this.bind();\n        FACES.forEach((face, index)=>{\n            if (resolvedFaces[index].length > 1 && this.opts.mipmaps !== false) {\n                _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"\".concat(this.id, \" has mipmap and multiple LODs.\"))();\n            }\n            resolvedFaces[index].forEach((image, lodLevel)=>{\n                if (width && height) {\n                    gl.texImage2D(face, lodLevel, format, width, height, border, format, type, image);\n                } else {\n                    gl.texImage2D(face, lodLevel, format, format, type, image);\n                }\n            });\n        });\n        this.unbind();\n    }\n    setImageDataForFace(options) {\n        const { face, width, height, pixels, data, border = 0, format = 6408, type = 5121 } = options;\n        const { gl } = this;\n        const imageData = pixels || data;\n        this.bind();\n        if (imageData instanceof Promise) {\n            imageData.then((resolvedImageData)=>this.setImageDataForFace(Object.assign({}, options, {\n                    face,\n                    data: resolvedImageData,\n                    pixels: resolvedImageData\n                })));\n        } else if (this.width || this.height) {\n            gl.texImage2D(face, 0, format, width, height, border, format, type, imageData);\n        } else {\n            gl.texImage2D(face, 0, format, format, type, imageData);\n        }\n        return this;\n    }\n}\nTextureCube.FACES = FACES; //# sourceMappingURL=texture-cube.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-cube.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-formats.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/texture-formats.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_FORMAT_CHANNELS: () => (/* binding */ DATA_FORMAT_CHANNELS),\n/* harmony export */   TEXTURE_FORMATS: () => (/* binding */ TEXTURE_FORMATS),\n/* harmony export */   TYPE_SIZES: () => (/* binding */ TYPE_SIZES),\n/* harmony export */   isFormatSupported: () => (/* binding */ isFormatSupported),\n/* harmony export */   isLinearFilteringSupported: () => (/* binding */ isLinearFilteringSupported)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n\nconst TEXTURE_FORMATS = {\n    [6407]: {\n        dataFormat: 6407,\n        types: [\n            5121,\n            33635\n        ]\n    },\n    [6408]: {\n        dataFormat: 6408,\n        types: [\n            5121,\n            32819,\n            32820\n        ]\n    },\n    [6406]: {\n        dataFormat: 6406,\n        types: [\n            5121\n        ]\n    },\n    [6409]: {\n        dataFormat: 6409,\n        types: [\n            5121\n        ]\n    },\n    [6410]: {\n        dataFormat: 6410,\n        types: [\n            5121\n        ]\n    },\n    [33326]: {\n        dataFormat: 6403,\n        types: [\n            5126\n        ],\n        gl2: true\n    },\n    [33328]: {\n        dataFormat: 33319,\n        types: [\n            5126\n        ],\n        gl2: true\n    },\n    [34837]: {\n        dataFormat: 6407,\n        types: [\n            5126\n        ],\n        gl2: true\n    },\n    [34836]: {\n        dataFormat: 6408,\n        types: [\n            5126\n        ],\n        gl2: true\n    }\n};\nconst DATA_FORMAT_CHANNELS = {\n    [6403]: 1,\n    [36244]: 1,\n    [33319]: 2,\n    [33320]: 2,\n    [6407]: 3,\n    [36248]: 3,\n    [6408]: 4,\n    [36249]: 4,\n    [6402]: 1,\n    [34041]: 1,\n    [6406]: 1,\n    [6409]: 1,\n    [6410]: 2\n};\nconst TYPE_SIZES = {\n    [5126]: 4,\n    [5125]: 4,\n    [5124]: 4,\n    [5123]: 2,\n    [5122]: 2,\n    [5131]: 2,\n    [5120]: 1,\n    [5121]: 1\n};\nfunction isFormatSupported(gl, format) {\n    const info = TEXTURE_FORMATS[format];\n    if (!info) {\n        return false;\n    }\n    if (info.gl1 === undefined && info.gl2 === undefined) {\n        return true;\n    }\n    const value = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) ? info.gl2 || info.gl1 : info.gl1;\n    return typeof value === \"string\" ? gl.getExtension(value) : value;\n}\nfunction isLinearFilteringSupported(gl, format) {\n    const info = TEXTURE_FORMATS[format];\n    switch(info && info.types[0]){\n        case 5126:\n            return gl.getExtension(\"OES_texture_float_linear\");\n        case 5131:\n            return gl.getExtension(\"OES_texture_half_float_linear\");\n        default:\n            return true;\n    }\n} //# sourceMappingURL=texture-formats.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vY2xhc3Nlcy90ZXh0dXJlLWZvcm1hdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTRDO0FBQ3JDLE1BQU1DLGtCQUFrQjtJQUM3QixDQUFDLEtBQUssRUFBRTtRQUNOQyxZQUFZO1FBQ1pDLE9BQU87WUFBQztZQUFNO1NBQU07SUFDdEI7SUFDQSxDQUFDLEtBQUssRUFBRTtRQUNORCxZQUFZO1FBQ1pDLE9BQU87WUFBQztZQUFNO1lBQU87U0FBTTtJQUM3QjtJQUNBLENBQUMsS0FBSyxFQUFFO1FBQ05ELFlBQVk7UUFDWkMsT0FBTztZQUFDO1NBQUs7SUFDZjtJQUNBLENBQUMsS0FBSyxFQUFFO1FBQ05ELFlBQVk7UUFDWkMsT0FBTztZQUFDO1NBQUs7SUFDZjtJQUNBLENBQUMsS0FBSyxFQUFFO1FBQ05ELFlBQVk7UUFDWkMsT0FBTztZQUFDO1NBQUs7SUFDZjtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BELFlBQVk7UUFDWkMsT0FBTztZQUFDO1NBQUs7UUFDYkMsS0FBSztJQUNQO0lBQ0EsQ0FBQyxNQUFNLEVBQUU7UUFDUEYsWUFBWTtRQUNaQyxPQUFPO1lBQUM7U0FBSztRQUNiQyxLQUFLO0lBQ1A7SUFDQSxDQUFDLE1BQU0sRUFBRTtRQUNQRixZQUFZO1FBQ1pDLE9BQU87WUFBQztTQUFLO1FBQ2JDLEtBQUs7SUFDUDtJQUNBLENBQUMsTUFBTSxFQUFFO1FBQ1BGLFlBQVk7UUFDWkMsT0FBTztZQUFDO1NBQUs7UUFDYkMsS0FBSztJQUNQO0FBQ0YsRUFBRTtBQUNLLE1BQU1DLHVCQUF1QjtJQUNsQyxDQUFDLEtBQUssRUFBRTtJQUNSLENBQUMsTUFBTSxFQUFFO0lBQ1QsQ0FBQyxNQUFNLEVBQUU7SUFDVCxDQUFDLE1BQU0sRUFBRTtJQUNULENBQUMsS0FBSyxFQUFFO0lBQ1IsQ0FBQyxNQUFNLEVBQUU7SUFDVCxDQUFDLEtBQUssRUFBRTtJQUNSLENBQUMsTUFBTSxFQUFFO0lBQ1QsQ0FBQyxLQUFLLEVBQUU7SUFDUixDQUFDLE1BQU0sRUFBRTtJQUNULENBQUMsS0FBSyxFQUFFO0lBQ1IsQ0FBQyxLQUFLLEVBQUU7SUFDUixDQUFDLEtBQUssRUFBRTtBQUNWLEVBQUU7QUFDSyxNQUFNQyxhQUFhO0lBQ3hCLENBQUMsS0FBSyxFQUFFO0lBQ1IsQ0FBQyxLQUFLLEVBQUU7SUFDUixDQUFDLEtBQUssRUFBRTtJQUNSLENBQUMsS0FBSyxFQUFFO0lBQ1IsQ0FBQyxLQUFLLEVBQUU7SUFDUixDQUFDLEtBQUssRUFBRTtJQUNSLENBQUMsS0FBSyxFQUFFO0lBQ1IsQ0FBQyxLQUFLLEVBQUU7QUFDVixFQUFFO0FBQ0ssU0FBU0Msa0JBQWtCQyxFQUFFLEVBQUVDLE1BQU07SUFDMUMsTUFBTUMsT0FBT1QsZUFBZSxDQUFDUSxPQUFPO0lBRXBDLElBQUksQ0FBQ0MsTUFBTTtRQUNULE9BQU87SUFDVDtJQUVBLElBQUlBLEtBQUtDLEdBQUcsS0FBS0MsYUFBYUYsS0FBS04sR0FBRyxLQUFLUSxXQUFXO1FBQ3BELE9BQU87SUFDVDtJQUVBLE1BQU1DLFFBQVFiLDBEQUFRQSxDQUFDUSxNQUFNRSxLQUFLTixHQUFHLElBQUlNLEtBQUtDLEdBQUcsR0FBR0QsS0FBS0MsR0FBRztJQUM1RCxPQUFPLE9BQU9FLFVBQVUsV0FBV0wsR0FBR00sWUFBWSxDQUFDRCxTQUFTQTtBQUM5RDtBQUNPLFNBQVNFLDJCQUEyQlAsRUFBRSxFQUFFQyxNQUFNO0lBQ25ELE1BQU1DLE9BQU9ULGVBQWUsQ0FBQ1EsT0FBTztJQUVwQyxPQUFRQyxRQUFRQSxLQUFLUCxLQUFLLENBQUMsRUFBRTtRQUMzQixLQUFLO1lBQ0gsT0FBT0ssR0FBR00sWUFBWSxDQUFDO1FBRXpCLEtBQUs7WUFDSCxPQUFPTixHQUFHTSxZQUFZLENBQUM7UUFFekI7WUFDRSxPQUFPO0lBQ1g7QUFDRixFQUNBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3dlYmdsL2Rpc3QvZXNtL2NsYXNzZXMvdGV4dHVyZS1mb3JtYXRzLmpzPzc2YjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNXZWJHTDIgfSBmcm9tICdAbHVtYS5nbC9nbHRvb2xzJztcbmV4cG9ydCBjb25zdCBURVhUVVJFX0ZPUk1BVFMgPSB7XG4gIFs2NDA3XToge1xuICAgIGRhdGFGb3JtYXQ6IDY0MDcsXG4gICAgdHlwZXM6IFs1MTIxLCAzMzYzNV1cbiAgfSxcbiAgWzY0MDhdOiB7XG4gICAgZGF0YUZvcm1hdDogNjQwOCxcbiAgICB0eXBlczogWzUxMjEsIDMyODE5LCAzMjgyMF1cbiAgfSxcbiAgWzY0MDZdOiB7XG4gICAgZGF0YUZvcm1hdDogNjQwNixcbiAgICB0eXBlczogWzUxMjFdXG4gIH0sXG4gIFs2NDA5XToge1xuICAgIGRhdGFGb3JtYXQ6IDY0MDksXG4gICAgdHlwZXM6IFs1MTIxXVxuICB9LFxuICBbNjQxMF06IHtcbiAgICBkYXRhRm9ybWF0OiA2NDEwLFxuICAgIHR5cGVzOiBbNTEyMV1cbiAgfSxcbiAgWzMzMzI2XToge1xuICAgIGRhdGFGb3JtYXQ6IDY0MDMsXG4gICAgdHlwZXM6IFs1MTI2XSxcbiAgICBnbDI6IHRydWVcbiAgfSxcbiAgWzMzMzI4XToge1xuICAgIGRhdGFGb3JtYXQ6IDMzMzE5LFxuICAgIHR5cGVzOiBbNTEyNl0sXG4gICAgZ2wyOiB0cnVlXG4gIH0sXG4gIFszNDgzN106IHtcbiAgICBkYXRhRm9ybWF0OiA2NDA3LFxuICAgIHR5cGVzOiBbNTEyNl0sXG4gICAgZ2wyOiB0cnVlXG4gIH0sXG4gIFszNDgzNl06IHtcbiAgICBkYXRhRm9ybWF0OiA2NDA4LFxuICAgIHR5cGVzOiBbNTEyNl0sXG4gICAgZ2wyOiB0cnVlXG4gIH1cbn07XG5leHBvcnQgY29uc3QgREFUQV9GT1JNQVRfQ0hBTk5FTFMgPSB7XG4gIFs2NDAzXTogMSxcbiAgWzM2MjQ0XTogMSxcbiAgWzMzMzE5XTogMixcbiAgWzMzMzIwXTogMixcbiAgWzY0MDddOiAzLFxuICBbMzYyNDhdOiAzLFxuICBbNjQwOF06IDQsXG4gIFszNjI0OV06IDQsXG4gIFs2NDAyXTogMSxcbiAgWzM0MDQxXTogMSxcbiAgWzY0MDZdOiAxLFxuICBbNjQwOV06IDEsXG4gIFs2NDEwXTogMlxufTtcbmV4cG9ydCBjb25zdCBUWVBFX1NJWkVTID0ge1xuICBbNTEyNl06IDQsXG4gIFs1MTI1XTogNCxcbiAgWzUxMjRdOiA0LFxuICBbNTEyM106IDIsXG4gIFs1MTIyXTogMixcbiAgWzUxMzFdOiAyLFxuICBbNTEyMF06IDEsXG4gIFs1MTIxXTogMVxufTtcbmV4cG9ydCBmdW5jdGlvbiBpc0Zvcm1hdFN1cHBvcnRlZChnbCwgZm9ybWF0KSB7XG4gIGNvbnN0IGluZm8gPSBURVhUVVJFX0ZPUk1BVFNbZm9ybWF0XTtcblxuICBpZiAoIWluZm8pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoaW5mby5nbDEgPT09IHVuZGVmaW5lZCAmJiBpbmZvLmdsMiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBjb25zdCB2YWx1ZSA9IGlzV2ViR0wyKGdsKSA/IGluZm8uZ2wyIHx8IGluZm8uZ2wxIDogaW5mby5nbDE7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnID8gZ2wuZ2V0RXh0ZW5zaW9uKHZhbHVlKSA6IHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTGluZWFyRmlsdGVyaW5nU3VwcG9ydGVkKGdsLCBmb3JtYXQpIHtcbiAgY29uc3QgaW5mbyA9IFRFWFRVUkVfRk9STUFUU1tmb3JtYXRdO1xuXG4gIHN3aXRjaCAoaW5mbyAmJiBpbmZvLnR5cGVzWzBdKSB7XG4gICAgY2FzZSA1MTI2OlxuICAgICAgcmV0dXJuIGdsLmdldEV4dGVuc2lvbignT0VTX3RleHR1cmVfZmxvYXRfbGluZWFyJyk7XG5cbiAgICBjYXNlIDUxMzE6XG4gICAgICByZXR1cm4gZ2wuZ2V0RXh0ZW5zaW9uKCdPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0X2xpbmVhcicpO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB0cnVlO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0dXJlLWZvcm1hdHMuanMubWFwIl0sIm5hbWVzIjpbImlzV2ViR0wyIiwiVEVYVFVSRV9GT1JNQVRTIiwiZGF0YUZvcm1hdCIsInR5cGVzIiwiZ2wyIiwiREFUQV9GT1JNQVRfQ0hBTk5FTFMiLCJUWVBFX1NJWkVTIiwiaXNGb3JtYXRTdXBwb3J0ZWQiLCJnbCIsImZvcm1hdCIsImluZm8iLCJnbDEiLCJ1bmRlZmluZWQiLCJ2YWx1ZSIsImdldEV4dGVuc2lvbiIsImlzTGluZWFyRmlsdGVyaW5nU3VwcG9ydGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-formats.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Texture)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./buffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _texture_formats__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./texture-formats */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-formats.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n\n\n\n\n\n\nconst NPOT_MIN_FILTERS = [\n    9729,\n    9728\n];\nconst WebGLBuffer = globalThis.WebGLBuffer || function WebGLBuffer() {};\nclass Texture extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"Texture\";\n    }\n    static isSupported(gl) {\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const { format, linearFiltering } = opts;\n        let supported = true;\n        if (format) {\n            supported = supported && (0,_texture_formats__WEBPACK_IMPORTED_MODULE_2__.isFormatSupported)(gl, format);\n            supported = supported && (!linearFiltering || (0,_texture_formats__WEBPACK_IMPORTED_MODULE_2__.isLinearFilteringSupported)(gl, format));\n        }\n        return supported;\n    }\n    constructor(gl, props){\n        const { id = (0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.uid)(\"texture\"), handle, target } = props;\n        super(gl, {\n            id,\n            handle\n        });\n        this.target = target;\n        this.textureUnit = undefined;\n        this.loaded = false;\n        this.width = undefined;\n        this.height = undefined;\n        this.depth = undefined;\n        this.format = undefined;\n        this.type = undefined;\n        this.dataFormat = undefined;\n        this.border = undefined;\n        this.textureUnit = undefined;\n        this.mipmaps = undefined;\n    }\n    toString() {\n        return \"Texture(\".concat(this.id, \",\").concat(this.width, \"x\").concat(this.height, \")\");\n    }\n    initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let data = props.data;\n        if (data instanceof Promise) {\n            data.then((resolvedImageData)=>this.initialize(Object.assign({}, props, {\n                    pixels: resolvedImageData,\n                    data: resolvedImageData\n                })));\n            return this;\n        }\n        const isVideo = typeof HTMLVideoElement !== \"undefined\" && data instanceof HTMLVideoElement;\n        if (isVideo && data.readyState < HTMLVideoElement.HAVE_METADATA) {\n            this._video = null;\n            data.addEventListener(\"loadeddata\", ()=>this.initialize(props));\n            return this;\n        }\n        const { pixels = null, format = 6408, border = 0, recreate = false, parameters = {}, pixelStore = {}, textureUnit = undefined } = props;\n        if (!data) {\n            data = pixels;\n        }\n        let { width, height, dataFormat, type, compressed = false, mipmaps = true } = props;\n        const { depth = 0 } = props;\n        ({ width, height, compressed, dataFormat, type } = this._deduceParameters({\n            format,\n            type,\n            dataFormat,\n            compressed,\n            data,\n            width,\n            height\n        }));\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.format = format;\n        this.type = type;\n        this.dataFormat = dataFormat;\n        this.border = border;\n        this.textureUnit = textureUnit;\n        if (Number.isFinite(this.textureUnit)) {\n            this.gl.activeTexture(33984 + this.textureUnit);\n            this.gl.bindTexture(this.target, this.handle);\n        }\n        if (mipmaps && this._isNPOT()) {\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"texture: \".concat(this, \" is Non-Power-Of-Two, disabling mipmaping\"))();\n            mipmaps = false;\n            this._updateForNPOT(parameters);\n        }\n        this.mipmaps = mipmaps;\n        this.setImageData({\n            data,\n            width,\n            height,\n            depth,\n            format,\n            type,\n            dataFormat,\n            border,\n            mipmaps,\n            parameters: pixelStore,\n            compressed\n        });\n        if (mipmaps) {\n            this.generateMipmap();\n        }\n        this.setParameters(parameters);\n        if (recreate) {\n            this.data = data;\n        }\n        if (isVideo) {\n            this._video = {\n                video: data,\n                parameters,\n                lastTime: data.readyState >= HTMLVideoElement.HAVE_CURRENT_DATA ? data.currentTime : -1\n            };\n        }\n        return this;\n    }\n    update() {\n        if (this._video) {\n            const { video, parameters, lastTime } = this._video;\n            if (lastTime === video.currentTime || video.readyState < HTMLVideoElement.HAVE_CURRENT_DATA) {\n                return;\n            }\n            this.setSubImageData({\n                data: video,\n                parameters\n            });\n            if (this.mipmaps) {\n                this.generateMipmap();\n            }\n            this._video.lastTime = video.currentTime;\n        }\n    }\n    resize(_ref) {\n        let { height, width, mipmaps = false } = _ref;\n        if (width !== this.width || height !== this.height) {\n            return this.initialize({\n                width,\n                height,\n                format: this.format,\n                type: this.type,\n                dataFormat: this.dataFormat,\n                border: this.border,\n                mipmaps\n            });\n        }\n        return this;\n    }\n    generateMipmap() {\n        let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (this._isNPOT()) {\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"texture: \".concat(this, \" is Non-Power-Of-Two, disabling mipmaping\"))();\n            return this;\n        }\n        this.mipmaps = true;\n        this.gl.bindTexture(this.target, this.handle);\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.withParameters)(this.gl, params, ()=>{\n            this.gl.generateMipmap(this.target);\n        });\n        this.gl.bindTexture(this.target, null);\n        return this;\n    }\n    setImageData(options) {\n        this._trackDeallocatedMemory(\"Texture\");\n        const { target = this.target, pixels = null, level = 0, format = this.format, border = this.border, offset = 0, parameters = {} } = options;\n        let { data = null, type = this.type, width = this.width, height = this.height, dataFormat = this.dataFormat, compressed = false } = options;\n        if (!data) {\n            data = pixels;\n        }\n        ({ type, dataFormat, compressed, width, height } = this._deduceParameters({\n            format,\n            type,\n            dataFormat,\n            compressed,\n            data,\n            width,\n            height\n        }));\n        const { gl } = this;\n        gl.bindTexture(this.target, this.handle);\n        let dataType = null;\n        ({ data, dataType } = this._getDataType({\n            data,\n            compressed\n        }));\n        let gl2;\n        let compressedTextureSize = 0;\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.withParameters)(this.gl, parameters, ()=>{\n            switch(dataType){\n                case \"null\":\n                    gl.texImage2D(target, level, format, width, height, border, dataFormat, type, data);\n                    break;\n                case \"typed-array\":\n                    gl.texImage2D(target, level, format, width, height, border, dataFormat, type, data, offset);\n                    break;\n                case \"buffer\":\n                    gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n                    gl2.bindBuffer(35052, data.handle || data);\n                    gl2.texImage2D(target, level, format, width, height, border, dataFormat, type, offset);\n                    gl2.bindBuffer(35052, null);\n                    break;\n                case \"browser-object\":\n                    if ((0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl)) {\n                        gl.texImage2D(target, level, format, width, height, border, dataFormat, type, data);\n                    } else {\n                        gl.texImage2D(target, level, format, dataFormat, type, data);\n                    }\n                    break;\n                case \"compressed\":\n                    for (const [levelIndex, levelData] of data.entries()){\n                        gl.compressedTexImage2D(target, levelIndex, levelData.format, levelData.width, levelData.height, border, levelData.data);\n                        compressedTextureSize += levelData.levelSize;\n                    }\n                    break;\n                default:\n                    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(false, \"Unknown image data type\");\n            }\n        });\n        if (dataType === \"compressed\") {\n            this._trackAllocatedMemory(compressedTextureSize, \"Texture\");\n        } else if (data && data.byteLength) {\n            this._trackAllocatedMemory(data.byteLength, \"Texture\");\n        } else {\n            const channels = _texture_formats__WEBPACK_IMPORTED_MODULE_2__.DATA_FORMAT_CHANNELS[this.dataFormat] || 4;\n            const channelSize = _texture_formats__WEBPACK_IMPORTED_MODULE_2__.TYPE_SIZES[this.type] || 1;\n            this._trackAllocatedMemory(this.width * this.height * channels * channelSize, \"Texture\");\n        }\n        this.loaded = true;\n        return this;\n    }\n    setSubImageData(_ref2) {\n        let { target = this.target, pixels = null, data = null, x = 0, y = 0, width = this.width, height = this.height, level = 0, format = this.format, type = this.type, dataFormat = this.dataFormat, compressed = false, offset = 0, border = this.border, parameters = {} } = _ref2;\n        ({ type, dataFormat, compressed, width, height } = this._deduceParameters({\n            format,\n            type,\n            dataFormat,\n            compressed,\n            data,\n            width,\n            height\n        }));\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(this.depth === 0, \"texSubImage not supported for 3D textures\");\n        if (!data) {\n            data = pixels;\n        }\n        if (data && data.data) {\n            const ndarray = data;\n            data = ndarray.data;\n            width = ndarray.shape[0];\n            height = ndarray.shape[1];\n        }\n        if (data instanceof _buffer__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n            data = data.handle;\n        }\n        this.gl.bindTexture(this.target, this.handle);\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.withParameters)(this.gl, parameters, ()=>{\n            if (compressed) {\n                this.gl.compressedTexSubImage2D(target, level, x, y, width, height, format, data);\n            } else if (data === null) {\n                this.gl.texSubImage2D(target, level, x, y, width, height, dataFormat, type, null);\n            } else if (ArrayBuffer.isView(data)) {\n                this.gl.texSubImage2D(target, level, x, y, width, height, dataFormat, type, data, offset);\n            } else if (data instanceof WebGLBuffer) {\n                const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(this.gl);\n                gl2.bindBuffer(35052, data);\n                gl2.texSubImage2D(target, level, x, y, width, height, dataFormat, type, offset);\n                gl2.bindBuffer(35052, null);\n            } else if ((0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(this.gl)) {\n                const gl2 = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(this.gl);\n                gl2.texSubImage2D(target, level, x, y, width, height, dataFormat, type, data);\n            } else {\n                this.gl.texSubImage2D(target, level, x, y, dataFormat, type, data);\n            }\n        });\n        this.gl.bindTexture(this.target, null);\n    }\n    copyFramebuffer() {\n        let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.error(\"Texture.copyFramebuffer({...}) is no logner supported, use copyToTexture(source, target, opts})\")();\n        return null;\n    }\n    getActiveUnit() {\n        return this.gl.getParameter(34016) - 33984;\n    }\n    bind() {\n        let textureUnit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.textureUnit;\n        const { gl } = this;\n        if (textureUnit !== undefined) {\n            this.textureUnit = textureUnit;\n            gl.activeTexture(33984 + textureUnit);\n        }\n        gl.bindTexture(this.target, this.handle);\n        return textureUnit;\n    }\n    unbind() {\n        let textureUnit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.textureUnit;\n        const { gl } = this;\n        if (textureUnit !== undefined) {\n            this.textureUnit = textureUnit;\n            gl.activeTexture(33984 + textureUnit);\n        }\n        gl.bindTexture(this.target, null);\n        return textureUnit;\n    }\n    _getDataType(_ref3) {\n        let { data, compressed = false } = _ref3;\n        if (compressed) {\n            return {\n                data,\n                dataType: \"compressed\"\n            };\n        }\n        if (data === null) {\n            return {\n                data,\n                dataType: \"null\"\n            };\n        }\n        if (ArrayBuffer.isView(data)) {\n            return {\n                data,\n                dataType: \"typed-array\"\n            };\n        }\n        if (data instanceof _buffer__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n            return {\n                data: data.handle,\n                dataType: \"buffer\"\n            };\n        }\n        if (data instanceof WebGLBuffer) {\n            return {\n                data,\n                dataType: \"buffer\"\n            };\n        }\n        return {\n            data,\n            dataType: \"browser-object\"\n        };\n    }\n    _deduceParameters(opts) {\n        const { format, data } = opts;\n        let { width, height, dataFormat, type, compressed } = opts;\n        const textureFormat = _texture_formats__WEBPACK_IMPORTED_MODULE_2__.TEXTURE_FORMATS[format];\n        dataFormat = dataFormat || textureFormat && textureFormat.dataFormat;\n        type = type || textureFormat && textureFormat.types[0];\n        compressed = compressed || textureFormat && textureFormat.compressed;\n        ({ width, height } = this._deduceImageSize(data, width, height));\n        return {\n            dataFormat,\n            type,\n            compressed,\n            width,\n            height,\n            format,\n            data\n        };\n    }\n    _deduceImageSize(data, width, height) {\n        let size;\n        if (typeof ImageData !== \"undefined\" && data instanceof ImageData) {\n            size = {\n                width: data.width,\n                height: data.height\n            };\n        } else if (typeof HTMLImageElement !== \"undefined\" && data instanceof HTMLImageElement) {\n            size = {\n                width: data.naturalWidth,\n                height: data.naturalHeight\n            };\n        } else if (typeof HTMLCanvasElement !== \"undefined\" && data instanceof HTMLCanvasElement) {\n            size = {\n                width: data.width,\n                height: data.height\n            };\n        } else if (typeof ImageBitmap !== \"undefined\" && data instanceof ImageBitmap) {\n            size = {\n                width: data.width,\n                height: data.height\n            };\n        } else if (typeof HTMLVideoElement !== \"undefined\" && data instanceof HTMLVideoElement) {\n            size = {\n                width: data.videoWidth,\n                height: data.videoHeight\n            };\n        } else if (!data) {\n            size = {\n                width: width >= 0 ? width : 1,\n                height: height >= 0 ? height : 1\n            };\n        } else {\n            size = {\n                width,\n                height\n            };\n        }\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(size, \"Could not deduced texture size\");\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(width === undefined || size.width === width, \"Deduced texture width does not match supplied width\");\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(height === undefined || size.height === height, \"Deduced texture height does not match supplied height\");\n        return size;\n    }\n    _createHandle() {\n        return this.gl.createTexture();\n    }\n    _deleteHandle() {\n        this.gl.deleteTexture(this.handle);\n        this._trackDeallocatedMemory(\"Texture\");\n    }\n    _getParameter(pname) {\n        switch(pname){\n            case 4096:\n                return this.width;\n            case 4097:\n                return this.height;\n            default:\n                this.gl.bindTexture(this.target, this.handle);\n                const value = this.gl.getTexParameter(this.target, pname);\n                this.gl.bindTexture(this.target, null);\n                return value;\n        }\n    }\n    _setParameter(pname, param) {\n        this.gl.bindTexture(this.target, this.handle);\n        param = this._getNPOTParam(pname, param);\n        switch(pname){\n            case 33082:\n            case 33083:\n                this.gl.texParameterf(this.handle, pname, param);\n                break;\n            case 4096:\n            case 4097:\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(false);\n                break;\n            default:\n                this.gl.texParameteri(this.target, pname, param);\n                break;\n        }\n        this.gl.bindTexture(this.target, null);\n        return this;\n    }\n    _isNPOT() {\n        if ((0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(this.gl)) {\n            return false;\n        }\n        if (!this.width || !this.height) {\n            return false;\n        }\n        return !(0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.isPowerOfTwo)(this.width) || !(0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.isPowerOfTwo)(this.height);\n    }\n    _updateForNPOT(parameters) {\n        if (parameters[this.gl.TEXTURE_MIN_FILTER] === undefined) {\n            parameters[this.gl.TEXTURE_MIN_FILTER] = this.gl.LINEAR;\n        }\n        if (parameters[this.gl.TEXTURE_WRAP_S] === undefined) {\n            parameters[this.gl.TEXTURE_WRAP_S] = this.gl.CLAMP_TO_EDGE;\n        }\n        if (parameters[this.gl.TEXTURE_WRAP_T] === undefined) {\n            parameters[this.gl.TEXTURE_WRAP_T] = this.gl.CLAMP_TO_EDGE;\n        }\n    }\n    _getNPOTParam(pname, param) {\n        if (this._isNPOT()) {\n            switch(pname){\n                case 10241:\n                    if (NPOT_MIN_FILTERS.indexOf(param) === -1) {\n                        param = 9729;\n                    }\n                    break;\n                case 10242:\n                case 10243:\n                    if (param !== 33071) {\n                        param = 33071;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return param;\n    }\n} //# sourceMappingURL=texture.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/transform-feedback.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/transform-feedback.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransformFeedback)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\");\n\n\n\n\nclass TransformFeedback extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"TransformFeedback\";\n    }\n    static isSupported(gl) {\n        return (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl);\n    }\n    constructor(gl){\n        let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.assertWebGL2Context)(gl);\n        super(gl, props);\n        this.initialize(props);\n        this.stubRemovedMethods(\"TransformFeedback\", \"v6.0\", [\n            \"pause\",\n            \"resume\"\n        ]);\n        Object.seal(this);\n    }\n    initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.buffers = {};\n        this.unused = {};\n        this.configuration = null;\n        this.bindOnUse = true;\n        if (!(0,_utils_utils__WEBPACK_IMPORTED_MODULE_2__.isObjectEmpty)(this.buffers)) {\n            this.bind(()=>this._unbindBuffers());\n        }\n        this.setProps(props);\n        return this;\n    }\n    setProps(props) {\n        if (\"program\" in props) {\n            this.configuration = props.program && props.program.configuration;\n        }\n        if (\"configuration\" in props) {\n            this.configuration = props.configuration;\n        }\n        if (\"bindOnUse\" in props) {\n            props = props.bindOnUse;\n        }\n        if (\"buffers\" in props) {\n            this.setBuffers(props.buffers);\n        }\n    }\n    setBuffers() {\n        let buffers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.bind(()=>{\n            for(const bufferName in buffers){\n                this.setBuffer(bufferName, buffers[bufferName]);\n            }\n        });\n        return this;\n    }\n    setBuffer(locationOrName, bufferOrParams) {\n        const location = this._getVaryingIndex(locationOrName);\n        const { buffer, byteSize, byteOffset } = this._getBufferParams(bufferOrParams);\n        if (location < 0) {\n            this.unused[locationOrName] = buffer;\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"\".concat(this.id, \" unused varying buffer \").concat(locationOrName))();\n            return this;\n        }\n        this.buffers[location] = bufferOrParams;\n        if (!this.bindOnUse) {\n            this._bindBuffer(location, buffer, byteOffset, byteSize);\n        }\n        return this;\n    }\n    begin() {\n        let primitiveMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        this.gl.bindTransformFeedback(36386, this.handle);\n        this._bindBuffers();\n        this.gl.beginTransformFeedback(primitiveMode);\n        return this;\n    }\n    end() {\n        this.gl.endTransformFeedback();\n        this._unbindBuffers();\n        this.gl.bindTransformFeedback(36386, null);\n        return this;\n    }\n    _getBufferParams(bufferOrParams) {\n        let byteOffset;\n        let byteSize;\n        let buffer;\n        if (bufferOrParams instanceof _buffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"] === false) {\n            buffer = bufferOrParams.buffer;\n            byteSize = bufferOrParams.byteSize;\n            byteOffset = bufferOrParams.byteOffset;\n        } else {\n            buffer = bufferOrParams;\n        }\n        if (byteOffset !== undefined || byteSize !== undefined) {\n            byteOffset = byteOffset || 0;\n            byteSize = byteSize || buffer.byteLength - byteOffset;\n        }\n        return {\n            buffer,\n            byteOffset,\n            byteSize\n        };\n    }\n    _getVaryingInfo(locationOrName) {\n        return this.configuration && this.configuration.getVaryingInfo(locationOrName);\n    }\n    _getVaryingIndex(locationOrName) {\n        if (this.configuration) {\n            return this.configuration.getVaryingInfo(locationOrName).location;\n        }\n        const location = Number(locationOrName);\n        return Number.isFinite(location) ? location : -1;\n    }\n    _bindBuffers() {\n        if (this.bindOnUse) {\n            for(const bufferIndex in this.buffers){\n                const { buffer, byteSize, byteOffset } = this._getBufferParams(this.buffers[bufferIndex]);\n                this._bindBuffer(bufferIndex, buffer, byteOffset, byteSize);\n            }\n        }\n    }\n    _unbindBuffers() {\n        if (this.bindOnUse) {\n            for(const bufferIndex in this.buffers){\n                this._bindBuffer(bufferIndex, null);\n            }\n        }\n    }\n    _bindBuffer(index, buffer) {\n        let byteOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        let byteSize = arguments.length > 3 ? arguments[3] : undefined;\n        const handle = buffer && buffer.handle;\n        if (!handle || byteSize === undefined) {\n            this.gl.bindBufferBase(35982, index, handle);\n        } else {\n            this.gl.bindBufferRange(35982, index, handle, byteOffset, byteSize);\n        }\n        return this;\n    }\n    _createHandle() {\n        return this.gl.createTransformFeedback();\n    }\n    _deleteHandle() {\n        this.gl.deleteTransformFeedback(this.handle);\n    }\n    _bindHandle(handle) {\n        this.gl.bindTransformFeedback(36386, this.handle);\n    }\n} //# sourceMappingURL=transform-feedback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/transform-feedback.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/uniforms.js":
/*!******************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/uniforms.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkUniformValues: () => (/* binding */ checkUniformValues),\n/* harmony export */   copyUniform: () => (/* binding */ copyUniform),\n/* harmony export */   getUniformSetter: () => (/* binding */ getUniformSetter),\n/* harmony export */   parseUniformName: () => (/* binding */ parseUniformName)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _framebuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./framebuffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _renderbuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./renderbuffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer.js\");\n/* harmony import */ var _texture__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./texture */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\n\n\n\nconst UNIFORM_SETTERS = {\n    [5126]: getArraySetter.bind(null, \"uniform1fv\", toFloatArray, 1, setVectorUniform),\n    [35664]: getArraySetter.bind(null, \"uniform2fv\", toFloatArray, 2, setVectorUniform),\n    [35665]: getArraySetter.bind(null, \"uniform3fv\", toFloatArray, 3, setVectorUniform),\n    [35666]: getArraySetter.bind(null, \"uniform4fv\", toFloatArray, 4, setVectorUniform),\n    [5124]: getArraySetter.bind(null, \"uniform1iv\", toIntArray, 1, setVectorUniform),\n    [35667]: getArraySetter.bind(null, \"uniform2iv\", toIntArray, 2, setVectorUniform),\n    [35668]: getArraySetter.bind(null, \"uniform3iv\", toIntArray, 3, setVectorUniform),\n    [35669]: getArraySetter.bind(null, \"uniform4iv\", toIntArray, 4, setVectorUniform),\n    [35670]: getArraySetter.bind(null, \"uniform1iv\", toIntArray, 1, setVectorUniform),\n    [35671]: getArraySetter.bind(null, \"uniform2iv\", toIntArray, 2, setVectorUniform),\n    [35672]: getArraySetter.bind(null, \"uniform3iv\", toIntArray, 3, setVectorUniform),\n    [35673]: getArraySetter.bind(null, \"uniform4iv\", toIntArray, 4, setVectorUniform),\n    [35674]: getArraySetter.bind(null, \"uniformMatrix2fv\", toFloatArray, 4, setMatrixUniform),\n    [35675]: getArraySetter.bind(null, \"uniformMatrix3fv\", toFloatArray, 9, setMatrixUniform),\n    [35676]: getArraySetter.bind(null, \"uniformMatrix4fv\", toFloatArray, 16, setMatrixUniform),\n    [35678]: getSamplerSetter,\n    [35680]: getSamplerSetter,\n    [5125]: getArraySetter.bind(null, \"uniform1uiv\", toUIntArray, 1, setVectorUniform),\n    [36294]: getArraySetter.bind(null, \"uniform2uiv\", toUIntArray, 2, setVectorUniform),\n    [36295]: getArraySetter.bind(null, \"uniform3uiv\", toUIntArray, 3, setVectorUniform),\n    [36296]: getArraySetter.bind(null, \"uniform4uiv\", toUIntArray, 4, setVectorUniform),\n    [35685]: getArraySetter.bind(null, \"uniformMatrix2x3fv\", toFloatArray, 6, setMatrixUniform),\n    [35686]: getArraySetter.bind(null, \"uniformMatrix2x4fv\", toFloatArray, 8, setMatrixUniform),\n    [35687]: getArraySetter.bind(null, \"uniformMatrix3x2fv\", toFloatArray, 6, setMatrixUniform),\n    [35688]: getArraySetter.bind(null, \"uniformMatrix3x4fv\", toFloatArray, 12, setMatrixUniform),\n    [35689]: getArraySetter.bind(null, \"uniformMatrix4x2fv\", toFloatArray, 8, setMatrixUniform),\n    [35690]: getArraySetter.bind(null, \"uniformMatrix4x3fv\", toFloatArray, 12, setMatrixUniform),\n    [35678]: getSamplerSetter,\n    [35680]: getSamplerSetter,\n    [35679]: getSamplerSetter,\n    [35682]: getSamplerSetter,\n    [36289]: getSamplerSetter,\n    [36292]: getSamplerSetter,\n    [36293]: getSamplerSetter,\n    [36298]: getSamplerSetter,\n    [36299]: getSamplerSetter,\n    [36300]: getSamplerSetter,\n    [36303]: getSamplerSetter,\n    [36306]: getSamplerSetter,\n    [36307]: getSamplerSetter,\n    [36308]: getSamplerSetter,\n    [36311]: getSamplerSetter\n};\nconst FLOAT_ARRAY = {};\nconst INT_ARRAY = {};\nconst UINT_ARRAY = {};\nconst array1 = [\n    0\n];\nfunction toTypedArray(value, uniformLength, Type, cache) {\n    if (uniformLength === 1 && typeof value === \"boolean\") {\n        value = value ? 1 : 0;\n    }\n    if (Number.isFinite(value)) {\n        array1[0] = value;\n        value = array1;\n    }\n    const length = value.length;\n    if (length % uniformLength) {\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.warn(\"Uniform size should be multiples of \".concat(uniformLength), value)();\n    }\n    if (value instanceof Type) {\n        return value;\n    }\n    let result = cache[length];\n    if (!result) {\n        result = new Type(length);\n        cache[length] = result;\n    }\n    for(let i = 0; i < length; i++){\n        result[i] = value[i];\n    }\n    return result;\n}\nfunction toFloatArray(value, uniformLength) {\n    return toTypedArray(value, uniformLength, Float32Array, FLOAT_ARRAY);\n}\nfunction toIntArray(value, uniformLength) {\n    return toTypedArray(value, uniformLength, Int32Array, INT_ARRAY);\n}\nfunction toUIntArray(value, uniformLength) {\n    return toTypedArray(value, uniformLength, Uint32Array, UINT_ARRAY);\n}\nfunction getUniformSetter(gl, location, info) {\n    const setter = UNIFORM_SETTERS[info.type];\n    if (!setter) {\n        throw new Error(\"Unknown GLSL uniform type \".concat(info.type));\n    }\n    return setter().bind(null, gl, location);\n}\nfunction parseUniformName(name) {\n    if (name[name.length - 1] !== \"]\") {\n        return {\n            name,\n            length: 1,\n            isArray: false\n        };\n    }\n    const UNIFORM_NAME_REGEXP = /([^[]*)(\\[[0-9]+\\])?/;\n    const matches = name.match(UNIFORM_NAME_REGEXP);\n    if (!matches || matches.length < 2) {\n        throw new Error(\"Failed to parse GLSL uniform name \".concat(name));\n    }\n    return {\n        name: matches[1],\n        length: matches[2] || 1,\n        isArray: Boolean(matches[2])\n    };\n}\nfunction checkUniformValues(uniforms, source, uniformMap) {\n    for(const uniformName in uniforms){\n        const value = uniforms[uniformName];\n        const shouldCheck = !uniformMap || Boolean(uniformMap[uniformName]);\n        if (shouldCheck && !checkUniformValue(value)) {\n            source = source ? \"\".concat(source, \" \") : \"\";\n            console.error(\"\".concat(source, \" Bad uniform \").concat(uniformName), value);\n            throw new Error(\"\".concat(source, \" Bad uniform \").concat(uniformName));\n        }\n    }\n    return true;\n}\nfunction checkUniformValue(value) {\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n        return checkUniformArray(value);\n    }\n    if (isFinite(value)) {\n        return true;\n    } else if (value === true || value === false) {\n        return true;\n    } else if (value instanceof _texture__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        return true;\n    } else if (value instanceof _renderbuffer__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return true;\n    } else if (value instanceof _framebuffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n        return Boolean(value.texture);\n    }\n    return false;\n}\nfunction copyUniform(uniforms, key, value) {\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n        if (uniforms[key]) {\n            const dest = uniforms[key];\n            for(let i = 0, len = value.length; i < len; ++i){\n                dest[i] = value[i];\n            }\n        } else {\n            uniforms[key] = value.slice();\n        }\n    } else {\n        uniforms[key] = value;\n    }\n}\nfunction checkUniformArray(value) {\n    if (value.length === 0) {\n        return false;\n    }\n    const checkLength = Math.min(value.length, 16);\n    for(let i = 0; i < checkLength; ++i){\n        if (!Number.isFinite(value[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getSamplerSetter() {\n    let cache = null;\n    return (gl, location, value)=>{\n        const update = cache !== value;\n        if (update) {\n            gl.uniform1i(location, value);\n            cache = value;\n        }\n        return update;\n    };\n}\nfunction getArraySetter(functionName, toArray, size, uniformSetter) {\n    let cache = null;\n    let cacheLength = null;\n    return (gl, location, value)=>{\n        const arrayValue = toArray(value, size);\n        const length = arrayValue.length;\n        let update = false;\n        if (cache === null) {\n            cache = new Float32Array(length);\n            cacheLength = length;\n            update = true;\n        } else {\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__.assert)(cacheLength === length, \"Uniform length cannot change.\");\n            for(let i = 0; i < length; ++i){\n                if (arrayValue[i] !== cache[i]) {\n                    update = true;\n                    break;\n                }\n            }\n        }\n        if (update) {\n            uniformSetter(gl, functionName, location, arrayValue);\n            cache.set(arrayValue);\n        }\n        return update;\n    };\n}\nfunction setVectorUniform(gl, functionName, location, value) {\n    gl[functionName](location, value);\n}\nfunction setMatrixUniform(gl, functionName, location, value) {\n    gl[functionName](location, false, value);\n} //# sourceMappingURL=uniforms.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/uniforms.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/vertex-array-object.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/vertex-array-object.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VertexArrayObject)\n/* harmony export */ });\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/resource.js\");\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./buffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _utils_array_utils_flat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/array-utils-flat */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/array-utils-flat.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _probe_gl_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @probe.gl/env */ \"(ssr)/./node_modules/@probe.gl/env/dist/esm/lib/get-browser.js\");\n\n\n\n\n\n\nconst ERR_ELEMENTS = \"elements must be GL.ELEMENT_ARRAY_BUFFER\";\nclass VertexArrayObject extends _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get [Symbol.toStringTag]() {\n        return \"VertexArrayObject\";\n    }\n    static isSupported(gl) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        if (options.constantAttributeZero) {\n            return (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) || (0,_probe_gl_env__WEBPACK_IMPORTED_MODULE_2__[\"default\"])() === \"Chrome\";\n        }\n        return true;\n    }\n    static getDefaultArray(gl) {\n        gl.luma = gl.luma || {};\n        if (!gl.luma.defaultVertexArray) {\n            gl.luma.defaultVertexArray = new VertexArrayObject(gl, {\n                handle: null,\n                isDefaultArray: true\n            });\n        }\n        return gl.luma.defaultVertexArray;\n    }\n    static getMaxAttributes(gl) {\n        VertexArrayObject.MAX_ATTRIBUTES = VertexArrayObject.MAX_ATTRIBUTES || gl.getParameter(34921);\n        return VertexArrayObject.MAX_ATTRIBUTES;\n    }\n    static setConstant(gl, location, array) {\n        switch(array.constructor){\n            case Float32Array:\n                VertexArrayObject._setConstantFloatArray(gl, location, array);\n                break;\n            case Int32Array:\n                VertexArrayObject._setConstantIntArray(gl, location, array);\n                break;\n            case Uint32Array:\n                VertexArrayObject._setConstantUintArray(gl, location, array);\n                break;\n            default:\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(false);\n        }\n    }\n    constructor(gl){\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const id = opts.id || opts.program && opts.program.id;\n        super(gl, Object.assign({}, opts, {\n            id\n        }));\n        this.buffer = null;\n        this.bufferValue = null;\n        this.isDefaultArray = opts.isDefaultArray || false;\n        this.gl2 = gl;\n        this.initialize(opts);\n        Object.seal(this);\n    }\n    delete() {\n        super.delete();\n        if (this.buffer) {\n            this.buffer.delete();\n        }\n        return this;\n    }\n    get MAX_ATTRIBUTES() {\n        return VertexArrayObject.getMaxAttributes(this.gl);\n    }\n    initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return this.setProps(props);\n    }\n    setProps(props) {\n        return this;\n    }\n    setElementBuffer() {\n        let elementBuffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(!elementBuffer || elementBuffer.target === 34963, ERR_ELEMENTS);\n        this.bind(()=>{\n            this.gl.bindBuffer(34963, elementBuffer ? elementBuffer.handle : null);\n        });\n        return this;\n    }\n    setBuffer(location, buffer, accessor) {\n        if (buffer.target === 34963) {\n            return this.setElementBuffer(buffer, accessor);\n        }\n        const { size, type, stride, offset, normalized, integer, divisor } = accessor;\n        const { gl, gl2 } = this;\n        location = Number(location);\n        this.bind(()=>{\n            gl.bindBuffer(34962, buffer.handle);\n            if (integer) {\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)((0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl));\n                gl2.vertexAttribIPointer(location, size, type, stride, offset);\n            } else {\n                gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n            }\n            gl.enableVertexAttribArray(location);\n            gl2.vertexAttribDivisor(location, divisor || 0);\n        });\n        return this;\n    }\n    enable(location) {\n        let enable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        const disablingAttributeZero = !enable && location === 0 && !VertexArrayObject.isSupported(this.gl, {\n            constantAttributeZero: true\n        });\n        if (!disablingAttributeZero) {\n            location = Number(location);\n            this.bind(()=>enable ? this.gl.enableVertexAttribArray(location) : this.gl.disableVertexAttribArray(location));\n        }\n        return this;\n    }\n    getConstantBuffer(elementCount, value) {\n        const constantValue = this._normalizeConstantArrayValue(value);\n        const byteLength = constantValue.byteLength * elementCount;\n        const length = constantValue.length * elementCount;\n        let updateNeeded = !this.buffer;\n        this.buffer = this.buffer || new _buffer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.gl, byteLength);\n        updateNeeded = updateNeeded || this.buffer.reallocate(byteLength);\n        updateNeeded = updateNeeded || !this._compareConstantArrayValues(constantValue, this.bufferValue);\n        if (updateNeeded) {\n            const typedArray = (0,_utils_array_utils_flat__WEBPACK_IMPORTED_MODULE_5__.getScratchArray)(value.constructor, length);\n            (0,_utils_array_utils_flat__WEBPACK_IMPORTED_MODULE_5__.fillArray)({\n                target: typedArray,\n                source: constantValue,\n                start: 0,\n                count: length\n            });\n            this.buffer.subData(typedArray);\n            this.bufferValue = value;\n        }\n        return this.buffer;\n    }\n    _normalizeConstantArrayValue(arrayValue) {\n        if (Array.isArray(arrayValue)) {\n            return new Float32Array(arrayValue);\n        }\n        return arrayValue;\n    }\n    _compareConstantArrayValues(v1, v2) {\n        if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n            return false;\n        }\n        for(let i = 0; i < v1.length; ++i){\n            if (v1[i] !== v2[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _setConstantFloatArray(gl, location, array) {\n        switch(array.length){\n            case 1:\n                gl.vertexAttrib1fv(location, array);\n                break;\n            case 2:\n                gl.vertexAttrib2fv(location, array);\n                break;\n            case 3:\n                gl.vertexAttrib3fv(location, array);\n                break;\n            case 4:\n                gl.vertexAttrib4fv(location, array);\n                break;\n            default:\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(false);\n        }\n    }\n    static _setConstantIntArray(gl, location, array) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)((0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl));\n        switch(array.length){\n            case 1:\n                gl.vertexAttribI1iv(location, array);\n                break;\n            case 2:\n                gl.vertexAttribI2iv(location, array);\n                break;\n            case 3:\n                gl.vertexAttribI3iv(location, array);\n                break;\n            case 4:\n                gl.vertexAttribI4iv(location, array);\n                break;\n            default:\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(false);\n        }\n    }\n    static _setConstantUintArray(gl, location, array) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)((0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl));\n        switch(array.length){\n            case 1:\n                gl.vertexAttribI1uiv(location, array);\n                break;\n            case 2:\n                gl.vertexAttribI2uiv(location, array);\n                break;\n            case 3:\n                gl.vertexAttribI3uiv(location, array);\n                break;\n            case 4:\n                gl.vertexAttribI4uiv(location, array);\n                break;\n            default:\n                (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(false);\n        }\n    }\n    _createHandle() {\n        const gl2 = this.gl;\n        return gl2.createVertexArray();\n    }\n    _deleteHandle(handle) {\n        this.gl2.deleteVertexArray(handle);\n        return [\n            this.elements\n        ];\n    }\n    _bindHandle(handle) {\n        this.gl2.bindVertexArray(handle);\n    }\n    _getParameter(pname, _ref) {\n        let { location } = _ref;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__.assert)(Number.isFinite(location));\n        return this.bind(()=>{\n            switch(pname){\n                case 34373:\n                    return this.gl.getVertexAttribOffset(location, pname);\n                default:\n                    return this.gl.getVertexAttrib(location, pname);\n            }\n        });\n    }\n} //# sourceMappingURL=vertex-array-object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/vertex-array-object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/vertex-array.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/classes/vertex-array.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VertexArray)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _accessor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./accessor */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/accessor.js\");\n/* harmony import */ var _buffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _vertex_array_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vertex-array-object */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/vertex-array-object.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_stub_methods__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/stub-methods */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/stub-methods.js\");\n\n\n\n\n\n\nconst ERR_ATTRIBUTE_TYPE = \"VertexArray: attributes must be Buffers or constants (i.e. typed array)\";\nconst MULTI_LOCATION_ATTRIBUTE_REGEXP = /^(.+)__LOCATION_([0-9]+)$/;\nconst DEPRECATIONS_V6 = [\n    \"setBuffers\",\n    \"setGeneric\",\n    \"clearBindings\",\n    \"setLocations\",\n    \"setGenericValues\",\n    \"setDivisor\",\n    \"enable\",\n    \"disable\"\n];\nclass VertexArray {\n    constructor(gl){\n        let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const id = opts.id || opts.program && opts.program.id;\n        this.id = id;\n        this.gl = gl;\n        this.configuration = null;\n        this.elements = null;\n        this.elementsAccessor = null;\n        this.values = null;\n        this.accessors = null;\n        this.unused = null;\n        this.drawParams = null;\n        this.buffer = null;\n        this.attributes = {};\n        this.vertexArrayObject = new _vertex_array_object__WEBPACK_IMPORTED_MODULE_1__[\"default\"](gl);\n        (0,_utils_stub_methods__WEBPACK_IMPORTED_MODULE_2__.stubRemovedMethods)(this, \"VertexArray\", \"v6.0\", DEPRECATIONS_V6);\n        this.initialize(opts);\n        Object.seal(this);\n    }\n    delete() {\n        if (this.buffer) {\n            this.buffer.delete();\n        }\n        this.vertexArrayObject.delete();\n    }\n    initialize() {\n        let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.reset();\n        this.configuration = null;\n        this.bindOnUse = false;\n        return this.setProps(props);\n    }\n    reset() {\n        this.elements = null;\n        this.elementsAccessor = null;\n        const { MAX_ATTRIBUTES } = this.vertexArrayObject;\n        this.values = new Array(MAX_ATTRIBUTES).fill(null);\n        this.accessors = new Array(MAX_ATTRIBUTES).fill(null);\n        this.unused = {};\n        this.drawParams = null;\n        return this;\n    }\n    setProps(props) {\n        if (\"program\" in props) {\n            this.configuration = props.program && props.program.configuration;\n        }\n        if (\"configuration\" in props) {\n            this.configuration = props.configuration;\n        }\n        if (\"attributes\" in props) {\n            this.setAttributes(props.attributes);\n        }\n        if (\"elements\" in props) {\n            this.setElementBuffer(props.elements);\n        }\n        if (\"bindOnUse\" in props) {\n            props = props.bindOnUse;\n        }\n        return this;\n    }\n    clearDrawParams() {\n        this.drawParams = null;\n    }\n    getDrawParams() {\n        this.drawParams = this.drawParams || this._updateDrawParams();\n        return this.drawParams;\n    }\n    setAttributes(attributes) {\n        Object.assign(this.attributes, attributes);\n        this.vertexArrayObject.bind(()=>{\n            for(const locationOrName in attributes){\n                const value = attributes[locationOrName];\n                this._setAttribute(locationOrName, value);\n            }\n            this.gl.bindBuffer(34962, null);\n        });\n        return this;\n    }\n    setElementBuffer() {\n        let elementBuffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        let accessor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        this.elements = elementBuffer;\n        this.elementsAccessor = accessor;\n        this.clearDrawParams();\n        this.vertexArrayObject.setElementBuffer(elementBuffer, accessor);\n        return this;\n    }\n    setBuffer(locationOrName, buffer) {\n        let appAccessor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (buffer.target === 34963) {\n            return this.setElementBuffer(buffer, appAccessor);\n        }\n        const { location, accessor } = this._resolveLocationAndAccessor(locationOrName, buffer, buffer.accessor, appAccessor);\n        if (location >= 0) {\n            this.values[location] = buffer;\n            this.accessors[location] = accessor;\n            this.clearDrawParams();\n            this.vertexArrayObject.setBuffer(location, buffer, accessor);\n        }\n        return this;\n    }\n    setConstant(locationOrName, arrayValue) {\n        let appAccessor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        const { location, accessor } = this._resolveLocationAndAccessor(locationOrName, arrayValue, Object.assign({\n            size: arrayValue.length\n        }, appAccessor));\n        if (location >= 0) {\n            arrayValue = this.vertexArrayObject._normalizeConstantArrayValue(arrayValue);\n            this.values[location] = arrayValue;\n            this.accessors[location] = accessor;\n            this.clearDrawParams();\n            this.vertexArrayObject.enable(location, false);\n        }\n        return this;\n    }\n    unbindBuffers() {\n        this.vertexArrayObject.bind(()=>{\n            if (this.elements) {\n                this.vertexArrayObject.setElementBuffer(null);\n            }\n            this.buffer = this.buffer || new _buffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.gl, {\n                accessor: {\n                    size: 4\n                }\n            });\n            for(let location = 0; location < this.vertexArrayObject.MAX_ATTRIBUTES; location++){\n                if (this.values[location] instanceof _buffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n                    this.gl.disableVertexAttribArray(location);\n                    this.gl.bindBuffer(34962, this.buffer.handle);\n                    this.gl.vertexAttribPointer(location, 1, 5126, false, 0, 0);\n                }\n            }\n        });\n        return this;\n    }\n    bindBuffers() {\n        this.vertexArrayObject.bind(()=>{\n            if (this.elements) {\n                this.setElementBuffer(this.elements);\n            }\n            for(let location = 0; location < this.vertexArrayObject.MAX_ATTRIBUTES; location++){\n                const buffer = this.values[location];\n                if (buffer instanceof _buffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n                    this.setBuffer(location, buffer);\n                }\n            }\n        });\n        return this;\n    }\n    bindForDraw(vertexCount, instanceCount, func) {\n        let value;\n        this.vertexArrayObject.bind(()=>{\n            this._setConstantAttributes(vertexCount, instanceCount);\n            value = func();\n        });\n        return value;\n    }\n    _resolveLocationAndAccessor(locationOrName, value, valueAccessor, appAccessor) {\n        const INVALID_RESULT = {\n            location: -1,\n            accessor: null\n        };\n        const { location, name } = this._getAttributeIndex(locationOrName);\n        if (!Number.isFinite(location) || location < 0) {\n            this.unused[locationOrName] = value;\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.once(3, ()=>\"unused value \".concat(locationOrName, \" in \").concat(this.id))();\n            return INVALID_RESULT;\n        }\n        const accessInfo = this._getAttributeInfo(name || location);\n        if (!accessInfo) {\n            return INVALID_RESULT;\n        }\n        const currentAccessor = this.accessors[location] || {};\n        const accessor = _accessor__WEBPACK_IMPORTED_MODULE_4__[\"default\"].resolve(accessInfo.accessor, currentAccessor, valueAccessor, appAccessor);\n        const { size, type } = accessor;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_5__.assert)(Number.isFinite(size) && Number.isFinite(type));\n        return {\n            location,\n            accessor\n        };\n    }\n    _getAttributeInfo(attributeName) {\n        return this.configuration && this.configuration.getAttributeInfo(attributeName);\n    }\n    _getAttributeIndex(locationOrName) {\n        const location = Number(locationOrName);\n        if (Number.isFinite(location)) {\n            return {\n                location\n            };\n        }\n        const multiLocation = MULTI_LOCATION_ATTRIBUTE_REGEXP.exec(locationOrName);\n        const name = multiLocation ? multiLocation[1] : locationOrName;\n        const locationOffset = multiLocation ? Number(multiLocation[2]) : 0;\n        if (this.configuration) {\n            return {\n                location: this.configuration.getAttributeLocation(name) + locationOffset,\n                name\n            };\n        }\n        return {\n            location: -1\n        };\n    }\n    _setAttribute(locationOrName, value) {\n        if (value instanceof _buffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n            this.setBuffer(locationOrName, value);\n        } else if (Array.isArray(value) && value.length && value[0] instanceof _buffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n            const buffer = value[0];\n            const accessor = value[1];\n            this.setBuffer(locationOrName, buffer, accessor);\n        } else if (ArrayBuffer.isView(value) || Array.isArray(value)) {\n            const constant = value;\n            this.setConstant(locationOrName, constant);\n        } else if (value.buffer instanceof _buffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n            const accessor = value;\n            this.setBuffer(locationOrName, accessor.buffer, accessor);\n        } else {\n            throw new Error(ERR_ATTRIBUTE_TYPE);\n        }\n    }\n    _setConstantAttributes(vertexCount, instanceCount) {\n        const elementCount = Math.max(vertexCount | 0, instanceCount | 0);\n        let constant = this.values[0];\n        if (ArrayBuffer.isView(constant)) {\n            this._setConstantAttributeZero(constant, elementCount);\n        }\n        for(let location = 1; location < this.vertexArrayObject.MAX_ATTRIBUTES; location++){\n            constant = this.values[location];\n            if (ArrayBuffer.isView(constant)) {\n                this._setConstantAttribute(location, constant);\n            }\n        }\n    }\n    _setConstantAttributeZero(constant, elementCount) {\n        if (_vertex_array_object__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isSupported(this.gl, {\n            constantAttributeZero: true\n        })) {\n            this._setConstantAttribute(0, constant);\n            return;\n        }\n        const buffer = this.vertexArrayObject.getConstantBuffer(elementCount, constant);\n        this.vertexArrayObject.setBuffer(0, buffer, this.accessors[0]);\n    }\n    _setConstantAttribute(location, constant) {\n        _vertex_array_object__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setConstant(this.gl, location, constant);\n    }\n    _updateDrawParams() {\n        const drawParams = {\n            isIndexed: false,\n            isInstanced: false,\n            indexCount: Infinity,\n            vertexCount: Infinity,\n            instanceCount: Infinity\n        };\n        for(let location = 0; location < this.vertexArrayObject.MAX_ATTRIBUTES; location++){\n            this._updateDrawParamsForLocation(drawParams, location);\n        }\n        if (this.elements) {\n            drawParams.elementCount = this.elements.getElementCount(this.elements.accessor);\n            drawParams.isIndexed = true;\n            drawParams.indexType = this.elementsAccessor.type || this.elements.accessor.type;\n            drawParams.indexOffset = this.elementsAccessor.offset || 0;\n        }\n        if (drawParams.indexCount === Infinity) {\n            drawParams.indexCount = 0;\n        }\n        if (drawParams.vertexCount === Infinity) {\n            drawParams.vertexCount = 0;\n        }\n        if (drawParams.instanceCount === Infinity) {\n            drawParams.instanceCount = 0;\n        }\n        return drawParams;\n    }\n    _updateDrawParamsForLocation(drawParams, location) {\n        const value = this.values[location];\n        const accessor = this.accessors[location];\n        if (!value) {\n            return;\n        }\n        const { divisor } = accessor;\n        const isInstanced = divisor > 0;\n        drawParams.isInstanced = drawParams.isInstanced || isInstanced;\n        if (value instanceof _buffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n            const buffer = value;\n            if (isInstanced) {\n                const instanceCount = buffer.getVertexCount(accessor);\n                drawParams.instanceCount = Math.min(drawParams.instanceCount, instanceCount);\n            } else {\n                const vertexCount = buffer.getVertexCount(accessor);\n                drawParams.vertexCount = Math.min(drawParams.vertexCount, vertexCount);\n            }\n        }\n    }\n    setElements() {\n        let elementBuffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        let accessor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"setElements\", \"setElementBuffer\")();\n        return this.setElementBuffer(elementBuffer, accessor);\n    }\n} //# sourceMappingURL=vertex-array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/vertex-array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-program-configuration.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/debug/debug-program-configuration.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDebugTableForProgramConfiguration: () => (/* binding */ getDebugTableForProgramConfiguration)\n/* harmony export */ });\n/* harmony import */ var _webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../webgl-utils/attribute-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/attribute-utils.js\");\n\nfunction getDebugTableForProgramConfiguration(config) {\n    const table = {};\n    const header = \"Accessors for \".concat(config.id);\n    for (const attributeInfo of config.attributeInfos){\n        if (attributeInfo) {\n            const glslDeclaration = getGLSLDeclaration(attributeInfo);\n            table[\"in \".concat(glslDeclaration)] = {\n                [header]: JSON.stringify(attributeInfo.accessor)\n            };\n        }\n    }\n    for (const varyingInfo of config.varyingInfos){\n        if (varyingInfo) {\n            const glslDeclaration = getGLSLDeclaration(varyingInfo);\n            table[\"out \".concat(glslDeclaration)] = {\n                [header]: JSON.stringify(varyingInfo.accessor)\n            };\n        }\n    }\n    return table;\n}\nfunction getGLSLDeclaration(attributeInfo) {\n    const { type, size } = attributeInfo.accessor;\n    const typeAndName = (0,_webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_0__.getCompositeGLType)(type, size);\n    if (typeAndName) {\n        return \"\".concat(typeAndName.name, \" \").concat(attributeInfo.name);\n    }\n    return attributeInfo.name;\n} //# sourceMappingURL=debug-program-configuration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vZGVidWcvZGVidWctcHJvZ3JhbS1jb25maWd1cmF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9FO0FBQzdELFNBQVNDLHFDQUFxQ0MsTUFBTTtJQUN6RCxNQUFNQyxRQUFRLENBQUM7SUFDZixNQUFNQyxTQUFTLGlCQUFpQkMsTUFBTSxDQUFDSCxPQUFPSSxFQUFFO0lBRWhELEtBQUssTUFBTUMsaUJBQWlCTCxPQUFPTSxjQUFjLENBQUU7UUFDakQsSUFBSUQsZUFBZTtZQUNqQixNQUFNRSxrQkFBa0JDLG1CQUFtQkg7WUFDM0NKLEtBQUssQ0FBQyxNQUFNRSxNQUFNLENBQUNJLGlCQUFpQixHQUFHO2dCQUNyQyxDQUFDTCxPQUFPLEVBQUVPLEtBQUtDLFNBQVMsQ0FBQ0wsY0FBY00sUUFBUTtZQUNqRDtRQUNGO0lBQ0Y7SUFFQSxLQUFLLE1BQU1DLGVBQWVaLE9BQU9hLFlBQVksQ0FBRTtRQUM3QyxJQUFJRCxhQUFhO1lBQ2YsTUFBTUwsa0JBQWtCQyxtQkFBbUJJO1lBQzNDWCxLQUFLLENBQUMsT0FBT0UsTUFBTSxDQUFDSSxpQkFBaUIsR0FBRztnQkFDdEMsQ0FBQ0wsT0FBTyxFQUFFTyxLQUFLQyxTQUFTLENBQUNFLFlBQVlELFFBQVE7WUFDL0M7UUFDRjtJQUNGO0lBRUEsT0FBT1Y7QUFDVDtBQUVBLFNBQVNPLG1CQUFtQkgsYUFBYTtJQUN2QyxNQUFNLEVBQ0pTLElBQUksRUFDSkMsSUFBSSxFQUNMLEdBQUdWLGNBQWNNLFFBQVE7SUFDMUIsTUFBTUssY0FBY2xCLGdGQUFrQkEsQ0FBQ2dCLE1BQU1DO0lBRTdDLElBQUlDLGFBQWE7UUFDZixPQUFPLEdBQUdiLE1BQU0sQ0FBQ2EsWUFBWUMsSUFBSSxFQUFFLEtBQUtkLE1BQU0sQ0FBQ0UsY0FBY1ksSUFBSTtJQUNuRTtJQUVBLE9BQU9aLGNBQWNZLElBQUk7QUFDM0IsRUFDQSx1REFBdUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS9kZWJ1Zy9kZWJ1Zy1wcm9ncmFtLWNvbmZpZ3VyYXRpb24uanM/ZDMwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDb21wb3NpdGVHTFR5cGUgfSBmcm9tICcuLi93ZWJnbC11dGlscy9hdHRyaWJ1dGUtdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlYnVnVGFibGVGb3JQcm9ncmFtQ29uZmlndXJhdGlvbihjb25maWcpIHtcbiAgY29uc3QgdGFibGUgPSB7fTtcbiAgY29uc3QgaGVhZGVyID0gXCJBY2Nlc3NvcnMgZm9yIFwiLmNvbmNhdChjb25maWcuaWQpO1xuXG4gIGZvciAoY29uc3QgYXR0cmlidXRlSW5mbyBvZiBjb25maWcuYXR0cmlidXRlSW5mb3MpIHtcbiAgICBpZiAoYXR0cmlidXRlSW5mbykge1xuICAgICAgY29uc3QgZ2xzbERlY2xhcmF0aW9uID0gZ2V0R0xTTERlY2xhcmF0aW9uKGF0dHJpYnV0ZUluZm8pO1xuICAgICAgdGFibGVbXCJpbiBcIi5jb25jYXQoZ2xzbERlY2xhcmF0aW9uKV0gPSB7XG4gICAgICAgIFtoZWFkZXJdOiBKU09OLnN0cmluZ2lmeShhdHRyaWJ1dGVJbmZvLmFjY2Vzc29yKVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBmb3IgKGNvbnN0IHZhcnlpbmdJbmZvIG9mIGNvbmZpZy52YXJ5aW5nSW5mb3MpIHtcbiAgICBpZiAodmFyeWluZ0luZm8pIHtcbiAgICAgIGNvbnN0IGdsc2xEZWNsYXJhdGlvbiA9IGdldEdMU0xEZWNsYXJhdGlvbih2YXJ5aW5nSW5mbyk7XG4gICAgICB0YWJsZVtcIm91dCBcIi5jb25jYXQoZ2xzbERlY2xhcmF0aW9uKV0gPSB7XG4gICAgICAgIFtoZWFkZXJdOiBKU09OLnN0cmluZ2lmeSh2YXJ5aW5nSW5mby5hY2Nlc3NvcilcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhYmxlO1xufVxuXG5mdW5jdGlvbiBnZXRHTFNMRGVjbGFyYXRpb24oYXR0cmlidXRlSW5mbykge1xuICBjb25zdCB7XG4gICAgdHlwZSxcbiAgICBzaXplXG4gIH0gPSBhdHRyaWJ1dGVJbmZvLmFjY2Vzc29yO1xuICBjb25zdCB0eXBlQW5kTmFtZSA9IGdldENvbXBvc2l0ZUdMVHlwZSh0eXBlLCBzaXplKTtcblxuICBpZiAodHlwZUFuZE5hbWUpIHtcbiAgICByZXR1cm4gXCJcIi5jb25jYXQodHlwZUFuZE5hbWUubmFtZSwgXCIgXCIpLmNvbmNhdChhdHRyaWJ1dGVJbmZvLm5hbWUpO1xuICB9XG5cbiAgcmV0dXJuIGF0dHJpYnV0ZUluZm8ubmFtZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLXByb2dyYW0tY29uZmlndXJhdGlvbi5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0Q29tcG9zaXRlR0xUeXBlIiwiZ2V0RGVidWdUYWJsZUZvclByb2dyYW1Db25maWd1cmF0aW9uIiwiY29uZmlnIiwidGFibGUiLCJoZWFkZXIiLCJjb25jYXQiLCJpZCIsImF0dHJpYnV0ZUluZm8iLCJhdHRyaWJ1dGVJbmZvcyIsImdsc2xEZWNsYXJhdGlvbiIsImdldEdMU0xEZWNsYXJhdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJhY2Nlc3NvciIsInZhcnlpbmdJbmZvIiwidmFyeWluZ0luZm9zIiwidHlwZSIsInNpemUiLCJ0eXBlQW5kTmFtZSIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-program-configuration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-uniforms.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/debug/debug-uniforms.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDebugTableForUniforms: () => (/* binding */ getDebugTableForUniforms)\n/* harmony export */ });\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_format_value__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/format-value */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/format-value.js\");\n\n\nfunction getDebugTableForUniforms(_ref) {\n    let { header = \"Uniforms\", program, uniforms, undefinedOnly = false } = _ref;\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(program);\n    const SHADER_MODULE_UNIFORM_REGEXP = \".*_.*\";\n    const PROJECT_MODULE_UNIFORM_REGEXP = \".*Matrix\";\n    const uniformLocations = program._uniformSetters;\n    const table = {};\n    const uniformNames = Object.keys(uniformLocations).sort();\n    let count = 0;\n    for (const uniformName of uniformNames){\n        if (!uniformName.match(SHADER_MODULE_UNIFORM_REGEXP) && !uniformName.match(PROJECT_MODULE_UNIFORM_REGEXP)) {\n            if (addUniformToTable({\n                table,\n                header,\n                uniforms,\n                uniformName,\n                undefinedOnly\n            })) {\n                count++;\n            }\n        }\n    }\n    for (const uniformName of uniformNames){\n        if (uniformName.match(PROJECT_MODULE_UNIFORM_REGEXP)) {\n            if (addUniformToTable({\n                table,\n                header,\n                uniforms,\n                uniformName,\n                undefinedOnly\n            })) {\n                count++;\n            }\n        }\n    }\n    for (const uniformName of uniformNames){\n        if (!table[uniformName]) {\n            if (addUniformToTable({\n                table,\n                header,\n                uniforms,\n                uniformName,\n                undefinedOnly\n            })) {\n                count++;\n            }\n        }\n    }\n    let unusedCount = 0;\n    const unusedTable = {};\n    if (!undefinedOnly) {\n        for(const uniformName in uniforms){\n            const uniform = uniforms[uniformName];\n            if (!table[uniformName]) {\n                unusedCount++;\n                unusedTable[uniformName] = {\n                    Type: \"NOT USED: \".concat(uniform),\n                    [header]: (0,_utils_format_value__WEBPACK_IMPORTED_MODULE_1__.formatValue)(uniform)\n                };\n            }\n        }\n    }\n    return {\n        table,\n        count,\n        unusedTable,\n        unusedCount\n    };\n}\nfunction addUniformToTable(_ref2) {\n    let { table, header, uniforms, uniformName, undefinedOnly } = _ref2;\n    const value = uniforms[uniformName];\n    const isDefined = isUniformDefined(value);\n    if (!undefinedOnly || !isDefined) {\n        table[uniformName] = {\n            [header]: isDefined ? (0,_utils_format_value__WEBPACK_IMPORTED_MODULE_1__.formatValue)(value) : \"N/A\",\n            \"Uniform Type\": isDefined ? value : \"NOT PROVIDED\"\n        };\n        return true;\n    }\n    return false;\n}\nfunction isUniformDefined(value) {\n    return value !== undefined && value !== null;\n} //# sourceMappingURL=debug-uniforms.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vZGVidWcvZGVidWctdW5pZm9ybXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlDO0FBQ1c7QUFDN0MsU0FBU0UseUJBQXlCQyxJQUFJO0lBQzNDLElBQUksRUFDRkMsU0FBUyxVQUFVLEVBQ25CQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUkMsZ0JBQWdCLEtBQUssRUFDdEIsR0FBR0o7SUFDSkgscURBQU1BLENBQUNLO0lBQ1AsTUFBTUcsK0JBQStCO0lBQ3JDLE1BQU1DLGdDQUFnQztJQUN0QyxNQUFNQyxtQkFBbUJMLFFBQVFNLGVBQWU7SUFDaEQsTUFBTUMsUUFBUSxDQUFDO0lBQ2YsTUFBTUMsZUFBZUMsT0FBT0MsSUFBSSxDQUFDTCxrQkFBa0JNLElBQUk7SUFDdkQsSUFBSUMsUUFBUTtJQUVaLEtBQUssTUFBTUMsZUFBZUwsYUFBYztRQUN0QyxJQUFJLENBQUNLLFlBQVlDLEtBQUssQ0FBQ1gsaUNBQWlDLENBQUNVLFlBQVlDLEtBQUssQ0FBQ1YsZ0NBQWdDO1lBQ3pHLElBQUlXLGtCQUFrQjtnQkFDcEJSO2dCQUNBUjtnQkFDQUU7Z0JBQ0FZO2dCQUNBWDtZQUNGLElBQUk7Z0JBQ0ZVO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsS0FBSyxNQUFNQyxlQUFlTCxhQUFjO1FBQ3RDLElBQUlLLFlBQVlDLEtBQUssQ0FBQ1YsZ0NBQWdDO1lBQ3BELElBQUlXLGtCQUFrQjtnQkFDcEJSO2dCQUNBUjtnQkFDQUU7Z0JBQ0FZO2dCQUNBWDtZQUNGLElBQUk7Z0JBQ0ZVO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsS0FBSyxNQUFNQyxlQUFlTCxhQUFjO1FBQ3RDLElBQUksQ0FBQ0QsS0FBSyxDQUFDTSxZQUFZLEVBQUU7WUFDdkIsSUFBSUUsa0JBQWtCO2dCQUNwQlI7Z0JBQ0FSO2dCQUNBRTtnQkFDQVk7Z0JBQ0FYO1lBQ0YsSUFBSTtnQkFDRlU7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxJQUFJSSxjQUFjO0lBQ2xCLE1BQU1DLGNBQWMsQ0FBQztJQUVyQixJQUFJLENBQUNmLGVBQWU7UUFDbEIsSUFBSyxNQUFNVyxlQUFlWixTQUFVO1lBQ2xDLE1BQU1pQixVQUFVakIsUUFBUSxDQUFDWSxZQUFZO1lBRXJDLElBQUksQ0FBQ04sS0FBSyxDQUFDTSxZQUFZLEVBQUU7Z0JBQ3ZCRztnQkFDQUMsV0FBVyxDQUFDSixZQUFZLEdBQUc7b0JBQ3pCTSxNQUFNLGFBQWFDLE1BQU0sQ0FBQ0Y7b0JBQzFCLENBQUNuQixPQUFPLEVBQUVILGdFQUFXQSxDQUFDc0I7Z0JBQ3hCO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsT0FBTztRQUNMWDtRQUNBSztRQUNBSztRQUNBRDtJQUNGO0FBQ0Y7QUFFQSxTQUFTRCxrQkFBa0JNLEtBQUs7SUFDOUIsSUFBSSxFQUNGZCxLQUFLLEVBQ0xSLE1BQU0sRUFDTkUsUUFBUSxFQUNSWSxXQUFXLEVBQ1hYLGFBQWEsRUFDZCxHQUFHbUI7SUFDSixNQUFNQyxRQUFRckIsUUFBUSxDQUFDWSxZQUFZO0lBQ25DLE1BQU1VLFlBQVlDLGlCQUFpQkY7SUFFbkMsSUFBSSxDQUFDcEIsaUJBQWlCLENBQUNxQixXQUFXO1FBQ2hDaEIsS0FBSyxDQUFDTSxZQUFZLEdBQUc7WUFDbkIsQ0FBQ2QsT0FBTyxFQUFFd0IsWUFBWTNCLGdFQUFXQSxDQUFDMEIsU0FBUztZQUMzQyxnQkFBZ0JDLFlBQVlELFFBQVE7UUFDdEM7UUFDQSxPQUFPO0lBQ1Q7SUFFQSxPQUFPO0FBQ1Q7QUFFQSxTQUFTRSxpQkFBaUJGLEtBQUs7SUFDN0IsT0FBT0EsVUFBVUcsYUFBYUgsVUFBVTtBQUMxQyxFQUNBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3dlYmdsL2Rpc3QvZXNtL2RlYnVnL2RlYnVnLXVuaWZvcm1zLmpzPzBhNGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnLi4vdXRpbHMvYXNzZXJ0JztcbmltcG9ydCB7IGZvcm1hdFZhbHVlIH0gZnJvbSAnLi4vdXRpbHMvZm9ybWF0LXZhbHVlJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWJ1Z1RhYmxlRm9yVW5pZm9ybXMoX3JlZikge1xuICBsZXQge1xuICAgIGhlYWRlciA9ICdVbmlmb3JtcycsXG4gICAgcHJvZ3JhbSxcbiAgICB1bmlmb3JtcyxcbiAgICB1bmRlZmluZWRPbmx5ID0gZmFsc2VcbiAgfSA9IF9yZWY7XG4gIGFzc2VydChwcm9ncmFtKTtcbiAgY29uc3QgU0hBREVSX01PRFVMRV9VTklGT1JNX1JFR0VYUCA9ICcuKl8uKic7XG4gIGNvbnN0IFBST0pFQ1RfTU9EVUxFX1VOSUZPUk1fUkVHRVhQID0gJy4qTWF0cml4JztcbiAgY29uc3QgdW5pZm9ybUxvY2F0aW9ucyA9IHByb2dyYW0uX3VuaWZvcm1TZXR0ZXJzO1xuICBjb25zdCB0YWJsZSA9IHt9O1xuICBjb25zdCB1bmlmb3JtTmFtZXMgPSBPYmplY3Qua2V5cyh1bmlmb3JtTG9jYXRpb25zKS5zb3J0KCk7XG4gIGxldCBjb3VudCA9IDA7XG5cbiAgZm9yIChjb25zdCB1bmlmb3JtTmFtZSBvZiB1bmlmb3JtTmFtZXMpIHtcbiAgICBpZiAoIXVuaWZvcm1OYW1lLm1hdGNoKFNIQURFUl9NT0RVTEVfVU5JRk9STV9SRUdFWFApICYmICF1bmlmb3JtTmFtZS5tYXRjaChQUk9KRUNUX01PRFVMRV9VTklGT1JNX1JFR0VYUCkpIHtcbiAgICAgIGlmIChhZGRVbmlmb3JtVG9UYWJsZSh7XG4gICAgICAgIHRhYmxlLFxuICAgICAgICBoZWFkZXIsXG4gICAgICAgIHVuaWZvcm1zLFxuICAgICAgICB1bmlmb3JtTmFtZSxcbiAgICAgICAgdW5kZWZpbmVkT25seVxuICAgICAgfSkpIHtcbiAgICAgICAgY291bnQrKztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmb3IgKGNvbnN0IHVuaWZvcm1OYW1lIG9mIHVuaWZvcm1OYW1lcykge1xuICAgIGlmICh1bmlmb3JtTmFtZS5tYXRjaChQUk9KRUNUX01PRFVMRV9VTklGT1JNX1JFR0VYUCkpIHtcbiAgICAgIGlmIChhZGRVbmlmb3JtVG9UYWJsZSh7XG4gICAgICAgIHRhYmxlLFxuICAgICAgICBoZWFkZXIsXG4gICAgICAgIHVuaWZvcm1zLFxuICAgICAgICB1bmlmb3JtTmFtZSxcbiAgICAgICAgdW5kZWZpbmVkT25seVxuICAgICAgfSkpIHtcbiAgICAgICAgY291bnQrKztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmb3IgKGNvbnN0IHVuaWZvcm1OYW1lIG9mIHVuaWZvcm1OYW1lcykge1xuICAgIGlmICghdGFibGVbdW5pZm9ybU5hbWVdKSB7XG4gICAgICBpZiAoYWRkVW5pZm9ybVRvVGFibGUoe1xuICAgICAgICB0YWJsZSxcbiAgICAgICAgaGVhZGVyLFxuICAgICAgICB1bmlmb3JtcyxcbiAgICAgICAgdW5pZm9ybU5hbWUsXG4gICAgICAgIHVuZGVmaW5lZE9ubHlcbiAgICAgIH0pKSB7XG4gICAgICAgIGNvdW50Kys7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgbGV0IHVudXNlZENvdW50ID0gMDtcbiAgY29uc3QgdW51c2VkVGFibGUgPSB7fTtcblxuICBpZiAoIXVuZGVmaW5lZE9ubHkpIHtcbiAgICBmb3IgKGNvbnN0IHVuaWZvcm1OYW1lIGluIHVuaWZvcm1zKSB7XG4gICAgICBjb25zdCB1bmlmb3JtID0gdW5pZm9ybXNbdW5pZm9ybU5hbWVdO1xuXG4gICAgICBpZiAoIXRhYmxlW3VuaWZvcm1OYW1lXSkge1xuICAgICAgICB1bnVzZWRDb3VudCsrO1xuICAgICAgICB1bnVzZWRUYWJsZVt1bmlmb3JtTmFtZV0gPSB7XG4gICAgICAgICAgVHlwZTogXCJOT1QgVVNFRDogXCIuY29uY2F0KHVuaWZvcm0pLFxuICAgICAgICAgIFtoZWFkZXJdOiBmb3JtYXRWYWx1ZSh1bmlmb3JtKVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdGFibGUsXG4gICAgY291bnQsXG4gICAgdW51c2VkVGFibGUsXG4gICAgdW51c2VkQ291bnRcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkVW5pZm9ybVRvVGFibGUoX3JlZjIpIHtcbiAgbGV0IHtcbiAgICB0YWJsZSxcbiAgICBoZWFkZXIsXG4gICAgdW5pZm9ybXMsXG4gICAgdW5pZm9ybU5hbWUsXG4gICAgdW5kZWZpbmVkT25seVxuICB9ID0gX3JlZjI7XG4gIGNvbnN0IHZhbHVlID0gdW5pZm9ybXNbdW5pZm9ybU5hbWVdO1xuICBjb25zdCBpc0RlZmluZWQgPSBpc1VuaWZvcm1EZWZpbmVkKHZhbHVlKTtcblxuICBpZiAoIXVuZGVmaW5lZE9ubHkgfHwgIWlzRGVmaW5lZCkge1xuICAgIHRhYmxlW3VuaWZvcm1OYW1lXSA9IHtcbiAgICAgIFtoZWFkZXJdOiBpc0RlZmluZWQgPyBmb3JtYXRWYWx1ZSh2YWx1ZSkgOiAnTi9BJyxcbiAgICAgICdVbmlmb3JtIFR5cGUnOiBpc0RlZmluZWQgPyB2YWx1ZSA6ICdOT1QgUFJPVklERUQnXG4gICAgfTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gaXNVbmlmb3JtRGVmaW5lZCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gbnVsbDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLXVuaWZvcm1zLmpzLm1hcCJdLCJuYW1lcyI6WyJhc3NlcnQiLCJmb3JtYXRWYWx1ZSIsImdldERlYnVnVGFibGVGb3JVbmlmb3JtcyIsIl9yZWYiLCJoZWFkZXIiLCJwcm9ncmFtIiwidW5pZm9ybXMiLCJ1bmRlZmluZWRPbmx5IiwiU0hBREVSX01PRFVMRV9VTklGT1JNX1JFR0VYUCIsIlBST0pFQ1RfTU9EVUxFX1VOSUZPUk1fUkVHRVhQIiwidW5pZm9ybUxvY2F0aW9ucyIsIl91bmlmb3JtU2V0dGVycyIsInRhYmxlIiwidW5pZm9ybU5hbWVzIiwiT2JqZWN0Iiwia2V5cyIsInNvcnQiLCJjb3VudCIsInVuaWZvcm1OYW1lIiwibWF0Y2giLCJhZGRVbmlmb3JtVG9UYWJsZSIsInVudXNlZENvdW50IiwidW51c2VkVGFibGUiLCJ1bmlmb3JtIiwiVHlwZSIsImNvbmNhdCIsIl9yZWYyIiwidmFsdWUiLCJpc0RlZmluZWQiLCJpc1VuaWZvcm1EZWZpbmVkIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-uniforms.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-vertex-array.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/debug/debug-vertex-array.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDebugTableForVertexArray: () => (/* binding */ getDebugTableForVertexArray)\n/* harmony export */ });\n/* harmony import */ var _classes_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../classes/buffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../webgl-utils/constants-to-keys */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/constants-to-keys.js\");\n/* harmony import */ var _webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../webgl-utils/attribute-utils */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/attribute-utils.js\");\n/* harmony import */ var _utils_format_value__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/format-value */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/format-value.js\");\n\n\n\n\nfunction getDebugTableForVertexArray(_ref) {\n    let { vertexArray, header = \"Attributes\" } = _ref;\n    if (!vertexArray.configuration) {\n        return {};\n    }\n    const table = {};\n    if (vertexArray.elements) {\n        table.ELEMENT_ARRAY_BUFFER = getDebugTableRow(vertexArray, vertexArray.elements, null, header);\n    }\n    const attributes = vertexArray.values;\n    for(const attributeLocation in attributes){\n        const info = vertexArray._getAttributeInfo(attributeLocation);\n        if (info) {\n            let rowHeader = \"\".concat(attributeLocation, \": \").concat(info.name);\n            const accessor = vertexArray.accessors[info.location];\n            if (accessor) {\n                rowHeader = \"\".concat(attributeLocation, \": \").concat(getGLSLDeclaration(info.name, accessor));\n            }\n            table[rowHeader] = getDebugTableRow(vertexArray, attributes[attributeLocation], accessor, header);\n        }\n    }\n    return table;\n}\nfunction getDebugTableRow(vertexArray, attribute, accessor, header) {\n    const { gl } = vertexArray;\n    if (!attribute) {\n        return {\n            [header]: \"null\",\n            \"Format \": \"N/A\"\n        };\n    }\n    let type = \"NOT PROVIDED\";\n    let size = 1;\n    let verts = 0;\n    let bytes = 0;\n    let isInteger;\n    let marker;\n    let value;\n    if (accessor) {\n        type = accessor.type;\n        size = accessor.size;\n        type = String(type).replace(\"Array\", \"\");\n        isInteger = type.indexOf(\"nt\") !== -1;\n    }\n    if (attribute instanceof _classes_buffer__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        const buffer = attribute;\n        const { data, changed } = buffer.getDebugData();\n        marker = changed ? \"*\" : \"\";\n        value = data;\n        bytes = buffer.byteLength;\n        verts = bytes / data.BYTES_PER_ELEMENT / size;\n        let format;\n        if (accessor) {\n            const instanced = accessor.divisor > 0;\n            format = \"\".concat(instanced ? \"I \" : \"P \", \" \").concat(verts, \" (x\").concat(size, \"=\").concat(bytes, \" bytes \").concat((0,_webgl_utils_constants_to_keys__WEBPACK_IMPORTED_MODULE_1__.getKey)(gl, type), \")\");\n        } else {\n            isInteger = true;\n            format = \"\".concat(bytes, \" bytes\");\n        }\n        return {\n            [header]: \"\".concat(marker).concat((0,_utils_format_value__WEBPACK_IMPORTED_MODULE_2__.formatValue)(value, {\n                size,\n                isInteger\n            })),\n            \"Format \": format\n        };\n    }\n    value = attribute;\n    size = attribute.length;\n    type = String(attribute.constructor.name).replace(\"Array\", \"\");\n    isInteger = type.indexOf(\"nt\") !== -1;\n    return {\n        [header]: \"\".concat((0,_utils_format_value__WEBPACK_IMPORTED_MODULE_2__.formatValue)(value, {\n            size,\n            isInteger\n        }), \" (constant)\"),\n        \"Format \": \"\".concat(size, \"x\").concat(type, \" (constant)\")\n    };\n}\nfunction getGLSLDeclaration(name, accessor) {\n    const { type, size } = accessor;\n    const typeAndName = (0,_webgl_utils_attribute_utils__WEBPACK_IMPORTED_MODULE_3__.getCompositeGLType)(type, size);\n    return typeAndName ? \"\".concat(name, \" (\").concat(typeAndName.name, \")\") : name;\n} //# sourceMappingURL=debug-vertex-array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/debug/debug-vertex-array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/features.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/features/features.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFeatures: () => (/* binding */ getFeatures),\n/* harmony export */   hasFeature: () => (/* binding */ hasFeature),\n/* harmony export */   hasFeatures: () => (/* binding */ hasFeatures)\n/* harmony export */ });\n/* harmony import */ var _webgl_features_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webgl-features-table */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js\");\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\n\nconst LOG_UNSUPPORTED_FEATURE = 2;\nfunction hasFeature(gl, feature) {\n    return hasFeatures(gl, feature);\n}\nfunction hasFeatures(gl, features) {\n    features = Array.isArray(features) ? features : [\n        features\n    ];\n    return features.every((feature)=>{\n        return isFeatureSupported(gl, feature);\n    });\n}\nfunction getFeatures(gl) {\n    gl.luma = gl.luma || {};\n    gl.luma.caps = gl.luma.caps || {};\n    for(const cap in _webgl_features_table__WEBPACK_IMPORTED_MODULE_1__[\"default\"]){\n        if (gl.luma.caps[cap] === undefined) {\n            gl.luma.caps[cap] = isFeatureSupported(gl, cap);\n        }\n    }\n    return gl.luma.caps;\n}\nfunction isFeatureSupported(gl, cap) {\n    gl.luma = gl.luma || {};\n    gl.luma.caps = gl.luma.caps || {};\n    if (gl.luma.caps[cap] === undefined) {\n        gl.luma.caps[cap] = queryFeature(gl, cap);\n    }\n    if (!gl.luma.caps[cap]) {\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.log(LOG_UNSUPPORTED_FEATURE, \"Feature: \".concat(cap, \" not supported\"))();\n    }\n    return gl.luma.caps[cap];\n}\nfunction queryFeature(gl, cap) {\n    const feature = _webgl_features_table__WEBPACK_IMPORTED_MODULE_1__[\"default\"][cap];\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(feature, cap);\n    let isSupported;\n    const featureDefinition = (0,_luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.isWebGL2)(gl) ? feature[1] || feature[0] : feature[0];\n    if (typeof featureDefinition === \"function\") {\n        isSupported = featureDefinition(gl);\n    } else if (Array.isArray(featureDefinition)) {\n        isSupported = true;\n        for (const extension of featureDefinition){\n            isSupported = isSupported && Boolean(gl.getExtension(extension));\n        }\n    } else if (typeof featureDefinition === \"string\") {\n        isSupported = Boolean(gl.getExtension(featureDefinition));\n    } else if (typeof featureDefinition === \"boolean\") {\n        isSupported = featureDefinition;\n    } else {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__.assert)(false);\n    }\n    return isSupported;\n} //# sourceMappingURL=features.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vZmVhdHVyZXMvZmVhdHVyZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9EO0FBQ0g7QUFDUjtBQUN6QyxNQUFNSSwwQkFBMEI7QUFDekIsU0FBU0MsV0FBV0MsRUFBRSxFQUFFQyxPQUFPO0lBQ3BDLE9BQU9DLFlBQVlGLElBQUlDO0FBQ3pCO0FBQ08sU0FBU0MsWUFBWUYsRUFBRSxFQUFFRyxRQUFRO0lBQ3RDQSxXQUFXQyxNQUFNQyxPQUFPLENBQUNGLFlBQVlBLFdBQVc7UUFBQ0E7S0FBUztJQUMxRCxPQUFPQSxTQUFTRyxLQUFLLENBQUNMLENBQUFBO1FBQ3BCLE9BQU9NLG1CQUFtQlAsSUFBSUM7SUFDaEM7QUFDRjtBQUNPLFNBQVNPLFlBQVlSLEVBQUU7SUFDNUJBLEdBQUdTLElBQUksR0FBR1QsR0FBR1MsSUFBSSxJQUFJLENBQUM7SUFDdEJULEdBQUdTLElBQUksQ0FBQ0MsSUFBSSxHQUFHVixHQUFHUyxJQUFJLENBQUNDLElBQUksSUFBSSxDQUFDO0lBRWhDLElBQUssTUFBTUMsT0FBT2pCLDZEQUFjQSxDQUFFO1FBQ2hDLElBQUlNLEdBQUdTLElBQUksQ0FBQ0MsSUFBSSxDQUFDQyxJQUFJLEtBQUtDLFdBQVc7WUFDbkNaLEdBQUdTLElBQUksQ0FBQ0MsSUFBSSxDQUFDQyxJQUFJLEdBQUdKLG1CQUFtQlAsSUFBSVc7UUFDN0M7SUFDRjtJQUVBLE9BQU9YLEdBQUdTLElBQUksQ0FBQ0MsSUFBSTtBQUNyQjtBQUVBLFNBQVNILG1CQUFtQlAsRUFBRSxFQUFFVyxHQUFHO0lBQ2pDWCxHQUFHUyxJQUFJLEdBQUdULEdBQUdTLElBQUksSUFBSSxDQUFDO0lBQ3RCVCxHQUFHUyxJQUFJLENBQUNDLElBQUksR0FBR1YsR0FBR1MsSUFBSSxDQUFDQyxJQUFJLElBQUksQ0FBQztJQUVoQyxJQUFJVixHQUFHUyxJQUFJLENBQUNDLElBQUksQ0FBQ0MsSUFBSSxLQUFLQyxXQUFXO1FBQ25DWixHQUFHUyxJQUFJLENBQUNDLElBQUksQ0FBQ0MsSUFBSSxHQUFHRSxhQUFhYixJQUFJVztJQUN2QztJQUVBLElBQUksQ0FBQ1gsR0FBR1MsSUFBSSxDQUFDQyxJQUFJLENBQUNDLElBQUksRUFBRTtRQUN0QmYsaURBQUdBLENBQUNBLEdBQUcsQ0FBQ0UseUJBQXlCLFlBQVlnQixNQUFNLENBQUNILEtBQUs7SUFDM0Q7SUFFQSxPQUFPWCxHQUFHUyxJQUFJLENBQUNDLElBQUksQ0FBQ0MsSUFBSTtBQUMxQjtBQUVBLFNBQVNFLGFBQWFiLEVBQUUsRUFBRVcsR0FBRztJQUMzQixNQUFNVixVQUFVUCw2REFBYyxDQUFDaUIsSUFBSTtJQUNuQ2QscURBQU1BLENBQUNJLFNBQVNVO0lBQ2hCLElBQUlJO0lBQ0osTUFBTUMsb0JBQW9CckIsMERBQVFBLENBQUNLLE1BQU1DLE9BQU8sQ0FBQyxFQUFFLElBQUlBLE9BQU8sQ0FBQyxFQUFFLEdBQUdBLE9BQU8sQ0FBQyxFQUFFO0lBRTlFLElBQUksT0FBT2Usc0JBQXNCLFlBQVk7UUFDM0NELGNBQWNDLGtCQUFrQmhCO0lBQ2xDLE9BQU8sSUFBSUksTUFBTUMsT0FBTyxDQUFDVyxvQkFBb0I7UUFDM0NELGNBQWM7UUFFZCxLQUFLLE1BQU1FLGFBQWFELGtCQUFtQjtZQUN6Q0QsY0FBY0EsZUFBZUcsUUFBUWxCLEdBQUdtQixZQUFZLENBQUNGO1FBQ3ZEO0lBQ0YsT0FBTyxJQUFJLE9BQU9ELHNCQUFzQixVQUFVO1FBQ2hERCxjQUFjRyxRQUFRbEIsR0FBR21CLFlBQVksQ0FBQ0g7SUFDeEMsT0FBTyxJQUFJLE9BQU9BLHNCQUFzQixXQUFXO1FBQ2pERCxjQUFjQztJQUNoQixPQUFPO1FBQ0xuQixxREFBTUEsQ0FBQztJQUNUO0lBRUEsT0FBT2tCO0FBQ1QsRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS9mZWF0dXJlcy9mZWF0dXJlcy5qcz82MTA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXRUJHTF9GRUFUVVJFUyBmcm9tICcuL3dlYmdsLWZlYXR1cmVzLXRhYmxlJztcbmltcG9ydCB7IGlzV2ViR0wyLCBsb2cgfSBmcm9tICdAbHVtYS5nbC9nbHRvb2xzJztcbmltcG9ydCB7IGFzc2VydCB9IGZyb20gJy4uL3V0aWxzL2Fzc2VydCc7XG5jb25zdCBMT0dfVU5TVVBQT1JURURfRkVBVFVSRSA9IDI7XG5leHBvcnQgZnVuY3Rpb24gaGFzRmVhdHVyZShnbCwgZmVhdHVyZSkge1xuICByZXR1cm4gaGFzRmVhdHVyZXMoZ2wsIGZlYXR1cmUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc0ZlYXR1cmVzKGdsLCBmZWF0dXJlcykge1xuICBmZWF0dXJlcyA9IEFycmF5LmlzQXJyYXkoZmVhdHVyZXMpID8gZmVhdHVyZXMgOiBbZmVhdHVyZXNdO1xuICByZXR1cm4gZmVhdHVyZXMuZXZlcnkoZmVhdHVyZSA9PiB7XG4gICAgcmV0dXJuIGlzRmVhdHVyZVN1cHBvcnRlZChnbCwgZmVhdHVyZSk7XG4gIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEZlYXR1cmVzKGdsKSB7XG4gIGdsLmx1bWEgPSBnbC5sdW1hIHx8IHt9O1xuICBnbC5sdW1hLmNhcHMgPSBnbC5sdW1hLmNhcHMgfHwge307XG5cbiAgZm9yIChjb25zdCBjYXAgaW4gV0VCR0xfRkVBVFVSRVMpIHtcbiAgICBpZiAoZ2wubHVtYS5jYXBzW2NhcF0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgZ2wubHVtYS5jYXBzW2NhcF0gPSBpc0ZlYXR1cmVTdXBwb3J0ZWQoZ2wsIGNhcCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGdsLmx1bWEuY2Fwcztcbn1cblxuZnVuY3Rpb24gaXNGZWF0dXJlU3VwcG9ydGVkKGdsLCBjYXApIHtcbiAgZ2wubHVtYSA9IGdsLmx1bWEgfHwge307XG4gIGdsLmx1bWEuY2FwcyA9IGdsLmx1bWEuY2FwcyB8fCB7fTtcblxuICBpZiAoZ2wubHVtYS5jYXBzW2NhcF0gPT09IHVuZGVmaW5lZCkge1xuICAgIGdsLmx1bWEuY2Fwc1tjYXBdID0gcXVlcnlGZWF0dXJlKGdsLCBjYXApO1xuICB9XG5cbiAgaWYgKCFnbC5sdW1hLmNhcHNbY2FwXSkge1xuICAgIGxvZy5sb2coTE9HX1VOU1VQUE9SVEVEX0ZFQVRVUkUsIFwiRmVhdHVyZTogXCIuY29uY2F0KGNhcCwgXCIgbm90IHN1cHBvcnRlZFwiKSkoKTtcbiAgfVxuXG4gIHJldHVybiBnbC5sdW1hLmNhcHNbY2FwXTtcbn1cblxuZnVuY3Rpb24gcXVlcnlGZWF0dXJlKGdsLCBjYXApIHtcbiAgY29uc3QgZmVhdHVyZSA9IFdFQkdMX0ZFQVRVUkVTW2NhcF07XG4gIGFzc2VydChmZWF0dXJlLCBjYXApO1xuICBsZXQgaXNTdXBwb3J0ZWQ7XG4gIGNvbnN0IGZlYXR1cmVEZWZpbml0aW9uID0gaXNXZWJHTDIoZ2wpID8gZmVhdHVyZVsxXSB8fCBmZWF0dXJlWzBdIDogZmVhdHVyZVswXTtcblxuICBpZiAodHlwZW9mIGZlYXR1cmVEZWZpbml0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaXNTdXBwb3J0ZWQgPSBmZWF0dXJlRGVmaW5pdGlvbihnbCk7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShmZWF0dXJlRGVmaW5pdGlvbikpIHtcbiAgICBpc1N1cHBvcnRlZCA9IHRydWU7XG5cbiAgICBmb3IgKGNvbnN0IGV4dGVuc2lvbiBvZiBmZWF0dXJlRGVmaW5pdGlvbikge1xuICAgICAgaXNTdXBwb3J0ZWQgPSBpc1N1cHBvcnRlZCAmJiBCb29sZWFuKGdsLmdldEV4dGVuc2lvbihleHRlbnNpb24pKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodHlwZW9mIGZlYXR1cmVEZWZpbml0aW9uID09PSAnc3RyaW5nJykge1xuICAgIGlzU3VwcG9ydGVkID0gQm9vbGVhbihnbC5nZXRFeHRlbnNpb24oZmVhdHVyZURlZmluaXRpb24pKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZmVhdHVyZURlZmluaXRpb24gPT09ICdib29sZWFuJykge1xuICAgIGlzU3VwcG9ydGVkID0gZmVhdHVyZURlZmluaXRpb247XG4gIH0gZWxzZSB7XG4gICAgYXNzZXJ0KGZhbHNlKTtcbiAgfVxuXG4gIHJldHVybiBpc1N1cHBvcnRlZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZlYXR1cmVzLmpzLm1hcCJdLCJuYW1lcyI6WyJXRUJHTF9GRUFUVVJFUyIsImlzV2ViR0wyIiwibG9nIiwiYXNzZXJ0IiwiTE9HX1VOU1VQUE9SVEVEX0ZFQVRVUkUiLCJoYXNGZWF0dXJlIiwiZ2wiLCJmZWF0dXJlIiwiaGFzRmVhdHVyZXMiLCJmZWF0dXJlcyIsIkFycmF5IiwiaXNBcnJheSIsImV2ZXJ5IiwiaXNGZWF0dXJlU3VwcG9ydGVkIiwiZ2V0RmVhdHVyZXMiLCJsdW1hIiwiY2FwcyIsImNhcCIsInVuZGVmaW5lZCIsInF1ZXJ5RmVhdHVyZSIsImNvbmNhdCIsImlzU3VwcG9ydGVkIiwiZmVhdHVyZURlZmluaXRpb24iLCJleHRlbnNpb24iLCJCb29sZWFuIiwiZ2V0RXh0ZW5zaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/features.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FEATURES: () => (/* binding */ FEATURES),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _classes_framebuffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes/framebuffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _classes_texture_2d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../classes/texture-2d */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n\n\nconst FEATURES = {\n    WEBGL2: \"WEBGL2\",\n    VERTEX_ARRAY_OBJECT: \"VERTEX_ARRAY_OBJECT\",\n    TIMER_QUERY: \"TIMER_QUERY\",\n    INSTANCED_RENDERING: \"INSTANCED_RENDERING\",\n    MULTIPLE_RENDER_TARGETS: \"MULTIPLE_RENDER_TARGETS\",\n    ELEMENT_INDEX_UINT32: \"ELEMENT_INDEX_UINT32\",\n    BLEND_EQUATION_MINMAX: \"BLEND_EQUATION_MINMAX\",\n    FLOAT_BLEND: \"FLOAT_BLEND\",\n    COLOR_ENCODING_SRGB: \"COLOR_ENCODING_SRGB\",\n    TEXTURE_DEPTH: \"TEXTURE_DEPTH\",\n    TEXTURE_FLOAT: \"TEXTURE_FLOAT\",\n    TEXTURE_HALF_FLOAT: \"TEXTURE_HALF_FLOAT\",\n    TEXTURE_FILTER_LINEAR_FLOAT: \"TEXTURE_FILTER_LINEAR_FLOAT\",\n    TEXTURE_FILTER_LINEAR_HALF_FLOAT: \"TEXTURE_FILTER_LINEAR_HALF_FLOAT\",\n    TEXTURE_FILTER_ANISOTROPIC: \"TEXTURE_FILTER_ANISOTROPIC\",\n    COLOR_ATTACHMENT_RGBA32F: \"COLOR_ATTACHMENT_RGBA32F\",\n    COLOR_ATTACHMENT_FLOAT: \"COLOR_ATTACHMENT_FLOAT\",\n    COLOR_ATTACHMENT_HALF_FLOAT: \"COLOR_ATTACHMENT_HALF_FLOAT\",\n    GLSL_FRAG_DATA: \"GLSL_FRAG_DATA\",\n    GLSL_FRAG_DEPTH: \"GLSL_FRAG_DEPTH\",\n    GLSL_DERIVATIVES: \"GLSL_DERIVATIVES\",\n    GLSL_TEXTURE_LOD: \"GLSL_TEXTURE_LOD\"\n};\nfunction checkFloat32ColorAttachment(gl) {\n    const testTexture = new _classes_texture_2d__WEBPACK_IMPORTED_MODULE_0__[\"default\"](gl, {\n        format: 6408,\n        type: 5126,\n        dataFormat: 6408\n    });\n    const testFb = new _classes_framebuffer__WEBPACK_IMPORTED_MODULE_1__[\"default\"](gl, {\n        id: \"test-framebuffer\",\n        check: false,\n        attachments: {\n            [36064]: testTexture\n        }\n    });\n    const status = testFb.getStatus();\n    testTexture.delete();\n    testFb.delete();\n    return status === 36053;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    [FEATURES.WEBGL2]: [\n        false,\n        true\n    ],\n    [FEATURES.VERTEX_ARRAY_OBJECT]: [\n        \"OES_vertex_array_object\",\n        true\n    ],\n    [FEATURES.TIMER_QUERY]: [\n        \"EXT_disjoint_timer_query\",\n        \"EXT_disjoint_timer_query_webgl2\"\n    ],\n    [FEATURES.INSTANCED_RENDERING]: [\n        \"ANGLE_instanced_arrays\",\n        true\n    ],\n    [FEATURES.MULTIPLE_RENDER_TARGETS]: [\n        \"WEBGL_draw_buffers\",\n        true\n    ],\n    [FEATURES.ELEMENT_INDEX_UINT32]: [\n        \"OES_element_index_uint\",\n        true\n    ],\n    [FEATURES.BLEND_EQUATION_MINMAX]: [\n        \"EXT_blend_minmax\",\n        true\n    ],\n    [FEATURES.FLOAT_BLEND]: [\n        \"EXT_float_blend\"\n    ],\n    [FEATURES.COLOR_ENCODING_SRGB]: [\n        \"EXT_sRGB\",\n        true\n    ],\n    [FEATURES.TEXTURE_DEPTH]: [\n        \"WEBGL_depth_texture\",\n        true\n    ],\n    [FEATURES.TEXTURE_FLOAT]: [\n        \"OES_texture_float\",\n        true\n    ],\n    [FEATURES.TEXTURE_HALF_FLOAT]: [\n        \"OES_texture_half_float\",\n        true\n    ],\n    [FEATURES.TEXTURE_FILTER_LINEAR_FLOAT]: [\n        \"OES_texture_float_linear\"\n    ],\n    [FEATURES.TEXTURE_FILTER_LINEAR_HALF_FLOAT]: [\n        \"OES_texture_half_float_linear\"\n    ],\n    [FEATURES.TEXTURE_FILTER_ANISOTROPIC]: [\n        \"EXT_texture_filter_anisotropic\"\n    ],\n    [FEATURES.COLOR_ATTACHMENT_RGBA32F]: [\n        checkFloat32ColorAttachment,\n        \"EXT_color_buffer_float\"\n    ],\n    [FEATURES.COLOR_ATTACHMENT_FLOAT]: [\n        false,\n        \"EXT_color_buffer_float\"\n    ],\n    [FEATURES.COLOR_ATTACHMENT_HALF_FLOAT]: [\n        \"EXT_color_buffer_half_float\"\n    ],\n    [FEATURES.GLSL_FRAG_DATA]: [\n        \"WEBGL_draw_buffers\",\n        true\n    ],\n    [FEATURES.GLSL_FRAG_DEPTH]: [\n        \"EXT_frag_depth\",\n        true\n    ],\n    [FEATURES.GLSL_DERIVATIVES]: [\n        \"OES_standard_derivatives\",\n        true\n    ],\n    [FEATURES.GLSL_TEXTURE_LOD]: [\n        \"EXT_shader_texture_lod\",\n        true\n    ]\n}); //# sourceMappingURL=webgl-features-table.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vZmVhdHVyZXMvd2ViZ2wtZmVhdHVyZXMtdGFibGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRDtBQUNIO0FBQ3ZDLE1BQU1FLFdBQVc7SUFDdEJDLFFBQVE7SUFDUkMscUJBQXFCO0lBQ3JCQyxhQUFhO0lBQ2JDLHFCQUFxQjtJQUNyQkMseUJBQXlCO0lBQ3pCQyxzQkFBc0I7SUFDdEJDLHVCQUF1QjtJQUN2QkMsYUFBYTtJQUNiQyxxQkFBcUI7SUFDckJDLGVBQWU7SUFDZkMsZUFBZTtJQUNmQyxvQkFBb0I7SUFDcEJDLDZCQUE2QjtJQUM3QkMsa0NBQWtDO0lBQ2xDQyw0QkFBNEI7SUFDNUJDLDBCQUEwQjtJQUMxQkMsd0JBQXdCO0lBQ3hCQyw2QkFBNkI7SUFDN0JDLGdCQUFnQjtJQUNoQkMsaUJBQWlCO0lBQ2pCQyxrQkFBa0I7SUFDbEJDLGtCQUFrQjtBQUNwQixFQUFFO0FBRUYsU0FBU0MsNEJBQTRCQyxFQUFFO0lBQ3JDLE1BQU1DLGNBQWMsSUFBSTFCLDJEQUFTQSxDQUFDeUIsSUFBSTtRQUNwQ0UsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLFlBQVk7SUFDZDtJQUNBLE1BQU1DLFNBQVMsSUFBSS9CLDREQUFXQSxDQUFDMEIsSUFBSTtRQUNqQ00sSUFBSTtRQUNKQyxPQUFPO1FBQ1BDLGFBQWE7WUFDWCxDQUFDLE1BQU0sRUFBRVA7UUFDWDtJQUNGO0lBQ0EsTUFBTVEsU0FBU0osT0FBT0ssU0FBUztJQUMvQlQsWUFBWVUsTUFBTTtJQUNsQk4sT0FBT00sTUFBTTtJQUNiLE9BQU9GLFdBQVc7QUFDcEI7QUFFQSxpRUFBZTtJQUNiLENBQUNqQyxTQUFTQyxNQUFNLENBQUMsRUFBRTtRQUFDO1FBQU87S0FBSztJQUNoQyxDQUFDRCxTQUFTRSxtQkFBbUIsQ0FBQyxFQUFFO1FBQUM7UUFBMkI7S0FBSztJQUNqRSxDQUFDRixTQUFTRyxXQUFXLENBQUMsRUFBRTtRQUFDO1FBQTRCO0tBQWtDO0lBQ3ZGLENBQUNILFNBQVNJLG1CQUFtQixDQUFDLEVBQUU7UUFBQztRQUEwQjtLQUFLO0lBQ2hFLENBQUNKLFNBQVNLLHVCQUF1QixDQUFDLEVBQUU7UUFBQztRQUFzQjtLQUFLO0lBQ2hFLENBQUNMLFNBQVNNLG9CQUFvQixDQUFDLEVBQUU7UUFBQztRQUEwQjtLQUFLO0lBQ2pFLENBQUNOLFNBQVNPLHFCQUFxQixDQUFDLEVBQUU7UUFBQztRQUFvQjtLQUFLO0lBQzVELENBQUNQLFNBQVNRLFdBQVcsQ0FBQyxFQUFFO1FBQUM7S0FBa0I7SUFDM0MsQ0FBQ1IsU0FBU1MsbUJBQW1CLENBQUMsRUFBRTtRQUFDO1FBQVk7S0FBSztJQUNsRCxDQUFDVCxTQUFTVSxhQUFhLENBQUMsRUFBRTtRQUFDO1FBQXVCO0tBQUs7SUFDdkQsQ0FBQ1YsU0FBU1csYUFBYSxDQUFDLEVBQUU7UUFBQztRQUFxQjtLQUFLO0lBQ3JELENBQUNYLFNBQVNZLGtCQUFrQixDQUFDLEVBQUU7UUFBQztRQUEwQjtLQUFLO0lBQy9ELENBQUNaLFNBQVNhLDJCQUEyQixDQUFDLEVBQUU7UUFBQztLQUEyQjtJQUNwRSxDQUFDYixTQUFTYyxnQ0FBZ0MsQ0FBQyxFQUFFO1FBQUM7S0FBZ0M7SUFDOUUsQ0FBQ2QsU0FBU2UsMEJBQTBCLENBQUMsRUFBRTtRQUFDO0tBQWlDO0lBQ3pFLENBQUNmLFNBQVNnQix3QkFBd0IsQ0FBQyxFQUFFO1FBQUNPO1FBQTZCO0tBQXlCO0lBQzVGLENBQUN2QixTQUFTaUIsc0JBQXNCLENBQUMsRUFBRTtRQUFDO1FBQU87S0FBeUI7SUFDcEUsQ0FBQ2pCLFNBQVNrQiwyQkFBMkIsQ0FBQyxFQUFFO1FBQUM7S0FBOEI7SUFDdkUsQ0FBQ2xCLFNBQVNtQixjQUFjLENBQUMsRUFBRTtRQUFDO1FBQXNCO0tBQUs7SUFDdkQsQ0FBQ25CLFNBQVNvQixlQUFlLENBQUMsRUFBRTtRQUFDO1FBQWtCO0tBQUs7SUFDcEQsQ0FBQ3BCLFNBQVNxQixnQkFBZ0IsQ0FBQyxFQUFFO1FBQUM7UUFBNEI7S0FBSztJQUMvRCxDQUFDckIsU0FBU3NCLGdCQUFnQixDQUFDLEVBQUU7UUFBQztRQUEwQjtLQUFLO0FBQy9ELENBQUMsRUFBQyxDQUNGLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3dlYmdsL2Rpc3QvZXNtL2ZlYXR1cmVzL3dlYmdsLWZlYXR1cmVzLXRhYmxlLmpzPzA2Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEZyYW1lYnVmZmVyIGZyb20gJy4uL2NsYXNzZXMvZnJhbWVidWZmZXInO1xuaW1wb3J0IFRleHR1cmUyRCBmcm9tICcuLi9jbGFzc2VzL3RleHR1cmUtMmQnO1xuZXhwb3J0IGNvbnN0IEZFQVRVUkVTID0ge1xuICBXRUJHTDI6ICdXRUJHTDInLFxuICBWRVJURVhfQVJSQVlfT0JKRUNUOiAnVkVSVEVYX0FSUkFZX09CSkVDVCcsXG4gIFRJTUVSX1FVRVJZOiAnVElNRVJfUVVFUlknLFxuICBJTlNUQU5DRURfUkVOREVSSU5HOiAnSU5TVEFOQ0VEX1JFTkRFUklORycsXG4gIE1VTFRJUExFX1JFTkRFUl9UQVJHRVRTOiAnTVVMVElQTEVfUkVOREVSX1RBUkdFVFMnLFxuICBFTEVNRU5UX0lOREVYX1VJTlQzMjogJ0VMRU1FTlRfSU5ERVhfVUlOVDMyJyxcbiAgQkxFTkRfRVFVQVRJT05fTUlOTUFYOiAnQkxFTkRfRVFVQVRJT05fTUlOTUFYJyxcbiAgRkxPQVRfQkxFTkQ6ICdGTE9BVF9CTEVORCcsXG4gIENPTE9SX0VOQ09ESU5HX1NSR0I6ICdDT0xPUl9FTkNPRElOR19TUkdCJyxcbiAgVEVYVFVSRV9ERVBUSDogJ1RFWFRVUkVfREVQVEgnLFxuICBURVhUVVJFX0ZMT0FUOiAnVEVYVFVSRV9GTE9BVCcsXG4gIFRFWFRVUkVfSEFMRl9GTE9BVDogJ1RFWFRVUkVfSEFMRl9GTE9BVCcsXG4gIFRFWFRVUkVfRklMVEVSX0xJTkVBUl9GTE9BVDogJ1RFWFRVUkVfRklMVEVSX0xJTkVBUl9GTE9BVCcsXG4gIFRFWFRVUkVfRklMVEVSX0xJTkVBUl9IQUxGX0ZMT0FUOiAnVEVYVFVSRV9GSUxURVJfTElORUFSX0hBTEZfRkxPQVQnLFxuICBURVhUVVJFX0ZJTFRFUl9BTklTT1RST1BJQzogJ1RFWFRVUkVfRklMVEVSX0FOSVNPVFJPUElDJyxcbiAgQ09MT1JfQVRUQUNITUVOVF9SR0JBMzJGOiAnQ09MT1JfQVRUQUNITUVOVF9SR0JBMzJGJyxcbiAgQ09MT1JfQVRUQUNITUVOVF9GTE9BVDogJ0NPTE9SX0FUVEFDSE1FTlRfRkxPQVQnLFxuICBDT0xPUl9BVFRBQ0hNRU5UX0hBTEZfRkxPQVQ6ICdDT0xPUl9BVFRBQ0hNRU5UX0hBTEZfRkxPQVQnLFxuICBHTFNMX0ZSQUdfREFUQTogJ0dMU0xfRlJBR19EQVRBJyxcbiAgR0xTTF9GUkFHX0RFUFRIOiAnR0xTTF9GUkFHX0RFUFRIJyxcbiAgR0xTTF9ERVJJVkFUSVZFUzogJ0dMU0xfREVSSVZBVElWRVMnLFxuICBHTFNMX1RFWFRVUkVfTE9EOiAnR0xTTF9URVhUVVJFX0xPRCdcbn07XG5cbmZ1bmN0aW9uIGNoZWNrRmxvYXQzMkNvbG9yQXR0YWNobWVudChnbCkge1xuICBjb25zdCB0ZXN0VGV4dHVyZSA9IG5ldyBUZXh0dXJlMkQoZ2wsIHtcbiAgICBmb3JtYXQ6IDY0MDgsXG4gICAgdHlwZTogNTEyNixcbiAgICBkYXRhRm9ybWF0OiA2NDA4XG4gIH0pO1xuICBjb25zdCB0ZXN0RmIgPSBuZXcgRnJhbWVidWZmZXIoZ2wsIHtcbiAgICBpZDogXCJ0ZXN0LWZyYW1lYnVmZmVyXCIsXG4gICAgY2hlY2s6IGZhbHNlLFxuICAgIGF0dGFjaG1lbnRzOiB7XG4gICAgICBbMzYwNjRdOiB0ZXN0VGV4dHVyZVxuICAgIH1cbiAgfSk7XG4gIGNvbnN0IHN0YXR1cyA9IHRlc3RGYi5nZXRTdGF0dXMoKTtcbiAgdGVzdFRleHR1cmUuZGVsZXRlKCk7XG4gIHRlc3RGYi5kZWxldGUoKTtcbiAgcmV0dXJuIHN0YXR1cyA9PT0gMzYwNTM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgW0ZFQVRVUkVTLldFQkdMMl06IFtmYWxzZSwgdHJ1ZV0sXG4gIFtGRUFUVVJFUy5WRVJURVhfQVJSQVlfT0JKRUNUXTogWydPRVNfdmVydGV4X2FycmF5X29iamVjdCcsIHRydWVdLFxuICBbRkVBVFVSRVMuVElNRVJfUVVFUlldOiBbJ0VYVF9kaXNqb2ludF90aW1lcl9xdWVyeScsICdFWFRfZGlzam9pbnRfdGltZXJfcXVlcnlfd2ViZ2wyJ10sXG4gIFtGRUFUVVJFUy5JTlNUQU5DRURfUkVOREVSSU5HXTogWydBTkdMRV9pbnN0YW5jZWRfYXJyYXlzJywgdHJ1ZV0sXG4gIFtGRUFUVVJFUy5NVUxUSVBMRV9SRU5ERVJfVEFSR0VUU106IFsnV0VCR0xfZHJhd19idWZmZXJzJywgdHJ1ZV0sXG4gIFtGRUFUVVJFUy5FTEVNRU5UX0lOREVYX1VJTlQzMl06IFsnT0VTX2VsZW1lbnRfaW5kZXhfdWludCcsIHRydWVdLFxuICBbRkVBVFVSRVMuQkxFTkRfRVFVQVRJT05fTUlOTUFYXTogWydFWFRfYmxlbmRfbWlubWF4JywgdHJ1ZV0sXG4gIFtGRUFUVVJFUy5GTE9BVF9CTEVORF06IFsnRVhUX2Zsb2F0X2JsZW5kJ10sXG4gIFtGRUFUVVJFUy5DT0xPUl9FTkNPRElOR19TUkdCXTogWydFWFRfc1JHQicsIHRydWVdLFxuICBbRkVBVFVSRVMuVEVYVFVSRV9ERVBUSF06IFsnV0VCR0xfZGVwdGhfdGV4dHVyZScsIHRydWVdLFxuICBbRkVBVFVSRVMuVEVYVFVSRV9GTE9BVF06IFsnT0VTX3RleHR1cmVfZmxvYXQnLCB0cnVlXSxcbiAgW0ZFQVRVUkVTLlRFWFRVUkVfSEFMRl9GTE9BVF06IFsnT0VTX3RleHR1cmVfaGFsZl9mbG9hdCcsIHRydWVdLFxuICBbRkVBVFVSRVMuVEVYVFVSRV9GSUxURVJfTElORUFSX0ZMT0FUXTogWydPRVNfdGV4dHVyZV9mbG9hdF9saW5lYXInXSxcbiAgW0ZFQVRVUkVTLlRFWFRVUkVfRklMVEVSX0xJTkVBUl9IQUxGX0ZMT0FUXTogWydPRVNfdGV4dHVyZV9oYWxmX2Zsb2F0X2xpbmVhciddLFxuICBbRkVBVFVSRVMuVEVYVFVSRV9GSUxURVJfQU5JU09UUk9QSUNdOiBbJ0VYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpYyddLFxuICBbRkVBVFVSRVMuQ09MT1JfQVRUQUNITUVOVF9SR0JBMzJGXTogW2NoZWNrRmxvYXQzMkNvbG9yQXR0YWNobWVudCwgJ0VYVF9jb2xvcl9idWZmZXJfZmxvYXQnXSxcbiAgW0ZFQVRVUkVTLkNPTE9SX0FUVEFDSE1FTlRfRkxPQVRdOiBbZmFsc2UsICdFWFRfY29sb3JfYnVmZmVyX2Zsb2F0J10sXG4gIFtGRUFUVVJFUy5DT0xPUl9BVFRBQ0hNRU5UX0hBTEZfRkxPQVRdOiBbJ0VYVF9jb2xvcl9idWZmZXJfaGFsZl9mbG9hdCddLFxuICBbRkVBVFVSRVMuR0xTTF9GUkFHX0RBVEFdOiBbJ1dFQkdMX2RyYXdfYnVmZmVycycsIHRydWVdLFxuICBbRkVBVFVSRVMuR0xTTF9GUkFHX0RFUFRIXTogWydFWFRfZnJhZ19kZXB0aCcsIHRydWVdLFxuICBbRkVBVFVSRVMuR0xTTF9ERVJJVkFUSVZFU106IFsnT0VTX3N0YW5kYXJkX2Rlcml2YXRpdmVzJywgdHJ1ZV0sXG4gIFtGRUFUVVJFUy5HTFNMX1RFWFRVUkVfTE9EXTogWydFWFRfc2hhZGVyX3RleHR1cmVfbG9kJywgdHJ1ZV1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJnbC1mZWF0dXJlcy10YWJsZS5qcy5tYXAiXSwibmFtZXMiOlsiRnJhbWVidWZmZXIiLCJUZXh0dXJlMkQiLCJGRUFUVVJFUyIsIldFQkdMMiIsIlZFUlRFWF9BUlJBWV9PQkpFQ1QiLCJUSU1FUl9RVUVSWSIsIklOU1RBTkNFRF9SRU5ERVJJTkciLCJNVUxUSVBMRV9SRU5ERVJfVEFSR0VUUyIsIkVMRU1FTlRfSU5ERVhfVUlOVDMyIiwiQkxFTkRfRVFVQVRJT05fTUlOTUFYIiwiRkxPQVRfQkxFTkQiLCJDT0xPUl9FTkNPRElOR19TUkdCIiwiVEVYVFVSRV9ERVBUSCIsIlRFWFRVUkVfRkxPQVQiLCJURVhUVVJFX0hBTEZfRkxPQVQiLCJURVhUVVJFX0ZJTFRFUl9MSU5FQVJfRkxPQVQiLCJURVhUVVJFX0ZJTFRFUl9MSU5FQVJfSEFMRl9GTE9BVCIsIlRFWFRVUkVfRklMVEVSX0FOSVNPVFJPUElDIiwiQ09MT1JfQVRUQUNITUVOVF9SR0JBMzJGIiwiQ09MT1JfQVRUQUNITUVOVF9GTE9BVCIsIkNPTE9SX0FUVEFDSE1FTlRfSEFMRl9GTE9BVCIsIkdMU0xfRlJBR19EQVRBIiwiR0xTTF9GUkFHX0RFUFRIIiwiR0xTTF9ERVJJVkFUSVZFUyIsIkdMU0xfVEVYVFVSRV9MT0QiLCJjaGVja0Zsb2F0MzJDb2xvckF0dGFjaG1lbnQiLCJnbCIsInRlc3RUZXh0dXJlIiwiZm9ybWF0IiwidHlwZSIsImRhdGFGb3JtYXQiLCJ0ZXN0RmIiLCJpZCIsImNoZWNrIiwiYXR0YWNobWVudHMiLCJzdGF0dXMiLCJnZXRTdGF0dXMiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/format-glsl-error.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/format-glsl-error.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ formatGLSLCompilerError),\n/* harmony export */   parseGLSLCompilerError: () => (/* binding */ parseGLSLCompilerError)\n/* harmony export */ });\n/* harmony import */ var _get_shader_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-shader-name */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-name.js\");\n/* harmony import */ var _get_shader_type_name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-shader-type-name */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-type-name.js\");\n\n\nfunction formatGLSLCompilerError(errLog, src, shaderType) {\n    const { shaderName, errors, warnings } = parseGLSLCompilerError(errLog, src, shaderType);\n    return \"GLSL compilation error in \".concat(shaderName, \"\\n\\n\").concat(errors, \"\\n\").concat(warnings);\n}\nfunction parseGLSLCompilerError(errLog, src, shaderType, shaderName) {\n    const errorStrings = errLog.split(/\\r?\\n/);\n    const errors = {};\n    const warnings = {};\n    const name = shaderName || (0,_get_shader_name__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(src) || \"(unnamed)\";\n    const shaderDescription = \"\".concat((0,_get_shader_type_name__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(shaderType), \" shader \").concat(name);\n    for(let i = 0; i < errorStrings.length; i++){\n        const errorString = errorStrings[i];\n        if (errorString.length <= 1) {\n            continue;\n        }\n        const segments = errorString.split(\":\");\n        const type = segments[0];\n        const line = parseInt(segments[2], 10);\n        if (isNaN(line)) {\n            throw new Error(\"GLSL compilation error in \".concat(shaderDescription, \": \").concat(errLog));\n        }\n        if (type !== \"WARNING\") {\n            errors[line] = errorString;\n        } else {\n            warnings[line] = errorString;\n        }\n    }\n    const lines = addLineNumbers(src);\n    return {\n        shaderName: shaderDescription,\n        errors: formatErrors(errors, lines),\n        warnings: formatErrors(warnings, lines)\n    };\n}\nfunction formatErrors(errors, lines) {\n    let message = \"\";\n    for(let i = 0; i < lines.length; i++){\n        const line = lines[i];\n        if (!errors[i + 3] && !errors[i + 2] && !errors[i + 1]) {\n            continue;\n        }\n        message += \"\".concat(line, \"\\n\");\n        if (errors[i + 1]) {\n            const error = errors[i + 1];\n            const segments = error.split(\":\", 3);\n            const type = segments[0];\n            const column = parseInt(segments[1], 10) || 0;\n            const err = error.substring(segments.join(\":\").length + 1).trim();\n            message += padLeft(\"^^^ \".concat(type, \": \").concat(err, \"\\n\\n\"), column);\n        }\n    }\n    return message;\n}\nfunction addLineNumbers(string) {\n    let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let delim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \": \";\n    const lines = string.split(/\\r?\\n/);\n    const maxDigits = String(lines.length + start - 1).length;\n    return lines.map((line, i)=>{\n        const lineNumber = String(i + start);\n        const digits = lineNumber.length;\n        const prefix = padLeft(lineNumber, maxDigits - digits);\n        return prefix + delim + line;\n    });\n}\nfunction padLeft(string, digits) {\n    let result = \"\";\n    for(let i = 0; i < digits; ++i){\n        result += \" \";\n    }\n    return \"\".concat(result).concat(string);\n} //# sourceMappingURL=format-glsl-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/format-glsl-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-name.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-name.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getShaderName)\n/* harmony export */ });\nfunction getShaderName(shader) {\n    let defaultName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"unnamed\";\n    const SHADER_NAME_REGEXP = /#define[\\s*]SHADER_NAME[\\s*]([A-Za-z0-9_-]+)[\\s*]/;\n    const match = shader.match(SHADER_NAME_REGEXP);\n    return match ? match[1] : defaultName;\n} //# sourceMappingURL=get-shader-name.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vZ2xzbC11dGlscy9nZXQtc2hhZGVyLW5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLFNBQVNBLGNBQWNDLE1BQU07SUFDMUMsSUFBSUMsY0FBY0MsVUFBVUMsTUFBTSxHQUFHLEtBQUtELFNBQVMsQ0FBQyxFQUFFLEtBQUtFLFlBQVlGLFNBQVMsQ0FBQyxFQUFFLEdBQUc7SUFDdEYsTUFBTUcscUJBQXFCO0lBQzNCLE1BQU1DLFFBQVFOLE9BQU9NLEtBQUssQ0FBQ0Q7SUFDM0IsT0FBT0MsUUFBUUEsS0FBSyxDQUFDLEVBQUUsR0FBR0w7QUFDNUIsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS9nbHNsLXV0aWxzL2dldC1zaGFkZXItbmFtZS5qcz82OGJjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFNoYWRlck5hbWUoc2hhZGVyKSB7XG4gIGxldCBkZWZhdWx0TmFtZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJ3VubmFtZWQnO1xuICBjb25zdCBTSEFERVJfTkFNRV9SRUdFWFAgPSAvI2RlZmluZVtcXHMqXVNIQURFUl9OQU1FW1xccypdKFtBLVphLXowLTlfLV0rKVtcXHMqXS87XG4gIGNvbnN0IG1hdGNoID0gc2hhZGVyLm1hdGNoKFNIQURFUl9OQU1FX1JFR0VYUCk7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoWzFdIDogZGVmYXVsdE5hbWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtc2hhZGVyLW5hbWUuanMubWFwIl0sIm5hbWVzIjpbImdldFNoYWRlck5hbWUiLCJzaGFkZXIiLCJkZWZhdWx0TmFtZSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIlNIQURFUl9OQU1FX1JFR0VYUCIsIm1hdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-name.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-type-name.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-type-name.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getShaderTypeName)\n/* harmony export */ });\nconst GL_FRAGMENT_SHADER = 0x8b30;\nconst GL_VERTEX_SHADER = 0x8b31;\nfunction getShaderTypeName(type) {\n    switch(type){\n        case GL_FRAGMENT_SHADER:\n            return \"fragment\";\n        case GL_VERTEX_SHADER:\n            return \"vertex\";\n        default:\n            return \"unknown type\";\n    }\n} //# sourceMappingURL=get-shader-type-name.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vZ2xzbC11dGlscy9nZXQtc2hhZGVyLXR5cGUtbmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEscUJBQXFCO0FBQzNCLE1BQU1DLG1CQUFtQjtBQUNWLFNBQVNDLGtCQUFrQkMsSUFBSTtJQUM1QyxPQUFRQTtRQUNOLEtBQUtIO1lBQ0gsT0FBTztRQUVULEtBQUtDO1lBQ0gsT0FBTztRQUVUO1lBQ0UsT0FBTztJQUNYO0FBQ0YsRUFDQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS9nbHNsLXV0aWxzL2dldC1zaGFkZXItdHlwZS1uYW1lLmpzPzNkZTQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgR0xfRlJBR01FTlRfU0hBREVSID0gMHg4YjMwO1xuY29uc3QgR0xfVkVSVEVYX1NIQURFUiA9IDB4OGIzMTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFNoYWRlclR5cGVOYW1lKHR5cGUpIHtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSBHTF9GUkFHTUVOVF9TSEFERVI6XG4gICAgICByZXR1cm4gJ2ZyYWdtZW50JztcblxuICAgIGNhc2UgR0xfVkVSVEVYX1NIQURFUjpcbiAgICAgIHJldHVybiAndmVydGV4JztcblxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3Vua25vd24gdHlwZSc7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1zaGFkZXItdHlwZS1uYW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJHTF9GUkFHTUVOVF9TSEFERVIiLCJHTF9WRVJURVhfU0hBREVSIiwiZ2V0U2hhZGVyVHlwZU5hbWUiLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-type-name.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-version.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-version.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getShaderVersion)\n/* harmony export */ });\nfunction getShaderVersion(source) {\n    let version = 100;\n    const words = source.match(/[^\\s]+/g);\n    if (words.length >= 2 && words[0] === \"#version\") {\n        const v = parseInt(words[1], 10);\n        if (Number.isFinite(v)) {\n            version = v;\n        }\n    }\n    return version;\n} //# sourceMappingURL=get-shader-version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vZ2xzbC11dGlscy9nZXQtc2hhZGVyLXZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLFNBQVNBLGlCQUFpQkMsTUFBTTtJQUM3QyxJQUFJQyxVQUFVO0lBQ2QsTUFBTUMsUUFBUUYsT0FBT0csS0FBSyxDQUFDO0lBRTNCLElBQUlELE1BQU1FLE1BQU0sSUFBSSxLQUFLRixLQUFLLENBQUMsRUFBRSxLQUFLLFlBQVk7UUFDaEQsTUFBTUcsSUFBSUMsU0FBU0osS0FBSyxDQUFDLEVBQUUsRUFBRTtRQUU3QixJQUFJSyxPQUFPQyxRQUFRLENBQUNILElBQUk7WUFDdEJKLFVBQVVJO1FBQ1o7SUFDRjtJQUVBLE9BQU9KO0FBQ1QsRUFDQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS9nbHNsLXV0aWxzL2dldC1zaGFkZXItdmVyc2lvbi5qcz80M2NmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFNoYWRlclZlcnNpb24oc291cmNlKSB7XG4gIGxldCB2ZXJzaW9uID0gMTAwO1xuICBjb25zdCB3b3JkcyA9IHNvdXJjZS5tYXRjaCgvW15cXHNdKy9nKTtcblxuICBpZiAod29yZHMubGVuZ3RoID49IDIgJiYgd29yZHNbMF0gPT09ICcjdmVyc2lvbicpIHtcbiAgICBjb25zdCB2ID0gcGFyc2VJbnQod29yZHNbMV0sIDEwKTtcblxuICAgIGlmIChOdW1iZXIuaXNGaW5pdGUodikpIHtcbiAgICAgIHZlcnNpb24gPSB2O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB2ZXJzaW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LXNoYWRlci12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRTaGFkZXJWZXJzaW9uIiwic291cmNlIiwidmVyc2lvbiIsIndvcmRzIiwibWF0Y2giLCJsZW5ndGgiLCJ2IiwicGFyc2VJbnQiLCJOdW1iZXIiLCJpc0Zpbml0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/glsl-utils/get-shader-version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/init.js":
/*!******************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/init.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatsManager: () => (/* binding */ StatsManager),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   lumaStats: () => (/* binding */ lumaStats)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _probe_gl_stats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @probe.gl/stats */ \"(ssr)/./node_modules/@probe.gl/stats/dist/esm/index.js\");\n/* harmony import */ var _probe_gl_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @probe.gl/env */ \"(ssr)/./node_modules/@probe.gl/env/dist/esm/lib/is-browser.js\");\n\n\n\nconst VERSION =  true ? \"8.5.21\" : 0;\nconst STARTUP_MESSAGE = \"set luma.log.level=1 (or higher) to trace rendering\";\nclass StatsManager {\n    constructor(){\n        this.stats = new Map();\n    }\n    get(name) {\n        if (!this.stats.has(name)) {\n            this.stats.set(name, new _probe_gl_stats__WEBPACK_IMPORTED_MODULE_1__.Stats({\n                id: name\n            }));\n        }\n        return this.stats.get(name);\n    }\n}\nconst lumaStats = new StatsManager();\nif (globalThis.luma && globalThis.luma.VERSION !== VERSION) {\n    throw new Error(\"luma.gl - multiple VERSIONs detected: \".concat(globalThis.luma.VERSION, \" vs \").concat(VERSION));\n}\nif (!globalThis.luma) {\n    if ((0,_probe_gl_env__WEBPACK_IMPORTED_MODULE_2__[\"default\"])()) {\n        _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.log(1, \"luma.gl \".concat(VERSION, \" - \").concat(STARTUP_MESSAGE))();\n    }\n    globalThis.luma = globalThis.luma || {\n        VERSION,\n        version: VERSION,\n        log: _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log,\n        stats: lumaStats,\n        globals: {\n            modules: {},\n            nodeIO: {}\n        }\n    };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (globalThis.luma); //# sourceMappingURL=init.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vaW5pdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBdUM7QUFDQztBQUNFO0FBQzFDLE1BQU1HLFVBQVUsS0FBb0IsR0FBYyxXQUFXO0FBQzdELE1BQU1DLGtCQUFrQjtBQUNqQixNQUFNQztJQUNYQyxhQUFjO1FBQ1osSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSUM7SUFDbkI7SUFFQUMsSUFBSUMsSUFBSSxFQUFFO1FBQ1IsSUFBSSxDQUFDLElBQUksQ0FBQ0gsS0FBSyxDQUFDSSxHQUFHLENBQUNELE9BQU87WUFDekIsSUFBSSxDQUFDSCxLQUFLLENBQUNLLEdBQUcsQ0FBQ0YsTUFBTSxJQUFJVCxrREFBS0EsQ0FBQztnQkFDN0JZLElBQUlIO1lBQ047UUFDRjtRQUVBLE9BQU8sSUFBSSxDQUFDSCxLQUFLLENBQUNFLEdBQUcsQ0FBQ0M7SUFDeEI7QUFFRjtBQUNBLE1BQU1JLFlBQVksSUFBSVQ7QUFFdEIsSUFBSVUsV0FBV0MsSUFBSSxJQUFJRCxXQUFXQyxJQUFJLENBQUNiLE9BQU8sS0FBS0EsU0FBUztJQUMxRCxNQUFNLElBQUljLE1BQU0seUNBQXlDQyxNQUFNLENBQUNILFdBQVdDLElBQUksQ0FBQ2IsT0FBTyxFQUFFLFFBQVFlLE1BQU0sQ0FBQ2Y7QUFDMUc7QUFFQSxJQUFJLENBQUNZLFdBQVdDLElBQUksRUFBRTtJQUNwQixJQUFJZCx5REFBU0EsSUFBSTtRQUNmRixpREFBR0EsQ0FBQ0EsR0FBRyxDQUFDLEdBQUcsV0FBV2tCLE1BQU0sQ0FBQ2YsU0FBUyxPQUFPZSxNQUFNLENBQUNkO0lBQ3REO0lBRUFXLFdBQVdDLElBQUksR0FBR0QsV0FBV0MsSUFBSSxJQUFJO1FBQ25DYjtRQUNBZ0IsU0FBU2hCO1FBQ1RILEdBQUdBLG1EQUFBQTtRQUNITyxPQUFPTztRQUNQTSxTQUFTO1lBQ1BDLFNBQVMsQ0FBQztZQUNWQyxRQUFRLENBQUM7UUFDWDtJQUNGO0FBQ0Y7QUFFcUI7QUFDckIsaUVBQWVQLFdBQVdDLElBQUksRUFBQyxDQUMvQixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS9pbml0LmpzPzVlYTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nIH0gZnJvbSAnQGx1bWEuZ2wvZ2x0b29scyc7XG5pbXBvcnQgeyBTdGF0cyB9IGZyb20gJ0Bwcm9iZS5nbC9zdGF0cyc7XG5pbXBvcnQgeyBpc0Jyb3dzZXIgfSBmcm9tICdAcHJvYmUuZ2wvZW52JztcbmNvbnN0IFZFUlNJT04gPSB0eXBlb2YgXCI4LjUuMjFcIiAhPT0gJ3VuZGVmaW5lZCcgPyBcIjguNS4yMVwiIDogJ3VudHJhbnNwaWxlZCBzb3VyY2UnO1xuY29uc3QgU1RBUlRVUF9NRVNTQUdFID0gJ3NldCBsdW1hLmxvZy5sZXZlbD0xIChvciBoaWdoZXIpIHRvIHRyYWNlIHJlbmRlcmluZyc7XG5leHBvcnQgY2xhc3MgU3RhdHNNYW5hZ2VyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5zdGF0cyA9IG5ldyBNYXAoKTtcbiAgfVxuXG4gIGdldChuYW1lKSB7XG4gICAgaWYgKCF0aGlzLnN0YXRzLmhhcyhuYW1lKSkge1xuICAgICAgdGhpcy5zdGF0cy5zZXQobmFtZSwgbmV3IFN0YXRzKHtcbiAgICAgICAgaWQ6IG5hbWVcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5zdGF0cy5nZXQobmFtZSk7XG4gIH1cblxufVxuY29uc3QgbHVtYVN0YXRzID0gbmV3IFN0YXRzTWFuYWdlcigpO1xuXG5pZiAoZ2xvYmFsVGhpcy5sdW1hICYmIGdsb2JhbFRoaXMubHVtYS5WRVJTSU9OICE9PSBWRVJTSU9OKSB7XG4gIHRocm93IG5ldyBFcnJvcihcImx1bWEuZ2wgLSBtdWx0aXBsZSBWRVJTSU9OcyBkZXRlY3RlZDogXCIuY29uY2F0KGdsb2JhbFRoaXMubHVtYS5WRVJTSU9OLCBcIiB2cyBcIikuY29uY2F0KFZFUlNJT04pKTtcbn1cblxuaWYgKCFnbG9iYWxUaGlzLmx1bWEpIHtcbiAgaWYgKGlzQnJvd3NlcigpKSB7XG4gICAgbG9nLmxvZygxLCBcImx1bWEuZ2wgXCIuY29uY2F0KFZFUlNJT04sIFwiIC0gXCIpLmNvbmNhdChTVEFSVFVQX01FU1NBR0UpKSgpO1xuICB9XG5cbiAgZ2xvYmFsVGhpcy5sdW1hID0gZ2xvYmFsVGhpcy5sdW1hIHx8IHtcbiAgICBWRVJTSU9OLFxuICAgIHZlcnNpb246IFZFUlNJT04sXG4gICAgbG9nLFxuICAgIHN0YXRzOiBsdW1hU3RhdHMsXG4gICAgZ2xvYmFsczoge1xuICAgICAgbW9kdWxlczoge30sXG4gICAgICBub2RlSU86IHt9XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgeyBsdW1hU3RhdHMgfTtcbmV4cG9ydCBkZWZhdWx0IGdsb2JhbFRoaXMubHVtYTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluaXQuanMubWFwIl0sIm5hbWVzIjpbImxvZyIsIlN0YXRzIiwiaXNCcm93c2VyIiwiVkVSU0lPTiIsIlNUQVJUVVBfTUVTU0FHRSIsIlN0YXRzTWFuYWdlciIsImNvbnN0cnVjdG9yIiwic3RhdHMiLCJNYXAiLCJnZXQiLCJuYW1lIiwiaGFzIiwic2V0IiwiaWQiLCJsdW1hU3RhdHMiLCJnbG9iYWxUaGlzIiwibHVtYSIsIkVycm9yIiwiY29uY2F0IiwidmVyc2lvbiIsImdsb2JhbHMiLCJtb2R1bGVzIiwibm9kZUlPIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/init.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/array-utils-flat.js":
/*!************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/utils/array-utils-flat.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fillArray: () => (/* binding */ fillArray),\n/* harmony export */   getScratchArray: () => (/* binding */ getScratchArray),\n/* harmony export */   getScratchArrayBuffer: () => (/* binding */ getScratchArrayBuffer)\n/* harmony export */ });\nlet arrayBuffer = null;\nfunction getScratchArrayBuffer(byteLength) {\n    if (!arrayBuffer || arrayBuffer.byteLength < byteLength) {\n        arrayBuffer = new ArrayBuffer(byteLength);\n    }\n    return arrayBuffer;\n}\nfunction getScratchArray(Type, length) {\n    const scratchArrayBuffer = getScratchArrayBuffer(Type.BYTES_PER_ELEMENT * length);\n    return new Type(scratchArrayBuffer, 0, length);\n}\nfunction fillArray(_ref) {\n    let { target, source, start = 0, count = 1 } = _ref;\n    const length = source.length;\n    const total = count * length;\n    let copied = 0;\n    for(let i = start; copied < length; copied++){\n        target[i++] = source[copied];\n    }\n    while(copied < total){\n        if (copied < total - copied) {\n            target.copyWithin(start + copied, start, start + copied);\n            copied *= 2;\n        } else {\n            target.copyWithin(start + copied, start, start + total - copied);\n            copied = total;\n        }\n    }\n    return target;\n} //# sourceMappingURL=array-utils-flat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvYXJyYXktdXRpbHMtZmxhdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxjQUFjO0FBQ1gsU0FBU0Msc0JBQXNCQyxVQUFVO0lBQzlDLElBQUksQ0FBQ0YsZUFBZUEsWUFBWUUsVUFBVSxHQUFHQSxZQUFZO1FBQ3ZERixjQUFjLElBQUlHLFlBQVlEO0lBQ2hDO0lBRUEsT0FBT0Y7QUFDVDtBQUNPLFNBQVNJLGdCQUFnQkMsSUFBSSxFQUFFQyxNQUFNO0lBQzFDLE1BQU1DLHFCQUFxQk4sc0JBQXNCSSxLQUFLRyxpQkFBaUIsR0FBR0Y7SUFDMUUsT0FBTyxJQUFJRCxLQUFLRSxvQkFBb0IsR0FBR0Q7QUFDekM7QUFDTyxTQUFTRyxVQUFVQyxJQUFJO0lBQzVCLElBQUksRUFDRkMsTUFBTSxFQUNOQyxNQUFNLEVBQ05DLFFBQVEsQ0FBQyxFQUNUQyxRQUFRLENBQUMsRUFDVixHQUFHSjtJQUNKLE1BQU1KLFNBQVNNLE9BQU9OLE1BQU07SUFDNUIsTUFBTVMsUUFBUUQsUUFBUVI7SUFDdEIsSUFBSVUsU0FBUztJQUViLElBQUssSUFBSUMsSUFBSUosT0FBT0csU0FBU1YsUUFBUVUsU0FBVTtRQUM3Q0wsTUFBTSxDQUFDTSxJQUFJLEdBQUdMLE1BQU0sQ0FBQ0ksT0FBTztJQUM5QjtJQUVBLE1BQU9BLFNBQVNELE1BQU87UUFDckIsSUFBSUMsU0FBU0QsUUFBUUMsUUFBUTtZQUMzQkwsT0FBT08sVUFBVSxDQUFDTCxRQUFRRyxRQUFRSCxPQUFPQSxRQUFRRztZQUNqREEsVUFBVTtRQUNaLE9BQU87WUFDTEwsT0FBT08sVUFBVSxDQUFDTCxRQUFRRyxRQUFRSCxPQUFPQSxRQUFRRSxRQUFRQztZQUN6REEsU0FBU0Q7UUFDWDtJQUNGO0lBRUEsT0FBT0o7QUFDVCxFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3dlYmdsL2Rpc3QvZXNtL3V0aWxzL2FycmF5LXV0aWxzLWZsYXQuanM/ZmM1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgYXJyYXlCdWZmZXIgPSBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNjcmF0Y2hBcnJheUJ1ZmZlcihieXRlTGVuZ3RoKSB7XG4gIGlmICghYXJyYXlCdWZmZXIgfHwgYXJyYXlCdWZmZXIuYnl0ZUxlbmd0aCA8IGJ5dGVMZW5ndGgpIHtcbiAgICBhcnJheUJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihieXRlTGVuZ3RoKTtcbiAgfVxuXG4gIHJldHVybiBhcnJheUJ1ZmZlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY3JhdGNoQXJyYXkoVHlwZSwgbGVuZ3RoKSB7XG4gIGNvbnN0IHNjcmF0Y2hBcnJheUJ1ZmZlciA9IGdldFNjcmF0Y2hBcnJheUJ1ZmZlcihUeXBlLkJZVEVTX1BFUl9FTEVNRU5UICogbGVuZ3RoKTtcbiAgcmV0dXJuIG5ldyBUeXBlKHNjcmF0Y2hBcnJheUJ1ZmZlciwgMCwgbGVuZ3RoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmaWxsQXJyYXkoX3JlZikge1xuICBsZXQge1xuICAgIHRhcmdldCxcbiAgICBzb3VyY2UsXG4gICAgc3RhcnQgPSAwLFxuICAgIGNvdW50ID0gMVxuICB9ID0gX3JlZjtcbiAgY29uc3QgbGVuZ3RoID0gc291cmNlLmxlbmd0aDtcbiAgY29uc3QgdG90YWwgPSBjb3VudCAqIGxlbmd0aDtcbiAgbGV0IGNvcGllZCA9IDA7XG5cbiAgZm9yIChsZXQgaSA9IHN0YXJ0OyBjb3BpZWQgPCBsZW5ndGg7IGNvcGllZCsrKSB7XG4gICAgdGFyZ2V0W2krK10gPSBzb3VyY2VbY29waWVkXTtcbiAgfVxuXG4gIHdoaWxlIChjb3BpZWQgPCB0b3RhbCkge1xuICAgIGlmIChjb3BpZWQgPCB0b3RhbCAtIGNvcGllZCkge1xuICAgICAgdGFyZ2V0LmNvcHlXaXRoaW4oc3RhcnQgKyBjb3BpZWQsIHN0YXJ0LCBzdGFydCArIGNvcGllZCk7XG4gICAgICBjb3BpZWQgKj0gMjtcbiAgICB9IGVsc2Uge1xuICAgICAgdGFyZ2V0LmNvcHlXaXRoaW4oc3RhcnQgKyBjb3BpZWQsIHN0YXJ0LCBzdGFydCArIHRvdGFsIC0gY29waWVkKTtcbiAgICAgIGNvcGllZCA9IHRvdGFsO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheS11dGlscy1mbGF0LmpzLm1hcCJdLCJuYW1lcyI6WyJhcnJheUJ1ZmZlciIsImdldFNjcmF0Y2hBcnJheUJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJBcnJheUJ1ZmZlciIsImdldFNjcmF0Y2hBcnJheSIsIlR5cGUiLCJsZW5ndGgiLCJzY3JhdGNoQXJyYXlCdWZmZXIiLCJCWVRFU19QRVJfRUxFTUVOVCIsImZpbGxBcnJheSIsIl9yZWYiLCJ0YXJnZXQiLCJzb3VyY2UiLCJzdGFydCIsImNvdW50IiwidG90YWwiLCJjb3BpZWQiLCJpIiwiY29weVdpdGhpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/array-utils-flat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js":
/*!**************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: () => (/* binding */ assert)\n/* harmony export */ });\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || \"luma.gl: assertion failed.\");\n    }\n} //# sourceMappingURL=assert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxPQUFPQyxTQUFTLEVBQUVDLE9BQU87SUFDdkMsSUFBSSxDQUFDRCxXQUFXO1FBQ2QsTUFBTSxJQUFJRSxNQUFNRCxXQUFXO0lBQzdCO0FBQ0YsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS91dGlscy9hc3NlcnQuanM/NGIxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlIHx8ICdsdW1hLmdsOiBhc3NlcnRpb24gZmFpbGVkLicpO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3NlcnQuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/check-props.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/utils/check-props.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkProps: () => (/* binding */ checkProps)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n\nfunction checkProps(className, props, propChecks) {\n    const { removedProps = {}, deprecatedProps = {}, replacedProps = {} } = propChecks;\n    for(const propName in removedProps){\n        if (propName in props) {\n            const replacementProp = removedProps[propName];\n            const replacement = replacementProp ? \"\".concat(className, \".\").concat(removedProps[propName]) : \"N/A\";\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.removed(\"\".concat(className, \".\").concat(propName), replacement)();\n        }\n    }\n    for(const propName in deprecatedProps){\n        if (propName in props) {\n            const replacementProp = deprecatedProps[propName];\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"\".concat(className, \".\").concat(propName), \"\".concat(className, \".\").concat(replacementProp))();\n        }\n    }\n    let newProps = null;\n    for(const propName in replacedProps){\n        if (propName in props) {\n            const replacementProp = replacedProps[propName];\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.deprecated(\"\".concat(className, \".\").concat(propName), \"\".concat(className, \".\").concat(replacementProp))();\n            newProps = newProps || Object.assign({}, props);\n            newProps[replacementProp] = props[propName];\n            delete newProps[propName];\n        }\n    }\n    return newProps || props;\n} //# sourceMappingURL=check-props.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvY2hlY2stcHJvcHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFDaEMsU0FBU0MsV0FBV0MsU0FBUyxFQUFFQyxLQUFLLEVBQUVDLFVBQVU7SUFDckQsTUFBTSxFQUNKQyxlQUFlLENBQUMsQ0FBQyxFQUNqQkMsa0JBQWtCLENBQUMsQ0FBQyxFQUNwQkMsZ0JBQWdCLENBQUMsQ0FBQyxFQUNuQixHQUFHSDtJQUVKLElBQUssTUFBTUksWUFBWUgsYUFBYztRQUNuQyxJQUFJRyxZQUFZTCxPQUFPO1lBQ3JCLE1BQU1NLGtCQUFrQkosWUFBWSxDQUFDRyxTQUFTO1lBQzlDLE1BQU1FLGNBQWNELGtCQUFrQixHQUFHRSxNQUFNLENBQUNULFdBQVcsS0FBS1MsTUFBTSxDQUFDTixZQUFZLENBQUNHLFNBQVMsSUFBSTtZQUNqR1IsaURBQUdBLENBQUNZLE9BQU8sQ0FBQyxHQUFHRCxNQUFNLENBQUNULFdBQVcsS0FBS1MsTUFBTSxDQUFDSCxXQUFXRTtRQUMxRDtJQUNGO0lBRUEsSUFBSyxNQUFNRixZQUFZRixnQkFBaUI7UUFDdEMsSUFBSUUsWUFBWUwsT0FBTztZQUNyQixNQUFNTSxrQkFBa0JILGVBQWUsQ0FBQ0UsU0FBUztZQUNqRFIsaURBQUdBLENBQUNhLFVBQVUsQ0FBQyxHQUFHRixNQUFNLENBQUNULFdBQVcsS0FBS1MsTUFBTSxDQUFDSCxXQUFXLEdBQUdHLE1BQU0sQ0FBQ1QsV0FBVyxLQUFLUyxNQUFNLENBQUNGO1FBQzlGO0lBQ0Y7SUFFQSxJQUFJSyxXQUFXO0lBRWYsSUFBSyxNQUFNTixZQUFZRCxjQUFlO1FBQ3BDLElBQUlDLFlBQVlMLE9BQU87WUFDckIsTUFBTU0sa0JBQWtCRixhQUFhLENBQUNDLFNBQVM7WUFDL0NSLGlEQUFHQSxDQUFDYSxVQUFVLENBQUMsR0FBR0YsTUFBTSxDQUFDVCxXQUFXLEtBQUtTLE1BQU0sQ0FBQ0gsV0FBVyxHQUFHRyxNQUFNLENBQUNULFdBQVcsS0FBS1MsTUFBTSxDQUFDRjtZQUM1RkssV0FBV0EsWUFBWUMsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBR2I7WUFDekNXLFFBQVEsQ0FBQ0wsZ0JBQWdCLEdBQUdOLEtBQUssQ0FBQ0ssU0FBUztZQUMzQyxPQUFPTSxRQUFRLENBQUNOLFNBQVM7UUFDM0I7SUFDRjtJQUVBLE9BQU9NLFlBQVlYO0FBQ3JCLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvY2hlY2stcHJvcHMuanM/MzczNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2cgfSBmcm9tICdAbHVtYS5nbC9nbHRvb2xzJztcbmV4cG9ydCBmdW5jdGlvbiBjaGVja1Byb3BzKGNsYXNzTmFtZSwgcHJvcHMsIHByb3BDaGVja3MpIHtcbiAgY29uc3Qge1xuICAgIHJlbW92ZWRQcm9wcyA9IHt9LFxuICAgIGRlcHJlY2F0ZWRQcm9wcyA9IHt9LFxuICAgIHJlcGxhY2VkUHJvcHMgPSB7fVxuICB9ID0gcHJvcENoZWNrcztcblxuICBmb3IgKGNvbnN0IHByb3BOYW1lIGluIHJlbW92ZWRQcm9wcykge1xuICAgIGlmIChwcm9wTmFtZSBpbiBwcm9wcykge1xuICAgICAgY29uc3QgcmVwbGFjZW1lbnRQcm9wID0gcmVtb3ZlZFByb3BzW3Byb3BOYW1lXTtcbiAgICAgIGNvbnN0IHJlcGxhY2VtZW50ID0gcmVwbGFjZW1lbnRQcm9wID8gXCJcIi5jb25jYXQoY2xhc3NOYW1lLCBcIi5cIikuY29uY2F0KHJlbW92ZWRQcm9wc1twcm9wTmFtZV0pIDogJ04vQSc7XG4gICAgICBsb2cucmVtb3ZlZChcIlwiLmNvbmNhdChjbGFzc05hbWUsIFwiLlwiKS5jb25jYXQocHJvcE5hbWUpLCByZXBsYWNlbWVudCkoKTtcbiAgICB9XG4gIH1cblxuICBmb3IgKGNvbnN0IHByb3BOYW1lIGluIGRlcHJlY2F0ZWRQcm9wcykge1xuICAgIGlmIChwcm9wTmFtZSBpbiBwcm9wcykge1xuICAgICAgY29uc3QgcmVwbGFjZW1lbnRQcm9wID0gZGVwcmVjYXRlZFByb3BzW3Byb3BOYW1lXTtcbiAgICAgIGxvZy5kZXByZWNhdGVkKFwiXCIuY29uY2F0KGNsYXNzTmFtZSwgXCIuXCIpLmNvbmNhdChwcm9wTmFtZSksIFwiXCIuY29uY2F0KGNsYXNzTmFtZSwgXCIuXCIpLmNvbmNhdChyZXBsYWNlbWVudFByb3ApKSgpO1xuICAgIH1cbiAgfVxuXG4gIGxldCBuZXdQcm9wcyA9IG51bGw7XG5cbiAgZm9yIChjb25zdCBwcm9wTmFtZSBpbiByZXBsYWNlZFByb3BzKSB7XG4gICAgaWYgKHByb3BOYW1lIGluIHByb3BzKSB7XG4gICAgICBjb25zdCByZXBsYWNlbWVudFByb3AgPSByZXBsYWNlZFByb3BzW3Byb3BOYW1lXTtcbiAgICAgIGxvZy5kZXByZWNhdGVkKFwiXCIuY29uY2F0KGNsYXNzTmFtZSwgXCIuXCIpLmNvbmNhdChwcm9wTmFtZSksIFwiXCIuY29uY2F0KGNsYXNzTmFtZSwgXCIuXCIpLmNvbmNhdChyZXBsYWNlbWVudFByb3ApKSgpO1xuICAgICAgbmV3UHJvcHMgPSBuZXdQcm9wcyB8fCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcyk7XG4gICAgICBuZXdQcm9wc1tyZXBsYWNlbWVudFByb3BdID0gcHJvcHNbcHJvcE5hbWVdO1xuICAgICAgZGVsZXRlIG5ld1Byb3BzW3Byb3BOYW1lXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3UHJvcHMgfHwgcHJvcHM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGVjay1wcm9wcy5qcy5tYXAiXSwibmFtZXMiOlsibG9nIiwiY2hlY2tQcm9wcyIsImNsYXNzTmFtZSIsInByb3BzIiwicHJvcENoZWNrcyIsInJlbW92ZWRQcm9wcyIsImRlcHJlY2F0ZWRQcm9wcyIsInJlcGxhY2VkUHJvcHMiLCJwcm9wTmFtZSIsInJlcGxhY2VtZW50UHJvcCIsInJlcGxhY2VtZW50IiwiY29uY2F0IiwicmVtb3ZlZCIsImRlcHJlY2F0ZWQiLCJuZXdQcm9wcyIsIk9iamVjdCIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/check-props.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/format-value.js":
/*!********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/utils/format-value.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatValue: () => (/* binding */ formatValue)\n/* harmony export */ });\nfunction formatArrayValue(v, opts) {\n    const { maxElts = 16, size = 1 } = opts;\n    let string = \"[\";\n    for(let i = 0; i < v.length && i < maxElts; ++i){\n        if (i > 0) {\n            string += \",\".concat(i % size === 0 ? \" \" : \"\");\n        }\n        string += formatValue(v[i], opts);\n    }\n    const terminator = v.length > maxElts ? \"...\" : \"]\";\n    return \"\".concat(string).concat(terminator);\n}\nfunction formatValue(v) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const EPSILON = 1e-16;\n    const { isInteger = false } = opts;\n    if (Array.isArray(v) || ArrayBuffer.isView(v)) {\n        return formatArrayValue(v, opts);\n    }\n    if (!Number.isFinite(v)) {\n        return String(v);\n    }\n    if (Math.abs(v) < EPSILON) {\n        return isInteger ? \"0\" : \"0.\";\n    }\n    if (isInteger) {\n        return v.toFixed(0);\n    }\n    if (Math.abs(v) > 100 && Math.abs(v) < 10000) {\n        return v.toFixed(0);\n    }\n    const string = v.toPrecision(2);\n    const decimal = string.indexOf(\".0\");\n    return decimal === string.length - 2 ? string.slice(0, -1) : string;\n} //# sourceMappingURL=format-value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvZm9ybWF0LXZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxTQUFTQSxpQkFBaUJDLENBQUMsRUFBRUMsSUFBSTtJQUMvQixNQUFNLEVBQ0pDLFVBQVUsRUFBRSxFQUNaQyxPQUFPLENBQUMsRUFDVCxHQUFHRjtJQUNKLElBQUlHLFNBQVM7SUFFYixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUwsRUFBRU0sTUFBTSxJQUFJRCxJQUFJSCxTQUFTLEVBQUVHLEVBQUc7UUFDaEQsSUFBSUEsSUFBSSxHQUFHO1lBQ1RELFVBQVUsSUFBSUcsTUFBTSxDQUFDRixJQUFJRixTQUFTLElBQUksTUFBTTtRQUM5QztRQUVBQyxVQUFVSSxZQUFZUixDQUFDLENBQUNLLEVBQUUsRUFBRUo7SUFDOUI7SUFFQSxNQUFNUSxhQUFhVCxFQUFFTSxNQUFNLEdBQUdKLFVBQVUsUUFBUTtJQUNoRCxPQUFPLEdBQUdLLE1BQU0sQ0FBQ0gsUUFBUUcsTUFBTSxDQUFDRTtBQUNsQztBQUVPLFNBQVNELFlBQVlSLENBQUM7SUFDM0IsSUFBSUMsT0FBT1MsVUFBVUosTUFBTSxHQUFHLEtBQUtJLFNBQVMsQ0FBQyxFQUFFLEtBQUtDLFlBQVlELFNBQVMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztJQUNoRixNQUFNRSxVQUFVO0lBQ2hCLE1BQU0sRUFDSkMsWUFBWSxLQUFLLEVBQ2xCLEdBQUdaO0lBRUosSUFBSWEsTUFBTUMsT0FBTyxDQUFDZixNQUFNZ0IsWUFBWUMsTUFBTSxDQUFDakIsSUFBSTtRQUM3QyxPQUFPRCxpQkFBaUJDLEdBQUdDO0lBQzdCO0lBRUEsSUFBSSxDQUFDaUIsT0FBT0MsUUFBUSxDQUFDbkIsSUFBSTtRQUN2QixPQUFPb0IsT0FBT3BCO0lBQ2hCO0lBRUEsSUFBSXFCLEtBQUtDLEdBQUcsQ0FBQ3RCLEtBQUtZLFNBQVM7UUFDekIsT0FBT0MsWUFBWSxNQUFNO0lBQzNCO0lBRUEsSUFBSUEsV0FBVztRQUNiLE9BQU9iLEVBQUV1QixPQUFPLENBQUM7SUFDbkI7SUFFQSxJQUFJRixLQUFLQyxHQUFHLENBQUN0QixLQUFLLE9BQU9xQixLQUFLQyxHQUFHLENBQUN0QixLQUFLLE9BQU87UUFDNUMsT0FBT0EsRUFBRXVCLE9BQU8sQ0FBQztJQUNuQjtJQUVBLE1BQU1uQixTQUFTSixFQUFFd0IsV0FBVyxDQUFDO0lBQzdCLE1BQU1DLFVBQVVyQixPQUFPc0IsT0FBTyxDQUFDO0lBQy9CLE9BQU9ELFlBQVlyQixPQUFPRSxNQUFNLEdBQUcsSUFBSUYsT0FBT3VCLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBS3ZCO0FBQy9ELEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvZm9ybWF0LXZhbHVlLmpzPzNmOTIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZm9ybWF0QXJyYXlWYWx1ZSh2LCBvcHRzKSB7XG4gIGNvbnN0IHtcbiAgICBtYXhFbHRzID0gMTYsXG4gICAgc2l6ZSA9IDFcbiAgfSA9IG9wdHM7XG4gIGxldCBzdHJpbmcgPSAnWyc7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB2Lmxlbmd0aCAmJiBpIDwgbWF4RWx0czsgKytpKSB7XG4gICAgaWYgKGkgPiAwKSB7XG4gICAgICBzdHJpbmcgKz0gXCIsXCIuY29uY2F0KGkgJSBzaXplID09PSAwID8gJyAnIDogJycpO1xuICAgIH1cblxuICAgIHN0cmluZyArPSBmb3JtYXRWYWx1ZSh2W2ldLCBvcHRzKTtcbiAgfVxuXG4gIGNvbnN0IHRlcm1pbmF0b3IgPSB2Lmxlbmd0aCA+IG1heEVsdHMgPyAnLi4uJyA6ICddJztcbiAgcmV0dXJuIFwiXCIuY29uY2F0KHN0cmluZykuY29uY2F0KHRlcm1pbmF0b3IpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0VmFsdWUodikge1xuICBsZXQgb3B0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gIGNvbnN0IEVQU0lMT04gPSAxZS0xNjtcbiAgY29uc3Qge1xuICAgIGlzSW50ZWdlciA9IGZhbHNlXG4gIH0gPSBvcHRzO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KHYpIHx8IEFycmF5QnVmZmVyLmlzVmlldyh2KSkge1xuICAgIHJldHVybiBmb3JtYXRBcnJheVZhbHVlKHYsIG9wdHMpO1xuICB9XG5cbiAgaWYgKCFOdW1iZXIuaXNGaW5pdGUodikpIHtcbiAgICByZXR1cm4gU3RyaW5nKHYpO1xuICB9XG5cbiAgaWYgKE1hdGguYWJzKHYpIDwgRVBTSUxPTikge1xuICAgIHJldHVybiBpc0ludGVnZXIgPyAnMCcgOiAnMC4nO1xuICB9XG5cbiAgaWYgKGlzSW50ZWdlcikge1xuICAgIHJldHVybiB2LnRvRml4ZWQoMCk7XG4gIH1cblxuICBpZiAoTWF0aC5hYnModikgPiAxMDAgJiYgTWF0aC5hYnModikgPCAxMDAwMCkge1xuICAgIHJldHVybiB2LnRvRml4ZWQoMCk7XG4gIH1cblxuICBjb25zdCBzdHJpbmcgPSB2LnRvUHJlY2lzaW9uKDIpO1xuICBjb25zdCBkZWNpbWFsID0gc3RyaW5nLmluZGV4T2YoJy4wJyk7XG4gIHJldHVybiBkZWNpbWFsID09PSBzdHJpbmcubGVuZ3RoIC0gMiA/IHN0cmluZy5zbGljZSgwLCAtMSkgOiBzdHJpbmc7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXQtdmFsdWUuanMubWFwIl0sIm5hbWVzIjpbImZvcm1hdEFycmF5VmFsdWUiLCJ2Iiwib3B0cyIsIm1heEVsdHMiLCJzaXplIiwic3RyaW5nIiwiaSIsImxlbmd0aCIsImNvbmNhdCIsImZvcm1hdFZhbHVlIiwidGVybWluYXRvciIsImFyZ3VtZW50cyIsInVuZGVmaW5lZCIsIkVQU0lMT04iLCJpc0ludGVnZXIiLCJBcnJheSIsImlzQXJyYXkiLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsIk51bWJlciIsImlzRmluaXRlIiwiU3RyaW5nIiwiTWF0aCIsImFicyIsInRvRml4ZWQiLCJ0b1ByZWNpc2lvbiIsImRlY2ltYWwiLCJpbmRleE9mIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/format-value.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/load-file.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/utils/load-file.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadFile: () => (/* binding */ loadFile),\n/* harmony export */   loadImage: () => (/* binding */ loadImage),\n/* harmony export */   setPathPrefix: () => (/* binding */ setPathPrefix)\n/* harmony export */ });\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\nlet pathPrefix = \"\";\nfunction setPathPrefix(prefix) {\n    pathPrefix = prefix;\n}\nfunction loadFile(url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof url === \"string\");\n    url = pathPrefix + url;\n    const dataType = options.dataType || \"text\";\n    return fetch(url, options).then((res)=>res[dataType]());\n}\nfunction loadImage(url, opts) {\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof url === \"string\");\n    url = pathPrefix + url;\n    return new Promise((resolve, reject)=>{\n        try {\n            const image = new Image();\n            image.onload = ()=>resolve(image);\n            image.onerror = ()=>reject(new Error(\"Could not load image \".concat(url, \".\")));\n            image.crossOrigin = opts && opts.crossOrigin || \"anonymous\";\n            image.src = url;\n        } catch (error) {\n            reject(error);\n        }\n    });\n} //# sourceMappingURL=load-file.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvbG9hZC1maWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUM7QUFDekMsSUFBSUMsYUFBYTtBQUNWLFNBQVNDLGNBQWNDLE1BQU07SUFDbENGLGFBQWFFO0FBQ2Y7QUFDTyxTQUFTQyxTQUFTQyxHQUFHO0lBQzFCLElBQUlDLFVBQVVDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHLENBQUM7SUFDbkZQLHFEQUFNQSxDQUFDLE9BQU9LLFFBQVE7SUFDdEJBLE1BQU1KLGFBQWFJO0lBQ25CLE1BQU1LLFdBQVdKLFFBQVFJLFFBQVEsSUFBSTtJQUNyQyxPQUFPQyxNQUFNTixLQUFLQyxTQUFTTSxJQUFJLENBQUNDLENBQUFBLE1BQU9BLEdBQUcsQ0FBQ0gsU0FBUztBQUN0RDtBQUNPLFNBQVNJLFVBQVVULEdBQUcsRUFBRVUsSUFBSTtJQUNqQ2YscURBQU1BLENBQUMsT0FBT0ssUUFBUTtJQUN0QkEsTUFBTUosYUFBYUk7SUFDbkIsT0FBTyxJQUFJVyxRQUFRLENBQUNDLFNBQVNDO1FBQzNCLElBQUk7WUFDRixNQUFNQyxRQUFRLElBQUlDO1lBRWxCRCxNQUFNRSxNQUFNLEdBQUcsSUFBTUosUUFBUUU7WUFFN0JBLE1BQU1HLE9BQU8sR0FBRyxJQUFNSixPQUFPLElBQUlLLE1BQU0sd0JBQXdCQyxNQUFNLENBQUNuQixLQUFLO1lBRTNFYyxNQUFNTSxXQUFXLEdBQUdWLFFBQVFBLEtBQUtVLFdBQVcsSUFBSTtZQUNoRE4sTUFBTU8sR0FBRyxHQUFHckI7UUFDZCxFQUFFLE9BQU9zQixPQUFPO1lBQ2RULE9BQU9TO1FBQ1Q7SUFDRjtBQUNGLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvbG9hZC1maWxlLmpzPzM5YmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnLi4vdXRpbHMvYXNzZXJ0JztcbmxldCBwYXRoUHJlZml4ID0gJyc7XG5leHBvcnQgZnVuY3Rpb24gc2V0UGF0aFByZWZpeChwcmVmaXgpIHtcbiAgcGF0aFByZWZpeCA9IHByZWZpeDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2FkRmlsZSh1cmwpIHtcbiAgbGV0IG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICBhc3NlcnQodHlwZW9mIHVybCA9PT0gJ3N0cmluZycpO1xuICB1cmwgPSBwYXRoUHJlZml4ICsgdXJsO1xuICBjb25zdCBkYXRhVHlwZSA9IG9wdGlvbnMuZGF0YVR5cGUgfHwgJ3RleHQnO1xuICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKS50aGVuKHJlcyA9PiByZXNbZGF0YVR5cGVdKCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRJbWFnZSh1cmwsIG9wdHMpIHtcbiAgYXNzZXJ0KHR5cGVvZiB1cmwgPT09ICdzdHJpbmcnKTtcbiAgdXJsID0gcGF0aFByZWZpeCArIHVybDtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcblxuICAgICAgaW1hZ2Uub25sb2FkID0gKCkgPT4gcmVzb2x2ZShpbWFnZSk7XG5cbiAgICAgIGltYWdlLm9uZXJyb3IgPSAoKSA9PiByZWplY3QobmV3IEVycm9yKFwiQ291bGQgbm90IGxvYWQgaW1hZ2UgXCIuY29uY2F0KHVybCwgXCIuXCIpKSk7XG5cbiAgICAgIGltYWdlLmNyb3NzT3JpZ2luID0gb3B0cyAmJiBvcHRzLmNyb3NzT3JpZ2luIHx8ICdhbm9ueW1vdXMnO1xuICAgICAgaW1hZ2Uuc3JjID0gdXJsO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZWplY3QoZXJyb3IpO1xuICAgIH1cbiAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2FkLWZpbGUuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsInBhdGhQcmVmaXgiLCJzZXRQYXRoUHJlZml4IiwicHJlZml4IiwibG9hZEZpbGUiLCJ1cmwiLCJvcHRpb25zIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiZGF0YVR5cGUiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJsb2FkSW1hZ2UiLCJvcHRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpbWFnZSIsIkltYWdlIiwib25sb2FkIiwib25lcnJvciIsIkVycm9yIiwiY29uY2F0IiwiY3Jvc3NPcmlnaW4iLCJzcmMiLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/load-file.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/stub-methods.js":
/*!********************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/utils/stub-methods.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stubRemovedMethods: () => (/* binding */ stubRemovedMethods)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/gltools */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n\nfunction stubRemovedMethods(instance, className, version, methodNames) {\n    const upgradeMessage = \"See luma.gl \".concat(version, \" Upgrade Guide at https://luma.gl/docs/upgrade-guide\");\n    const prototype = Object.getPrototypeOf(instance);\n    methodNames.forEach((methodName)=>{\n        if (prototype.methodName) {\n            return;\n        }\n        prototype[methodName] = ()=>{\n            _luma_gl_gltools__WEBPACK_IMPORTED_MODULE_0__.log.removed(\"Calling removed method \".concat(className, \".\").concat(methodName, \": \"), upgradeMessage)();\n            throw new Error(methodName);\n        };\n    });\n} //# sourceMappingURL=stub-methods.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvc3R1Yi1tZXRob2RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBQ2hDLFNBQVNDLG1CQUFtQkMsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRUMsV0FBVztJQUMxRSxNQUFNQyxpQkFBaUIsZUFBZUMsTUFBTSxDQUFDSCxTQUFTO0lBQ3RELE1BQU1JLFlBQVlDLE9BQU9DLGNBQWMsQ0FBQ1I7SUFDeENHLFlBQVlNLE9BQU8sQ0FBQ0MsQ0FBQUE7UUFDbEIsSUFBSUosVUFBVUksVUFBVSxFQUFFO1lBQ3hCO1FBQ0Y7UUFFQUosU0FBUyxDQUFDSSxXQUFXLEdBQUc7WUFDdEJaLGlEQUFHQSxDQUFDYSxPQUFPLENBQUMsMEJBQTBCTixNQUFNLENBQUNKLFdBQVcsS0FBS0ksTUFBTSxDQUFDSyxZQUFZLE9BQU9OO1lBQ3ZGLE1BQU0sSUFBSVEsTUFBTUY7UUFDbEI7SUFDRjtBQUNGLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvc3R1Yi1tZXRob2RzLmpzPzMzZjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nIH0gZnJvbSAnQGx1bWEuZ2wvZ2x0b29scyc7XG5leHBvcnQgZnVuY3Rpb24gc3R1YlJlbW92ZWRNZXRob2RzKGluc3RhbmNlLCBjbGFzc05hbWUsIHZlcnNpb24sIG1ldGhvZE5hbWVzKSB7XG4gIGNvbnN0IHVwZ3JhZGVNZXNzYWdlID0gXCJTZWUgbHVtYS5nbCBcIi5jb25jYXQodmVyc2lvbiwgXCIgVXBncmFkZSBHdWlkZSBhdCBodHRwczovL2x1bWEuZ2wvZG9jcy91cGdyYWRlLWd1aWRlXCIpO1xuICBjb25zdCBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoaW5zdGFuY2UpO1xuICBtZXRob2ROYW1lcy5mb3JFYWNoKG1ldGhvZE5hbWUgPT4ge1xuICAgIGlmIChwcm90b3R5cGUubWV0aG9kTmFtZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHByb3RvdHlwZVttZXRob2ROYW1lXSA9ICgpID0+IHtcbiAgICAgIGxvZy5yZW1vdmVkKFwiQ2FsbGluZyByZW1vdmVkIG1ldGhvZCBcIi5jb25jYXQoY2xhc3NOYW1lLCBcIi5cIikuY29uY2F0KG1ldGhvZE5hbWUsIFwiOiBcIiksIHVwZ3JhZGVNZXNzYWdlKSgpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKG1ldGhvZE5hbWUpO1xuICAgIH07XG4gIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3R1Yi1tZXRob2RzLmpzLm1hcCJdLCJuYW1lcyI6WyJsb2ciLCJzdHViUmVtb3ZlZE1ldGhvZHMiLCJpbnN0YW5jZSIsImNsYXNzTmFtZSIsInZlcnNpb24iLCJtZXRob2ROYW1lcyIsInVwZ3JhZGVNZXNzYWdlIiwiY29uY2F0IiwicHJvdG90eXBlIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJmb3JFYWNoIiwibWV0aG9kTmFtZSIsInJlbW92ZWQiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/stub-methods.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObjectEmpty: () => (/* binding */ isObjectEmpty),\n/* harmony export */   isPowerOfTwo: () => (/* binding */ isPowerOfTwo),\n/* harmony export */   uid: () => (/* binding */ uid)\n/* harmony export */ });\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\nconst uidCounters = {};\nfunction uid() {\n    let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"id\";\n    uidCounters[id] = uidCounters[id] || 1;\n    const count = uidCounters[id]++;\n    return \"\".concat(id, \"-\").concat(count);\n}\nfunction isPowerOfTwo(n) {\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof n === \"number\", \"Input must be a number\");\n    return n && (n & n - 1) === 0;\n}\nfunction isObjectEmpty(obj) {\n    let isEmpty = true;\n    for(const key in obj){\n        isEmpty = false;\n        break;\n    }\n    return isEmpty;\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vdXRpbHMvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrQztBQUNsQyxNQUFNQyxjQUFjLENBQUM7QUFDZCxTQUFTQztJQUNkLElBQUlDLEtBQUtDLFVBQVVDLE1BQU0sR0FBRyxLQUFLRCxTQUFTLENBQUMsRUFBRSxLQUFLRSxZQUFZRixTQUFTLENBQUMsRUFBRSxHQUFHO0lBQzdFSCxXQUFXLENBQUNFLEdBQUcsR0FBR0YsV0FBVyxDQUFDRSxHQUFHLElBQUk7SUFDckMsTUFBTUksUUFBUU4sV0FBVyxDQUFDRSxHQUFHO0lBQzdCLE9BQU8sR0FBR0ssTUFBTSxDQUFDTCxJQUFJLEtBQUtLLE1BQU0sQ0FBQ0Q7QUFDbkM7QUFDTyxTQUFTRSxhQUFhQyxDQUFDO0lBQzVCViwrQ0FBTUEsQ0FBQyxPQUFPVSxNQUFNLFVBQVU7SUFDOUIsT0FBT0EsS0FBSyxDQUFDQSxJQUFJQSxJQUFJLE9BQU87QUFDOUI7QUFDTyxTQUFTQyxjQUFjQyxHQUFHO0lBQy9CLElBQUlDLFVBQVU7SUFFZCxJQUFLLE1BQU1DLE9BQU9GLElBQUs7UUFDckJDLFVBQVU7UUFDVjtJQUNGO0lBRUEsT0FBT0E7QUFDVCxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3dlYmdsL2Rpc3QvZXNtL3V0aWxzL3V0aWxzLmpzPzM1YWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnLi9hc3NlcnQnO1xuY29uc3QgdWlkQ291bnRlcnMgPSB7fTtcbmV4cG9ydCBmdW5jdGlvbiB1aWQoKSB7XG4gIGxldCBpZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJ2lkJztcbiAgdWlkQ291bnRlcnNbaWRdID0gdWlkQ291bnRlcnNbaWRdIHx8IDE7XG4gIGNvbnN0IGNvdW50ID0gdWlkQ291bnRlcnNbaWRdKys7XG4gIHJldHVybiBcIlwiLmNvbmNhdChpZCwgXCItXCIpLmNvbmNhdChjb3VudCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNQb3dlck9mVHdvKG4pIHtcbiAgYXNzZXJ0KHR5cGVvZiBuID09PSAnbnVtYmVyJywgJ0lucHV0IG11c3QgYmUgYSBudW1iZXInKTtcbiAgcmV0dXJuIG4gJiYgKG4gJiBuIC0gMSkgPT09IDA7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3RFbXB0eShvYmopIHtcbiAgbGV0IGlzRW1wdHkgPSB0cnVlO1xuXG4gIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgIGlzRW1wdHkgPSBmYWxzZTtcbiAgICBicmVhaztcbiAgfVxuXG4gIHJldHVybiBpc0VtcHR5O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsInVpZENvdW50ZXJzIiwidWlkIiwiaWQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJjb3VudCIsImNvbmNhdCIsImlzUG93ZXJPZlR3byIsIm4iLCJpc09iamVjdEVtcHR5Iiwib2JqIiwiaXNFbXB0eSIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/attribute-utils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/attribute-utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decomposeCompositeGLType: () => (/* binding */ decomposeCompositeGLType),\n/* harmony export */   getCompositeGLType: () => (/* binding */ getCompositeGLType),\n/* harmony export */   getPrimitiveCount: () => (/* binding */ getPrimitiveCount),\n/* harmony export */   getPrimitiveDrawMode: () => (/* binding */ getPrimitiveDrawMode),\n/* harmony export */   getVertexCount: () => (/* binding */ getVertexCount)\n/* harmony export */ });\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\nconst GL_BYTE = 0x1400;\nconst GL_UNSIGNED_BYTE = 0x1401;\nconst GL_SHORT = 0x1402;\nconst GL_UNSIGNED_SHORT = 0x1403;\nconst GL_POINTS = 0x0;\nconst GL_LINES = 0x1;\nconst GL_LINE_LOOP = 0x2;\nconst GL_LINE_STRIP = 0x3;\nconst GL_TRIANGLES = 0x4;\nconst GL_TRIANGLE_STRIP = 0x5;\nconst GL_TRIANGLE_FAN = 0x6;\nconst GL_FLOAT = 0x1406;\nconst GL_FLOAT_VEC2 = 0x8b50;\nconst GL_FLOAT_VEC3 = 0x8b51;\nconst GL_FLOAT_VEC4 = 0x8b52;\nconst GL_INT = 0x1404;\nconst GL_INT_VEC2 = 0x8b53;\nconst GL_INT_VEC3 = 0x8b54;\nconst GL_INT_VEC4 = 0x8b55;\nconst GL_UNSIGNED_INT = 0x1405;\nconst GL_UNSIGNED_INT_VEC2 = 0x8dc6;\nconst GL_UNSIGNED_INT_VEC3 = 0x8dc7;\nconst GL_UNSIGNED_INT_VEC4 = 0x8dc8;\nconst GL_BOOL = 0x8b56;\nconst GL_BOOL_VEC2 = 0x8b57;\nconst GL_BOOL_VEC3 = 0x8b58;\nconst GL_BOOL_VEC4 = 0x8b59;\nconst GL_FLOAT_MAT2 = 0x8b5a;\nconst GL_FLOAT_MAT3 = 0x8b5b;\nconst GL_FLOAT_MAT4 = 0x8b5c;\nconst GL_FLOAT_MAT2x3 = 0x8b65;\nconst GL_FLOAT_MAT2x4 = 0x8b66;\nconst GL_FLOAT_MAT3x2 = 0x8b67;\nconst GL_FLOAT_MAT3x4 = 0x8b68;\nconst GL_FLOAT_MAT4x2 = 0x8b69;\nconst GL_FLOAT_MAT4x3 = 0x8b6a;\nconst COMPOSITE_GL_TYPES = {\n    [GL_FLOAT]: [\n        GL_FLOAT,\n        1,\n        \"float\"\n    ],\n    [GL_FLOAT_VEC2]: [\n        GL_FLOAT,\n        2,\n        \"vec2\"\n    ],\n    [GL_FLOAT_VEC3]: [\n        GL_FLOAT,\n        3,\n        \"vec3\"\n    ],\n    [GL_FLOAT_VEC4]: [\n        GL_FLOAT,\n        4,\n        \"vec4\"\n    ],\n    [GL_INT]: [\n        GL_INT,\n        1,\n        \"int\"\n    ],\n    [GL_INT_VEC2]: [\n        GL_INT,\n        2,\n        \"ivec2\"\n    ],\n    [GL_INT_VEC3]: [\n        GL_INT,\n        3,\n        \"ivec3\"\n    ],\n    [GL_INT_VEC4]: [\n        GL_INT,\n        4,\n        \"ivec4\"\n    ],\n    [GL_UNSIGNED_INT]: [\n        GL_UNSIGNED_INT,\n        1,\n        \"uint\"\n    ],\n    [GL_UNSIGNED_INT_VEC2]: [\n        GL_UNSIGNED_INT,\n        2,\n        \"uvec2\"\n    ],\n    [GL_UNSIGNED_INT_VEC3]: [\n        GL_UNSIGNED_INT,\n        3,\n        \"uvec3\"\n    ],\n    [GL_UNSIGNED_INT_VEC4]: [\n        GL_UNSIGNED_INT,\n        4,\n        \"uvec4\"\n    ],\n    [GL_BOOL]: [\n        GL_FLOAT,\n        1,\n        \"bool\"\n    ],\n    [GL_BOOL_VEC2]: [\n        GL_FLOAT,\n        2,\n        \"bvec2\"\n    ],\n    [GL_BOOL_VEC3]: [\n        GL_FLOAT,\n        3,\n        \"bvec3\"\n    ],\n    [GL_BOOL_VEC4]: [\n        GL_FLOAT,\n        4,\n        \"bvec4\"\n    ],\n    [GL_FLOAT_MAT2]: [\n        GL_FLOAT,\n        8,\n        \"mat2\"\n    ],\n    [GL_FLOAT_MAT2x3]: [\n        GL_FLOAT,\n        8,\n        \"mat2x3\"\n    ],\n    [GL_FLOAT_MAT2x4]: [\n        GL_FLOAT,\n        8,\n        \"mat2x4\"\n    ],\n    [GL_FLOAT_MAT3]: [\n        GL_FLOAT,\n        12,\n        \"mat3\"\n    ],\n    [GL_FLOAT_MAT3x2]: [\n        GL_FLOAT,\n        12,\n        \"mat3x2\"\n    ],\n    [GL_FLOAT_MAT3x4]: [\n        GL_FLOAT,\n        12,\n        \"mat3x4\"\n    ],\n    [GL_FLOAT_MAT4]: [\n        GL_FLOAT,\n        16,\n        \"mat4\"\n    ],\n    [GL_FLOAT_MAT4x2]: [\n        GL_FLOAT,\n        16,\n        \"mat4x2\"\n    ],\n    [GL_FLOAT_MAT4x3]: [\n        GL_FLOAT,\n        16,\n        \"mat4x3\"\n    ]\n};\nfunction getPrimitiveDrawMode(drawMode) {\n    switch(drawMode){\n        case GL_POINTS:\n            return GL_POINTS;\n        case GL_LINES:\n            return GL_LINES;\n        case GL_LINE_STRIP:\n            return GL_LINES;\n        case GL_LINE_LOOP:\n            return GL_LINES;\n        case GL_TRIANGLES:\n            return GL_TRIANGLES;\n        case GL_TRIANGLE_STRIP:\n            return GL_TRIANGLES;\n        case GL_TRIANGLE_FAN:\n            return GL_TRIANGLES;\n        default:\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n            return 0;\n    }\n}\nfunction getPrimitiveCount(_ref) {\n    let { drawMode, vertexCount } = _ref;\n    switch(drawMode){\n        case GL_POINTS:\n        case GL_LINE_LOOP:\n            return vertexCount;\n        case GL_LINES:\n            return vertexCount / 2;\n        case GL_LINE_STRIP:\n            return vertexCount - 1;\n        case GL_TRIANGLES:\n            return vertexCount / 3;\n        case GL_TRIANGLE_STRIP:\n        case GL_TRIANGLE_FAN:\n            return vertexCount - 2;\n        default:\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n            return 0;\n    }\n}\nfunction getVertexCount(_ref2) {\n    let { drawMode, vertexCount } = _ref2;\n    const primitiveCount = getPrimitiveCount({\n        drawMode,\n        vertexCount\n    });\n    switch(getPrimitiveDrawMode(drawMode)){\n        case GL_POINTS:\n            return primitiveCount;\n        case GL_LINES:\n            return primitiveCount * 2;\n        case GL_TRIANGLES:\n            return primitiveCount * 3;\n        default:\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n            return 0;\n    }\n}\nfunction decomposeCompositeGLType(compositeGLType) {\n    const typeAndSize = COMPOSITE_GL_TYPES[compositeGLType];\n    if (!typeAndSize) {\n        return null;\n    }\n    const [type, components] = typeAndSize;\n    return {\n        type,\n        components\n    };\n}\nfunction getCompositeGLType(type, components) {\n    switch(type){\n        case GL_BYTE:\n        case GL_UNSIGNED_BYTE:\n        case GL_SHORT:\n        case GL_UNSIGNED_SHORT:\n            type = GL_FLOAT;\n            break;\n        default:\n    }\n    for(const glType in COMPOSITE_GL_TYPES){\n        const [compType, compComponents, name] = COMPOSITE_GL_TYPES[glType];\n        if (compType === type && compComponents === components) {\n            return {\n                glType,\n                name\n            };\n        }\n    }\n    return null;\n} //# sourceMappingURL=attribute-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/attribute-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/constants-to-keys.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/constants-to-keys.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getKey: () => (/* binding */ getKey),\n/* harmony export */   getKeyType: () => (/* binding */ getKeyType),\n/* harmony export */   getKeyValue: () => (/* binding */ getKeyValue)\n/* harmony export */ });\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\nfunction getKeyValue(gl, name) {\n    if (typeof name !== \"string\") {\n        return name;\n    }\n    const number = Number(name);\n    if (!isNaN(number)) {\n        return number;\n    }\n    name = name.replace(/^.*\\./, \"\");\n    const value = gl[name];\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(value !== undefined, \"Accessing undefined constant GL.\".concat(name));\n    return value;\n}\nfunction getKey(gl, value) {\n    value = Number(value);\n    for(const key in gl){\n        if (gl[key] === value) {\n            return \"GL.\".concat(key);\n        }\n    }\n    return String(value);\n}\nfunction getKeyType(gl, value) {\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(value !== undefined, \"undefined key\");\n    value = Number(value);\n    for(const key in gl){\n        if (gl[key] === value) {\n            return \"GL.\".concat(key);\n        }\n    }\n    return String(value);\n} //# sourceMappingURL=constants-to-keys.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vd2ViZ2wtdXRpbHMvY29uc3RhbnRzLXRvLWtleXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUNsQyxTQUFTQyxZQUFZQyxFQUFFLEVBQUVDLElBQUk7SUFDbEMsSUFBSSxPQUFPQSxTQUFTLFVBQVU7UUFDNUIsT0FBT0E7SUFDVDtJQUVBLE1BQU1DLFNBQVNDLE9BQU9GO0lBRXRCLElBQUksQ0FBQ0csTUFBTUYsU0FBUztRQUNsQixPQUFPQTtJQUNUO0lBRUFELE9BQU9BLEtBQUtJLE9BQU8sQ0FBQyxTQUFTO0lBQzdCLE1BQU1DLFFBQVFOLEVBQUUsQ0FBQ0MsS0FBSztJQUN0QkgscURBQU1BLENBQUNRLFVBQVVDLFdBQVcsbUNBQW1DQyxNQUFNLENBQUNQO0lBQ3RFLE9BQU9LO0FBQ1Q7QUFDTyxTQUFTRyxPQUFPVCxFQUFFLEVBQUVNLEtBQUs7SUFDOUJBLFFBQVFILE9BQU9HO0lBRWYsSUFBSyxNQUFNSSxPQUFPVixHQUFJO1FBQ3BCLElBQUlBLEVBQUUsQ0FBQ1UsSUFBSSxLQUFLSixPQUFPO1lBQ3JCLE9BQU8sTUFBTUUsTUFBTSxDQUFDRTtRQUN0QjtJQUNGO0lBRUEsT0FBT0MsT0FBT0w7QUFDaEI7QUFDTyxTQUFTTSxXQUFXWixFQUFFLEVBQUVNLEtBQUs7SUFDbENSLHFEQUFNQSxDQUFDUSxVQUFVQyxXQUFXO0lBQzVCRCxRQUFRSCxPQUFPRztJQUVmLElBQUssTUFBTUksT0FBT1YsR0FBSTtRQUNwQixJQUFJQSxFQUFFLENBQUNVLElBQUksS0FBS0osT0FBTztZQUNyQixPQUFPLE1BQU1FLE1BQU0sQ0FBQ0U7UUFDdEI7SUFDRjtJQUVBLE9BQU9DLE9BQU9MO0FBQ2hCLEVBQ0EsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vd2ViZ2wtdXRpbHMvY29uc3RhbnRzLXRvLWtleXMuanM/ZTExYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnQgfSBmcm9tICcuLi91dGlscy9hc3NlcnQnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEtleVZhbHVlKGdsLCBuYW1lKSB7XG4gIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbmFtZTtcbiAgfVxuXG4gIGNvbnN0IG51bWJlciA9IE51bWJlcihuYW1lKTtcblxuICBpZiAoIWlzTmFOKG51bWJlcikpIHtcbiAgICByZXR1cm4gbnVtYmVyO1xuICB9XG5cbiAgbmFtZSA9IG5hbWUucmVwbGFjZSgvXi4qXFwuLywgJycpO1xuICBjb25zdCB2YWx1ZSA9IGdsW25hbWVdO1xuICBhc3NlcnQodmFsdWUgIT09IHVuZGVmaW5lZCwgXCJBY2Nlc3NpbmcgdW5kZWZpbmVkIGNvbnN0YW50IEdMLlwiLmNvbmNhdChuYW1lKSk7XG4gIHJldHVybiB2YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRLZXkoZ2wsIHZhbHVlKSB7XG4gIHZhbHVlID0gTnVtYmVyKHZhbHVlKTtcblxuICBmb3IgKGNvbnN0IGtleSBpbiBnbCkge1xuICAgIGlmIChnbFtrZXldID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuIFwiR0wuXCIuY29uY2F0KGtleSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0S2V5VHlwZShnbCwgdmFsdWUpIHtcbiAgYXNzZXJ0KHZhbHVlICE9PSB1bmRlZmluZWQsICd1bmRlZmluZWQga2V5Jyk7XG4gIHZhbHVlID0gTnVtYmVyKHZhbHVlKTtcblxuICBmb3IgKGNvbnN0IGtleSBpbiBnbCkge1xuICAgIGlmIChnbFtrZXldID09PSB2YWx1ZSkge1xuICAgICAgcmV0dXJuIFwiR0wuXCIuY29uY2F0KGtleSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMtdG8ta2V5cy5qcy5tYXAiXSwibmFtZXMiOlsiYXNzZXJ0IiwiZ2V0S2V5VmFsdWUiLCJnbCIsIm5hbWUiLCJudW1iZXIiLCJOdW1iZXIiLCJpc05hTiIsInJlcGxhY2UiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImNvbmNhdCIsImdldEtleSIsImtleSIsIlN0cmluZyIsImdldEtleVR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/constants-to-keys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/format-utils.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/format-utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   glFormatToComponents: () => (/* binding */ glFormatToComponents),\n/* harmony export */   glTypeToBytes: () => (/* binding */ glTypeToBytes)\n/* harmony export */ });\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\nfunction glFormatToComponents(format) {\n    switch(format){\n        case 6406:\n        case 33326:\n        case 6403:\n            return 1;\n        case 33328:\n        case 33319:\n            return 2;\n        case 6407:\n        case 34837:\n            return 3;\n        case 6408:\n        case 34836:\n            return 4;\n        default:\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n            return 0;\n    }\n}\nfunction glTypeToBytes(type) {\n    switch(type){\n        case 5121:\n            return 1;\n        case 33635:\n        case 32819:\n        case 32820:\n            return 2;\n        case 5126:\n            return 4;\n        default:\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(false);\n            return 0;\n    }\n} //# sourceMappingURL=format-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vd2ViZ2wtdXRpbHMvZm9ybWF0LXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNsQyxTQUFTQyxxQkFBcUJDLE1BQU07SUFDekMsT0FBUUE7UUFDTixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPO1FBRVQsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPO1FBRVQsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPO1FBRVQsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPO1FBRVQ7WUFDRUYscURBQU1BLENBQUM7WUFDUCxPQUFPO0lBQ1g7QUFDRjtBQUNPLFNBQVNHLGNBQWNDLElBQUk7SUFDaEMsT0FBUUE7UUFDTixLQUFLO1lBQ0gsT0FBTztRQUVULEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNILE9BQU87UUFFVCxLQUFLO1lBQ0gsT0FBTztRQUVUO1lBQ0VKLHFEQUFNQSxDQUFDO1lBQ1AsT0FBTztJQUNYO0FBQ0YsRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbHVtYS5nbC93ZWJnbC9kaXN0L2VzbS93ZWJnbC11dGlscy9mb3JtYXQtdXRpbHMuanM/MmFmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnQgfSBmcm9tICcuLi91dGlscy9hc3NlcnQnO1xuZXhwb3J0IGZ1bmN0aW9uIGdsRm9ybWF0VG9Db21wb25lbnRzKGZvcm1hdCkge1xuICBzd2l0Y2ggKGZvcm1hdCkge1xuICAgIGNhc2UgNjQwNjpcbiAgICBjYXNlIDMzMzI2OlxuICAgIGNhc2UgNjQwMzpcbiAgICAgIHJldHVybiAxO1xuXG4gICAgY2FzZSAzMzMyODpcbiAgICBjYXNlIDMzMzE5OlxuICAgICAgcmV0dXJuIDI7XG5cbiAgICBjYXNlIDY0MDc6XG4gICAgY2FzZSAzNDgzNzpcbiAgICAgIHJldHVybiAzO1xuXG4gICAgY2FzZSA2NDA4OlxuICAgIGNhc2UgMzQ4MzY6XG4gICAgICByZXR1cm4gNDtcblxuICAgIGRlZmF1bHQ6XG4gICAgICBhc3NlcnQoZmFsc2UpO1xuICAgICAgcmV0dXJuIDA7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBnbFR5cGVUb0J5dGVzKHR5cGUpIHtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSA1MTIxOlxuICAgICAgcmV0dXJuIDE7XG5cbiAgICBjYXNlIDMzNjM1OlxuICAgIGNhc2UgMzI4MTk6XG4gICAgY2FzZSAzMjgyMDpcbiAgICAgIHJldHVybiAyO1xuXG4gICAgY2FzZSA1MTI2OlxuICAgICAgcmV0dXJuIDQ7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgYXNzZXJ0KGZhbHNlKTtcbiAgICAgIHJldHVybiAwO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXQtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsImdsRm9ybWF0VG9Db21wb25lbnRzIiwiZm9ybWF0IiwiZ2xUeXBlVG9CeXRlcyIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/format-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/request-animation-frame.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/request-animation-frame.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cancelAnimationFrame: () => (/* binding */ cancelAnimationFrame),\n/* harmony export */   requestAnimationFrame: () => (/* binding */ requestAnimationFrame)\n/* harmony export */ });\nfunction requestAnimationFrame(callback) {\n    return  false ? 0 : setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(timerId) {\n    return  false ? 0 : clearTimeout(timerId);\n} //# sourceMappingURL=request-animation-frame.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vd2ViZ2wtdXRpbHMvcmVxdWVzdC1hbmltYXRpb24tZnJhbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTQSxzQkFBc0JDLFFBQVE7SUFDNUMsT0FBTyxNQUE2RCxHQUFHQyxDQUFzQ0QsR0FBR0UsV0FBV0YsVUFBVSxPQUFPO0FBQzlJO0FBQ08sU0FBU0cscUJBQXFCQyxPQUFPO0lBQzFDLE9BQU8sTUFBNEQsR0FBR0gsQ0FBb0NHLEdBQUdDLGFBQWFEO0FBQzVILEVBQ0EsbURBQW1EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vd2ViZ2wtdXRpbHMvcmVxdWVzdC1hbmltYXRpb24tZnJhbWUuanM/NDg2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGNhbGxiYWNrKSB7XG4gIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID8gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShjYWxsYmFjaykgOiBzZXRUaW1lb3V0KGNhbGxiYWNrLCAxMDAwIC8gNjApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNhbmNlbEFuaW1hdGlvbkZyYW1lKHRpbWVySWQpIHtcbiAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSA/IHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSh0aW1lcklkKSA6IGNsZWFyVGltZW91dCh0aW1lcklkKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QtYW5pbWF0aW9uLWZyYW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYWxsYmFjayIsIndpbmRvdyIsInNldFRpbWVvdXQiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInRpbWVySWQiLCJjbGVhclRpbWVvdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/request-animation-frame.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/texture-utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/texture-utils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneTextureFrom: () => (/* binding */ cloneTextureFrom),\n/* harmony export */   toFramebuffer: () => (/* binding */ toFramebuffer)\n/* harmony export */ });\n/* harmony import */ var _classes_texture_2d__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes/texture-2d */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _classes_texture_cube__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes/texture-cube */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-cube.js\");\n/* harmony import */ var _classes_texture_3d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../classes/texture-3d */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-3d.js\");\n/* harmony import */ var _classes_framebuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../classes/framebuffer */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/utils/assert.js\");\n\n\n\n\n\nfunction cloneTextureFrom(refTexture, overrides) {\n    (0,_utils_assert__WEBPACK_IMPORTED_MODULE_0__.assert)(refTexture instanceof _classes_texture_2d__WEBPACK_IMPORTED_MODULE_1__[\"default\"] || refTexture instanceof _classes_texture_cube__WEBPACK_IMPORTED_MODULE_2__[\"default\"] || refTexture instanceof _classes_texture_3d__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n    const TextureType = refTexture.constructor;\n    const { gl, width, height, format, type, dataFormat, border, mipmaps } = refTexture;\n    const textureOptions = Object.assign({\n        width,\n        height,\n        format,\n        type,\n        dataFormat,\n        border,\n        mipmaps\n    }, overrides);\n    return new TextureType(gl, textureOptions);\n}\nfunction toFramebuffer(texture, opts) {\n    const { gl, width, height, id } = texture;\n    const framebuffer = new _classes_framebuffer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](gl, Object.assign({}, opts, {\n        id: \"framebuffer-for-\".concat(id),\n        width,\n        height,\n        attachments: {\n            [36064]: texture\n        }\n    }));\n    return framebuffer;\n} //# sourceMappingURL=texture-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vd2ViZ2wtdXRpbHMvdGV4dHVyZS11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThDO0FBQ0k7QUFDSjtBQUNHO0FBQ1I7QUFDbEMsU0FBU0ssaUJBQWlCQyxVQUFVLEVBQUVDLFNBQVM7SUFDcERILHFEQUFNQSxDQUFDRSxzQkFBc0JOLDJEQUFTQSxJQUFJTSxzQkFBc0JMLDZEQUFXQSxJQUFJSyxzQkFBc0JKLDJEQUFTQTtJQUM5RyxNQUFNTSxjQUFjRixXQUFXRyxXQUFXO0lBQzFDLE1BQU0sRUFDSkMsRUFBRSxFQUNGQyxLQUFLLEVBQ0xDLE1BQU0sRUFDTkMsTUFBTSxFQUNOQyxJQUFJLEVBQ0pDLFVBQVUsRUFDVkMsTUFBTSxFQUNOQyxPQUFPLEVBQ1IsR0FBR1g7SUFDSixNQUFNWSxpQkFBaUJDLE9BQU9DLE1BQU0sQ0FBQztRQUNuQ1Q7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7SUFDRixHQUFHVjtJQUNILE9BQU8sSUFBSUMsWUFBWUUsSUFBSVE7QUFDN0I7QUFDTyxTQUFTRyxjQUFjQyxPQUFPLEVBQUVDLElBQUk7SUFDekMsTUFBTSxFQUNKYixFQUFFLEVBQ0ZDLEtBQUssRUFDTEMsTUFBTSxFQUNOWSxFQUFFLEVBQ0gsR0FBR0Y7SUFDSixNQUFNRyxjQUFjLElBQUl0Qiw0REFBV0EsQ0FBQ08sSUFBSVMsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBR0csTUFBTTtRQUM5REMsSUFBSSxtQkFBbUJFLE1BQU0sQ0FBQ0Y7UUFDOUJiO1FBQ0FDO1FBQ0FlLGFBQWE7WUFDWCxDQUFDLE1BQU0sRUFBRUw7UUFDWDtJQUNGO0lBQ0EsT0FBT0c7QUFDVCxFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BsdW1hLmdsL3dlYmdsL2Rpc3QvZXNtL3dlYmdsLXV0aWxzL3RleHR1cmUtdXRpbHMuanM/MWZjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGV4dHVyZTJEIGZyb20gJy4uL2NsYXNzZXMvdGV4dHVyZS0yZCc7XG5pbXBvcnQgVGV4dHVyZUN1YmUgZnJvbSAnLi4vY2xhc3Nlcy90ZXh0dXJlLWN1YmUnO1xuaW1wb3J0IFRleHR1cmUzRCBmcm9tICcuLi9jbGFzc2VzL3RleHR1cmUtM2QnO1xuaW1wb3J0IEZyYW1lYnVmZmVyIGZyb20gJy4uL2NsYXNzZXMvZnJhbWVidWZmZXInO1xuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSAnLi4vdXRpbHMvYXNzZXJ0JztcbmV4cG9ydCBmdW5jdGlvbiBjbG9uZVRleHR1cmVGcm9tKHJlZlRleHR1cmUsIG92ZXJyaWRlcykge1xuICBhc3NlcnQocmVmVGV4dHVyZSBpbnN0YW5jZW9mIFRleHR1cmUyRCB8fCByZWZUZXh0dXJlIGluc3RhbmNlb2YgVGV4dHVyZUN1YmUgfHwgcmVmVGV4dHVyZSBpbnN0YW5jZW9mIFRleHR1cmUzRCk7XG4gIGNvbnN0IFRleHR1cmVUeXBlID0gcmVmVGV4dHVyZS5jb25zdHJ1Y3RvcjtcbiAgY29uc3Qge1xuICAgIGdsLFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBmb3JtYXQsXG4gICAgdHlwZSxcbiAgICBkYXRhRm9ybWF0LFxuICAgIGJvcmRlcixcbiAgICBtaXBtYXBzXG4gIH0gPSByZWZUZXh0dXJlO1xuICBjb25zdCB0ZXh0dXJlT3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBmb3JtYXQsXG4gICAgdHlwZSxcbiAgICBkYXRhRm9ybWF0LFxuICAgIGJvcmRlcixcbiAgICBtaXBtYXBzXG4gIH0sIG92ZXJyaWRlcyk7XG4gIHJldHVybiBuZXcgVGV4dHVyZVR5cGUoZ2wsIHRleHR1cmVPcHRpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0ZyYW1lYnVmZmVyKHRleHR1cmUsIG9wdHMpIHtcbiAgY29uc3Qge1xuICAgIGdsLFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBpZFxuICB9ID0gdGV4dHVyZTtcbiAgY29uc3QgZnJhbWVidWZmZXIgPSBuZXcgRnJhbWVidWZmZXIoZ2wsIE9iamVjdC5hc3NpZ24oe30sIG9wdHMsIHtcbiAgICBpZDogXCJmcmFtZWJ1ZmZlci1mb3ItXCIuY29uY2F0KGlkKSxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgYXR0YWNobWVudHM6IHtcbiAgICAgIFszNjA2NF06IHRleHR1cmVcbiAgICB9XG4gIH0pKTtcbiAgcmV0dXJuIGZyYW1lYnVmZmVyO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGV4dHVyZS11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiVGV4dHVyZTJEIiwiVGV4dHVyZUN1YmUiLCJUZXh0dXJlM0QiLCJGcmFtZWJ1ZmZlciIsImFzc2VydCIsImNsb25lVGV4dHVyZUZyb20iLCJyZWZUZXh0dXJlIiwib3ZlcnJpZGVzIiwiVGV4dHVyZVR5cGUiLCJjb25zdHJ1Y3RvciIsImdsIiwid2lkdGgiLCJoZWlnaHQiLCJmb3JtYXQiLCJ0eXBlIiwiZGF0YUZvcm1hdCIsImJvcmRlciIsIm1pcG1hcHMiLCJ0ZXh0dXJlT3B0aW9ucyIsIk9iamVjdCIsImFzc2lnbiIsInRvRnJhbWVidWZmZXIiLCJ0ZXh0dXJlIiwib3B0cyIsImlkIiwiZnJhbWVidWZmZXIiLCJjb25jYXQiLCJhdHRhY2htZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/texture-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/typed-array-utils.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/typed-array-utils.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flipRows: () => (/* binding */ flipRows),\n/* harmony export */   getGLTypeFromTypedArray: () => (/* binding */ getGLTypeFromTypedArray),\n/* harmony export */   getTypedArrayFromGLType: () => (/* binding */ getTypedArrayFromGLType),\n/* harmony export */   scalePixels: () => (/* binding */ scalePixels)\n/* harmony export */ });\nconst ERR_TYPE_DEDUCTION = \"Failed to deduce GL constant from typed array\";\nfunction getGLTypeFromTypedArray(arrayOrType) {\n    const type = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;\n    switch(type){\n        case Float32Array:\n            return 5126;\n        case Uint16Array:\n            return 5123;\n        case Uint32Array:\n            return 5125;\n        case Uint8Array:\n            return 5121;\n        case Uint8ClampedArray:\n            return 5121;\n        case Int8Array:\n            return 5120;\n        case Int16Array:\n            return 5122;\n        case Int32Array:\n            return 5124;\n        default:\n            throw new Error(ERR_TYPE_DEDUCTION);\n    }\n}\nfunction getTypedArrayFromGLType(glType) {\n    let { clamped = true } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    switch(glType){\n        case 5126:\n            return Float32Array;\n        case 5123:\n        case 33635:\n        case 32819:\n        case 32820:\n            return Uint16Array;\n        case 5125:\n            return Uint32Array;\n        case 5121:\n            return clamped ? Uint8ClampedArray : Uint8Array;\n        case 5120:\n            return Int8Array;\n        case 5122:\n            return Int16Array;\n        case 5124:\n            return Int32Array;\n        default:\n            throw new Error(\"Failed to deduce typed array type from GL constant\");\n    }\n}\nfunction flipRows(_ref) {\n    let { data, width, height, bytesPerPixel = 4, temp } = _ref;\n    const bytesPerRow = width * bytesPerPixel;\n    temp = temp || new Uint8Array(bytesPerRow);\n    for(let y = 0; y < height / 2; ++y){\n        const topOffset = y * bytesPerRow;\n        const bottomOffset = (height - y - 1) * bytesPerRow;\n        temp.set(data.subarray(topOffset, topOffset + bytesPerRow));\n        data.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n        data.set(temp, bottomOffset);\n    }\n}\nfunction scalePixels(_ref2) {\n    let { data, width, height } = _ref2;\n    const newWidth = Math.round(width / 2);\n    const newHeight = Math.round(height / 2);\n    const newData = new Uint8Array(newWidth * newHeight * 4);\n    for(let y = 0; y < newHeight; y++){\n        for(let x = 0; x < newWidth; x++){\n            for(let c = 0; c < 4; c++){\n                newData[(y * newWidth + x) * 4 + c] = data[(y * 2 * width + x * 2) * 4 + c];\n            }\n        }\n    }\n    return {\n        data: newData,\n        width: newWidth,\n        height: newHeight\n    };\n} //# sourceMappingURL=typed-array-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vd2ViZ2wtdXRpbHMvdHlwZWQtYXJyYXktdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLHFCQUFxQjtBQUNwQixTQUFTQyx3QkFBd0JDLFdBQVc7SUFDakQsTUFBTUMsT0FBT0MsWUFBWUMsTUFBTSxDQUFDSCxlQUFlQSxZQUFZSSxXQUFXLEdBQUdKO0lBRXpFLE9BQVFDO1FBQ04sS0FBS0k7WUFDSCxPQUFPO1FBRVQsS0FBS0M7WUFDSCxPQUFPO1FBRVQsS0FBS0M7WUFDSCxPQUFPO1FBRVQsS0FBS0M7WUFDSCxPQUFPO1FBRVQsS0FBS0M7WUFDSCxPQUFPO1FBRVQsS0FBS0M7WUFDSCxPQUFPO1FBRVQsS0FBS0M7WUFDSCxPQUFPO1FBRVQsS0FBS0M7WUFDSCxPQUFPO1FBRVQ7WUFDRSxNQUFNLElBQUlDLE1BQU1mO0lBQ3BCO0FBQ0Y7QUFDTyxTQUFTZ0Isd0JBQXdCQyxNQUFNO0lBQzVDLElBQUksRUFDRkMsVUFBVSxJQUFJLEVBQ2YsR0FBR0MsVUFBVUMsTUFBTSxHQUFHLEtBQUtELFNBQVMsQ0FBQyxFQUFFLEtBQUtFLFlBQVlGLFNBQVMsQ0FBQyxFQUFFLEdBQUcsQ0FBQztJQUV6RSxPQUFRRjtRQUNOLEtBQUs7WUFDSCxPQUFPVjtRQUVULEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPQztRQUVULEtBQUs7WUFDSCxPQUFPQztRQUVULEtBQUs7WUFDSCxPQUFPUyxVQUFVUCxvQkFBb0JEO1FBRXZDLEtBQUs7WUFDSCxPQUFPRTtRQUVULEtBQUs7WUFDSCxPQUFPQztRQUVULEtBQUs7WUFDSCxPQUFPQztRQUVUO1lBQ0UsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0FBQ0Y7QUFDTyxTQUFTTyxTQUFTQyxJQUFJO0lBQzNCLElBQUksRUFDRkMsSUFBSSxFQUNKQyxLQUFLLEVBQ0xDLE1BQU0sRUFDTkMsZ0JBQWdCLENBQUMsRUFDakJDLElBQUksRUFDTCxHQUFHTDtJQUNKLE1BQU1NLGNBQWNKLFFBQVFFO0lBQzVCQyxPQUFPQSxRQUFRLElBQUlsQixXQUFXbUI7SUFFOUIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlKLFNBQVMsR0FBRyxFQUFFSSxFQUFHO1FBQ25DLE1BQU1DLFlBQVlELElBQUlEO1FBQ3RCLE1BQU1HLGVBQWUsQ0FBQ04sU0FBU0ksSUFBSSxLQUFLRDtRQUN4Q0QsS0FBS0ssR0FBRyxDQUFDVCxLQUFLVSxRQUFRLENBQUNILFdBQVdBLFlBQVlGO1FBQzlDTCxLQUFLVyxVQUFVLENBQUNKLFdBQVdDLGNBQWNBLGVBQWVIO1FBQ3hETCxLQUFLUyxHQUFHLENBQUNMLE1BQU1JO0lBQ2pCO0FBQ0Y7QUFDTyxTQUFTSSxZQUFZQyxLQUFLO0lBQy9CLElBQUksRUFDRmIsSUFBSSxFQUNKQyxLQUFLLEVBQ0xDLE1BQU0sRUFDUCxHQUFHVztJQUNKLE1BQU1DLFdBQVdDLEtBQUtDLEtBQUssQ0FBQ2YsUUFBUTtJQUNwQyxNQUFNZ0IsWUFBWUYsS0FBS0MsS0FBSyxDQUFDZCxTQUFTO0lBQ3RDLE1BQU1nQixVQUFVLElBQUloQyxXQUFXNEIsV0FBV0csWUFBWTtJQUV0RCxJQUFLLElBQUlYLElBQUksR0FBR0EsSUFBSVcsV0FBV1gsSUFBSztRQUNsQyxJQUFLLElBQUlhLElBQUksR0FBR0EsSUFBSUwsVUFBVUssSUFBSztZQUNqQyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSSxHQUFHQSxJQUFLO2dCQUMxQkYsT0FBTyxDQUFDLENBQUNaLElBQUlRLFdBQVdLLENBQUFBLElBQUssSUFBSUMsRUFBRSxHQUFHcEIsSUFBSSxDQUFDLENBQUNNLElBQUksSUFBSUwsUUFBUWtCLElBQUksS0FBSyxJQUFJQyxFQUFFO1lBQzdFO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFDTHBCLE1BQU1rQjtRQUNOakIsT0FBT2E7UUFDUFosUUFBUWU7SUFDVjtBQUNGLEVBQ0EsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGx1bWEuZ2wvd2ViZ2wvZGlzdC9lc20vd2ViZ2wtdXRpbHMvdHlwZWQtYXJyYXktdXRpbHMuanM/ZjY3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBFUlJfVFlQRV9ERURVQ1RJT04gPSAnRmFpbGVkIHRvIGRlZHVjZSBHTCBjb25zdGFudCBmcm9tIHR5cGVkIGFycmF5JztcbmV4cG9ydCBmdW5jdGlvbiBnZXRHTFR5cGVGcm9tVHlwZWRBcnJheShhcnJheU9yVHlwZSkge1xuICBjb25zdCB0eXBlID0gQXJyYXlCdWZmZXIuaXNWaWV3KGFycmF5T3JUeXBlKSA/IGFycmF5T3JUeXBlLmNvbnN0cnVjdG9yIDogYXJyYXlPclR5cGU7XG5cbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSBGbG9hdDMyQXJyYXk6XG4gICAgICByZXR1cm4gNTEyNjtcblxuICAgIGNhc2UgVWludDE2QXJyYXk6XG4gICAgICByZXR1cm4gNTEyMztcblxuICAgIGNhc2UgVWludDMyQXJyYXk6XG4gICAgICByZXR1cm4gNTEyNTtcblxuICAgIGNhc2UgVWludDhBcnJheTpcbiAgICAgIHJldHVybiA1MTIxO1xuXG4gICAgY2FzZSBVaW50OENsYW1wZWRBcnJheTpcbiAgICAgIHJldHVybiA1MTIxO1xuXG4gICAgY2FzZSBJbnQ4QXJyYXk6XG4gICAgICByZXR1cm4gNTEyMDtcblxuICAgIGNhc2UgSW50MTZBcnJheTpcbiAgICAgIHJldHVybiA1MTIyO1xuXG4gICAgY2FzZSBJbnQzMkFycmF5OlxuICAgICAgcmV0dXJuIDUxMjQ7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKEVSUl9UWVBFX0RFRFVDVElPTik7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRUeXBlZEFycmF5RnJvbUdMVHlwZShnbFR5cGUpIHtcbiAgbGV0IHtcbiAgICBjbGFtcGVkID0gdHJ1ZVxuICB9ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICBzd2l0Y2ggKGdsVHlwZSkge1xuICAgIGNhc2UgNTEyNjpcbiAgICAgIHJldHVybiBGbG9hdDMyQXJyYXk7XG5cbiAgICBjYXNlIDUxMjM6XG4gICAgY2FzZSAzMzYzNTpcbiAgICBjYXNlIDMyODE5OlxuICAgIGNhc2UgMzI4MjA6XG4gICAgICByZXR1cm4gVWludDE2QXJyYXk7XG5cbiAgICBjYXNlIDUxMjU6XG4gICAgICByZXR1cm4gVWludDMyQXJyYXk7XG5cbiAgICBjYXNlIDUxMjE6XG4gICAgICByZXR1cm4gY2xhbXBlZCA/IFVpbnQ4Q2xhbXBlZEFycmF5IDogVWludDhBcnJheTtcblxuICAgIGNhc2UgNTEyMDpcbiAgICAgIHJldHVybiBJbnQ4QXJyYXk7XG5cbiAgICBjYXNlIDUxMjI6XG4gICAgICByZXR1cm4gSW50MTZBcnJheTtcblxuICAgIGNhc2UgNTEyNDpcbiAgICAgIHJldHVybiBJbnQzMkFycmF5O1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGRlZHVjZSB0eXBlZCBhcnJheSB0eXBlIGZyb20gR0wgY29uc3RhbnQnKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGZsaXBSb3dzKF9yZWYpIHtcbiAgbGV0IHtcbiAgICBkYXRhLFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBieXRlc1BlclBpeGVsID0gNCxcbiAgICB0ZW1wXG4gIH0gPSBfcmVmO1xuICBjb25zdCBieXRlc1BlclJvdyA9IHdpZHRoICogYnl0ZXNQZXJQaXhlbDtcbiAgdGVtcCA9IHRlbXAgfHwgbmV3IFVpbnQ4QXJyYXkoYnl0ZXNQZXJSb3cpO1xuXG4gIGZvciAobGV0IHkgPSAwOyB5IDwgaGVpZ2h0IC8gMjsgKyt5KSB7XG4gICAgY29uc3QgdG9wT2Zmc2V0ID0geSAqIGJ5dGVzUGVyUm93O1xuICAgIGNvbnN0IGJvdHRvbU9mZnNldCA9IChoZWlnaHQgLSB5IC0gMSkgKiBieXRlc1BlclJvdztcbiAgICB0ZW1wLnNldChkYXRhLnN1YmFycmF5KHRvcE9mZnNldCwgdG9wT2Zmc2V0ICsgYnl0ZXNQZXJSb3cpKTtcbiAgICBkYXRhLmNvcHlXaXRoaW4odG9wT2Zmc2V0LCBib3R0b21PZmZzZXQsIGJvdHRvbU9mZnNldCArIGJ5dGVzUGVyUm93KTtcbiAgICBkYXRhLnNldCh0ZW1wLCBib3R0b21PZmZzZXQpO1xuICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2NhbGVQaXhlbHMoX3JlZjIpIHtcbiAgbGV0IHtcbiAgICBkYXRhLFxuICAgIHdpZHRoLFxuICAgIGhlaWdodFxuICB9ID0gX3JlZjI7XG4gIGNvbnN0IG5ld1dpZHRoID0gTWF0aC5yb3VuZCh3aWR0aCAvIDIpO1xuICBjb25zdCBuZXdIZWlnaHQgPSBNYXRoLnJvdW5kKGhlaWdodCAvIDIpO1xuICBjb25zdCBuZXdEYXRhID0gbmV3IFVpbnQ4QXJyYXkobmV3V2lkdGggKiBuZXdIZWlnaHQgKiA0KTtcblxuICBmb3IgKGxldCB5ID0gMDsgeSA8IG5ld0hlaWdodDsgeSsrKSB7XG4gICAgZm9yIChsZXQgeCA9IDA7IHggPCBuZXdXaWR0aDsgeCsrKSB7XG4gICAgICBmb3IgKGxldCBjID0gMDsgYyA8IDQ7IGMrKykge1xuICAgICAgICBuZXdEYXRhWyh5ICogbmV3V2lkdGggKyB4KSAqIDQgKyBjXSA9IGRhdGFbKHkgKiAyICogd2lkdGggKyB4ICogMikgKiA0ICsgY107XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBkYXRhOiBuZXdEYXRhLFxuICAgIHdpZHRoOiBuZXdXaWR0aCxcbiAgICBoZWlnaHQ6IG5ld0hlaWdodFxuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZWQtYXJyYXktdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIkVSUl9UWVBFX0RFRFVDVElPTiIsImdldEdMVHlwZUZyb21UeXBlZEFycmF5IiwiYXJyYXlPclR5cGUiLCJ0eXBlIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJjb25zdHJ1Y3RvciIsIkZsb2F0MzJBcnJheSIsIlVpbnQxNkFycmF5IiwiVWludDMyQXJyYXkiLCJVaW50OEFycmF5IiwiVWludDhDbGFtcGVkQXJyYXkiLCJJbnQ4QXJyYXkiLCJJbnQxNkFycmF5IiwiSW50MzJBcnJheSIsIkVycm9yIiwiZ2V0VHlwZWRBcnJheUZyb21HTFR5cGUiLCJnbFR5cGUiLCJjbGFtcGVkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiZmxpcFJvd3MiLCJfcmVmIiwiZGF0YSIsIndpZHRoIiwiaGVpZ2h0IiwiYnl0ZXNQZXJQaXhlbCIsInRlbXAiLCJieXRlc1BlclJvdyIsInkiLCJ0b3BPZmZzZXQiLCJib3R0b21PZmZzZXQiLCJzZXQiLCJzdWJhcnJheSIsImNvcHlXaXRoaW4iLCJzY2FsZVBpeGVscyIsIl9yZWYyIiwibmV3V2lkdGgiLCJNYXRoIiwicm91bmQiLCJuZXdIZWlnaHQiLCJuZXdEYXRhIiwieCIsImMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/typed-array-utils.js\n");

/***/ })

};
;