"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mjolnir.js";
exports.ids = ["vendor-chunks/mjolnir.js"];
exports.modules = {

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/constants.js":
/*!*******************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/constants.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASIC_EVENT_ALIASES: () => (/* binding */ BASIC_EVENT_ALIASES),\n/* harmony export */   EVENT_RECOGNIZER_MAP: () => (/* binding */ EVENT_RECOGNIZER_MAP),\n/* harmony export */   GESTURE_EVENT_ALIASES: () => (/* binding */ GESTURE_EVENT_ALIASES),\n/* harmony export */   INPUT_EVENT_TYPES: () => (/* binding */ INPUT_EVENT_TYPES),\n/* harmony export */   RECOGNIZERS: () => (/* binding */ RECOGNIZERS),\n/* harmony export */   RECOGNIZER_COMPATIBLE_MAP: () => (/* binding */ RECOGNIZER_COMPATIBLE_MAP),\n/* harmony export */   RECOGNIZER_FALLBACK_MAP: () => (/* binding */ RECOGNIZER_FALLBACK_MAP)\n/* harmony export */ });\n/* harmony import */ var _utils_hammer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/hammer */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/utils/hammer.js\");\n\n// This module contains constants that must be conditionally required\n// due to `window`/`document` references downstream.\nconst RECOGNIZERS = _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? [\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Pan,\n        {\n            event: \"tripan\",\n            pointers: 3,\n            threshold: 0,\n            enable: false\n        }\n    ],\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Rotate,\n        {\n            enable: false\n        }\n    ],\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Pinch,\n        {\n            enable: false\n        }\n    ],\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Swipe,\n        {\n            enable: false\n        }\n    ],\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Pan,\n        {\n            threshold: 0,\n            enable: false\n        }\n    ],\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Press,\n        {\n            enable: false\n        }\n    ],\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tap,\n        {\n            event: \"doubletap\",\n            taps: 2,\n            enable: false\n        }\n    ],\n    // TODO - rename to 'tap' and 'singletap' in the next major release\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tap,\n        {\n            event: \"anytap\",\n            enable: false\n        }\n    ],\n    [\n        _utils_hammer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Tap,\n        {\n            enable: false\n        }\n    ]\n] : null;\n// Recognize the following gestures even if a given recognizer succeeds\nconst RECOGNIZER_COMPATIBLE_MAP = {\n    tripan: [\n        \"rotate\",\n        \"pinch\",\n        \"pan\"\n    ],\n    rotate: [\n        \"pinch\"\n    ],\n    pinch: [\n        \"pan\"\n    ],\n    pan: [\n        \"press\",\n        \"doubletap\",\n        \"anytap\",\n        \"tap\"\n    ],\n    doubletap: [\n        \"anytap\"\n    ],\n    anytap: [\n        \"tap\"\n    ]\n};\n// Recognize the folling gestures only if a given recognizer fails\nconst RECOGNIZER_FALLBACK_MAP = {\n    doubletap: [\n        \"tap\"\n    ]\n};\n/**\n * Only one set of basic input events will be fired by Hammer.js:\n * either pointer, touch, or mouse, depending on system support.\n * In order to enable an application to be agnostic of system support,\n * alias basic input events into \"classes\" of events: down, move, and up.\n * See `_onBasicInput()` for usage of these aliases.\n */ const BASIC_EVENT_ALIASES = {\n    pointerdown: \"pointerdown\",\n    pointermove: \"pointermove\",\n    pointerup: \"pointerup\",\n    touchstart: \"pointerdown\",\n    touchmove: \"pointermove\",\n    touchend: \"pointerup\",\n    mousedown: \"pointerdown\",\n    mousemove: \"pointermove\",\n    mouseup: \"pointerup\"\n};\nconst INPUT_EVENT_TYPES = {\n    KEY_EVENTS: [\n        \"keydown\",\n        \"keyup\"\n    ],\n    MOUSE_EVENTS: [\n        \"mousedown\",\n        \"mousemove\",\n        \"mouseup\",\n        \"mouseover\",\n        \"mouseout\",\n        \"mouseleave\"\n    ],\n    WHEEL_EVENTS: [\n        // Chrome, Safari\n        \"wheel\",\n        // IE\n        \"mousewheel\"\n    ]\n};\n/**\n * \"Gestural\" events are those that have semantic meaning beyond the basic input event,\n * e.g. a click or tap is a sequence of `down` and `up` events with no `move` event in between.\n * Hammer.js handles these with its Recognizer system;\n * this block maps event names to the Recognizers required to detect the events.\n */ const EVENT_RECOGNIZER_MAP = {\n    tap: \"tap\",\n    anytap: \"anytap\",\n    doubletap: \"doubletap\",\n    press: \"press\",\n    pinch: \"pinch\",\n    pinchin: \"pinch\",\n    pinchout: \"pinch\",\n    pinchstart: \"pinch\",\n    pinchmove: \"pinch\",\n    pinchend: \"pinch\",\n    pinchcancel: \"pinch\",\n    rotate: \"rotate\",\n    rotatestart: \"rotate\",\n    rotatemove: \"rotate\",\n    rotateend: \"rotate\",\n    rotatecancel: \"rotate\",\n    tripan: \"tripan\",\n    tripanstart: \"tripan\",\n    tripanmove: \"tripan\",\n    tripanup: \"tripan\",\n    tripandown: \"tripan\",\n    tripanleft: \"tripan\",\n    tripanright: \"tripan\",\n    tripanend: \"tripan\",\n    tripancancel: \"tripan\",\n    pan: \"pan\",\n    panstart: \"pan\",\n    panmove: \"pan\",\n    panup: \"pan\",\n    pandown: \"pan\",\n    panleft: \"pan\",\n    panright: \"pan\",\n    panend: \"pan\",\n    pancancel: \"pan\",\n    swipe: \"swipe\",\n    swipeleft: \"swipe\",\n    swiperight: \"swipe\",\n    swipeup: \"swipe\",\n    swipedown: \"swipe\"\n};\n/**\n * Map gestural events typically provided by browsers\n * that are not reported in 'hammer.input' events\n * to corresponding Hammer.js gestures.\n */ const GESTURE_EVENT_ALIASES = {\n    click: \"tap\",\n    anyclick: \"anytap\",\n    dblclick: \"doubletap\",\n    mousedown: \"pointerdown\",\n    mousemove: \"pointermove\",\n    mouseup: \"pointerup\",\n    mouseover: \"pointerover\",\n    mouseout: \"pointerout\",\n    mouseleave: \"pointerleave\"\n}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/event-manager.js":
/*!***********************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/event-manager.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EventManager)\n/* harmony export */ });\n/* harmony import */ var _utils_hammer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/hammer */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/utils/hammer.js\");\n/* harmony import */ var _inputs_wheel_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inputs/wheel-input */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/wheel-input.js\");\n/* harmony import */ var _inputs_move_input__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inputs/move-input */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/move-input.js\");\n/* harmony import */ var _inputs_key_input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./inputs/key-input */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/key-input.js\");\n/* harmony import */ var _inputs_contextmenu_input__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./inputs/contextmenu-input */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/contextmenu-input.js\");\n/* harmony import */ var _utils_event_registrar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/event-registrar */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/utils/event-registrar.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/constants.js\");\n\n\n\n\n\n\n\nconst DEFAULT_OPTIONS = {\n    // event handlers\n    events: null,\n    // custom recognizers\n    recognizers: null,\n    recognizerOptions: {},\n    // Manager class\n    Manager: _utils_hammer__WEBPACK_IMPORTED_MODULE_0__.Manager,\n    // allow browser default touch action\n    // https://github.com/uber/react-map-gl/issues/506\n    touchAction: \"none\",\n    tabIndex: 0\n};\n// Unified API for subscribing to events about both\n// basic input events (e.g. 'mousemove', 'touchstart', 'wheel')\n// and gestural input (e.g. 'click', 'tap', 'panstart').\n// Delegates gesture related event registration and handling to Hammer.js.\nclass EventManager {\n    constructor(element = null, options){\n        /**\n         * Handle basic events using the 'hammer.input' Hammer.js API:\n         * Before running Recognizers, Hammer emits a 'hammer.input' event\n         * with the basic event info. This function emits all basic events\n         * aliased to the \"class\" of event received.\n         * See constants.BASIC_EVENT_CLASSES basic event class definitions.\n         */ this._onBasicInput = (event)=>{\n            const { srcEvent } = event;\n            const alias = _constants__WEBPACK_IMPORTED_MODULE_6__.BASIC_EVENT_ALIASES[srcEvent.type];\n            if (alias) {\n                // fire all events aliased to srcEvent.type\n                this.manager.emit(alias, event);\n            }\n        };\n        /**\n         * Handle events not supported by Hammer.js,\n         * and pipe back out through same (Hammer) channel used by other events.\n         */ this._onOtherEvent = (event)=>{\n            // console.log('onotherevent', event.type, event)\n            this.manager.emit(event.type, event);\n        };\n        this.options = {\n            ...DEFAULT_OPTIONS,\n            ...options\n        };\n        this.events = new Map();\n        this.setElement(element);\n        // Register all passed events.\n        const { events } = this.options;\n        if (events) {\n            this.on(events);\n        }\n    }\n    getElement() {\n        return this.element;\n    }\n    setElement(element) {\n        if (this.element) {\n            // unregister all events\n            this.destroy();\n        }\n        this.element = element;\n        if (!element) {\n            return;\n        }\n        const { options } = this;\n        const ManagerClass = options.Manager;\n        this.manager = new ManagerClass(element, {\n            touchAction: options.touchAction,\n            recognizers: options.recognizers || _constants__WEBPACK_IMPORTED_MODULE_6__.RECOGNIZERS\n        }).on(\"hammer.input\", this._onBasicInput);\n        if (!options.recognizers) {\n            // Set default recognize withs\n            // http://hammerjs.github.io/recognize-with/\n            Object.keys(_constants__WEBPACK_IMPORTED_MODULE_6__.RECOGNIZER_COMPATIBLE_MAP).forEach((name)=>{\n                const recognizer = this.manager.get(name);\n                if (recognizer) {\n                    _constants__WEBPACK_IMPORTED_MODULE_6__.RECOGNIZER_COMPATIBLE_MAP[name].forEach((otherName)=>{\n                        recognizer.recognizeWith(otherName);\n                    });\n                }\n            });\n        }\n        // Set recognizer options\n        for(const recognizerName in options.recognizerOptions){\n            const recognizer = this.manager.get(recognizerName);\n            if (recognizer) {\n                const recognizerOption = options.recognizerOptions[recognizerName];\n                // `enable` is managed by the event registrations\n                delete recognizerOption.enable;\n                recognizer.set(recognizerOption);\n            }\n        }\n        // Handle events not handled by Hammer.js:\n        // - mouse wheel\n        // - pointer/touch/mouse move\n        this.wheelInput = new _inputs_wheel_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"](element, this._onOtherEvent, {\n            enable: false\n        });\n        this.moveInput = new _inputs_move_input__WEBPACK_IMPORTED_MODULE_2__[\"default\"](element, this._onOtherEvent, {\n            enable: false\n        });\n        this.keyInput = new _inputs_key_input__WEBPACK_IMPORTED_MODULE_3__[\"default\"](element, this._onOtherEvent, {\n            enable: false,\n            tabIndex: options.tabIndex\n        });\n        this.contextmenuInput = new _inputs_contextmenu_input__WEBPACK_IMPORTED_MODULE_4__[\"default\"](element, this._onOtherEvent, {\n            enable: false\n        });\n        // Register all existing events\n        for (const [eventAlias, eventRegistrar] of this.events){\n            if (!eventRegistrar.isEmpty()) {\n                // Enable recognizer for this event.\n                this._toggleRecognizer(eventRegistrar.recognizerName, true);\n                this.manager.on(eventAlias, eventRegistrar.handleEvent);\n            }\n        }\n    }\n    // Tear down internal event management implementations.\n    destroy() {\n        if (this.element) {\n            // wheelInput etc. are created in setElement() and therefore\n            // cannot exist if there is no element\n            this.wheelInput.destroy();\n            this.moveInput.destroy();\n            this.keyInput.destroy();\n            this.contextmenuInput.destroy();\n            this.manager.destroy();\n            this.wheelInput = null;\n            this.moveInput = null;\n            this.keyInput = null;\n            this.contextmenuInput = null;\n            this.manager = null;\n            this.element = null;\n        }\n    }\n    /** Register an event handler function to be called on `event` */ on(event, handler, opts) {\n        this._addEventHandler(event, handler, opts, false);\n    }\n    once(event, handler, opts) {\n        this._addEventHandler(event, handler, opts, true);\n    }\n    watch(event, handler, opts) {\n        this._addEventHandler(event, handler, opts, false, true);\n    }\n    off(event, handler) {\n        this._removeEventHandler(event, handler);\n    }\n    /*\n     * Enable/disable recognizer for the given event\n     */ _toggleRecognizer(name, enabled) {\n        const { manager } = this;\n        if (!manager) {\n            return;\n        }\n        const recognizer = manager.get(name);\n        // @ts-ignore\n        if (recognizer && recognizer.options.enable !== enabled) {\n            recognizer.set({\n                enable: enabled\n            });\n            const fallbackRecognizers = _constants__WEBPACK_IMPORTED_MODULE_6__.RECOGNIZER_FALLBACK_MAP[name];\n            if (fallbackRecognizers && !this.options.recognizers) {\n                // Set default require failures\n                // http://hammerjs.github.io/require-failure/\n                fallbackRecognizers.forEach((otherName)=>{\n                    const otherRecognizer = manager.get(otherName);\n                    if (enabled) {\n                        // Wait for this recognizer to fail\n                        otherRecognizer.requireFailure(name);\n                        /**\n                         * This seems to be a bug in hammerjs:\n                         * requireFailure() adds both ways\n                         * dropRequireFailure() only drops one way\n                         * https://github.com/hammerjs/hammer.js/blob/master/src/recognizerjs/\n                           recognizer-constructor.js#L136\n                         */ recognizer.dropRequireFailure(otherName);\n                    } else {\n                        // Do not wait for this recognizer to fail\n                        otherRecognizer.dropRequireFailure(name);\n                    }\n                });\n            }\n        }\n        this.wheelInput.enableEventType(name, enabled);\n        this.moveInput.enableEventType(name, enabled);\n        this.keyInput.enableEventType(name, enabled);\n        this.contextmenuInput.enableEventType(name, enabled);\n    }\n    /**\n     * Process the event registration for a single event + handler.\n     */ _addEventHandler(event, handler, opts, once, passive) {\n        if (typeof event !== \"string\") {\n            // @ts-ignore\n            opts = handler;\n            // If `event` is a map, call `on()` for each entry.\n            for(const eventName in event){\n                this._addEventHandler(eventName, event[eventName], opts, once, passive);\n            }\n            return;\n        }\n        const { manager, events } = this;\n        // Alias to a recognized gesture as necessary.\n        const eventAlias = _constants__WEBPACK_IMPORTED_MODULE_6__.GESTURE_EVENT_ALIASES[event] || event;\n        let eventRegistrar = events.get(eventAlias);\n        if (!eventRegistrar) {\n            eventRegistrar = new _utils_event_registrar__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\n            events.set(eventAlias, eventRegistrar);\n            // Enable recognizer for this event.\n            eventRegistrar.recognizerName = _constants__WEBPACK_IMPORTED_MODULE_6__.EVENT_RECOGNIZER_MAP[eventAlias] || eventAlias;\n            // Listen to the event\n            if (manager) {\n                manager.on(eventAlias, eventRegistrar.handleEvent);\n            }\n        }\n        eventRegistrar.add(event, handler, opts, once, passive);\n        if (!eventRegistrar.isEmpty()) {\n            this._toggleRecognizer(eventRegistrar.recognizerName, true);\n        }\n    }\n    /**\n     * Process the event deregistration for a single event + handler.\n     */ _removeEventHandler(event, handler) {\n        if (typeof event !== \"string\") {\n            // If `event` is a map, call `off()` for each entry.\n            for(const eventName in event){\n                this._removeEventHandler(eventName, event[eventName]);\n            }\n            return;\n        }\n        const { events } = this;\n        // Alias to a recognized gesture as necessary.\n        const eventAlias = _constants__WEBPACK_IMPORTED_MODULE_6__.GESTURE_EVENT_ALIASES[event] || event;\n        const eventRegistrar = events.get(eventAlias);\n        if (!eventRegistrar) {\n            return;\n        }\n        eventRegistrar.remove(event, handler);\n        if (eventRegistrar.isEmpty()) {\n            const { recognizerName } = eventRegistrar;\n            // Disable recognizer if no more handlers are attached to its events\n            let isRecognizerUsed = false;\n            for (const eh of events.values()){\n                if (eh.recognizerName === recognizerName && !eh.isEmpty()) {\n                    isRecognizerUsed = true;\n                    break;\n                }\n            }\n            if (!isRecognizerUsed) {\n                this._toggleRecognizer(recognizerName, false);\n            }\n        }\n    }\n} //# sourceMappingURL=event-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/event-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventManager: () => (/* reexport safe */ _event_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _event_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event-manager */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/event-manager.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRCxDQUMxRCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9tam9sbmlyLmpzL2Rpc3QvZXNtL2luZGV4LmpzPzRlZjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBFdmVudE1hbmFnZXIgfSBmcm9tICcuL2V2ZW50LW1hbmFnZXInO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJFdmVudE1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/contextmenu-input.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/inputs/contextmenu-input.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ContextmenuInput)\n/* harmony export */ });\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/input.js\");\n\nconst EVENT_TYPE = \"contextmenu\";\nclass ContextmenuInput extends _input__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(element, callback, options){\n        super(element, callback, options);\n        this.handleEvent = (event)=>{\n            if (!this.options.enable) {\n                return;\n            }\n            this.callback({\n                type: EVENT_TYPE,\n                center: {\n                    x: event.clientX,\n                    y: event.clientY\n                },\n                srcEvent: event,\n                pointerType: \"mouse\",\n                target: event.target\n            });\n        };\n        element.addEventListener(\"contextmenu\", this.handleEvent);\n    }\n    destroy() {\n        this.element.removeEventListener(\"contextmenu\", this.handleEvent);\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */ enableEventType(eventType, enabled) {\n        if (eventType === EVENT_TYPE) {\n            this.options.enable = enabled;\n        }\n    }\n} //# sourceMappingURL=contextmenu-input.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS9pbnB1dHMvY29udGV4dG1lbnUtaW5wdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNEI7QUFDNUIsTUFBTUMsYUFBYTtBQUNKLE1BQU1DLHlCQUF5QkYsOENBQUtBO0lBQy9DRyxZQUFZQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxDQUFFO1FBQ3BDLEtBQUssQ0FBQ0YsU0FBU0MsVUFBVUM7UUFDekIsSUFBSSxDQUFDQyxXQUFXLEdBQUcsQ0FBQ0M7WUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQ0YsT0FBTyxDQUFDRyxNQUFNLEVBQUU7Z0JBQ3RCO1lBQ0o7WUFDQSxJQUFJLENBQUNKLFFBQVEsQ0FBQztnQkFDVkssTUFBTVQ7Z0JBQ05VLFFBQVE7b0JBQ0pDLEdBQUdKLE1BQU1LLE9BQU87b0JBQ2hCQyxHQUFHTixNQUFNTyxPQUFPO2dCQUNwQjtnQkFDQUMsVUFBVVI7Z0JBQ1ZTLGFBQWE7Z0JBQ2JDLFFBQVFWLE1BQU1VLE1BQU07WUFDeEI7UUFDSjtRQUNBZCxRQUFRZSxnQkFBZ0IsQ0FBQyxlQUFlLElBQUksQ0FBQ1osV0FBVztJQUM1RDtJQUNBYSxVQUFVO1FBQ04sSUFBSSxDQUFDaEIsT0FBTyxDQUFDaUIsbUJBQW1CLENBQUMsZUFBZSxJQUFJLENBQUNkLFdBQVc7SUFDcEU7SUFDQTs7O0tBR0MsR0FDRGUsZ0JBQWdCQyxTQUFTLEVBQUVDLE9BQU8sRUFBRTtRQUNoQyxJQUFJRCxjQUFjdEIsWUFBWTtZQUMxQixJQUFJLENBQUNLLE9BQU8sQ0FBQ0csTUFBTSxHQUFHZTtRQUMxQjtJQUNKO0FBQ0osRUFDQSw2Q0FBNkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9tam9sbmlyLmpzL2Rpc3QvZXNtL2lucHV0cy9jb250ZXh0bWVudS1pbnB1dC5qcz82N2M3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJbnB1dCBmcm9tICcuL2lucHV0JztcbmNvbnN0IEVWRU5UX1RZUEUgPSAnY29udGV4dG1lbnUnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29udGV4dG1lbnVJbnB1dCBleHRlbmRzIElucHV0IHtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjYWxsYmFjaywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihlbGVtZW50LCBjYWxsYmFjaywgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuaGFuZGxlRXZlbnQgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLmVuYWJsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2soe1xuICAgICAgICAgICAgICAgIHR5cGU6IEVWRU5UX1RZUEUsXG4gICAgICAgICAgICAgICAgY2VudGVyOiB7XG4gICAgICAgICAgICAgICAgICAgIHg6IGV2ZW50LmNsaWVudFgsXG4gICAgICAgICAgICAgICAgICAgIHk6IGV2ZW50LmNsaWVudFlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHNyY0V2ZW50OiBldmVudCxcbiAgICAgICAgICAgICAgICBwb2ludGVyVHlwZTogJ21vdXNlJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IGV2ZW50LnRhcmdldFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29udGV4dG1lbnUnLCB0aGlzLmhhbmRsZUV2ZW50KTtcbiAgICB9XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgdGhpcy5oYW5kbGVFdmVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVuYWJsZSB0aGlzIGlucHV0IChiZWdpbiBwcm9jZXNzaW5nIGV2ZW50cylcbiAgICAgKiBpZiB0aGUgc3BlY2lmaWVkIGV2ZW50IHR5cGUgaXMgYW1vbmcgdGhvc2UgaGFuZGxlZCBieSB0aGlzIGlucHV0LlxuICAgICAqL1xuICAgIGVuYWJsZUV2ZW50VHlwZShldmVudFR5cGUsIGVuYWJsZWQpIHtcbiAgICAgICAgaWYgKGV2ZW50VHlwZSA9PT0gRVZFTlRfVFlQRSkge1xuICAgICAgICAgICAgdGhpcy5vcHRpb25zLmVuYWJsZSA9IGVuYWJsZWQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250ZXh0bWVudS1pbnB1dC5qcy5tYXAiXSwibmFtZXMiOlsiSW5wdXQiLCJFVkVOVF9UWVBFIiwiQ29udGV4dG1lbnVJbnB1dCIsImNvbnN0cnVjdG9yIiwiZWxlbWVudCIsImNhbGxiYWNrIiwib3B0aW9ucyIsImhhbmRsZUV2ZW50IiwiZXZlbnQiLCJlbmFibGUiLCJ0eXBlIiwiY2VudGVyIiwieCIsImNsaWVudFgiLCJ5IiwiY2xpZW50WSIsInNyY0V2ZW50IiwicG9pbnRlclR5cGUiLCJ0YXJnZXQiLCJhZGRFdmVudExpc3RlbmVyIiwiZGVzdHJveSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJlbmFibGVFdmVudFR5cGUiLCJldmVudFR5cGUiLCJlbmFibGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/contextmenu-input.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/input.js":
/*!**********************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/inputs/input.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Input)\n/* harmony export */ });\nclass Input {\n    constructor(element, callback, options){\n        this.element = element;\n        this.callback = callback;\n        this.options = {\n            enable: true,\n            ...options\n        };\n    }\n} //# sourceMappingURL=input.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS9pbnB1dHMvaW5wdXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLE1BQU1BO0lBQ2pCQyxZQUFZQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxDQUFFO1FBQ3BDLElBQUksQ0FBQ0YsT0FBTyxHQUFHQTtRQUNmLElBQUksQ0FBQ0MsUUFBUSxHQUFHQTtRQUNoQixJQUFJLENBQUNDLE9BQU8sR0FBRztZQUFFQyxRQUFRO1lBQU0sR0FBR0QsT0FBTztRQUFDO0lBQzlDO0FBQ0osRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9tam9sbmlyLmpzL2Rpc3QvZXNtL2lucHV0cy9pbnB1dC5qcz8zMzMyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIElucHV0IHtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjYWxsYmFjaywgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IHsgZW5hYmxlOiB0cnVlLCAuLi5vcHRpb25zIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5wdXQuanMubWFwIl0sIm5hbWVzIjpbIklucHV0IiwiY29uc3RydWN0b3IiLCJlbGVtZW50IiwiY2FsbGJhY2siLCJvcHRpb25zIiwiZW5hYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/input.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/key-input.js":
/*!**************************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/inputs/key-input.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KeyInput)\n/* harmony export */ });\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/input.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/constants.js\");\n\n\nconst { KEY_EVENTS } = _constants__WEBPACK_IMPORTED_MODULE_1__.INPUT_EVENT_TYPES;\nconst DOWN_EVENT_TYPE = \"keydown\";\nconst UP_EVENT_TYPE = \"keyup\";\nclass KeyInput extends _input__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(element, callback, options){\n        super(element, callback, options);\n        this.handleEvent = (event)=>{\n            // Ignore if focused on text input\n            const targetElement = event.target || event.srcElement;\n            if (targetElement.tagName === \"INPUT\" && targetElement.type === \"text\" || targetElement.tagName === \"TEXTAREA\") {\n                return;\n            }\n            if (this.enableDownEvent && event.type === \"keydown\") {\n                this.callback({\n                    type: DOWN_EVENT_TYPE,\n                    srcEvent: event,\n                    key: event.key,\n                    target: event.target\n                });\n            }\n            if (this.enableUpEvent && event.type === \"keyup\") {\n                this.callback({\n                    type: UP_EVENT_TYPE,\n                    srcEvent: event,\n                    key: event.key,\n                    target: event.target\n                });\n            }\n        };\n        this.enableDownEvent = this.options.enable;\n        this.enableUpEvent = this.options.enable;\n        this.events = (this.options.events || []).concat(KEY_EVENTS);\n        element.tabIndex = this.options.tabIndex || 0;\n        element.style.outline = \"none\";\n        this.events.forEach((event)=>element.addEventListener(event, this.handleEvent));\n    }\n    destroy() {\n        this.events.forEach((event)=>this.element.removeEventListener(event, this.handleEvent));\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */ enableEventType(eventType, enabled) {\n        if (eventType === DOWN_EVENT_TYPE) {\n            this.enableDownEvent = enabled;\n        }\n        if (eventType === UP_EVENT_TYPE) {\n            this.enableUpEvent = enabled;\n        }\n    }\n} //# sourceMappingURL=key-input.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS9pbnB1dHMva2V5LWlucHV0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QjtBQUNxQjtBQUNqRCxNQUFNLEVBQUVFLFVBQVUsRUFBRSxHQUFHRCx5REFBaUJBO0FBQ3hDLE1BQU1FLGtCQUFrQjtBQUN4QixNQUFNQyxnQkFBZ0I7QUFDUCxNQUFNQyxpQkFBaUJMLDhDQUFLQTtJQUN2Q00sWUFBWUMsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLE9BQU8sQ0FBRTtRQUNwQyxLQUFLLENBQUNGLFNBQVNDLFVBQVVDO1FBQ3pCLElBQUksQ0FBQ0MsV0FBVyxHQUFHLENBQUNDO1lBQ2hCLGtDQUFrQztZQUNsQyxNQUFNQyxnQkFBaUJELE1BQU1FLE1BQU0sSUFBSUYsTUFBTUcsVUFBVTtZQUN2RCxJQUFJLGNBQWVDLE9BQU8sS0FBSyxXQUFXSCxjQUFjSSxJQUFJLEtBQUssVUFDN0RKLGNBQWNHLE9BQU8sS0FBSyxZQUFZO2dCQUN0QztZQUNKO1lBQ0EsSUFBSSxJQUFJLENBQUNFLGVBQWUsSUFBSU4sTUFBTUssSUFBSSxLQUFLLFdBQVc7Z0JBQ2xELElBQUksQ0FBQ1IsUUFBUSxDQUFDO29CQUNWUSxNQUFNYjtvQkFDTmUsVUFBVVA7b0JBQ1ZRLEtBQUtSLE1BQU1RLEdBQUc7b0JBQ2ROLFFBQVFGLE1BQU1FLE1BQU07Z0JBQ3hCO1lBQ0o7WUFDQSxJQUFJLElBQUksQ0FBQ08sYUFBYSxJQUFJVCxNQUFNSyxJQUFJLEtBQUssU0FBUztnQkFDOUMsSUFBSSxDQUFDUixRQUFRLENBQUM7b0JBQ1ZRLE1BQU1aO29CQUNOYyxVQUFVUDtvQkFDVlEsS0FBS1IsTUFBTVEsR0FBRztvQkFDZE4sUUFBUUYsTUFBTUUsTUFBTTtnQkFDeEI7WUFDSjtRQUNKO1FBQ0EsSUFBSSxDQUFDSSxlQUFlLEdBQUcsSUFBSSxDQUFDUixPQUFPLENBQUNZLE1BQU07UUFDMUMsSUFBSSxDQUFDRCxhQUFhLEdBQUcsSUFBSSxDQUFDWCxPQUFPLENBQUNZLE1BQU07UUFDeEMsSUFBSSxDQUFDQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUNiLE9BQU8sQ0FBQ2EsTUFBTSxJQUFJLEVBQUUsRUFBRUMsTUFBTSxDQUFDckI7UUFDakRLLFFBQVFpQixRQUFRLEdBQUcsSUFBSSxDQUFDZixPQUFPLENBQUNlLFFBQVEsSUFBSTtRQUM1Q2pCLFFBQVFrQixLQUFLLENBQUNDLE9BQU8sR0FBRztRQUN4QixJQUFJLENBQUNKLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDaEIsQ0FBQUEsUUFBU0osUUFBUXFCLGdCQUFnQixDQUFDakIsT0FBTyxJQUFJLENBQUNELFdBQVc7SUFDakY7SUFDQW1CLFVBQVU7UUFDTixJQUFJLENBQUNQLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDaEIsQ0FBQUEsUUFBUyxJQUFJLENBQUNKLE9BQU8sQ0FBQ3VCLG1CQUFtQixDQUFDbkIsT0FBTyxJQUFJLENBQUNELFdBQVc7SUFDekY7SUFDQTs7O0tBR0MsR0FDRHFCLGdCQUFnQkMsU0FBUyxFQUFFQyxPQUFPLEVBQUU7UUFDaEMsSUFBSUQsY0FBYzdCLGlCQUFpQjtZQUMvQixJQUFJLENBQUNjLGVBQWUsR0FBR2dCO1FBQzNCO1FBQ0EsSUFBSUQsY0FBYzVCLGVBQWU7WUFDN0IsSUFBSSxDQUFDZ0IsYUFBYSxHQUFHYTtRQUN6QjtJQUNKO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9tam9sbmlyLmpzL2Rpc3QvZXNtL2lucHV0cy9rZXktaW5wdXQuanM/ODFiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSW5wdXQgZnJvbSAnLi9pbnB1dCc7XG5pbXBvcnQgeyBJTlBVVF9FVkVOVF9UWVBFUyB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5jb25zdCB7IEtFWV9FVkVOVFMgfSA9IElOUFVUX0VWRU5UX1RZUEVTO1xuY29uc3QgRE9XTl9FVkVOVF9UWVBFID0gJ2tleWRvd24nO1xuY29uc3QgVVBfRVZFTlRfVFlQRSA9ICdrZXl1cCc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLZXlJbnB1dCBleHRlbmRzIElucHV0IHtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjYWxsYmFjaywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihlbGVtZW50LCBjYWxsYmFjaywgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuaGFuZGxlRXZlbnQgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIC8vIElnbm9yZSBpZiBmb2N1c2VkIG9uIHRleHQgaW5wdXRcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldEVsZW1lbnQgPSAoZXZlbnQudGFyZ2V0IHx8IGV2ZW50LnNyY0VsZW1lbnQpO1xuICAgICAgICAgICAgaWYgKCh0YXJnZXRFbGVtZW50LnRhZ05hbWUgPT09ICdJTlBVVCcgJiYgdGFyZ2V0RWxlbWVudC50eXBlID09PSAndGV4dCcpIHx8XG4gICAgICAgICAgICAgICAgdGFyZ2V0RWxlbWVudC50YWdOYW1lID09PSAnVEVYVEFSRUEnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuZW5hYmxlRG93bkV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICdrZXlkb3duJykge1xuICAgICAgICAgICAgICAgIHRoaXMuY2FsbGJhY2soe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiBET1dOX0VWRU5UX1RZUEUsXG4gICAgICAgICAgICAgICAgICAgIHNyY0V2ZW50OiBldmVudCxcbiAgICAgICAgICAgICAgICAgICAga2V5OiBldmVudC5rZXksXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDogZXZlbnQudGFyZ2V0XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5lbmFibGVVcEV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICdrZXl1cCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrKHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogVVBfRVZFTlRfVFlQRSxcbiAgICAgICAgICAgICAgICAgICAgc3JjRXZlbnQ6IGV2ZW50LFxuICAgICAgICAgICAgICAgICAgICBrZXk6IGV2ZW50LmtleSxcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBldmVudC50YXJnZXRcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5lbmFibGVEb3duRXZlbnQgPSB0aGlzLm9wdGlvbnMuZW5hYmxlO1xuICAgICAgICB0aGlzLmVuYWJsZVVwRXZlbnQgPSB0aGlzLm9wdGlvbnMuZW5hYmxlO1xuICAgICAgICB0aGlzLmV2ZW50cyA9ICh0aGlzLm9wdGlvbnMuZXZlbnRzIHx8IFtdKS5jb25jYXQoS0VZX0VWRU5UUyk7XG4gICAgICAgIGVsZW1lbnQudGFiSW5kZXggPSB0aGlzLm9wdGlvbnMudGFiSW5kZXggfHwgMDtcbiAgICAgICAgZWxlbWVudC5zdHlsZS5vdXRsaW5lID0gJ25vbmUnO1xuICAgICAgICB0aGlzLmV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgdGhpcy5oYW5kbGVFdmVudCkpO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICB0aGlzLmV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IHRoaXMuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCB0aGlzLmhhbmRsZUV2ZW50KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVuYWJsZSB0aGlzIGlucHV0IChiZWdpbiBwcm9jZXNzaW5nIGV2ZW50cylcbiAgICAgKiBpZiB0aGUgc3BlY2lmaWVkIGV2ZW50IHR5cGUgaXMgYW1vbmcgdGhvc2UgaGFuZGxlZCBieSB0aGlzIGlucHV0LlxuICAgICAqL1xuICAgIGVuYWJsZUV2ZW50VHlwZShldmVudFR5cGUsIGVuYWJsZWQpIHtcbiAgICAgICAgaWYgKGV2ZW50VHlwZSA9PT0gRE9XTl9FVkVOVF9UWVBFKSB7XG4gICAgICAgICAgICB0aGlzLmVuYWJsZURvd25FdmVudCA9IGVuYWJsZWQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV2ZW50VHlwZSA9PT0gVVBfRVZFTlRfVFlQRSkge1xuICAgICAgICAgICAgdGhpcy5lbmFibGVVcEV2ZW50ID0gZW5hYmxlZDtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleS1pbnB1dC5qcy5tYXAiXSwibmFtZXMiOlsiSW5wdXQiLCJJTlBVVF9FVkVOVF9UWVBFUyIsIktFWV9FVkVOVFMiLCJET1dOX0VWRU5UX1RZUEUiLCJVUF9FVkVOVF9UWVBFIiwiS2V5SW5wdXQiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJjYWxsYmFjayIsIm9wdGlvbnMiLCJoYW5kbGVFdmVudCIsImV2ZW50IiwidGFyZ2V0RWxlbWVudCIsInRhcmdldCIsInNyY0VsZW1lbnQiLCJ0YWdOYW1lIiwidHlwZSIsImVuYWJsZURvd25FdmVudCIsInNyY0V2ZW50Iiwia2V5IiwiZW5hYmxlVXBFdmVudCIsImVuYWJsZSIsImV2ZW50cyIsImNvbmNhdCIsInRhYkluZGV4Iiwic3R5bGUiLCJvdXRsaW5lIiwiZm9yRWFjaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJkZXN0cm95IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImVuYWJsZUV2ZW50VHlwZSIsImV2ZW50VHlwZSIsImVuYWJsZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/key-input.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/move-input.js":
/*!***************************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/inputs/move-input.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MoveInput)\n/* harmony export */ });\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/input.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/constants.js\");\n\n\nconst { MOUSE_EVENTS } = _constants__WEBPACK_IMPORTED_MODULE_1__.INPUT_EVENT_TYPES;\nconst MOVE_EVENT_TYPE = \"pointermove\";\nconst OVER_EVENT_TYPE = \"pointerover\";\nconst OUT_EVENT_TYPE = \"pointerout\";\nconst ENTER_EVENT_TYPE = \"pointerenter\";\nconst LEAVE_EVENT_TYPE = \"pointerleave\";\n/**\n * Hammer.js swallows 'move' events (for pointer/touch/mouse)\n * when the pointer is not down. This class sets up a handler\n * specifically for these events to work around this limitation.\n * Note that this could be extended to more intelligently handle\n * move events across input types, e.g. storing multiple simultaneous\n * pointer/touch events, calculating speed/direction, etc.\n */ class MoveInput extends _input__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(element, callback, options){\n        super(element, callback, options);\n        this.handleEvent = (event)=>{\n            this.handleOverEvent(event);\n            this.handleOutEvent(event);\n            this.handleEnterEvent(event);\n            this.handleLeaveEvent(event);\n            this.handleMoveEvent(event);\n        };\n        this.pressed = false;\n        const { enable } = this.options;\n        this.enableMoveEvent = enable;\n        this.enableLeaveEvent = enable;\n        this.enableEnterEvent = enable;\n        this.enableOutEvent = enable;\n        this.enableOverEvent = enable;\n        this.events = (this.options.events || []).concat(MOUSE_EVENTS);\n        this.events.forEach((event)=>element.addEventListener(event, this.handleEvent));\n    }\n    destroy() {\n        this.events.forEach((event)=>this.element.removeEventListener(event, this.handleEvent));\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */ enableEventType(eventType, enabled) {\n        if (eventType === MOVE_EVENT_TYPE) {\n            this.enableMoveEvent = enabled;\n        }\n        if (eventType === OVER_EVENT_TYPE) {\n            this.enableOverEvent = enabled;\n        }\n        if (eventType === OUT_EVENT_TYPE) {\n            this.enableOutEvent = enabled;\n        }\n        if (eventType === ENTER_EVENT_TYPE) {\n            this.enableEnterEvent = enabled;\n        }\n        if (eventType === LEAVE_EVENT_TYPE) {\n            this.enableLeaveEvent = enabled;\n        }\n    }\n    handleOverEvent(event) {\n        if (this.enableOverEvent) {\n            if (event.type === \"mouseover\") {\n                this._emit(OVER_EVENT_TYPE, event);\n            }\n        }\n    }\n    handleOutEvent(event) {\n        if (this.enableOutEvent) {\n            if (event.type === \"mouseout\") {\n                this._emit(OUT_EVENT_TYPE, event);\n            }\n        }\n    }\n    handleEnterEvent(event) {\n        if (this.enableEnterEvent) {\n            if (event.type === \"mouseenter\") {\n                this._emit(ENTER_EVENT_TYPE, event);\n            }\n        }\n    }\n    handleLeaveEvent(event) {\n        if (this.enableLeaveEvent) {\n            if (event.type === \"mouseleave\") {\n                this._emit(LEAVE_EVENT_TYPE, event);\n            }\n        }\n    }\n    handleMoveEvent(event) {\n        if (this.enableMoveEvent) {\n            switch(event.type){\n                case \"mousedown\":\n                    if (event.button >= 0) {\n                        // Button is down\n                        this.pressed = true;\n                    }\n                    break;\n                case \"mousemove\":\n                    // Move events use `which` to track the button being pressed\n                    if (event.which === 0) {\n                        // Button is not down\n                        this.pressed = false;\n                    }\n                    if (!this.pressed) {\n                        // Drag events are emitted by hammer already\n                        // we just need to emit the move event on hover\n                        this._emit(MOVE_EVENT_TYPE, event);\n                    }\n                    break;\n                case \"mouseup\":\n                    this.pressed = false;\n                    break;\n                default:\n            }\n        }\n    }\n    _emit(type, event) {\n        this.callback({\n            type,\n            center: {\n                x: event.clientX,\n                y: event.clientY\n            },\n            srcEvent: event,\n            pointerType: \"mouse\",\n            target: event.target\n        });\n    }\n} //# sourceMappingURL=move-input.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/move-input.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/wheel-input.js":
/*!****************************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/inputs/wheel-input.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WheelInput)\n/* harmony export */ });\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./input */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/input.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/constants.js\");\n/* harmony import */ var _utils_globals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/globals */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/utils/globals.js\");\n\n\n\nconst firefox = _utils_globals__WEBPACK_IMPORTED_MODULE_2__.userAgent.indexOf(\"firefox\") !== -1;\nconst { WHEEL_EVENTS } = _constants__WEBPACK_IMPORTED_MODULE_1__.INPUT_EVENT_TYPES;\nconst EVENT_TYPE = \"wheel\";\n// Constants for normalizing input delta\nconst WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nconst WHEEL_DELTA_PER_LINE = 40;\n// Slow down zoom if shift key is held for more precise zooming\nconst SHIFT_MULTIPLIER = 0.25;\nclass WheelInput extends _input__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(element, callback, options){\n        super(element, callback, options);\n        /* eslint-disable complexity, max-statements */ this.handleEvent = (event)=>{\n            if (!this.options.enable) {\n                return;\n            }\n            let value = event.deltaY;\n            if (_utils_globals__WEBPACK_IMPORTED_MODULE_2__.window.WheelEvent) {\n                // Firefox doubles the values on retina screens...\n                if (firefox && event.deltaMode === _utils_globals__WEBPACK_IMPORTED_MODULE_2__.window.WheelEvent.DOM_DELTA_PIXEL) {\n                    value /= _utils_globals__WEBPACK_IMPORTED_MODULE_2__.window.devicePixelRatio;\n                }\n                if (event.deltaMode === _utils_globals__WEBPACK_IMPORTED_MODULE_2__.window.WheelEvent.DOM_DELTA_LINE) {\n                    value *= WHEEL_DELTA_PER_LINE;\n                }\n            }\n            if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n                // This one is definitely a mouse wheel event.\n                // Normalize this value to match trackpad.\n                value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n            }\n            if (event.shiftKey && value) {\n                value = value * SHIFT_MULTIPLIER;\n            }\n            this.callback({\n                type: EVENT_TYPE,\n                center: {\n                    x: event.clientX,\n                    y: event.clientY\n                },\n                delta: -value,\n                srcEvent: event,\n                pointerType: \"mouse\",\n                target: event.target\n            });\n        };\n        this.events = (this.options.events || []).concat(WHEEL_EVENTS);\n        this.events.forEach((event)=>element.addEventListener(event, this.handleEvent, _utils_globals__WEBPACK_IMPORTED_MODULE_2__.passiveSupported ? {\n                passive: false\n            } : false));\n    }\n    destroy() {\n        this.events.forEach((event)=>this.element.removeEventListener(event, this.handleEvent));\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */ enableEventType(eventType, enabled) {\n        if (eventType === EVENT_TYPE) {\n            this.options.enable = enabled;\n        }\n    }\n} //# sourceMappingURL=wheel-input.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS9pbnB1dHMvd2hlZWwtaW5wdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0QjtBQUNxQjtBQUNzQjtBQUN2RSxNQUFNSyxVQUFVRixxREFBU0EsQ0FBQ0csT0FBTyxDQUFDLGVBQWUsQ0FBQztBQUNsRCxNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHTix5REFBaUJBO0FBQzFDLE1BQU1PLGFBQWE7QUFDbkIsd0NBQXdDO0FBQ3hDLE1BQU1DLDJCQUEyQjtBQUNqQyxNQUFNQyx1QkFBdUI7QUFDN0IsK0RBQStEO0FBQy9ELE1BQU1DLG1CQUFtQjtBQUNWLE1BQU1DLG1CQUFtQlosOENBQUtBO0lBQ3pDYSxZQUFZQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxDQUFFO1FBQ3BDLEtBQUssQ0FBQ0YsU0FBU0MsVUFBVUM7UUFDekIsNkNBQTZDLEdBQzdDLElBQUksQ0FBQ0MsV0FBVyxHQUFHLENBQUNDO1lBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUNGLE9BQU8sQ0FBQ0csTUFBTSxFQUFFO2dCQUN0QjtZQUNKO1lBQ0EsSUFBSUMsUUFBUUYsTUFBTUcsTUFBTTtZQUN4QixJQUFJbkIsa0RBQU1BLENBQUNvQixVQUFVLEVBQUU7Z0JBQ25CLGtEQUFrRDtnQkFDbEQsSUFBSWpCLFdBQVdhLE1BQU1LLFNBQVMsS0FBS3JCLGtEQUFNQSxDQUFDb0IsVUFBVSxDQUFDRSxlQUFlLEVBQUU7b0JBQ2xFSixTQUFTbEIsa0RBQU1BLENBQUN1QixnQkFBZ0I7Z0JBQ3BDO2dCQUNBLElBQUlQLE1BQU1LLFNBQVMsS0FBS3JCLGtEQUFNQSxDQUFDb0IsVUFBVSxDQUFDSSxjQUFjLEVBQUU7b0JBQ3RETixTQUFTVjtnQkFDYjtZQUNKO1lBQ0EsSUFBSVUsVUFBVSxLQUFLQSxRQUFRWCw2QkFBNkIsR0FBRztnQkFDdkQsOENBQThDO2dCQUM5QywwQ0FBMEM7Z0JBQzFDVyxRQUFRTyxLQUFLQyxLQUFLLENBQUNSLFFBQVFYO1lBQy9CO1lBQ0EsSUFBSVMsTUFBTVcsUUFBUSxJQUFJVCxPQUFPO2dCQUN6QkEsUUFBUUEsUUFBUVQ7WUFDcEI7WUFDQSxJQUFJLENBQUNJLFFBQVEsQ0FBQztnQkFDVmUsTUFBTXRCO2dCQUNOdUIsUUFBUTtvQkFDSkMsR0FBR2QsTUFBTWUsT0FBTztvQkFDaEJDLEdBQUdoQixNQUFNaUIsT0FBTztnQkFDcEI7Z0JBQ0FDLE9BQU8sQ0FBQ2hCO2dCQUNSaUIsVUFBVW5CO2dCQUNWb0IsYUFBYTtnQkFDYkMsUUFBUXJCLE1BQU1xQixNQUFNO1lBQ3hCO1FBQ0o7UUFDQSxJQUFJLENBQUNDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQ3hCLE9BQU8sQ0FBQ3dCLE1BQU0sSUFBSSxFQUFFLEVBQUVDLE1BQU0sQ0FBQ2xDO1FBQ2pELElBQUksQ0FBQ2lDLE1BQU0sQ0FBQ0UsT0FBTyxDQUFDeEIsQ0FBQUEsUUFBU0osUUFBUTZCLGdCQUFnQixDQUFDekIsT0FBTyxJQUFJLENBQUNELFdBQVcsRUFBRWIsNERBQWdCQSxHQUFHO2dCQUFFd0MsU0FBUztZQUFNLElBQUk7SUFDM0g7SUFDQUMsVUFBVTtRQUNOLElBQUksQ0FBQ0wsTUFBTSxDQUFDRSxPQUFPLENBQUN4QixDQUFBQSxRQUFTLElBQUksQ0FBQ0osT0FBTyxDQUFDZ0MsbUJBQW1CLENBQUM1QixPQUFPLElBQUksQ0FBQ0QsV0FBVztJQUN6RjtJQUNBOzs7S0FHQyxHQUNEOEIsZ0JBQWdCQyxTQUFTLEVBQUVDLE9BQU8sRUFBRTtRQUNoQyxJQUFJRCxjQUFjeEMsWUFBWTtZQUMxQixJQUFJLENBQUNRLE9BQU8sQ0FBQ0csTUFBTSxHQUFHOEI7UUFDMUI7SUFDSjtBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS9pbnB1dHMvd2hlZWwtaW5wdXQuanM/NTdhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSW5wdXQgZnJvbSAnLi9pbnB1dCc7XG5pbXBvcnQgeyBJTlBVVF9FVkVOVF9UWVBFUyB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyB3aW5kb3csIHVzZXJBZ2VudCwgcGFzc2l2ZVN1cHBvcnRlZCB9IGZyb20gJy4uL3V0aWxzL2dsb2JhbHMnO1xuY29uc3QgZmlyZWZveCA9IHVzZXJBZ2VudC5pbmRleE9mKCdmaXJlZm94JykgIT09IC0xO1xuY29uc3QgeyBXSEVFTF9FVkVOVFMgfSA9IElOUFVUX0VWRU5UX1RZUEVTO1xuY29uc3QgRVZFTlRfVFlQRSA9ICd3aGVlbCc7XG4vLyBDb25zdGFudHMgZm9yIG5vcm1hbGl6aW5nIGlucHV0IGRlbHRhXG5jb25zdCBXSEVFTF9ERUxUQV9NQUdJQ19TQ0FMRVIgPSA0LjAwMDI0NDE0MDYyNTtcbmNvbnN0IFdIRUVMX0RFTFRBX1BFUl9MSU5FID0gNDA7XG4vLyBTbG93IGRvd24gem9vbSBpZiBzaGlmdCBrZXkgaXMgaGVsZCBmb3IgbW9yZSBwcmVjaXNlIHpvb21pbmdcbmNvbnN0IFNISUZUX01VTFRJUExJRVIgPSAwLjI1O1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2hlZWxJbnB1dCBleHRlbmRzIElucHV0IHtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjYWxsYmFjaywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihlbGVtZW50LCBjYWxsYmFjaywgb3B0aW9ucyk7XG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIGNvbXBsZXhpdHksIG1heC1zdGF0ZW1lbnRzICovXG4gICAgICAgIHRoaXMuaGFuZGxlRXZlbnQgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLmVuYWJsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGV2ZW50LmRlbHRhWTtcbiAgICAgICAgICAgIGlmICh3aW5kb3cuV2hlZWxFdmVudCkge1xuICAgICAgICAgICAgICAgIC8vIEZpcmVmb3ggZG91YmxlcyB0aGUgdmFsdWVzIG9uIHJldGluYSBzY3JlZW5zLi4uXG4gICAgICAgICAgICAgICAgaWYgKGZpcmVmb3ggJiYgZXZlbnQuZGVsdGFNb2RlID09PSB3aW5kb3cuV2hlZWxFdmVudC5ET01fREVMVEFfUElYRUwpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgLz0gd2luZG93LmRldmljZVBpeGVsUmF0aW87XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChldmVudC5kZWx0YU1vZGUgPT09IHdpbmRvdy5XaGVlbEV2ZW50LkRPTV9ERUxUQV9MSU5FKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlICo9IFdIRUVMX0RFTFRBX1BFUl9MSU5FO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gMCAmJiB2YWx1ZSAlIFdIRUVMX0RFTFRBX01BR0lDX1NDQUxFUiA9PT0gMCkge1xuICAgICAgICAgICAgICAgIC8vIFRoaXMgb25lIGlzIGRlZmluaXRlbHkgYSBtb3VzZSB3aGVlbCBldmVudC5cbiAgICAgICAgICAgICAgICAvLyBOb3JtYWxpemUgdGhpcyB2YWx1ZSB0byBtYXRjaCB0cmFja3BhZC5cbiAgICAgICAgICAgICAgICB2YWx1ZSA9IE1hdGguZmxvb3IodmFsdWUgLyBXSEVFTF9ERUxUQV9NQUdJQ19TQ0FMRVIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGV2ZW50LnNoaWZ0S2V5ICYmIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZSAqIFNISUZUX01VTFRJUExJRVI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBFVkVOVF9UWVBFLFxuICAgICAgICAgICAgICAgIGNlbnRlcjoge1xuICAgICAgICAgICAgICAgICAgICB4OiBldmVudC5jbGllbnRYLFxuICAgICAgICAgICAgICAgICAgICB5OiBldmVudC5jbGllbnRZXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkZWx0YTogLXZhbHVlLFxuICAgICAgICAgICAgICAgIHNyY0V2ZW50OiBldmVudCxcbiAgICAgICAgICAgICAgICBwb2ludGVyVHlwZTogJ21vdXNlJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IGV2ZW50LnRhcmdldFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZXZlbnRzID0gKHRoaXMub3B0aW9ucy5ldmVudHMgfHwgW10pLmNvbmNhdChXSEVFTF9FVkVOVFMpO1xuICAgICAgICB0aGlzLmV2ZW50cy5mb3JFYWNoKGV2ZW50ID0+IGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgdGhpcy5oYW5kbGVFdmVudCwgcGFzc2l2ZVN1cHBvcnRlZCA/IHsgcGFzc2l2ZTogZmFsc2UgfSA6IGZhbHNlKSk7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzLmZvckVhY2goZXZlbnQgPT4gdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIHRoaXMuaGFuZGxlRXZlbnQpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRW5hYmxlIHRoaXMgaW5wdXQgKGJlZ2luIHByb2Nlc3NpbmcgZXZlbnRzKVxuICAgICAqIGlmIHRoZSBzcGVjaWZpZWQgZXZlbnQgdHlwZSBpcyBhbW9uZyB0aG9zZSBoYW5kbGVkIGJ5IHRoaXMgaW5wdXQuXG4gICAgICovXG4gICAgZW5hYmxlRXZlbnRUeXBlKGV2ZW50VHlwZSwgZW5hYmxlZCkge1xuICAgICAgICBpZiAoZXZlbnRUeXBlID09PSBFVkVOVF9UWVBFKSB7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMuZW5hYmxlID0gZW5hYmxlZDtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdoZWVsLWlucHV0LmpzLm1hcCJdLCJuYW1lcyI6WyJJbnB1dCIsIklOUFVUX0VWRU5UX1RZUEVTIiwid2luZG93IiwidXNlckFnZW50IiwicGFzc2l2ZVN1cHBvcnRlZCIsImZpcmVmb3giLCJpbmRleE9mIiwiV0hFRUxfRVZFTlRTIiwiRVZFTlRfVFlQRSIsIldIRUVMX0RFTFRBX01BR0lDX1NDQUxFUiIsIldIRUVMX0RFTFRBX1BFUl9MSU5FIiwiU0hJRlRfTVVMVElQTElFUiIsIldoZWVsSW5wdXQiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJjYWxsYmFjayIsIm9wdGlvbnMiLCJoYW5kbGVFdmVudCIsImV2ZW50IiwiZW5hYmxlIiwidmFsdWUiLCJkZWx0YVkiLCJXaGVlbEV2ZW50IiwiZGVsdGFNb2RlIiwiRE9NX0RFTFRBX1BJWEVMIiwiZGV2aWNlUGl4ZWxSYXRpbyIsIkRPTV9ERUxUQV9MSU5FIiwiTWF0aCIsImZsb29yIiwic2hpZnRLZXkiLCJ0eXBlIiwiY2VudGVyIiwieCIsImNsaWVudFgiLCJ5IiwiY2xpZW50WSIsImRlbHRhIiwic3JjRXZlbnQiLCJwb2ludGVyVHlwZSIsInRhcmdldCIsImV2ZW50cyIsImNvbmNhdCIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwicGFzc2l2ZSIsImRlc3Ryb3kiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZW5hYmxlRXZlbnRUeXBlIiwiZXZlbnRUeXBlIiwiZW5hYmxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/inputs/wheel-input.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/utils/event-registrar.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/utils/event-registrar.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EventRegistrar)\n/* harmony export */ });\n/* harmony import */ var _event_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event-utils */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/utils/event-utils.js\");\n\nconst DEFAULT_OPTIONS = {\n    srcElement: \"root\",\n    priority: 0\n};\nclass EventRegistrar {\n    constructor(eventManager){\n        /**\n         * Handles hammerjs event\n         */ this.handleEvent = (event)=>{\n            if (this.isEmpty()) {\n                return;\n            }\n            const mjolnirEvent = this._normalizeEvent(event);\n            let target = event.srcEvent.target;\n            while(target && target !== mjolnirEvent.rootElement){\n                this._emit(mjolnirEvent, target);\n                if (mjolnirEvent.handled) {\n                    return;\n                }\n                target = target.parentNode;\n            }\n            this._emit(mjolnirEvent, \"root\");\n        };\n        this.eventManager = eventManager;\n        this.handlers = [];\n        // Element -> handler map\n        this.handlersByElement = new Map();\n        this._active = false;\n    }\n    // Returns true if there are no non-passive handlers\n    isEmpty() {\n        return !this._active;\n    }\n    add(type, handler, options, once = false, passive = false) {\n        const { handlers, handlersByElement } = this;\n        let opts = DEFAULT_OPTIONS;\n        if (typeof options === \"string\" || options && options.addEventListener) {\n            // is DOM element, backward compatibility\n            // @ts-ignore\n            opts = {\n                ...DEFAULT_OPTIONS,\n                srcElement: options\n            };\n        } else if (options) {\n            opts = {\n                ...DEFAULT_OPTIONS,\n                ...options\n            };\n        }\n        let entries = handlersByElement.get(opts.srcElement);\n        if (!entries) {\n            entries = [];\n            handlersByElement.set(opts.srcElement, entries);\n        }\n        const entry = {\n            type,\n            handler,\n            srcElement: opts.srcElement,\n            priority: opts.priority\n        };\n        if (once) {\n            entry.once = true;\n        }\n        if (passive) {\n            entry.passive = true;\n        }\n        handlers.push(entry);\n        this._active = this._active || !entry.passive;\n        // Sort handlers by descending priority\n        // Handlers with the same priority are excuted in the order of registration\n        let insertPosition = entries.length - 1;\n        while(insertPosition >= 0){\n            if (entries[insertPosition].priority >= entry.priority) {\n                break;\n            }\n            insertPosition--;\n        }\n        entries.splice(insertPosition + 1, 0, entry);\n    }\n    remove(type, handler) {\n        const { handlers, handlersByElement } = this;\n        for(let i = handlers.length - 1; i >= 0; i--){\n            const entry = handlers[i];\n            if (entry.type === type && entry.handler === handler) {\n                handlers.splice(i, 1);\n                const entries = handlersByElement.get(entry.srcElement);\n                entries.splice(entries.indexOf(entry), 1);\n                if (entries.length === 0) {\n                    handlersByElement.delete(entry.srcElement);\n                }\n            }\n        }\n        this._active = handlers.some((entry)=>!entry.passive);\n    }\n    /**\n     * Invoke handlers on a particular element\n     */ _emit(event, srcElement) {\n        const entries = this.handlersByElement.get(srcElement);\n        if (entries) {\n            let immediatePropagationStopped = false;\n            // Prevents the current event from bubbling up\n            const stopPropagation = ()=>{\n                event.handled = true;\n            };\n            // Prevent any remaining listeners from being called\n            const stopImmediatePropagation = ()=>{\n                event.handled = true;\n                immediatePropagationStopped = true;\n            };\n            const entriesToRemove = [];\n            for(let i = 0; i < entries.length; i++){\n                const { type, handler, once } = entries[i];\n                handler({\n                    ...event,\n                    // @ts-ignore\n                    type,\n                    stopPropagation,\n                    stopImmediatePropagation\n                });\n                if (once) {\n                    entriesToRemove.push(entries[i]);\n                }\n                if (immediatePropagationStopped) {\n                    break;\n                }\n            }\n            for(let i = 0; i < entriesToRemove.length; i++){\n                const { type, handler } = entriesToRemove[i];\n                this.remove(type, handler);\n            }\n        }\n    }\n    /**\n     * Normalizes hammerjs and custom events to have predictable fields.\n     */ _normalizeEvent(event) {\n        const rootElement = this.eventManager.getElement();\n        return {\n            ...event,\n            ...(0,_event_utils__WEBPACK_IMPORTED_MODULE_0__.whichButtons)(event),\n            ...(0,_event_utils__WEBPACK_IMPORTED_MODULE_0__.getOffsetPosition)(event, rootElement),\n            preventDefault: ()=>{\n                event.srcEvent.preventDefault();\n            },\n            stopImmediatePropagation: null,\n            stopPropagation: null,\n            handled: false,\n            rootElement\n        };\n    }\n} //# sourceMappingURL=event-registrar.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS91dGlscy9ldmVudC1yZWdpc3RyYXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDaEUsTUFBTUUsa0JBQWtCO0lBQ3BCQyxZQUFZO0lBQ1pDLFVBQVU7QUFDZDtBQUNlLE1BQU1DO0lBQ2pCQyxZQUFZQyxZQUFZLENBQUU7UUFDdEI7O1NBRUMsR0FDRCxJQUFJLENBQUNDLFdBQVcsR0FBRyxDQUFDQztZQUNoQixJQUFJLElBQUksQ0FBQ0MsT0FBTyxJQUFJO2dCQUNoQjtZQUNKO1lBQ0EsTUFBTUMsZUFBZSxJQUFJLENBQUNDLGVBQWUsQ0FBQ0g7WUFDMUMsSUFBSUksU0FBU0osTUFBTUssUUFBUSxDQUFDRCxNQUFNO1lBQ2xDLE1BQU9BLFVBQVVBLFdBQVdGLGFBQWFJLFdBQVcsQ0FBRTtnQkFDbEQsSUFBSSxDQUFDQyxLQUFLLENBQUNMLGNBQWNFO2dCQUN6QixJQUFJRixhQUFhTSxPQUFPLEVBQUU7b0JBQ3RCO2dCQUNKO2dCQUNBSixTQUFTQSxPQUFPSyxVQUFVO1lBQzlCO1lBQ0EsSUFBSSxDQUFDRixLQUFLLENBQUNMLGNBQWM7UUFDN0I7UUFDQSxJQUFJLENBQUNKLFlBQVksR0FBR0E7UUFDcEIsSUFBSSxDQUFDWSxRQUFRLEdBQUcsRUFBRTtRQUNsQix5QkFBeUI7UUFDekIsSUFBSSxDQUFDQyxpQkFBaUIsR0FBRyxJQUFJQztRQUM3QixJQUFJLENBQUNDLE9BQU8sR0FBRztJQUNuQjtJQUNBLG9EQUFvRDtJQUNwRFosVUFBVTtRQUNOLE9BQU8sQ0FBQyxJQUFJLENBQUNZLE9BQU87SUFDeEI7SUFDQUMsSUFBSUMsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxLQUFLLEVBQUVDLFVBQVUsS0FBSyxFQUFFO1FBQ3ZELE1BQU0sRUFBRVQsUUFBUSxFQUFFQyxpQkFBaUIsRUFBRSxHQUFHLElBQUk7UUFDNUMsSUFBSVMsT0FBTzNCO1FBQ1gsSUFBSSxPQUFPd0IsWUFBWSxZQUFhQSxXQUFXQSxRQUFRSSxnQkFBZ0IsRUFBRztZQUN0RSx5Q0FBeUM7WUFDekMsYUFBYTtZQUNiRCxPQUFPO2dCQUFFLEdBQUczQixlQUFlO2dCQUFFQyxZQUFZdUI7WUFBUTtRQUNyRCxPQUNLLElBQUlBLFNBQVM7WUFDZEcsT0FBTztnQkFBRSxHQUFHM0IsZUFBZTtnQkFBRSxHQUFHd0IsT0FBTztZQUFDO1FBQzVDO1FBQ0EsSUFBSUssVUFBVVgsa0JBQWtCWSxHQUFHLENBQUNILEtBQUsxQixVQUFVO1FBQ25ELElBQUksQ0FBQzRCLFNBQVM7WUFDVkEsVUFBVSxFQUFFO1lBQ1pYLGtCQUFrQmEsR0FBRyxDQUFDSixLQUFLMUIsVUFBVSxFQUFFNEI7UUFDM0M7UUFDQSxNQUFNRyxRQUFRO1lBQ1ZWO1lBQ0FDO1lBQ0F0QixZQUFZMEIsS0FBSzFCLFVBQVU7WUFDM0JDLFVBQVV5QixLQUFLekIsUUFBUTtRQUMzQjtRQUNBLElBQUl1QixNQUFNO1lBQ05PLE1BQU1QLElBQUksR0FBRztRQUNqQjtRQUNBLElBQUlDLFNBQVM7WUFDVE0sTUFBTU4sT0FBTyxHQUFHO1FBQ3BCO1FBQ0FULFNBQVNnQixJQUFJLENBQUNEO1FBQ2QsSUFBSSxDQUFDWixPQUFPLEdBQUcsSUFBSSxDQUFDQSxPQUFPLElBQUksQ0FBQ1ksTUFBTU4sT0FBTztRQUM3Qyx1Q0FBdUM7UUFDdkMsMkVBQTJFO1FBQzNFLElBQUlRLGlCQUFpQkwsUUFBUU0sTUFBTSxHQUFHO1FBQ3RDLE1BQU9ELGtCQUFrQixFQUFHO1lBQ3hCLElBQUlMLE9BQU8sQ0FBQ0ssZUFBZSxDQUFDaEMsUUFBUSxJQUFJOEIsTUFBTTlCLFFBQVEsRUFBRTtnQkFDcEQ7WUFDSjtZQUNBZ0M7UUFDSjtRQUNBTCxRQUFRTyxNQUFNLENBQUNGLGlCQUFpQixHQUFHLEdBQUdGO0lBQzFDO0lBQ0FLLE9BQU9mLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE1BQU0sRUFBRU4sUUFBUSxFQUFFQyxpQkFBaUIsRUFBRSxHQUFHLElBQUk7UUFDNUMsSUFBSyxJQUFJb0IsSUFBSXJCLFNBQVNrQixNQUFNLEdBQUcsR0FBR0csS0FBSyxHQUFHQSxJQUFLO1lBQzNDLE1BQU1OLFFBQVFmLFFBQVEsQ0FBQ3FCLEVBQUU7WUFDekIsSUFBSU4sTUFBTVYsSUFBSSxLQUFLQSxRQUFRVSxNQUFNVCxPQUFPLEtBQUtBLFNBQVM7Z0JBQ2xETixTQUFTbUIsTUFBTSxDQUFDRSxHQUFHO2dCQUNuQixNQUFNVCxVQUFVWCxrQkFBa0JZLEdBQUcsQ0FBQ0UsTUFBTS9CLFVBQVU7Z0JBQ3RENEIsUUFBUU8sTUFBTSxDQUFDUCxRQUFRVSxPQUFPLENBQUNQLFFBQVE7Z0JBQ3ZDLElBQUlILFFBQVFNLE1BQU0sS0FBSyxHQUFHO29CQUN0QmpCLGtCQUFrQnNCLE1BQU0sQ0FBQ1IsTUFBTS9CLFVBQVU7Z0JBQzdDO1lBQ0o7UUFDSjtRQUNBLElBQUksQ0FBQ21CLE9BQU8sR0FBR0gsU0FBU3dCLElBQUksQ0FBQ1QsQ0FBQUEsUUFBUyxDQUFDQSxNQUFNTixPQUFPO0lBQ3hEO0lBQ0E7O0tBRUMsR0FDRFosTUFBTVAsS0FBSyxFQUFFTixVQUFVLEVBQUU7UUFDckIsTUFBTTRCLFVBQVUsSUFBSSxDQUFDWCxpQkFBaUIsQ0FBQ1ksR0FBRyxDQUFDN0I7UUFDM0MsSUFBSTRCLFNBQVM7WUFDVCxJQUFJYSw4QkFBOEI7WUFDbEMsOENBQThDO1lBQzlDLE1BQU1DLGtCQUFrQjtnQkFDcEJwQyxNQUFNUSxPQUFPLEdBQUc7WUFDcEI7WUFDQSxvREFBb0Q7WUFDcEQsTUFBTTZCLDJCQUEyQjtnQkFDN0JyQyxNQUFNUSxPQUFPLEdBQUc7Z0JBQ2hCMkIsOEJBQThCO1lBQ2xDO1lBQ0EsTUFBTUcsa0JBQWtCLEVBQUU7WUFDMUIsSUFBSyxJQUFJUCxJQUFJLEdBQUdBLElBQUlULFFBQVFNLE1BQU0sRUFBRUcsSUFBSztnQkFDckMsTUFBTSxFQUFFaEIsSUFBSSxFQUFFQyxPQUFPLEVBQUVFLElBQUksRUFBRSxHQUFHSSxPQUFPLENBQUNTLEVBQUU7Z0JBQzFDZixRQUFRO29CQUNKLEdBQUdoQixLQUFLO29CQUNSLGFBQWE7b0JBQ2JlO29CQUNBcUI7b0JBQ0FDO2dCQUNKO2dCQUNBLElBQUluQixNQUFNO29CQUNOb0IsZ0JBQWdCWixJQUFJLENBQUNKLE9BQU8sQ0FBQ1MsRUFBRTtnQkFDbkM7Z0JBQ0EsSUFBSUksNkJBQTZCO29CQUM3QjtnQkFDSjtZQUNKO1lBQ0EsSUFBSyxJQUFJSixJQUFJLEdBQUdBLElBQUlPLGdCQUFnQlYsTUFBTSxFQUFFRyxJQUFLO2dCQUM3QyxNQUFNLEVBQUVoQixJQUFJLEVBQUVDLE9BQU8sRUFBRSxHQUFHc0IsZUFBZSxDQUFDUCxFQUFFO2dCQUM1QyxJQUFJLENBQUNELE1BQU0sQ0FBQ2YsTUFBTUM7WUFDdEI7UUFDSjtJQUNKO0lBQ0E7O0tBRUMsR0FDRGIsZ0JBQWdCSCxLQUFLLEVBQUU7UUFDbkIsTUFBTU0sY0FBYyxJQUFJLENBQUNSLFlBQVksQ0FBQ3lDLFVBQVU7UUFDaEQsT0FBTztZQUNILEdBQUd2QyxLQUFLO1lBQ1IsR0FBR1QsMERBQVlBLENBQUNTLE1BQU07WUFDdEIsR0FBR1IsK0RBQWlCQSxDQUFDUSxPQUFPTSxZQUFZO1lBQ3hDa0MsZ0JBQWdCO2dCQUNaeEMsTUFBTUssUUFBUSxDQUFDbUMsY0FBYztZQUNqQztZQUNBSCwwQkFBMEI7WUFDMUJELGlCQUFpQjtZQUNqQjVCLFNBQVM7WUFDVEY7UUFDSjtJQUNKO0FBQ0osRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9tam9sbmlyLmpzL2Rpc3QvZXNtL3V0aWxzL2V2ZW50LXJlZ2lzdHJhci5qcz8yNTIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdoaWNoQnV0dG9ucywgZ2V0T2Zmc2V0UG9zaXRpb24gfSBmcm9tICcuL2V2ZW50LXV0aWxzJztcbmNvbnN0IERFRkFVTFRfT1BUSU9OUyA9IHtcbiAgICBzcmNFbGVtZW50OiAncm9vdCcsXG4gICAgcHJpb3JpdHk6IDBcbn07XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudFJlZ2lzdHJhciB7XG4gICAgY29uc3RydWN0b3IoZXZlbnRNYW5hZ2VyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBIYW5kbGVzIGhhbW1lcmpzIGV2ZW50XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmhhbmRsZUV2ZW50ID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5pc0VtcHR5KCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBtam9sbmlyRXZlbnQgPSB0aGlzLl9ub3JtYWxpemVFdmVudChldmVudCk7XG4gICAgICAgICAgICBsZXQgdGFyZ2V0ID0gZXZlbnQuc3JjRXZlbnQudGFyZ2V0O1xuICAgICAgICAgICAgd2hpbGUgKHRhcmdldCAmJiB0YXJnZXQgIT09IG1qb2xuaXJFdmVudC5yb290RWxlbWVudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2VtaXQobWpvbG5pckV2ZW50LCB0YXJnZXQpO1xuICAgICAgICAgICAgICAgIGlmIChtam9sbmlyRXZlbnQuaGFuZGxlZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRhcmdldCA9IHRhcmdldC5wYXJlbnROb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fZW1pdChtam9sbmlyRXZlbnQsICdyb290Jyk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyID0gZXZlbnRNYW5hZ2VyO1xuICAgICAgICB0aGlzLmhhbmRsZXJzID0gW107XG4gICAgICAgIC8vIEVsZW1lbnQgLT4gaGFuZGxlciBtYXBcbiAgICAgICAgdGhpcy5oYW5kbGVyc0J5RWxlbWVudCA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5fYWN0aXZlID0gZmFsc2U7XG4gICAgfVxuICAgIC8vIFJldHVybnMgdHJ1ZSBpZiB0aGVyZSBhcmUgbm8gbm9uLXBhc3NpdmUgaGFuZGxlcnNcbiAgICBpc0VtcHR5KCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuX2FjdGl2ZTtcbiAgICB9XG4gICAgYWRkKHR5cGUsIGhhbmRsZXIsIG9wdGlvbnMsIG9uY2UgPSBmYWxzZSwgcGFzc2l2ZSA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IHsgaGFuZGxlcnMsIGhhbmRsZXJzQnlFbGVtZW50IH0gPSB0aGlzO1xuICAgICAgICBsZXQgb3B0cyA9IERFRkFVTFRfT1BUSU9OUztcbiAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJyB8fCAob3B0aW9ucyAmJiBvcHRpb25zLmFkZEV2ZW50TGlzdGVuZXIpKSB7XG4gICAgICAgICAgICAvLyBpcyBET00gZWxlbWVudCwgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgb3B0cyA9IHsgLi4uREVGQVVMVF9PUFRJT05TLCBzcmNFbGVtZW50OiBvcHRpb25zIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAob3B0aW9ucykge1xuICAgICAgICAgICAgb3B0cyA9IHsgLi4uREVGQVVMVF9PUFRJT05TLCAuLi5vcHRpb25zIH07XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGVudHJpZXMgPSBoYW5kbGVyc0J5RWxlbWVudC5nZXQob3B0cy5zcmNFbGVtZW50KTtcbiAgICAgICAgaWYgKCFlbnRyaWVzKSB7XG4gICAgICAgICAgICBlbnRyaWVzID0gW107XG4gICAgICAgICAgICBoYW5kbGVyc0J5RWxlbWVudC5zZXQob3B0cy5zcmNFbGVtZW50LCBlbnRyaWVzKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbnRyeSA9IHtcbiAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICBoYW5kbGVyLFxuICAgICAgICAgICAgc3JjRWxlbWVudDogb3B0cy5zcmNFbGVtZW50LFxuICAgICAgICAgICAgcHJpb3JpdHk6IG9wdHMucHJpb3JpdHlcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKG9uY2UpIHtcbiAgICAgICAgICAgIGVudHJ5Lm9uY2UgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXNzaXZlKSB7XG4gICAgICAgICAgICBlbnRyeS5wYXNzaXZlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBoYW5kbGVycy5wdXNoKGVudHJ5KTtcbiAgICAgICAgdGhpcy5fYWN0aXZlID0gdGhpcy5fYWN0aXZlIHx8ICFlbnRyeS5wYXNzaXZlO1xuICAgICAgICAvLyBTb3J0IGhhbmRsZXJzIGJ5IGRlc2NlbmRpbmcgcHJpb3JpdHlcbiAgICAgICAgLy8gSGFuZGxlcnMgd2l0aCB0aGUgc2FtZSBwcmlvcml0eSBhcmUgZXhjdXRlZCBpbiB0aGUgb3JkZXIgb2YgcmVnaXN0cmF0aW9uXG4gICAgICAgIGxldCBpbnNlcnRQb3NpdGlvbiA9IGVudHJpZXMubGVuZ3RoIC0gMTtcbiAgICAgICAgd2hpbGUgKGluc2VydFBvc2l0aW9uID49IDApIHtcbiAgICAgICAgICAgIGlmIChlbnRyaWVzW2luc2VydFBvc2l0aW9uXS5wcmlvcml0eSA+PSBlbnRyeS5wcmlvcml0eSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW5zZXJ0UG9zaXRpb24tLTtcbiAgICAgICAgfVxuICAgICAgICBlbnRyaWVzLnNwbGljZShpbnNlcnRQb3NpdGlvbiArIDEsIDAsIGVudHJ5KTtcbiAgICB9XG4gICAgcmVtb3ZlKHR5cGUsIGhhbmRsZXIpIHtcbiAgICAgICAgY29uc3QgeyBoYW5kbGVycywgaGFuZGxlcnNCeUVsZW1lbnQgfSA9IHRoaXM7XG4gICAgICAgIGZvciAobGV0IGkgPSBoYW5kbGVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgY29uc3QgZW50cnkgPSBoYW5kbGVyc1tpXTtcbiAgICAgICAgICAgIGlmIChlbnRyeS50eXBlID09PSB0eXBlICYmIGVudHJ5LmhhbmRsZXIgPT09IGhhbmRsZXIpIHtcbiAgICAgICAgICAgICAgICBoYW5kbGVycy5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZW50cmllcyA9IGhhbmRsZXJzQnlFbGVtZW50LmdldChlbnRyeS5zcmNFbGVtZW50KTtcbiAgICAgICAgICAgICAgICBlbnRyaWVzLnNwbGljZShlbnRyaWVzLmluZGV4T2YoZW50cnkpLCAxKTtcbiAgICAgICAgICAgICAgICBpZiAoZW50cmllcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgaGFuZGxlcnNCeUVsZW1lbnQuZGVsZXRlKGVudHJ5LnNyY0VsZW1lbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9hY3RpdmUgPSBoYW5kbGVycy5zb21lKGVudHJ5ID0+ICFlbnRyeS5wYXNzaXZlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW52b2tlIGhhbmRsZXJzIG9uIGEgcGFydGljdWxhciBlbGVtZW50XG4gICAgICovXG4gICAgX2VtaXQoZXZlbnQsIHNyY0VsZW1lbnQpIHtcbiAgICAgICAgY29uc3QgZW50cmllcyA9IHRoaXMuaGFuZGxlcnNCeUVsZW1lbnQuZ2V0KHNyY0VsZW1lbnQpO1xuICAgICAgICBpZiAoZW50cmllcykge1xuICAgICAgICAgICAgbGV0IGltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCA9IGZhbHNlO1xuICAgICAgICAgICAgLy8gUHJldmVudHMgdGhlIGN1cnJlbnQgZXZlbnQgZnJvbSBidWJibGluZyB1cFxuICAgICAgICAgICAgY29uc3Qgc3RvcFByb3BhZ2F0aW9uID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGV2ZW50LmhhbmRsZWQgPSB0cnVlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIC8vIFByZXZlbnQgYW55IHJlbWFpbmluZyBsaXN0ZW5lcnMgZnJvbSBiZWluZyBjYWxsZWRcbiAgICAgICAgICAgIGNvbnN0IHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBldmVudC5oYW5kbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBpbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQgPSB0cnVlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IGVudHJpZXNUb1JlbW92ZSA9IFtdO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbnRyaWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyB0eXBlLCBoYW5kbGVyLCBvbmNlIH0gPSBlbnRyaWVzW2ldO1xuICAgICAgICAgICAgICAgIGhhbmRsZXIoe1xuICAgICAgICAgICAgICAgICAgICAuLi5ldmVudCxcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICBzdG9wUHJvcGFnYXRpb24sXG4gICAgICAgICAgICAgICAgICAgIHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvblxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmIChvbmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGVudHJpZXNUb1JlbW92ZS5wdXNoKGVudHJpZXNbaV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZW50cmllc1RvUmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyB0eXBlLCBoYW5kbGVyIH0gPSBlbnRyaWVzVG9SZW1vdmVbaV07XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmUodHlwZSwgaGFuZGxlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogTm9ybWFsaXplcyBoYW1tZXJqcyBhbmQgY3VzdG9tIGV2ZW50cyB0byBoYXZlIHByZWRpY3RhYmxlIGZpZWxkcy5cbiAgICAgKi9cbiAgICBfbm9ybWFsaXplRXZlbnQoZXZlbnQpIHtcbiAgICAgICAgY29uc3Qgcm9vdEVsZW1lbnQgPSB0aGlzLmV2ZW50TWFuYWdlci5nZXRFbGVtZW50KCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5ldmVudCxcbiAgICAgICAgICAgIC4uLndoaWNoQnV0dG9ucyhldmVudCksXG4gICAgICAgICAgICAuLi5nZXRPZmZzZXRQb3NpdGlvbihldmVudCwgcm9vdEVsZW1lbnQpLFxuICAgICAgICAgICAgcHJldmVudERlZmF1bHQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBldmVudC5zcmNFdmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogbnVsbCxcbiAgICAgICAgICAgIHN0b3BQcm9wYWdhdGlvbjogbnVsbCxcbiAgICAgICAgICAgIGhhbmRsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgcm9vdEVsZW1lbnRcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudC1yZWdpc3RyYXIuanMubWFwIl0sIm5hbWVzIjpbIndoaWNoQnV0dG9ucyIsImdldE9mZnNldFBvc2l0aW9uIiwiREVGQVVMVF9PUFRJT05TIiwic3JjRWxlbWVudCIsInByaW9yaXR5IiwiRXZlbnRSZWdpc3RyYXIiLCJjb25zdHJ1Y3RvciIsImV2ZW50TWFuYWdlciIsImhhbmRsZUV2ZW50IiwiZXZlbnQiLCJpc0VtcHR5IiwibWpvbG5pckV2ZW50IiwiX25vcm1hbGl6ZUV2ZW50IiwidGFyZ2V0Iiwic3JjRXZlbnQiLCJyb290RWxlbWVudCIsIl9lbWl0IiwiaGFuZGxlZCIsInBhcmVudE5vZGUiLCJoYW5kbGVycyIsImhhbmRsZXJzQnlFbGVtZW50IiwiTWFwIiwiX2FjdGl2ZSIsImFkZCIsInR5cGUiLCJoYW5kbGVyIiwib3B0aW9ucyIsIm9uY2UiLCJwYXNzaXZlIiwib3B0cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJlbnRyaWVzIiwiZ2V0Iiwic2V0IiwiZW50cnkiLCJwdXNoIiwiaW5zZXJ0UG9zaXRpb24iLCJsZW5ndGgiLCJzcGxpY2UiLCJyZW1vdmUiLCJpIiwiaW5kZXhPZiIsImRlbGV0ZSIsInNvbWUiLCJpbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQiLCJzdG9wUHJvcGFnYXRpb24iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJlbnRyaWVzVG9SZW1vdmUiLCJnZXRFbGVtZW50IiwicHJldmVudERlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/utils/event-registrar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/utils/event-utils.js":
/*!***************************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/utils/event-utils.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOffsetPosition: () => (/* binding */ getOffsetPosition),\n/* harmony export */   whichButtons: () => (/* binding */ whichButtons)\n/* harmony export */ });\n/* Constants */ const DOWN_EVENT = 1;\nconst MOVE_EVENT = 2;\nconst UP_EVENT = 4;\nconst MOUSE_EVENTS = {\n    pointerdown: DOWN_EVENT,\n    pointermove: MOVE_EVENT,\n    pointerup: UP_EVENT,\n    mousedown: DOWN_EVENT,\n    mousemove: MOVE_EVENT,\n    mouseup: UP_EVENT\n};\n// MouseEvent.which https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\nconst MOUSE_EVENT_WHICH_LEFT = 1;\nconst MOUSE_EVENT_WHICH_MIDDLE = 2;\nconst MOUSE_EVENT_WHICH_RIGHT = 3;\n// MouseEvent.button https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nconst MOUSE_EVENT_BUTTON_LEFT = 0;\nconst MOUSE_EVENT_BUTTON_MIDDLE = 1;\nconst MOUSE_EVENT_BUTTON_RIGHT = 2;\n// MouseEvent.buttons https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\nconst MOUSE_EVENT_BUTTONS_LEFT_MASK = 1;\nconst MOUSE_EVENT_BUTTONS_RIGHT_MASK = 2;\nconst MOUSE_EVENT_BUTTONS_MIDDLE_MASK = 4;\n/**\n * Extract the involved mouse button\n */ function whichButtons(event) {\n    const eventType = MOUSE_EVENTS[event.srcEvent.type];\n    if (!eventType) {\n        // Not a mouse evet\n        return null;\n    }\n    const { buttons, button, which } = event.srcEvent;\n    let leftButton = false;\n    let middleButton = false;\n    let rightButton = false;\n    if (// button is up, need to find out which one was pressed before\n    eventType === UP_EVENT || // moving but does not support `buttons` API\n    eventType === MOVE_EVENT && !Number.isFinite(buttons)) {\n        leftButton = which === MOUSE_EVENT_WHICH_LEFT;\n        middleButton = which === MOUSE_EVENT_WHICH_MIDDLE;\n        rightButton = which === MOUSE_EVENT_WHICH_RIGHT;\n    } else if (eventType === MOVE_EVENT) {\n        leftButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_LEFT_MASK);\n        middleButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_MIDDLE_MASK);\n        rightButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_RIGHT_MASK);\n    } else if (eventType === DOWN_EVENT) {\n        leftButton = button === MOUSE_EVENT_BUTTON_LEFT;\n        middleButton = button === MOUSE_EVENT_BUTTON_MIDDLE;\n        rightButton = button === MOUSE_EVENT_BUTTON_RIGHT;\n    }\n    return {\n        leftButton,\n        middleButton,\n        rightButton\n    };\n}\n/**\n * Calculate event position relative to the root element\n */ function getOffsetPosition(event, rootElement) {\n    const center = event.center;\n    // `center` is a hammer.js event property\n    if (!center) {\n        // Not a gestural event\n        return null;\n    }\n    const rect = rootElement.getBoundingClientRect();\n    // Fix scale for map affected by a CSS transform.\n    // See https://stackoverflow.com/a/26893663/3528533\n    const scaleX = rect.width / rootElement.offsetWidth || 1;\n    const scaleY = rect.height / rootElement.offsetHeight || 1;\n    // Calculate center relative to the root element\n    const offsetCenter = {\n        x: (center.x - rect.left - rootElement.clientLeft) / scaleX,\n        y: (center.y - rect.top - rootElement.clientTop) / scaleY\n    };\n    return {\n        center,\n        offsetCenter\n    };\n} //# sourceMappingURL=event-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS91dGlscy9ldmVudC11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGFBQWEsR0FDYixNQUFNQSxhQUFhO0FBQ25CLE1BQU1DLGFBQWE7QUFDbkIsTUFBTUMsV0FBVztBQUNqQixNQUFNQyxlQUFlO0lBQ2pCQyxhQUFhSjtJQUNiSyxhQUFhSjtJQUNiSyxXQUFXSjtJQUNYSyxXQUFXUDtJQUNYUSxXQUFXUDtJQUNYUSxTQUFTUDtBQUNiO0FBQ0EscUZBQXFGO0FBQ3JGLE1BQU1RLHlCQUF5QjtBQUMvQixNQUFNQywyQkFBMkI7QUFDakMsTUFBTUMsMEJBQTBCO0FBQ2hDLHVGQUF1RjtBQUN2RixNQUFNQywwQkFBMEI7QUFDaEMsTUFBTUMsNEJBQTRCO0FBQ2xDLE1BQU1DLDJCQUEyQjtBQUNqQyx5RkFBeUY7QUFDekYsTUFBTUMsZ0NBQWdDO0FBQ3RDLE1BQU1DLGlDQUFpQztBQUN2QyxNQUFNQyxrQ0FBa0M7QUFDeEM7O0NBRUMsR0FDTSxTQUFTQyxhQUFhQyxLQUFLO0lBQzlCLE1BQU1DLFlBQVlsQixZQUFZLENBQUNpQixNQUFNRSxRQUFRLENBQUNDLElBQUksQ0FBQztJQUNuRCxJQUFJLENBQUNGLFdBQVc7UUFDWixtQkFBbUI7UUFDbkIsT0FBTztJQUNYO0lBQ0EsTUFBTSxFQUFFRyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsS0FBSyxFQUFFLEdBQUdOLE1BQU1FLFFBQVE7SUFDakQsSUFBSUssYUFBYTtJQUNqQixJQUFJQyxlQUFlO0lBQ25CLElBQUlDLGNBQWM7SUFDbEIsSUFDQSw4REFBOEQ7SUFDOURSLGNBQWNuQixZQUNWLDRDQUE0QztJQUMzQ21CLGNBQWNwQixjQUFjLENBQUM2QixPQUFPQyxRQUFRLENBQUNQLFVBQVc7UUFDekRHLGFBQWFELFVBQVVoQjtRQUN2QmtCLGVBQWVGLFVBQVVmO1FBQ3pCa0IsY0FBY0gsVUFBVWQ7SUFDNUIsT0FDSyxJQUFJUyxjQUFjcEIsWUFBWTtRQUMvQjBCLGFBQWFLLFFBQVFSLFVBQVVSO1FBQy9CWSxlQUFlSSxRQUFRUixVQUFVTjtRQUNqQ1csY0FBY0csUUFBUVIsVUFBVVA7SUFDcEMsT0FDSyxJQUFJSSxjQUFjckIsWUFBWTtRQUMvQjJCLGFBQWFGLFdBQVdaO1FBQ3hCZSxlQUFlSCxXQUFXWDtRQUMxQmUsY0FBY0osV0FBV1Y7SUFDN0I7SUFDQSxPQUFPO1FBQUVZO1FBQVlDO1FBQWNDO0lBQVk7QUFDbkQ7QUFDQTs7Q0FFQyxHQUNNLFNBQVNJLGtCQUFrQmIsS0FBSyxFQUFFYyxXQUFXO0lBQ2hELE1BQU1DLFNBQVNmLE1BQU1lLE1BQU07SUFDM0IseUNBQXlDO0lBQ3pDLElBQUksQ0FBQ0EsUUFBUTtRQUNULHVCQUF1QjtRQUN2QixPQUFPO0lBQ1g7SUFDQSxNQUFNQyxPQUFPRixZQUFZRyxxQkFBcUI7SUFDOUMsaURBQWlEO0lBQ2pELG1EQUFtRDtJQUNuRCxNQUFNQyxTQUFTRixLQUFLRyxLQUFLLEdBQUdMLFlBQVlNLFdBQVcsSUFBSTtJQUN2RCxNQUFNQyxTQUFTTCxLQUFLTSxNQUFNLEdBQUdSLFlBQVlTLFlBQVksSUFBSTtJQUN6RCxnREFBZ0Q7SUFDaEQsTUFBTUMsZUFBZTtRQUNqQkMsR0FBRyxDQUFDVixPQUFPVSxDQUFDLEdBQUdULEtBQUtVLElBQUksR0FBR1osWUFBWWEsVUFBVSxJQUFJVDtRQUNyRFUsR0FBRyxDQUFDYixPQUFPYSxDQUFDLEdBQUdaLEtBQUthLEdBQUcsR0FBR2YsWUFBWWdCLFNBQVMsSUFBSVQ7SUFDdkQ7SUFDQSxPQUFPO1FBQUVOO1FBQVFTO0lBQWE7QUFDbEMsRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9tam9sbmlyLmpzL2Rpc3QvZXNtL3V0aWxzL2V2ZW50LXV0aWxzLmpzPzlhMTciXSwic291cmNlc0NvbnRlbnQiOlsiLyogQ29uc3RhbnRzICovXG5jb25zdCBET1dOX0VWRU5UID0gMTtcbmNvbnN0IE1PVkVfRVZFTlQgPSAyO1xuY29uc3QgVVBfRVZFTlQgPSA0O1xuY29uc3QgTU9VU0VfRVZFTlRTID0ge1xuICAgIHBvaW50ZXJkb3duOiBET1dOX0VWRU5ULFxuICAgIHBvaW50ZXJtb3ZlOiBNT1ZFX0VWRU5ULFxuICAgIHBvaW50ZXJ1cDogVVBfRVZFTlQsXG4gICAgbW91c2Vkb3duOiBET1dOX0VWRU5ULFxuICAgIG1vdXNlbW92ZTogTU9WRV9FVkVOVCxcbiAgICBtb3VzZXVwOiBVUF9FVkVOVFxufTtcbi8vIE1vdXNlRXZlbnQud2hpY2ggaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL01vdXNlRXZlbnQvd2hpY2hcbmNvbnN0IE1PVVNFX0VWRU5UX1dISUNIX0xFRlQgPSAxO1xuY29uc3QgTU9VU0VfRVZFTlRfV0hJQ0hfTUlERExFID0gMjtcbmNvbnN0IE1PVVNFX0VWRU5UX1dISUNIX1JJR0hUID0gMztcbi8vIE1vdXNlRXZlbnQuYnV0dG9uIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9Nb3VzZUV2ZW50L2J1dHRvblxuY29uc3QgTU9VU0VfRVZFTlRfQlVUVE9OX0xFRlQgPSAwO1xuY29uc3QgTU9VU0VfRVZFTlRfQlVUVE9OX01JRERMRSA9IDE7XG5jb25zdCBNT1VTRV9FVkVOVF9CVVRUT05fUklHSFQgPSAyO1xuLy8gTW91c2VFdmVudC5idXR0b25zIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9Nb3VzZUV2ZW50L2J1dHRvbnNcbmNvbnN0IE1PVVNFX0VWRU5UX0JVVFRPTlNfTEVGVF9NQVNLID0gMTtcbmNvbnN0IE1PVVNFX0VWRU5UX0JVVFRPTlNfUklHSFRfTUFTSyA9IDI7XG5jb25zdCBNT1VTRV9FVkVOVF9CVVRUT05TX01JRERMRV9NQVNLID0gNDtcbi8qKlxuICogRXh0cmFjdCB0aGUgaW52b2x2ZWQgbW91c2UgYnV0dG9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3aGljaEJ1dHRvbnMoZXZlbnQpIHtcbiAgICBjb25zdCBldmVudFR5cGUgPSBNT1VTRV9FVkVOVFNbZXZlbnQuc3JjRXZlbnQudHlwZV07XG4gICAgaWYgKCFldmVudFR5cGUpIHtcbiAgICAgICAgLy8gTm90IGEgbW91c2UgZXZldFxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgeyBidXR0b25zLCBidXR0b24sIHdoaWNoIH0gPSBldmVudC5zcmNFdmVudDtcbiAgICBsZXQgbGVmdEJ1dHRvbiA9IGZhbHNlO1xuICAgIGxldCBtaWRkbGVCdXR0b24gPSBmYWxzZTtcbiAgICBsZXQgcmlnaHRCdXR0b24gPSBmYWxzZTtcbiAgICBpZiAoXG4gICAgLy8gYnV0dG9uIGlzIHVwLCBuZWVkIHRvIGZpbmQgb3V0IHdoaWNoIG9uZSB3YXMgcHJlc3NlZCBiZWZvcmVcbiAgICBldmVudFR5cGUgPT09IFVQX0VWRU5UIHx8XG4gICAgICAgIC8vIG1vdmluZyBidXQgZG9lcyBub3Qgc3VwcG9ydCBgYnV0dG9uc2AgQVBJXG4gICAgICAgIChldmVudFR5cGUgPT09IE1PVkVfRVZFTlQgJiYgIU51bWJlci5pc0Zpbml0ZShidXR0b25zKSkpIHtcbiAgICAgICAgbGVmdEJ1dHRvbiA9IHdoaWNoID09PSBNT1VTRV9FVkVOVF9XSElDSF9MRUZUO1xuICAgICAgICBtaWRkbGVCdXR0b24gPSB3aGljaCA9PT0gTU9VU0VfRVZFTlRfV0hJQ0hfTUlERExFO1xuICAgICAgICByaWdodEJ1dHRvbiA9IHdoaWNoID09PSBNT1VTRV9FVkVOVF9XSElDSF9SSUdIVDtcbiAgICB9XG4gICAgZWxzZSBpZiAoZXZlbnRUeXBlID09PSBNT1ZFX0VWRU5UKSB7XG4gICAgICAgIGxlZnRCdXR0b24gPSBCb29sZWFuKGJ1dHRvbnMgJiBNT1VTRV9FVkVOVF9CVVRUT05TX0xFRlRfTUFTSyk7XG4gICAgICAgIG1pZGRsZUJ1dHRvbiA9IEJvb2xlYW4oYnV0dG9ucyAmIE1PVVNFX0VWRU5UX0JVVFRPTlNfTUlERExFX01BU0spO1xuICAgICAgICByaWdodEJ1dHRvbiA9IEJvb2xlYW4oYnV0dG9ucyAmIE1PVVNFX0VWRU5UX0JVVFRPTlNfUklHSFRfTUFTSyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGV2ZW50VHlwZSA9PT0gRE9XTl9FVkVOVCkge1xuICAgICAgICBsZWZ0QnV0dG9uID0gYnV0dG9uID09PSBNT1VTRV9FVkVOVF9CVVRUT05fTEVGVDtcbiAgICAgICAgbWlkZGxlQnV0dG9uID0gYnV0dG9uID09PSBNT1VTRV9FVkVOVF9CVVRUT05fTUlERExFO1xuICAgICAgICByaWdodEJ1dHRvbiA9IGJ1dHRvbiA9PT0gTU9VU0VfRVZFTlRfQlVUVE9OX1JJR0hUO1xuICAgIH1cbiAgICByZXR1cm4geyBsZWZ0QnV0dG9uLCBtaWRkbGVCdXR0b24sIHJpZ2h0QnV0dG9uIH07XG59XG4vKipcbiAqIENhbGN1bGF0ZSBldmVudCBwb3NpdGlvbiByZWxhdGl2ZSB0byB0aGUgcm9vdCBlbGVtZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRPZmZzZXRQb3NpdGlvbihldmVudCwgcm9vdEVsZW1lbnQpIHtcbiAgICBjb25zdCBjZW50ZXIgPSBldmVudC5jZW50ZXI7XG4gICAgLy8gYGNlbnRlcmAgaXMgYSBoYW1tZXIuanMgZXZlbnQgcHJvcGVydHlcbiAgICBpZiAoIWNlbnRlcikge1xuICAgICAgICAvLyBOb3QgYSBnZXN0dXJhbCBldmVudFxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgcmVjdCA9IHJvb3RFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIC8vIEZpeCBzY2FsZSBmb3IgbWFwIGFmZmVjdGVkIGJ5IGEgQ1NTIHRyYW5zZm9ybS5cbiAgICAvLyBTZWUgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2ODkzNjYzLzM1Mjg1MzNcbiAgICBjb25zdCBzY2FsZVggPSByZWN0LndpZHRoIC8gcm9vdEVsZW1lbnQub2Zmc2V0V2lkdGggfHwgMTtcbiAgICBjb25zdCBzY2FsZVkgPSByZWN0LmhlaWdodCAvIHJvb3RFbGVtZW50Lm9mZnNldEhlaWdodCB8fCAxO1xuICAgIC8vIENhbGN1bGF0ZSBjZW50ZXIgcmVsYXRpdmUgdG8gdGhlIHJvb3QgZWxlbWVudFxuICAgIGNvbnN0IG9mZnNldENlbnRlciA9IHtcbiAgICAgICAgeDogKGNlbnRlci54IC0gcmVjdC5sZWZ0IC0gcm9vdEVsZW1lbnQuY2xpZW50TGVmdCkgLyBzY2FsZVgsXG4gICAgICAgIHk6IChjZW50ZXIueSAtIHJlY3QudG9wIC0gcm9vdEVsZW1lbnQuY2xpZW50VG9wKSAvIHNjYWxlWVxuICAgIH07XG4gICAgcmV0dXJuIHsgY2VudGVyLCBvZmZzZXRDZW50ZXIgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50LXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJET1dOX0VWRU5UIiwiTU9WRV9FVkVOVCIsIlVQX0VWRU5UIiwiTU9VU0VfRVZFTlRTIiwicG9pbnRlcmRvd24iLCJwb2ludGVybW92ZSIsInBvaW50ZXJ1cCIsIm1vdXNlZG93biIsIm1vdXNlbW92ZSIsIm1vdXNldXAiLCJNT1VTRV9FVkVOVF9XSElDSF9MRUZUIiwiTU9VU0VfRVZFTlRfV0hJQ0hfTUlERExFIiwiTU9VU0VfRVZFTlRfV0hJQ0hfUklHSFQiLCJNT1VTRV9FVkVOVF9CVVRUT05fTEVGVCIsIk1PVVNFX0VWRU5UX0JVVFRPTl9NSURETEUiLCJNT1VTRV9FVkVOVF9CVVRUT05fUklHSFQiLCJNT1VTRV9FVkVOVF9CVVRUT05TX0xFRlRfTUFTSyIsIk1PVVNFX0VWRU5UX0JVVFRPTlNfUklHSFRfTUFTSyIsIk1PVVNFX0VWRU5UX0JVVFRPTlNfTUlERExFX01BU0siLCJ3aGljaEJ1dHRvbnMiLCJldmVudCIsImV2ZW50VHlwZSIsInNyY0V2ZW50IiwidHlwZSIsImJ1dHRvbnMiLCJidXR0b24iLCJ3aGljaCIsImxlZnRCdXR0b24iLCJtaWRkbGVCdXR0b24iLCJyaWdodEJ1dHRvbiIsIk51bWJlciIsImlzRmluaXRlIiwiQm9vbGVhbiIsImdldE9mZnNldFBvc2l0aW9uIiwicm9vdEVsZW1lbnQiLCJjZW50ZXIiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwic2NhbGVYIiwid2lkdGgiLCJvZmZzZXRXaWR0aCIsInNjYWxlWSIsImhlaWdodCIsIm9mZnNldEhlaWdodCIsIm9mZnNldENlbnRlciIsIngiLCJsZWZ0IiwiY2xpZW50TGVmdCIsInkiLCJ0b3AiLCJjbGllbnRUb3AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/utils/event-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/utils/globals.js":
/*!***********************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/utils/globals.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   document: () => (/* binding */ document_),\n/* harmony export */   global: () => (/* binding */ global_),\n/* harmony export */   passiveSupported: () => (/* binding */ passiveSupported),\n/* harmony export */   userAgent: () => (/* binding */ userAgent),\n/* harmony export */   window: () => (/* binding */ window_)\n/* harmony export */ });\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n/* global window, global, document, navigator */ const userAgent = typeof navigator !== \"undefined\" && navigator.userAgent ? navigator.userAgent.toLowerCase() : \"\";\nconst window_ = \"undefined\" !== \"undefined\" ? window : global;\nconst global_ = typeof global !== \"undefined\" ? global : window;\nconst document_ = typeof document !== \"undefined\" ? document : {};\n\n/*\n * Detect whether passive option is supported by the current browser.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   #Safely_detecting_option_support\n */ let passiveSupported = false;\n/* eslint-disable accessor-pairs, no-empty */ try {\n    const options = {\n        // This function will be called when the browser\n        // attempts to access the passive property.\n        get passive () {\n            passiveSupported = true;\n            return true;\n        }\n    };\n    window_.addEventListener(\"test\", null, options);\n    window_.removeEventListener(\"test\", null);\n} catch (err) {\n    passiveSupported = false;\n}\n //# sourceMappingURL=globals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS91dGlscy9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsd0VBQXdFO0FBQ3hFLDhCQUE4QjtBQUM5Qiw4Q0FBOEMsR0FDdkMsTUFBTUEsWUFBWSxPQUFPQyxjQUFjLGVBQWVBLFVBQVVELFNBQVMsR0FBR0MsVUFBVUQsU0FBUyxDQUFDRSxXQUFXLEtBQUssR0FBRztBQUMxSCxNQUFNQyxVQUFVLGdCQUFrQixjQUFjQyxTQUFTQztBQUN6RCxNQUFNQyxVQUFVLE9BQU9ELFdBQVcsY0FBY0EsU0FBU0Q7QUFDekQsTUFBTUcsWUFBWSxPQUFPQyxhQUFhLGNBQWNBLFdBQVcsQ0FBQztBQUNPO0FBQ3ZFOzs7O0NBSUMsR0FDRCxJQUFJQyxtQkFBbUI7QUFDdkIsMkNBQTJDLEdBQzNDLElBQUk7SUFDQSxNQUFNQyxVQUFVO1FBQ1osZ0RBQWdEO1FBQ2hELDJDQUEyQztRQUMzQyxJQUFJQyxXQUFVO1lBQ1ZGLG1CQUFtQjtZQUNuQixPQUFPO1FBQ1g7SUFDSjtJQUNBTixRQUFRUyxnQkFBZ0IsQ0FBQyxRQUFRLE1BQU1GO0lBQ3ZDUCxRQUFRVSxtQkFBbUIsQ0FBQyxRQUFRO0FBQ3hDLEVBQ0EsT0FBT0MsS0FBSztJQUNSTCxtQkFBbUI7QUFDdkI7QUFDNEIsQ0FDNUIsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS91dGlscy9nbG9iYWxzLmpzP2FmY2EiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUHVycG9zZTogaW5jbHVkZSB0aGlzIGluIHlvdXIgbW9kdWxlIHRvIGF2b2lkcyBhZGRpbmcgZGVwZW5kZW5jaWVzIG9uXG4vLyBtaWNybyBtb2R1bGVzIGxpa2UgJ2dsb2JhbCdcbi8qIGdsb2JhbCB3aW5kb3csIGdsb2JhbCwgZG9jdW1lbnQsIG5hdmlnYXRvciAqL1xuZXhwb3J0IGNvbnN0IHVzZXJBZ2VudCA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvci51c2VyQWdlbnQgPyBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkgOiAnJztcbmNvbnN0IHdpbmRvd18gPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IGdsb2JhbDtcbmNvbnN0IGdsb2JhbF8gPSB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbCA6IHdpbmRvdztcbmNvbnN0IGRvY3VtZW50XyA9IHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgPyBkb2N1bWVudCA6IHt9O1xuZXhwb3J0IHsgd2luZG93XyBhcyB3aW5kb3csIGdsb2JhbF8gYXMgZ2xvYmFsLCBkb2N1bWVudF8gYXMgZG9jdW1lbnQgfTtcbi8qXG4gKiBEZXRlY3Qgd2hldGhlciBwYXNzaXZlIG9wdGlvbiBpcyBzdXBwb3J0ZWQgYnkgdGhlIGN1cnJlbnQgYnJvd3Nlci5cbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9FdmVudFRhcmdldC9hZGRFdmVudExpc3RlbmVyXG4gICAjU2FmZWx5X2RldGVjdGluZ19vcHRpb25fc3VwcG9ydFxuICovXG5sZXQgcGFzc2l2ZVN1cHBvcnRlZCA9IGZhbHNlO1xuLyogZXNsaW50LWRpc2FibGUgYWNjZXNzb3ItcGFpcnMsIG5vLWVtcHR5ICovXG50cnkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgIC8vIFRoaXMgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgYnJvd3NlclxuICAgICAgICAvLyBhdHRlbXB0cyB0byBhY2Nlc3MgdGhlIHBhc3NpdmUgcHJvcGVydHkuXG4gICAgICAgIGdldCBwYXNzaXZlKCkge1xuICAgICAgICAgICAgcGFzc2l2ZVN1cHBvcnRlZCA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgd2luZG93Xy5hZGRFdmVudExpc3RlbmVyKCd0ZXN0JywgbnVsbCwgb3B0aW9ucyk7XG4gICAgd2luZG93Xy5yZW1vdmVFdmVudExpc3RlbmVyKCd0ZXN0JywgbnVsbCk7XG59XG5jYXRjaCAoZXJyKSB7XG4gICAgcGFzc2l2ZVN1cHBvcnRlZCA9IGZhbHNlO1xufVxuZXhwb3J0IHsgcGFzc2l2ZVN1cHBvcnRlZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xvYmFscy5qcy5tYXAiXSwibmFtZXMiOlsidXNlckFnZW50IiwibmF2aWdhdG9yIiwidG9Mb3dlckNhc2UiLCJ3aW5kb3dfIiwid2luZG93IiwiZ2xvYmFsIiwiZ2xvYmFsXyIsImRvY3VtZW50XyIsImRvY3VtZW50IiwicGFzc2l2ZVN1cHBvcnRlZCIsIm9wdGlvbnMiLCJwYXNzaXZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/utils/globals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/mjolnir.js/dist/esm/utils/hammer.js":
/*!**********************************************************!*\
  !*** ./node_modules/mjolnir.js/dist/esm/utils/hammer.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Manager: () => (/* binding */ Manager),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Hammer.Manager mock for use in environments without `document` / `window`.\nclass HammerManagerMock {\n    constructor(){\n        this.get = ()=>null;\n        this.set = ()=>this;\n        this.on = ()=>this;\n        this.off = ()=>this;\n        this.destroy = ()=>this;\n        this.emit = ()=>this;\n    }\n}\nconst Manager = HammerManagerMock;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (null); //# sourceMappingURL=hammer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWpvbG5pci5qcy9kaXN0L2VzbS91dGlscy9oYW1tZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw2RUFBNkU7QUFDN0UsTUFBTUE7SUFDRkMsYUFBYztRQUNWLElBQUksQ0FBQ0MsR0FBRyxHQUFHLElBQU07UUFDakIsSUFBSSxDQUFDQyxHQUFHLEdBQUcsSUFBTSxJQUFJO1FBQ3JCLElBQUksQ0FBQ0MsRUFBRSxHQUFHLElBQU0sSUFBSTtRQUNwQixJQUFJLENBQUNDLEdBQUcsR0FBRyxJQUFNLElBQUk7UUFDckIsSUFBSSxDQUFDQyxPQUFPLEdBQUcsSUFBTSxJQUFJO1FBQ3pCLElBQUksQ0FBQ0MsSUFBSSxHQUFHLElBQU0sSUFBSTtJQUMxQjtBQUNKO0FBQ08sTUFBTUMsVUFBVVIsa0JBQWtCO0FBQ3pDLGlFQUFlLElBQUksRUFBQyxDQUNwQixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9tam9sbmlyLmpzL2Rpc3QvZXNtL3V0aWxzL2hhbW1lci5qcz8zN2RhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEhhbW1lci5NYW5hZ2VyIG1vY2sgZm9yIHVzZSBpbiBlbnZpcm9ubWVudHMgd2l0aG91dCBgZG9jdW1lbnRgIC8gYHdpbmRvd2AuXG5jbGFzcyBIYW1tZXJNYW5hZ2VyTW9jayB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZ2V0ID0gKCkgPT4gbnVsbDtcbiAgICAgICAgdGhpcy5zZXQgPSAoKSA9PiB0aGlzO1xuICAgICAgICB0aGlzLm9uID0gKCkgPT4gdGhpcztcbiAgICAgICAgdGhpcy5vZmYgPSAoKSA9PiB0aGlzO1xuICAgICAgICB0aGlzLmRlc3Ryb3kgPSAoKSA9PiB0aGlzO1xuICAgICAgICB0aGlzLmVtaXQgPSAoKSA9PiB0aGlzO1xuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBNYW5hZ2VyID0gSGFtbWVyTWFuYWdlck1vY2s7XG5leHBvcnQgZGVmYXVsdCBudWxsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFtbWVyLmpzLm1hcCJdLCJuYW1lcyI6WyJIYW1tZXJNYW5hZ2VyTW9jayIsImNvbnN0cnVjdG9yIiwiZ2V0Iiwic2V0Iiwib24iLCJvZmYiLCJkZXN0cm95IiwiZW1pdCIsIk1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/mjolnir.js/dist/esm/utils/hammer.js\n");

/***/ })

};
;