"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@deck.gl";
exports.ids = ["vendor-chunks/@deck.gl"];
exports.modules = {

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/controller.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/controllers/controller.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Controller)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _transition_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/transition-manager.js\");\n/* harmony import */ var _transitions_linear_interpolator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transitions/linear-interpolator */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/linear-interpolator.js\");\n\n\n\nconst NO_TRANSITION_PROPS = {\n    transitionDuration: 0\n};\nconst DEFAULT_INERTIA = 300;\nconst INERTIA_EASING = (t)=>1 - (1 - t) * (1 - t);\nconst EVENT_TYPES = {\n    WHEEL: [\n        \"wheel\"\n    ],\n    PAN: [\n        \"panstart\",\n        \"panmove\",\n        \"panend\"\n    ],\n    PINCH: [\n        \"pinchstart\",\n        \"pinchmove\",\n        \"pinchend\"\n    ],\n    TRIPLE_PAN: [\n        \"tripanstart\",\n        \"tripanmove\",\n        \"tripanend\"\n    ],\n    DOUBLE_TAP: [\n        \"doubletap\"\n    ],\n    KEYBOARD: [\n        \"keydown\"\n    ]\n};\nconst pinchEventWorkaround = {};\nclass Controller {\n    constructor(opts){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"props\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", {});\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"transitionManager\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"eventManager\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"onViewStateChange\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"onStateChange\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"makeViewport\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_controllerState\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_events\", {});\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_interactionState\", {\n            isDragging: false\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_customEvents\", []);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_eventStartBlocked\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_panMove\", false);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"invertPan\", false);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dragMode\", \"rotate\");\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"inertia\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"scrollZoom\", true);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dragPan\", true);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dragRotate\", true);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"doubleClickZoom\", true);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"touchZoom\", true);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"touchRotate\", false);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"keyboard\", true);\n        this.transitionManager = new _transition_manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n            ...opts,\n            getControllerState: (props)=>new this.ControllerState(props),\n            onViewStateChange: this._onTransition.bind(this),\n            onStateChange: this._setInteractionState.bind(this)\n        });\n        this.handleEvent = this.handleEvent.bind(this);\n        this.eventManager = opts.eventManager;\n        this.onViewStateChange = opts.onViewStateChange || (()=>{});\n        this.onStateChange = opts.onStateChange || (()=>{});\n        this.makeViewport = opts.makeViewport;\n    }\n    set events(customEvents) {\n        this.toggleEvents(this._customEvents, false);\n        this.toggleEvents(customEvents, true);\n        this._customEvents = customEvents;\n        if (this.props) {\n            this.setProps(this.props);\n        }\n    }\n    finalize() {\n        for(const eventName in this._events){\n            if (this._events[eventName]) {\n                var _this$eventManager;\n                (_this$eventManager = this.eventManager) === null || _this$eventManager === void 0 ? void 0 : _this$eventManager.off(eventName, this.handleEvent);\n            }\n        }\n        this.transitionManager.finalize();\n    }\n    handleEvent(event) {\n        this._controllerState = undefined;\n        const eventStartBlocked = this._eventStartBlocked;\n        switch(event.type){\n            case \"panstart\":\n                return eventStartBlocked ? false : this._onPanStart(event);\n            case \"panmove\":\n                return this._onPan(event);\n            case \"panend\":\n                return this._onPanEnd(event);\n            case \"pinchstart\":\n                return eventStartBlocked ? false : this._onPinchStart(event);\n            case \"pinchmove\":\n                return this._onPinch(event);\n            case \"pinchend\":\n                return this._onPinchEnd(event);\n            case \"tripanstart\":\n                return eventStartBlocked ? false : this._onTriplePanStart(event);\n            case \"tripanmove\":\n                return this._onTriplePan(event);\n            case \"tripanend\":\n                return this._onTriplePanEnd(event);\n            case \"doubletap\":\n                return this._onDoubleTap(event);\n            case \"wheel\":\n                return this._onWheel(event);\n            case \"keydown\":\n                return this._onKeyDown(event);\n            default:\n                return false;\n        }\n    }\n    get controllerState() {\n        this._controllerState = this._controllerState || new this.ControllerState({\n            makeViewport: this.makeViewport,\n            ...this.props,\n            ...this.state\n        });\n        return this._controllerState;\n    }\n    getCenter(event) {\n        const { x, y } = this.props;\n        const { offsetCenter } = event;\n        return [\n            offsetCenter.x - x,\n            offsetCenter.y - y\n        ];\n    }\n    isPointInBounds(pos, event) {\n        const { width, height } = this.props;\n        if (event && event.handled) {\n            return false;\n        }\n        const inside = pos[0] >= 0 && pos[0] <= width && pos[1] >= 0 && pos[1] <= height;\n        if (inside && event) {\n            event.stopPropagation();\n        }\n        return inside;\n    }\n    isFunctionKeyPressed(event) {\n        const { srcEvent } = event;\n        return Boolean(srcEvent.metaKey || srcEvent.altKey || srcEvent.ctrlKey || srcEvent.shiftKey);\n    }\n    isDragging() {\n        return this._interactionState.isDragging || false;\n    }\n    blockEvents(timeout) {\n        const timer = setTimeout(()=>{\n            if (this._eventStartBlocked === timer) {\n                this._eventStartBlocked = null;\n            }\n        }, timeout);\n        this._eventStartBlocked = timer;\n    }\n    setProps(props) {\n        if (props.dragMode) {\n            this.dragMode = props.dragMode;\n        }\n        this.props = props;\n        if (!(\"transitionInterpolator\" in props)) {\n            props.transitionInterpolator = this._getTransitionProps().transitionInterpolator;\n        }\n        this.transitionManager.processViewStateChange(props);\n        const { inertia } = props;\n        this.inertia = Number.isFinite(inertia) ? inertia : inertia === true ? DEFAULT_INERTIA : 0;\n        const { scrollZoom = true, dragPan = true, dragRotate = true, doubleClickZoom = true, touchZoom = true, touchRotate = false, keyboard = true } = props;\n        const isInteractive = Boolean(this.onViewStateChange);\n        this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && scrollZoom);\n        this.toggleEvents(EVENT_TYPES.PAN, isInteractive);\n        this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && (touchZoom || touchRotate));\n        this.toggleEvents(EVENT_TYPES.TRIPLE_PAN, isInteractive && touchRotate);\n        this.toggleEvents(EVENT_TYPES.DOUBLE_TAP, isInteractive && doubleClickZoom);\n        this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && keyboard);\n        this.scrollZoom = scrollZoom;\n        this.dragPan = dragPan;\n        this.dragRotate = dragRotate;\n        this.doubleClickZoom = doubleClickZoom;\n        this.touchZoom = touchZoom;\n        this.touchRotate = touchRotate;\n        this.keyboard = keyboard;\n    }\n    updateTransition() {\n        this.transitionManager.updateTransition();\n    }\n    toggleEvents(eventNames, enabled) {\n        if (this.eventManager) {\n            eventNames.forEach((eventName)=>{\n                if (this._events[eventName] !== enabled) {\n                    this._events[eventName] = enabled;\n                    if (enabled) {\n                        this.eventManager.on(eventName, this.handleEvent);\n                    } else {\n                        this.eventManager.off(eventName, this.handleEvent);\n                    }\n                }\n            });\n        }\n    }\n    updateViewport(newControllerState, extraProps = null, interactionState = {}) {\n        const viewState = {\n            ...newControllerState.getViewportProps(),\n            ...extraProps\n        };\n        const changed = this.controllerState !== newControllerState;\n        this.state = newControllerState.getState();\n        this._setInteractionState(interactionState);\n        if (changed) {\n            const oldViewState = this.controllerState && this.controllerState.getViewportProps();\n            if (this.onViewStateChange) {\n                this.onViewStateChange({\n                    viewState,\n                    interactionState: this._interactionState,\n                    oldViewState\n                });\n            }\n        }\n    }\n    _onTransition(params) {\n        this.onViewStateChange({\n            ...params,\n            interactionState: this._interactionState\n        });\n    }\n    _setInteractionState(newStates) {\n        Object.assign(this._interactionState, newStates);\n        this.onStateChange(this._interactionState);\n    }\n    _onPanStart(event) {\n        const pos = this.getCenter(event);\n        if (!this.isPointInBounds(pos, event)) {\n            return false;\n        }\n        let alternateMode = this.isFunctionKeyPressed(event) || event.rightButton || false;\n        if (this.invertPan || this.dragMode === \"pan\") {\n            alternateMode = !alternateMode;\n        }\n        const newControllerState = this.controllerState[alternateMode ? \"panStart\" : \"rotateStart\"]({\n            pos\n        });\n        this._panMove = alternateMode;\n        this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n            isDragging: true\n        });\n        return true;\n    }\n    _onPan(event) {\n        if (!this.isDragging()) {\n            return false;\n        }\n        return this._panMove ? this._onPanMove(event) : this._onPanRotate(event);\n    }\n    _onPanEnd(event) {\n        if (!this.isDragging()) {\n            return false;\n        }\n        return this._panMove ? this._onPanMoveEnd(event) : this._onPanRotateEnd(event);\n    }\n    _onPanMove(event) {\n        if (!this.dragPan) {\n            return false;\n        }\n        const pos = this.getCenter(event);\n        const newControllerState = this.controllerState.pan({\n            pos\n        });\n        this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n            isDragging: true,\n            isPanning: true\n        });\n        return true;\n    }\n    _onPanMoveEnd(event) {\n        const { inertia } = this;\n        if (this.dragPan && inertia && event.velocity) {\n            const pos = this.getCenter(event);\n            const endPos = [\n                pos[0] + event.velocityX * inertia / 2,\n                pos[1] + event.velocityY * inertia / 2\n            ];\n            const newControllerState = this.controllerState.pan({\n                pos: endPos\n            }).panEnd();\n            this.updateViewport(newControllerState, {\n                ...this._getTransitionProps(),\n                transitionDuration: inertia,\n                transitionEasing: INERTIA_EASING\n            }, {\n                isDragging: false,\n                isPanning: true\n            });\n        } else {\n            const newControllerState = this.controllerState.panEnd();\n            this.updateViewport(newControllerState, null, {\n                isDragging: false,\n                isPanning: false\n            });\n        }\n        return true;\n    }\n    _onPanRotate(event) {\n        if (!this.dragRotate) {\n            return false;\n        }\n        const pos = this.getCenter(event);\n        const newControllerState = this.controllerState.rotate({\n            pos\n        });\n        this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n            isDragging: true,\n            isRotating: true\n        });\n        return true;\n    }\n    _onPanRotateEnd(event) {\n        const { inertia } = this;\n        if (this.dragRotate && inertia && event.velocity) {\n            const pos = this.getCenter(event);\n            const endPos = [\n                pos[0] + event.velocityX * inertia / 2,\n                pos[1] + event.velocityY * inertia / 2\n            ];\n            const newControllerState = this.controllerState.rotate({\n                pos: endPos\n            }).rotateEnd();\n            this.updateViewport(newControllerState, {\n                ...this._getTransitionProps(),\n                transitionDuration: inertia,\n                transitionEasing: INERTIA_EASING\n            }, {\n                isDragging: false,\n                isRotating: true\n            });\n        } else {\n            const newControllerState = this.controllerState.rotateEnd();\n            this.updateViewport(newControllerState, null, {\n                isDragging: false,\n                isRotating: false\n            });\n        }\n        return true;\n    }\n    _onWheel(event) {\n        if (!this.scrollZoom) {\n            return false;\n        }\n        const pos = this.getCenter(event);\n        if (!this.isPointInBounds(pos, event)) {\n            return false;\n        }\n        event.srcEvent.preventDefault();\n        const { speed = 0.01, smooth = false } = this.scrollZoom === true ? {} : this.scrollZoom;\n        const { delta } = event;\n        let scale = 2 / (1 + Math.exp(-Math.abs(delta * speed)));\n        if (delta < 0 && scale !== 0) {\n            scale = 1 / scale;\n        }\n        const newControllerState = this.controllerState.zoom({\n            pos,\n            scale\n        });\n        this.updateViewport(newControllerState, {\n            ...this._getTransitionProps({\n                around: pos\n            }),\n            transitionDuration: smooth ? 250 : 1\n        }, {\n            isZooming: true,\n            isPanning: true\n        });\n        return true;\n    }\n    _onTriplePanStart(event) {\n        const pos = this.getCenter(event);\n        if (!this.isPointInBounds(pos, event)) {\n            return false;\n        }\n        const newControllerState = this.controllerState.rotateStart({\n            pos\n        });\n        this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n            isDragging: true\n        });\n        return true;\n    }\n    _onTriplePan(event) {\n        if (!this.touchRotate) {\n            return false;\n        }\n        if (!this.isDragging()) {\n            return false;\n        }\n        const pos = this.getCenter(event);\n        pos[0] -= event.deltaX;\n        const newControllerState = this.controllerState.rotate({\n            pos\n        });\n        this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n            isDragging: true,\n            isRotating: true\n        });\n        return true;\n    }\n    _onTriplePanEnd(event) {\n        if (!this.isDragging()) {\n            return false;\n        }\n        const { inertia } = this;\n        if (this.touchRotate && inertia && event.velocityY) {\n            const pos = this.getCenter(event);\n            const endPos = [\n                pos[0],\n                pos[1] += event.velocityY * inertia / 2\n            ];\n            const newControllerState = this.controllerState.rotate({\n                pos: endPos\n            });\n            this.updateViewport(newControllerState, {\n                ...this._getTransitionProps(),\n                transitionDuration: inertia,\n                transitionEasing: INERTIA_EASING\n            }, {\n                isDragging: false,\n                isRotating: true\n            });\n            this.blockEvents(inertia);\n        } else {\n            const newControllerState = this.controllerState.rotateEnd();\n            this.updateViewport(newControllerState, null, {\n                isDragging: false,\n                isRotating: false\n            });\n        }\n        return true;\n    }\n    _onPinchStart(event) {\n        const pos = this.getCenter(event);\n        if (!this.isPointInBounds(pos, event)) {\n            return false;\n        }\n        const newControllerState = this.controllerState.zoomStart({\n            pos\n        }).rotateStart({\n            pos\n        });\n        pinchEventWorkaround._startPinchRotation = event.rotation;\n        pinchEventWorkaround._lastPinchEvent = event;\n        this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n            isDragging: true\n        });\n        return true;\n    }\n    _onPinch(event) {\n        if (!this.touchZoom && !this.touchRotate) {\n            return false;\n        }\n        if (!this.isDragging()) {\n            return false;\n        }\n        let newControllerState = this.controllerState;\n        if (this.touchZoom) {\n            const { scale } = event;\n            const pos = this.getCenter(event);\n            newControllerState = newControllerState.zoom({\n                pos,\n                scale\n            });\n        }\n        if (this.touchRotate) {\n            const { rotation } = event;\n            newControllerState = newControllerState.rotate({\n                deltaAngleX: pinchEventWorkaround._startPinchRotation - rotation\n            });\n        }\n        this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n            isDragging: true,\n            isPanning: this.touchZoom,\n            isZooming: this.touchZoom,\n            isRotating: this.touchRotate\n        });\n        pinchEventWorkaround._lastPinchEvent = event;\n        return true;\n    }\n    _onPinchEnd(event) {\n        if (!this.isDragging()) {\n            return false;\n        }\n        const { inertia } = this;\n        const { _lastPinchEvent } = pinchEventWorkaround;\n        if (this.touchZoom && inertia && _lastPinchEvent && event.scale !== _lastPinchEvent.scale) {\n            const pos = this.getCenter(event);\n            let newControllerState = this.controllerState.rotateEnd();\n            const z = Math.log2(event.scale);\n            const velocityZ = (z - Math.log2(_lastPinchEvent.scale)) / (event.deltaTime - _lastPinchEvent.deltaTime);\n            const endScale = Math.pow(2, z + velocityZ * inertia / 2);\n            newControllerState = newControllerState.zoom({\n                pos,\n                scale: endScale\n            }).zoomEnd();\n            this.updateViewport(newControllerState, {\n                ...this._getTransitionProps({\n                    around: pos\n                }),\n                transitionDuration: inertia,\n                transitionEasing: INERTIA_EASING\n            }, {\n                isDragging: false,\n                isPanning: this.touchZoom,\n                isZooming: this.touchZoom,\n                isRotating: false\n            });\n            this.blockEvents(inertia);\n        } else {\n            const newControllerState = this.controllerState.zoomEnd().rotateEnd();\n            this.updateViewport(newControllerState, null, {\n                isDragging: false,\n                isPanning: false,\n                isZooming: false,\n                isRotating: false\n            });\n        }\n        pinchEventWorkaround._startPinchRotation = null;\n        pinchEventWorkaround._lastPinchEvent = null;\n        return true;\n    }\n    _onDoubleTap(event) {\n        if (!this.doubleClickZoom) {\n            return false;\n        }\n        const pos = this.getCenter(event);\n        if (!this.isPointInBounds(pos, event)) {\n            return false;\n        }\n        const isZoomOut = this.isFunctionKeyPressed(event);\n        const newControllerState = this.controllerState.zoom({\n            pos,\n            scale: isZoomOut ? 0.5 : 2\n        });\n        this.updateViewport(newControllerState, this._getTransitionProps({\n            around: pos\n        }), {\n            isZooming: true,\n            isPanning: true\n        });\n        this.blockEvents(100);\n        return true;\n    }\n    _onKeyDown(event) {\n        if (!this.keyboard) {\n            return false;\n        }\n        const funcKey = this.isFunctionKeyPressed(event);\n        const { zoomSpeed, moveSpeed, rotateSpeedX, rotateSpeedY } = this.keyboard === true ? {} : this.keyboard;\n        const { controllerState } = this;\n        let newControllerState;\n        const interactionState = {};\n        switch(event.srcEvent.code){\n            case \"Minus\":\n                newControllerState = funcKey ? controllerState.zoomOut(zoomSpeed).zoomOut(zoomSpeed) : controllerState.zoomOut(zoomSpeed);\n                interactionState.isZooming = true;\n                break;\n            case \"Equal\":\n                newControllerState = funcKey ? controllerState.zoomIn(zoomSpeed).zoomIn(zoomSpeed) : controllerState.zoomIn(zoomSpeed);\n                interactionState.isZooming = true;\n                break;\n            case \"ArrowLeft\":\n                if (funcKey) {\n                    newControllerState = controllerState.rotateLeft(rotateSpeedX);\n                    interactionState.isRotating = true;\n                } else {\n                    newControllerState = controllerState.moveLeft(moveSpeed);\n                    interactionState.isPanning = true;\n                }\n                break;\n            case \"ArrowRight\":\n                if (funcKey) {\n                    newControllerState = controllerState.rotateRight(rotateSpeedX);\n                    interactionState.isRotating = true;\n                } else {\n                    newControllerState = controllerState.moveRight(moveSpeed);\n                    interactionState.isPanning = true;\n                }\n                break;\n            case \"ArrowUp\":\n                if (funcKey) {\n                    newControllerState = controllerState.rotateUp(rotateSpeedY);\n                    interactionState.isRotating = true;\n                } else {\n                    newControllerState = controllerState.moveUp(moveSpeed);\n                    interactionState.isPanning = true;\n                }\n                break;\n            case \"ArrowDown\":\n                if (funcKey) {\n                    newControllerState = controllerState.rotateDown(rotateSpeedY);\n                    interactionState.isRotating = true;\n                } else {\n                    newControllerState = controllerState.moveDown(moveSpeed);\n                    interactionState.isPanning = true;\n                }\n                break;\n            default:\n                return false;\n        }\n        this.updateViewport(newControllerState, this._getTransitionProps(), interactionState);\n        return true;\n    }\n    _getTransitionProps(opts) {\n        const { transition } = this;\n        if (!transition || !transition.transitionInterpolator) {\n            return NO_TRANSITION_PROPS;\n        }\n        return opts ? {\n            ...transition,\n            transitionInterpolator: new _transitions_linear_interpolator__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n                ...opts,\n                ...transition.transitionInterpolator.opts,\n                makeViewport: this.controllerState.makeViewport\n            })\n        } : transition;\n    }\n} //# sourceMappingURL=controller.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/controller.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/map-controller.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/controllers/map-controller.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapState: () => (/* binding */ MapState),\n/* harmony export */   \"default\": () => (/* binding */ MapController)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n/* harmony import */ var _controller__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./controller */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/controller.js\");\n/* harmony import */ var _view_state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-state */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/view-state.js\");\n/* harmony import */ var _math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/web-mercator */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/index.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js\");\n/* harmony import */ var _transitions_linear_interpolator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../transitions/linear-interpolator */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/linear-interpolator.js\");\n\n\n\n\n\n\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\nclass MapState extends _view_state__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    constructor(options){\n        const { width, height, latitude, longitude, zoom, bearing = 0, pitch = 0, altitude = 1.5, position = [\n            0,\n            0,\n            0\n        ], maxZoom = 20, minZoom = 0, maxPitch = 60, minPitch = 0, startPanLngLat, startZoomLngLat, startRotatePos, startBearing, startPitch, startZoom, normalize = true } = options;\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Number.isFinite(longitude));\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Number.isFinite(latitude));\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Number.isFinite(zoom));\n        super({\n            width,\n            height,\n            latitude,\n            longitude,\n            zoom,\n            bearing,\n            pitch,\n            altitude,\n            maxZoom,\n            minZoom,\n            maxPitch,\n            minPitch,\n            normalize,\n            position\n        }, {\n            startPanLngLat,\n            startZoomLngLat,\n            startRotatePos,\n            startBearing,\n            startPitch,\n            startZoom\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"makeViewport\", void 0);\n        this.makeViewport = options.makeViewport;\n    }\n    panStart({ pos }) {\n        return this._getUpdatedState({\n            startPanLngLat: this._unproject(pos)\n        });\n    }\n    pan({ pos, startPos }) {\n        const startPanLngLat = this.getState().startPanLngLat || this._unproject(startPos);\n        if (!startPanLngLat) {\n            return this;\n        }\n        const viewport = this.makeViewport(this.getViewportProps());\n        const newProps = viewport.panByPosition(startPanLngLat, pos);\n        return this._getUpdatedState(newProps);\n    }\n    panEnd() {\n        return this._getUpdatedState({\n            startPanLngLat: null\n        });\n    }\n    rotateStart({ pos }) {\n        return this._getUpdatedState({\n            startRotatePos: pos,\n            startBearing: this.getViewportProps().bearing,\n            startPitch: this.getViewportProps().pitch\n        });\n    }\n    rotate({ pos, deltaAngleX = 0, deltaAngleY = 0 }) {\n        const { startRotatePos, startBearing, startPitch } = this.getState();\n        if (!startRotatePos || startBearing === undefined || startPitch === undefined) {\n            return this;\n        }\n        let newRotation;\n        if (pos) {\n            newRotation = this._getNewRotation(pos, startRotatePos, startPitch, startBearing);\n        } else {\n            newRotation = {\n                bearing: startBearing + deltaAngleX,\n                pitch: startPitch + deltaAngleY\n            };\n        }\n        return this._getUpdatedState(newRotation);\n    }\n    rotateEnd() {\n        return this._getUpdatedState({\n            startBearing: null,\n            startPitch: null\n        });\n    }\n    zoomStart({ pos }) {\n        return this._getUpdatedState({\n            startZoomLngLat: this._unproject(pos),\n            startZoom: this.getViewportProps().zoom\n        });\n    }\n    zoom({ pos, startPos, scale }) {\n        let { startZoom, startZoomLngLat } = this.getState();\n        if (!startZoomLngLat) {\n            startZoom = this.getViewportProps().zoom;\n            startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n        }\n        if (!startZoomLngLat) {\n            return this;\n        }\n        const { maxZoom, minZoom } = this.getViewportProps();\n        let zoom = startZoom + Math.log2(scale);\n        zoom = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.clamp)(zoom, minZoom, maxZoom);\n        const zoomedViewport = this.makeViewport({\n            ...this.getViewportProps(),\n            zoom\n        });\n        return this._getUpdatedState({\n            zoom,\n            ...zoomedViewport.panByPosition(startZoomLngLat, pos)\n        });\n    }\n    zoomEnd() {\n        return this._getUpdatedState({\n            startZoomLngLat: null,\n            startZoom: null\n        });\n    }\n    zoomIn(speed = 2) {\n        return this._zoomFromCenter(speed);\n    }\n    zoomOut(speed = 2) {\n        return this._zoomFromCenter(1 / speed);\n    }\n    moveLeft(speed = 100) {\n        return this._panFromCenter([\n            speed,\n            0\n        ]);\n    }\n    moveRight(speed = 100) {\n        return this._panFromCenter([\n            -speed,\n            0\n        ]);\n    }\n    moveUp(speed = 100) {\n        return this._panFromCenter([\n            0,\n            speed\n        ]);\n    }\n    moveDown(speed = 100) {\n        return this._panFromCenter([\n            0,\n            -speed\n        ]);\n    }\n    rotateLeft(speed = 15) {\n        return this._getUpdatedState({\n            bearing: this.getViewportProps().bearing - speed\n        });\n    }\n    rotateRight(speed = 15) {\n        return this._getUpdatedState({\n            bearing: this.getViewportProps().bearing + speed\n        });\n    }\n    rotateUp(speed = 10) {\n        return this._getUpdatedState({\n            pitch: this.getViewportProps().pitch + speed\n        });\n    }\n    rotateDown(speed = 10) {\n        return this._getUpdatedState({\n            pitch: this.getViewportProps().pitch - speed\n        });\n    }\n    shortestPathFrom(viewState) {\n        const fromProps = viewState.getViewportProps();\n        const props = {\n            ...this.getViewportProps()\n        };\n        const { bearing, longitude } = props;\n        if (Math.abs(bearing - fromProps.bearing) > 180) {\n            props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n        }\n        if (Math.abs(longitude - fromProps.longitude) > 180) {\n            props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n        }\n        return props;\n    }\n    applyConstraints(props) {\n        const { maxZoom, minZoom, zoom } = props;\n        props.zoom = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.clamp)(zoom, minZoom, maxZoom);\n        const { maxPitch, minPitch, pitch } = props;\n        props.pitch = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.clamp)(pitch, minPitch, maxPitch);\n        const { normalize = true } = props;\n        if (normalize) {\n            Object.assign(props, (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.normalizeViewportProps)(props));\n        }\n        return props;\n    }\n    _zoomFromCenter(scale) {\n        const { width, height } = this.getViewportProps();\n        return this.zoom({\n            pos: [\n                width / 2,\n                height / 2\n            ],\n            scale\n        });\n    }\n    _panFromCenter(offset) {\n        const { width, height } = this.getViewportProps();\n        return this.pan({\n            startPos: [\n                width / 2,\n                height / 2\n            ],\n            pos: [\n                width / 2 + offset[0],\n                height / 2 + offset[1]\n            ]\n        });\n    }\n    _getUpdatedState(newProps) {\n        return new this.constructor({\n            makeViewport: this.makeViewport,\n            ...this.getViewportProps(),\n            ...this.getState(),\n            ...newProps\n        });\n    }\n    _unproject(pos) {\n        const viewport = this.makeViewport(this.getViewportProps());\n        return pos && viewport.unproject(pos);\n    }\n    _getNewRotation(pos, startPos, startPitch, startBearing) {\n        const deltaX = pos[0] - startPos[0];\n        const deltaY = pos[1] - startPos[1];\n        const centerY = pos[1];\n        const startY = startPos[1];\n        const { width, height } = this.getViewportProps();\n        const deltaScaleX = deltaX / width;\n        let deltaScaleY = 0;\n        if (deltaY > 0) {\n            if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n                deltaScaleY = deltaY / (startY - height) * PITCH_ACCEL;\n            }\n        } else if (deltaY < 0) {\n            if (startY > PITCH_MOUSE_THRESHOLD) {\n                deltaScaleY = 1 - centerY / startY;\n            }\n        }\n        deltaScaleY = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.clamp)(deltaScaleY, -1, 1);\n        const { minPitch, maxPitch } = this.getViewportProps();\n        const bearing = startBearing + 180 * deltaScaleX;\n        let pitch = startPitch;\n        if (deltaScaleY > 0) {\n            pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n        } else if (deltaScaleY < 0) {\n            pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n        }\n        return {\n            pitch,\n            bearing\n        };\n    }\n}\nclass MapController extends _controller__WEBPACK_IMPORTED_MODULE_5__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"ControllerState\", MapState);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"transition\", {\n            transitionDuration: 300,\n            transitionInterpolator: new _transitions_linear_interpolator__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n                transitionProps: {\n                    compare: [\n                        \"longitude\",\n                        \"latitude\",\n                        \"zoom\",\n                        \"bearing\",\n                        \"pitch\",\n                        \"position\"\n                    ],\n                    required: [\n                        \"longitude\",\n                        \"latitude\",\n                        \"zoom\"\n                    ]\n                }\n            })\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dragMode\", \"pan\");\n    }\n    setProps(props) {\n        props.position = props.position || [\n            0,\n            0,\n            0\n        ];\n        const oldProps = this.props;\n        super.setProps(props);\n        const dimensionChanged = !oldProps || oldProps.height !== props.height;\n        if (dimensionChanged) {\n            this.updateViewport(new this.ControllerState({\n                makeViewport: this.makeViewport,\n                ...props,\n                ...this.state\n            }));\n        }\n    }\n} //# sourceMappingURL=map-controller.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/map-controller.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/transition-manager.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/controllers/transition-manager.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TRANSITION_EVENTS: () => (/* binding */ TRANSITION_EVENTS),\n/* harmony export */   \"default\": () => (/* binding */ TransitionManager)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _transitions_transition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transitions/transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition.js\");\n\n\nconst noop = ()=>{};\nconst TRANSITION_EVENTS = {\n    BREAK: 1,\n    SNAP_TO_END: 2,\n    IGNORE: 3\n};\nconst DEFAULT_EASING = (t)=>t;\nconst DEFAULT_INTERRUPTION = TRANSITION_EVENTS.BREAK;\nclass TransitionManager {\n    constructor(opts){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"getControllerState\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"props\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"propsInTransition\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"transition\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"onViewStateChange\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"onStateChange\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_onTransitionUpdate\", (transition)=>{\n            const { time, settings: { interpolator, startProps, endProps, duration, easing } } = transition;\n            const t = easing(time / duration);\n            const viewport = interpolator.interpolateProps(startProps, endProps, t);\n            this.propsInTransition = this.getControllerState({\n                ...this.props,\n                ...viewport\n            }).getViewportProps();\n            this.onViewStateChange({\n                viewState: this.propsInTransition,\n                oldViewState: this.props\n            });\n        });\n        this.getControllerState = opts.getControllerState;\n        this.propsInTransition = null;\n        this.transition = new _transitions_transition__WEBPACK_IMPORTED_MODULE_1__[\"default\"](opts.timeline);\n        this.onViewStateChange = opts.onViewStateChange || noop;\n        this.onStateChange = opts.onStateChange || noop;\n    }\n    finalize() {\n        this.transition.cancel();\n    }\n    getViewportInTransition() {\n        return this.propsInTransition;\n    }\n    processViewStateChange(nextProps) {\n        let transitionTriggered = false;\n        const currentProps = this.props;\n        this.props = nextProps;\n        if (!currentProps || this._shouldIgnoreViewportChange(currentProps, nextProps)) {\n            return false;\n        }\n        if (this._isTransitionEnabled(nextProps)) {\n            let startProps = currentProps;\n            if (this.transition.inProgress) {\n                const { interruption, endProps } = this.transition.settings;\n                startProps = {\n                    ...currentProps,\n                    ...interruption === TRANSITION_EVENTS.SNAP_TO_END ? endProps : this.propsInTransition || currentProps\n                };\n            }\n            this._triggerTransition(startProps, nextProps);\n            transitionTriggered = true;\n        } else {\n            this.transition.cancel();\n        }\n        return transitionTriggered;\n    }\n    updateTransition() {\n        this.transition.update();\n    }\n    _isTransitionEnabled(props) {\n        const { transitionDuration, transitionInterpolator } = props;\n        return (transitionDuration > 0 || transitionDuration === \"auto\") && Boolean(transitionInterpolator);\n    }\n    _isUpdateDueToCurrentTransition(props) {\n        if (this.transition.inProgress && this.propsInTransition) {\n            return this.transition.settings.interpolator.arePropsEqual(props, this.propsInTransition);\n        }\n        return false;\n    }\n    _shouldIgnoreViewportChange(currentProps, nextProps) {\n        if (this.transition.inProgress) {\n            return this.transition.settings.interruption === TRANSITION_EVENTS.IGNORE || this._isUpdateDueToCurrentTransition(nextProps);\n        }\n        if (this._isTransitionEnabled(nextProps)) {\n            return nextProps.transitionInterpolator.arePropsEqual(currentProps, nextProps);\n        }\n        return true;\n    }\n    _triggerTransition(startProps, endProps) {\n        const startViewstate = this.getControllerState(startProps);\n        const endViewStateProps = this.getControllerState(endProps).shortestPathFrom(startViewstate);\n        const transitionInterpolator = endProps.transitionInterpolator;\n        const duration = transitionInterpolator.getDuration ? transitionInterpolator.getDuration(startProps, endProps) : endProps.transitionDuration;\n        if (duration === 0) {\n            return;\n        }\n        const initialProps = transitionInterpolator.initializeProps(startProps, endViewStateProps);\n        this.propsInTransition = {};\n        const transitionSettings = {\n            duration,\n            easing: endProps.transitionEasing || DEFAULT_EASING,\n            interpolator: transitionInterpolator,\n            interruption: endProps.transitionInterruption || DEFAULT_INTERRUPTION,\n            startProps: initialProps.start,\n            endProps: initialProps.end,\n            onStart: endProps.onTransitionStart,\n            onUpdate: this._onTransitionUpdate,\n            onInterrupt: this._onTransitionEnd(endProps.onTransitionInterrupt),\n            onEnd: this._onTransitionEnd(endProps.onTransitionEnd)\n        };\n        this.transition.start(transitionSettings);\n        this.onStateChange({\n            inTransition: true\n        });\n        this.updateTransition();\n    }\n    _onTransitionEnd(callback) {\n        return (transition)=>{\n            this.propsInTransition = null;\n            this.onStateChange({\n                inTransition: false,\n                isZooming: false,\n                isPanning: false,\n                isRotating: false\n            });\n            callback === null || callback === void 0 ? void 0 : callback(transition);\n        };\n    }\n} //# sourceMappingURL=transition-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/transition-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/view-state.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/controllers/view-state.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ViewState)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nclass ViewState {\n    constructor(props, state){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_viewportProps\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_state\", void 0);\n        this._viewportProps = this.applyConstraints(props);\n        this._state = state;\n    }\n    getViewportProps() {\n        return this._viewportProps;\n    }\n    getState() {\n        return this._state;\n    }\n} //# sourceMappingURL=view-state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9jb250cm9sbGVycy92aWV3LXN0YXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdFO0FBQ3pELE1BQU1DO0lBQ25CQyxZQUFZQyxLQUFLLEVBQUVDLEtBQUssQ0FBRTtRQUN4QkoscUZBQWVBLENBQUMsSUFBSSxFQUFFLGtCQUFrQixLQUFLO1FBRTdDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsVUFBVSxLQUFLO1FBRXJDLElBQUksQ0FBQ0ssY0FBYyxHQUFHLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNIO1FBQzVDLElBQUksQ0FBQ0ksTUFBTSxHQUFHSDtJQUNoQjtJQUVBSSxtQkFBbUI7UUFDakIsT0FBTyxJQUFJLENBQUNILGNBQWM7SUFDNUI7SUFFQUksV0FBVztRQUNULE9BQU8sSUFBSSxDQUFDRixNQUFNO0lBQ3BCO0FBRUYsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL2NvbnRyb2xsZXJzL3ZpZXctc3RhdGUuanM/MmJkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eVwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmlld1N0YXRlIHtcbiAgY29uc3RydWN0b3IocHJvcHMsIHN0YXRlKSB7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiX3ZpZXdwb3J0UHJvcHNcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9zdGF0ZVwiLCB2b2lkIDApO1xuXG4gICAgdGhpcy5fdmlld3BvcnRQcm9wcyA9IHRoaXMuYXBwbHlDb25zdHJhaW50cyhwcm9wcyk7XG4gICAgdGhpcy5fc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIGdldFZpZXdwb3J0UHJvcHMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZpZXdwb3J0UHJvcHM7XG4gIH1cblxuICBnZXRTdGF0ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhdGU7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmlldy1zdGF0ZS5qcy5tYXAiXSwibmFtZXMiOlsiX2RlZmluZVByb3BlcnR5IiwiVmlld1N0YXRlIiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwiX3ZpZXdwb3J0UHJvcHMiLCJhcHBseUNvbnN0cmFpbnRzIiwiX3N0YXRlIiwiZ2V0Vmlld3BvcnRQcm9wcyIsImdldFN0YXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/view-state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/debug/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ debug),\n/* harmony export */   register: () => (/* binding */ register)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _loggers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loggers */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/loggers.js\");\n\n\nlet loggers = {};\nif (true) {\n    loggers = (0,_loggers__WEBPACK_IMPORTED_MODULE_0__.getLoggers)(_utils_log__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n}\nfunction register(handlers) {\n    loggers = handlers;\n}\nfunction debug(eventType, arg1, arg2, arg3) {\n    if (_utils_log__WEBPACK_IMPORTED_MODULE_1__[\"default\"].level > 0 && loggers[eventType]) {\n        loggers[eventType].call(null, arg1, arg2, arg3);\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9kZWJ1Zy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW1DO0FBQ0k7QUFDdkMsSUFBSUUsVUFBVSxDQUFDO0FBRWYsSUFBSUMsSUFBeUIsRUFBYztJQUN6Q0QsVUFBVUQsb0RBQVVBLENBQUNELGtEQUFPQTtBQUM5QjtBQUVPLFNBQVNJLFNBQVNDLFFBQVE7SUFDL0JILFVBQVVHO0FBQ1o7QUFDZSxTQUFTQyxNQUFNQyxTQUFTLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJO0lBQ3ZELElBQUlWLGtEQUFPQSxDQUFDVyxLQUFLLEdBQUcsS0FBS1QsT0FBTyxDQUFDSyxVQUFVLEVBQUU7UUFDM0NMLE9BQU8sQ0FBQ0ssVUFBVSxDQUFDSyxJQUFJLENBQUMsTUFBTUosTUFBTUMsTUFBTUM7SUFDNUM7QUFDRixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vZGVidWcvaW5kZXguanM/Y2RiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVja0xvZyBmcm9tICcuLi91dGlscy9sb2cnO1xuaW1wb3J0IHsgZ2V0TG9nZ2VycyB9IGZyb20gJy4vbG9nZ2Vycyc7XG5sZXQgbG9nZ2VycyA9IHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBsb2dnZXJzID0gZ2V0TG9nZ2VycyhkZWNrTG9nKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyKGhhbmRsZXJzKSB7XG4gIGxvZ2dlcnMgPSBoYW5kbGVycztcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlYnVnKGV2ZW50VHlwZSwgYXJnMSwgYXJnMiwgYXJnMykge1xuICBpZiAoZGVja0xvZy5sZXZlbCA+IDAgJiYgbG9nZ2Vyc1tldmVudFR5cGVdKSB7XG4gICAgbG9nZ2Vyc1tldmVudFR5cGVdLmNhbGwobnVsbCwgYXJnMSwgYXJnMiwgYXJnMyk7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJkZWNrTG9nIiwiZ2V0TG9nZ2VycyIsImxvZ2dlcnMiLCJwcm9jZXNzIiwicmVnaXN0ZXIiLCJoYW5kbGVycyIsImRlYnVnIiwiZXZlbnRUeXBlIiwiYXJnMSIsImFyZzIiLCJhcmczIiwibGV2ZWwiLCJjYWxsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/loggers.js":
/*!**************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/debug/loggers.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLoggers: () => (/* binding */ getLoggers)\n/* harmony export */ });\nconst logState = {\n    attributeUpdateStart: -1,\n    attributeManagerUpdateStart: -1,\n    attributeUpdateMessages: []\n};\nconst LOG_LEVEL_MAJOR_UPDATE = 1;\nconst LOG_LEVEL_MINOR_UPDATE = 2;\nconst LOG_LEVEL_UPDATE_DETAIL = 3;\nconst LOG_LEVEL_INFO = 4;\nconst LOG_LEVEL_DRAW = 2;\nconst getLoggers = (log)=>({\n        \"layer.changeFlag\": (layer, key, flags)=>{\n            log.log(LOG_LEVEL_UPDATE_DETAIL, \"\".concat(layer.id, \" \").concat(key, \": \"), flags[key])();\n        },\n        \"layer.initialize\": (layer)=>{\n            log.log(LOG_LEVEL_MAJOR_UPDATE, \"Initializing \".concat(layer))();\n        },\n        \"layer.update\": (layer, needsUpdate)=>{\n            if (needsUpdate) {\n                const flags = layer.getChangeFlags();\n                log.log(LOG_LEVEL_MINOR_UPDATE, \"Updating \".concat(layer, \" because: \").concat(Object.keys(flags).filter((key)=>flags[key]).join(\", \")))();\n            } else {\n                log.log(LOG_LEVEL_INFO, \"\".concat(layer, \" does not need update\"))();\n            }\n        },\n        \"layer.matched\": (layer, changed)=>{\n            if (changed) {\n                log.log(LOG_LEVEL_INFO, \"Matched \".concat(layer, \", state transfered\"))();\n            }\n        },\n        \"layer.finalize\": (layer)=>{\n            log.log(LOG_LEVEL_MAJOR_UPDATE, \"Finalizing \".concat(layer))();\n        },\n        \"compositeLayer.renderLayers\": (layer, updated, subLayers)=>{\n            if (updated) {\n                log.log(LOG_LEVEL_MINOR_UPDATE, \"Composite layer rendered new subLayers \".concat(layer), subLayers)();\n            } else {\n                log.log(LOG_LEVEL_INFO, \"Composite layer reused subLayers \".concat(layer), subLayers)();\n            }\n        },\n        \"layerManager.setLayers\": (layerManager, updated, layers)=>{\n            if (updated) {\n                log.log(LOG_LEVEL_MINOR_UPDATE, \"Updating \".concat(layers.length, \" deck layers\"))();\n            }\n        },\n        \"layerManager.activateViewport\": (layerManager, viewport)=>{\n            log.log(LOG_LEVEL_UPDATE_DETAIL, \"Viewport changed\", viewport)();\n        },\n        \"attributeManager.invalidate\": (attributeManager, trigger, attributeNames)=>{\n            log.log(LOG_LEVEL_MAJOR_UPDATE, attributeNames ? \"invalidated attributes \".concat(attributeNames, \" (\").concat(trigger, \") for \").concat(attributeManager.id) : \"invalidated all attributes for \".concat(attributeManager.id))();\n        },\n        \"attributeManager.updateStart\": (attributeManager)=>{\n            logState.attributeUpdateMessages.length = 0;\n            logState.attributeManagerUpdateStart = Date.now();\n        },\n        \"attributeManager.updateEnd\": (attributeManager, numInstances)=>{\n            const timeMs = Math.round(Date.now() - logState.attributeManagerUpdateStart);\n            log.groupCollapsed(LOG_LEVEL_MINOR_UPDATE, \"Updated attributes for \".concat(numInstances, \" instances in \").concat(attributeManager.id, \" in \").concat(timeMs, \"ms\"))();\n            for (const updateMessage of logState.attributeUpdateMessages){\n                log.log(LOG_LEVEL_UPDATE_DETAIL, updateMessage)();\n            }\n            log.groupEnd(LOG_LEVEL_MINOR_UPDATE)();\n        },\n        \"attribute.updateStart\": (attribute)=>{\n            logState.attributeUpdateStart = Date.now();\n        },\n        \"attribute.allocate\": (attribute, numInstances)=>{\n            const message = \"\".concat(attribute.id, \" allocated \").concat(numInstances);\n            logState.attributeUpdateMessages.push(message);\n        },\n        \"attribute.updateEnd\": (attribute, numInstances)=>{\n            const timeMs = Math.round(Date.now() - logState.attributeUpdateStart);\n            const message = \"\".concat(attribute.id, \" updated \").concat(numInstances, \" in \").concat(timeMs, \"ms\");\n            logState.attributeUpdateMessages.push(message);\n        },\n        \"deckRenderer.renderLayers\": (deckRenderer, renderStats, opts)=>{\n            const { pass, redrawReason, stats } = opts;\n            for (const status of renderStats){\n                const { totalCount, visibleCount, compositeCount, pickableCount } = status;\n                const primitiveCount = totalCount - compositeCount;\n                const hiddenCount = primitiveCount - visibleCount;\n                log.log(LOG_LEVEL_DRAW, \"RENDER #\".concat(deckRenderer.renderCount, \"   \").concat(visibleCount, \" (of \").concat(totalCount, \" layers) to \").concat(pass, \" because \").concat(redrawReason, \"   (\").concat(hiddenCount, \" hidden, \").concat(compositeCount, \" composite \").concat(pickableCount, \" pickable)\"))();\n                if (stats) {\n                    stats.get(\"Redraw Layers\").add(visibleCount);\n                }\n            }\n        }\n    }); //# sourceMappingURL=loggers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/loggers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/ambient-light.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/effects/lighting/ambient-light.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AmbientLight: () => (/* binding */ AmbientLight)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nconst DEFAULT_LIGHT_COLOR = [\n    255,\n    255,\n    255\n];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nlet idCount = 0;\nclass AmbientLight {\n    constructor(props = {}){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"color\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"intensity\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"type\", \"ambient\");\n        const { color = DEFAULT_LIGHT_COLOR } = props;\n        const { intensity = DEFAULT_LIGHT_INTENSITY } = props;\n        this.id = props.id || \"ambient-\".concat(idCount++);\n        this.color = color;\n        this.intensity = intensity;\n    }\n} //# sourceMappingURL=ambient-light.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9lZmZlY3RzL2xpZ2h0aW5nL2FtYmllbnQtbGlnaHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0U7QUFDeEUsTUFBTUMsc0JBQXNCO0lBQUM7SUFBSztJQUFLO0NBQUk7QUFDM0MsTUFBTUMsMEJBQTBCO0FBQ2hDLElBQUlDLFVBQVU7QUFDUCxNQUFNQztJQUNYQyxZQUFZQyxRQUFRLENBQUMsQ0FBQyxDQUFFO1FBQ3RCTixxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsTUFBTSxLQUFLO1FBRWpDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsU0FBUyxLQUFLO1FBRXBDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsYUFBYSxLQUFLO1FBRXhDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsUUFBUTtRQUU5QixNQUFNLEVBQ0pPLFFBQVFOLG1CQUFtQixFQUM1QixHQUFHSztRQUNKLE1BQU0sRUFDSkUsWUFBWU4sdUJBQXVCLEVBQ3BDLEdBQUdJO1FBQ0osSUFBSSxDQUFDRyxFQUFFLEdBQUdILE1BQU1HLEVBQUUsSUFBSSxXQUFXQyxNQUFNLENBQUNQO1FBQ3hDLElBQUksQ0FBQ0ksS0FBSyxHQUFHQTtRQUNiLElBQUksQ0FBQ0MsU0FBUyxHQUFHQTtJQUNuQjtBQUVGLEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9lZmZlY3RzL2xpZ2h0aW5nL2FtYmllbnQtbGlnaHQuanM/YjQ3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eVwiO1xuY29uc3QgREVGQVVMVF9MSUdIVF9DT0xPUiA9IFsyNTUsIDI1NSwgMjU1XTtcbmNvbnN0IERFRkFVTFRfTElHSFRfSU5URU5TSVRZID0gMS4wO1xubGV0IGlkQ291bnQgPSAwO1xuZXhwb3J0IGNsYXNzIEFtYmllbnRMaWdodCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzID0ge30pIHtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpZFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiY29sb3JcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImludGVuc2l0eVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwidHlwZVwiLCAnYW1iaWVudCcpO1xuXG4gICAgY29uc3Qge1xuICAgICAgY29sb3IgPSBERUZBVUxUX0xJR0hUX0NPTE9SXG4gICAgfSA9IHByb3BzO1xuICAgIGNvbnN0IHtcbiAgICAgIGludGVuc2l0eSA9IERFRkFVTFRfTElHSFRfSU5URU5TSVRZXG4gICAgfSA9IHByb3BzO1xuICAgIHRoaXMuaWQgPSBwcm9wcy5pZCB8fCBcImFtYmllbnQtXCIuY29uY2F0KGlkQ291bnQrKyk7XG4gICAgdGhpcy5jb2xvciA9IGNvbG9yO1xuICAgIHRoaXMuaW50ZW5zaXR5ID0gaW50ZW5zaXR5O1xuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFtYmllbnQtbGlnaHQuanMubWFwIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIkRFRkFVTFRfTElHSFRfQ09MT1IiLCJERUZBVUxUX0xJR0hUX0lOVEVOU0lUWSIsImlkQ291bnQiLCJBbWJpZW50TGlnaHQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwiY29sb3IiLCJpbnRlbnNpdHkiLCJpZCIsImNvbmNhdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/ambient-light.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/directional-light.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/effects/lighting/directional-light.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DirectionalLight: () => (/* binding */ DirectionalLight)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/vector3.js\");\n\n\nconst DEFAULT_LIGHT_COLOR = [\n    255,\n    255,\n    255\n];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_LIGHT_DIRECTION = [\n    0.0,\n    0.0,\n    -1.0\n];\nlet idCount = 0;\nclass DirectionalLight {\n    constructor(props = {}){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"color\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"intensity\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"type\", \"directional\");\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"direction\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"shadow\", void 0);\n        const { color = DEFAULT_LIGHT_COLOR } = props;\n        const { intensity = DEFAULT_LIGHT_INTENSITY } = props;\n        const { direction = DEFAULT_LIGHT_DIRECTION } = props;\n        const { _shadow = false } = props;\n        this.id = props.id || \"directional-\".concat(idCount++);\n        this.color = color;\n        this.intensity = intensity;\n        this.type = \"directional\";\n        this.direction = new _math_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"](direction).normalize().toArray();\n        this.shadow = _shadow;\n    }\n    getProjectedLight(opts) {\n        return this;\n    }\n} //# sourceMappingURL=directional-light.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9lZmZlY3RzL2xpZ2h0aW5nL2RpcmVjdGlvbmFsLWxpZ2h0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RTtBQUNoQztBQUN4QyxNQUFNRSxzQkFBc0I7SUFBQztJQUFLO0lBQUs7Q0FBSTtBQUMzQyxNQUFNQywwQkFBMEI7QUFDaEMsTUFBTUMsMEJBQTBCO0lBQUM7SUFBSztJQUFLLENBQUM7Q0FBSTtBQUNoRCxJQUFJQyxVQUFVO0FBQ1AsTUFBTUM7SUFDWEMsWUFBWUMsUUFBUSxDQUFDLENBQUMsQ0FBRTtRQUN0QlIscUZBQWVBLENBQUMsSUFBSSxFQUFFLE1BQU0sS0FBSztRQUVqQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFNBQVMsS0FBSztRQUVwQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGFBQWEsS0FBSztRQUV4Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFFBQVE7UUFFOUJBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxhQUFhLEtBQUs7UUFFeENBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxVQUFVLEtBQUs7UUFFckMsTUFBTSxFQUNKUyxRQUFRUCxtQkFBbUIsRUFDNUIsR0FBR007UUFDSixNQUFNLEVBQ0pFLFlBQVlQLHVCQUF1QixFQUNwQyxHQUFHSztRQUNKLE1BQU0sRUFDSkcsWUFBWVAsdUJBQXVCLEVBQ3BDLEdBQUdJO1FBQ0osTUFBTSxFQUNKSSxVQUFVLEtBQUssRUFDaEIsR0FBR0o7UUFDSixJQUFJLENBQUNLLEVBQUUsR0FBR0wsTUFBTUssRUFBRSxJQUFJLGVBQWVDLE1BQU0sQ0FBQ1Q7UUFDNUMsSUFBSSxDQUFDSSxLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDQyxTQUFTLEdBQUdBO1FBQ2pCLElBQUksQ0FBQ0ssSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDSixTQUFTLEdBQUcsSUFBSVYscURBQU9BLENBQUNVLFdBQVdLLFNBQVMsR0FBR0MsT0FBTztRQUMzRCxJQUFJLENBQUNDLE1BQU0sR0FBR047SUFDaEI7SUFFQU8sa0JBQWtCQyxJQUFJLEVBQUU7UUFDdEIsT0FBTyxJQUFJO0lBQ2I7QUFFRixFQUNBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vZWZmZWN0cy9saWdodGluZy9kaXJlY3Rpb25hbC1saWdodC5qcz81MTRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgeyBWZWN0b3IzIH0gZnJvbSAnQG1hdGguZ2wvY29yZSc7XG5jb25zdCBERUZBVUxUX0xJR0hUX0NPTE9SID0gWzI1NSwgMjU1LCAyNTVdO1xuY29uc3QgREVGQVVMVF9MSUdIVF9JTlRFTlNJVFkgPSAxLjA7XG5jb25zdCBERUZBVUxUX0xJR0hUX0RJUkVDVElPTiA9IFswLjAsIDAuMCwgLTEuMF07XG5sZXQgaWRDb3VudCA9IDA7XG5leHBvcnQgY2xhc3MgRGlyZWN0aW9uYWxMaWdodCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzID0ge30pIHtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpZFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiY29sb3JcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImludGVuc2l0eVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwidHlwZVwiLCAnZGlyZWN0aW9uYWwnKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRpcmVjdGlvblwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwic2hhZG93XCIsIHZvaWQgMCk7XG5cbiAgICBjb25zdCB7XG4gICAgICBjb2xvciA9IERFRkFVTFRfTElHSFRfQ09MT1JcbiAgICB9ID0gcHJvcHM7XG4gICAgY29uc3Qge1xuICAgICAgaW50ZW5zaXR5ID0gREVGQVVMVF9MSUdIVF9JTlRFTlNJVFlcbiAgICB9ID0gcHJvcHM7XG4gICAgY29uc3Qge1xuICAgICAgZGlyZWN0aW9uID0gREVGQVVMVF9MSUdIVF9ESVJFQ1RJT05cbiAgICB9ID0gcHJvcHM7XG4gICAgY29uc3Qge1xuICAgICAgX3NoYWRvdyA9IGZhbHNlXG4gICAgfSA9IHByb3BzO1xuICAgIHRoaXMuaWQgPSBwcm9wcy5pZCB8fCBcImRpcmVjdGlvbmFsLVwiLmNvbmNhdChpZENvdW50KyspO1xuICAgIHRoaXMuY29sb3IgPSBjb2xvcjtcbiAgICB0aGlzLmludGVuc2l0eSA9IGludGVuc2l0eTtcbiAgICB0aGlzLnR5cGUgPSAnZGlyZWN0aW9uYWwnO1xuICAgIHRoaXMuZGlyZWN0aW9uID0gbmV3IFZlY3RvcjMoZGlyZWN0aW9uKS5ub3JtYWxpemUoKS50b0FycmF5KCk7XG4gICAgdGhpcy5zaGFkb3cgPSBfc2hhZG93O1xuICB9XG5cbiAgZ2V0UHJvamVjdGVkTGlnaHQob3B0cykge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpcmVjdGlvbmFsLWxpZ2h0LmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJWZWN0b3IzIiwiREVGQVVMVF9MSUdIVF9DT0xPUiIsIkRFRkFVTFRfTElHSFRfSU5URU5TSVRZIiwiREVGQVVMVF9MSUdIVF9ESVJFQ1RJT04iLCJpZENvdW50IiwiRGlyZWN0aW9uYWxMaWdodCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJjb2xvciIsImludGVuc2l0eSIsImRpcmVjdGlvbiIsIl9zaGFkb3ciLCJpZCIsImNvbmNhdCIsInR5cGUiLCJub3JtYWxpemUiLCJ0b0FycmF5Iiwic2hhZG93IiwiZ2V0UHJvamVjdGVkTGlnaHQiLCJvcHRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/directional-light.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/lighting-effect.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/effects/lighting/lighting-effect.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LightingEffect)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/program-manager.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _ambient_light__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ambient-light */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/ambient-light.js\");\n/* harmony import */ var _directional_light__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./directional-light */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/directional-light.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/matrix4.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/vector3.js\");\n/* harmony import */ var _passes_shadow_pass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../passes/shadow-pass */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/shadow-pass.js\");\n/* harmony import */ var _shaderlib_shadow_shadow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shaderlib/shadow/shadow */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/shadow/shadow.js\");\n\n\n\n\n\n\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {\n    color: [\n        255,\n        255,\n        255\n    ],\n    intensity: 1.0\n};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n    {\n        color: [\n            255,\n            255,\n            255\n        ],\n        intensity: 1.0,\n        direction: [\n            -1,\n            3,\n            -1\n        ]\n    },\n    {\n        color: [\n            255,\n            255,\n            255\n        ],\n        intensity: 0.9,\n        direction: [\n            1,\n            -8,\n            -2.5\n        ]\n    }\n];\nconst DEFAULT_SHADOW_COLOR = [\n    0,\n    0,\n    0,\n    200 / 255\n];\nclass LightingEffect {\n    constructor(props = {}){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", \"lighting-effect\");\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"props\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"shadowColor\", DEFAULT_SHADOW_COLOR);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"shadow\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"ambientLight\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"directionalLights\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pointLights\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"shadowPasses\", []);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"shadowMaps\", []);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"dummyShadowMap\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"programManager\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"shadowMatrices\", void 0);\n        this.setProps(props);\n    }\n    setProps(props) {\n        this.ambientLight = null;\n        this.directionalLights = [];\n        this.pointLights = [];\n        for(const key in props){\n            const lightSource = props[key];\n            switch(lightSource.type){\n                case \"ambient\":\n                    this.ambientLight = lightSource;\n                    break;\n                case \"directional\":\n                    this.directionalLights.push(lightSource);\n                    break;\n                case \"point\":\n                    this.pointLights.push(lightSource);\n                    break;\n                default:\n            }\n        }\n        this._applyDefaultLights();\n        this.shadow = this.directionalLights.some((light)=>light.shadow);\n        this.props = props;\n    }\n    preRender(gl, { layers, layerFilter, viewports, onViewportActive, views }) {\n        if (!this.shadow) return;\n        this.shadowMatrices = this._calculateMatrices();\n        if (this.shadowPasses.length === 0) {\n            this._createShadowPasses(gl);\n        }\n        if (!this.programManager) {\n            this.programManager = _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getDefaultProgramManager(gl);\n            if (_shaderlib_shadow_shadow__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n                this.programManager.addDefaultModule(_shaderlib_shadow_shadow__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n            }\n        }\n        if (!this.dummyShadowMap) {\n            this.dummyShadowMap = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, {\n                width: 1,\n                height: 1\n            });\n        }\n        for(let i = 0; i < this.shadowPasses.length; i++){\n            const shadowPass = this.shadowPasses[i];\n            shadowPass.render({\n                layers,\n                layerFilter,\n                viewports,\n                onViewportActive,\n                views,\n                moduleParameters: {\n                    shadowLightId: i,\n                    dummyShadowMap: this.dummyShadowMap,\n                    shadowMatrices: this.shadowMatrices\n                }\n            });\n        }\n    }\n    getModuleParameters(layer) {\n        const parameters = this.shadow ? {\n            shadowMaps: this.shadowMaps,\n            dummyShadowMap: this.dummyShadowMap,\n            shadowColor: this.shadowColor,\n            shadowMatrices: this.shadowMatrices\n        } : {};\n        parameters.lightSources = {\n            ambientLight: this.ambientLight,\n            directionalLights: this.directionalLights.map((directionalLight)=>directionalLight.getProjectedLight({\n                    layer\n                })),\n            pointLights: this.pointLights.map((pointLight)=>pointLight.getProjectedLight({\n                    layer\n                }))\n        };\n        return parameters;\n    }\n    cleanup() {\n        for (const shadowPass of this.shadowPasses){\n            shadowPass.delete();\n        }\n        this.shadowPasses.length = 0;\n        this.shadowMaps.length = 0;\n        if (this.dummyShadowMap) {\n            this.dummyShadowMap.delete();\n            this.dummyShadowMap = null;\n        }\n        if (this.shadow && this.programManager) {\n            this.programManager.removeDefaultModule(_shaderlib_shadow_shadow__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n            this.programManager = null;\n        }\n    }\n    _calculateMatrices() {\n        const lightMatrices = [];\n        for (const light of this.directionalLights){\n            const viewMatrix = new _math_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"]().lookAt({\n                eye: new _math_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"](light.direction).negate()\n            });\n            lightMatrices.push(viewMatrix);\n        }\n        return lightMatrices;\n    }\n    _createShadowPasses(gl) {\n        for(let i = 0; i < this.directionalLights.length; i++){\n            const shadowPass = new _passes_shadow_pass__WEBPACK_IMPORTED_MODULE_6__[\"default\"](gl);\n            this.shadowPasses[i] = shadowPass;\n            this.shadowMaps[i] = shadowPass.shadowMap;\n        }\n    }\n    _applyDefaultLights() {\n        const { ambientLight, pointLights, directionalLights } = this;\n        if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n            this.ambientLight = new _ambient_light__WEBPACK_IMPORTED_MODULE_7__.AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n            this.directionalLights.push(new _directional_light__WEBPACK_IMPORTED_MODULE_8__.DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]), new _directional_light__WEBPACK_IMPORTED_MODULE_8__.DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1]));\n        }\n    }\n} //# sourceMappingURL=lighting-effect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/lighting-effect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-manager.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-manager.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AttributeManager)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _attribute__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./attribute */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _utils_memoize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/memoize */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/memoize.js\");\n/* harmony import */ var _utils_math_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/math-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/math-utils.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../debug */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/index.js\");\n/* harmony import */ var _attribute_transition_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attribute-transition-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-manager.js\");\n\n\n\n\n\n\n\nconst TRACE_INVALIDATE = \"attributeManager.invalidate\";\nconst TRACE_UPDATE_START = \"attributeManager.updateStart\";\nconst TRACE_UPDATE_END = \"attributeManager.updateEnd\";\nconst TRACE_ATTRIBUTE_UPDATE_START = \"attribute.updateStart\";\nconst TRACE_ATTRIBUTE_ALLOCATE = \"attribute.allocate\";\nconst TRACE_ATTRIBUTE_UPDATE_END = \"attribute.updateEnd\";\nclass AttributeManager {\n    constructor(gl, { id = \"attribute-manager\", stats, timeline } = {}){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attributes\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"updateTriggers\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"needsRedraw\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"userData\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"stats\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attributeTransitionManager\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"mergeBoundsMemoized\", (0,_utils_memoize__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_utils_math_utils__WEBPACK_IMPORTED_MODULE_2__.mergeBounds));\n        this.id = id;\n        this.gl = gl;\n        this.attributes = {};\n        this.updateTriggers = {};\n        this.needsRedraw = true;\n        this.userData = {};\n        this.stats = stats;\n        this.attributeTransitionManager = new _attribute_transition_manager__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, {\n            id: \"\".concat(id, \"-transitions\"),\n            timeline\n        });\n        Object.seal(this);\n    }\n    finalize() {\n        for(const attributeName in this.attributes){\n            this.attributes[attributeName].delete();\n        }\n        this.attributeTransitionManager.finalize();\n    }\n    getNeedsRedraw(opts = {\n        clearRedrawFlags: false\n    }) {\n        const redraw = this.needsRedraw;\n        this.needsRedraw = this.needsRedraw && !opts.clearRedrawFlags;\n        return redraw && this.id;\n    }\n    setNeedsRedraw() {\n        this.needsRedraw = true;\n    }\n    add(attributes) {\n        this._add(attributes);\n    }\n    addInstanced(attributes) {\n        this._add(attributes, {\n            instanced: 1\n        });\n    }\n    remove(attributeNameArray) {\n        for (const name of attributeNameArray){\n            if (this.attributes[name] !== undefined) {\n                this.attributes[name].delete();\n                delete this.attributes[name];\n            }\n        }\n    }\n    invalidate(triggerName, dataRange) {\n        const invalidatedAttributes = this._invalidateTrigger(triggerName, dataRange);\n        (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_INVALIDATE, this, triggerName, invalidatedAttributes);\n    }\n    invalidateAll(dataRange) {\n        for(const attributeName in this.attributes){\n            this.attributes[attributeName].setNeedsUpdate(attributeName, dataRange);\n        }\n        (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_INVALIDATE, this, \"all\");\n    }\n    update({ data, numInstances, startIndices = null, transitions, props = {}, buffers = {}, context = {} }) {\n        let updated = false;\n        (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_UPDATE_START, this);\n        if (this.stats) {\n            this.stats.get(\"Update Attributes\").timeStart();\n        }\n        for(const attributeName in this.attributes){\n            const attribute = this.attributes[attributeName];\n            const accessorName = attribute.settings.accessor;\n            attribute.startIndices = startIndices;\n            attribute.numInstances = numInstances;\n            if (props[attributeName]) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_5__[\"default\"].removed(\"props.\".concat(attributeName), \"data.attributes.\".concat(attributeName))();\n            }\n            if (attribute.setExternalBuffer(buffers[attributeName])) {} else if (attribute.setBinaryValue(typeof accessorName === \"string\" ? buffers[accessorName] : undefined, data.startIndices)) {} else if (typeof accessorName === \"string\" && !buffers[accessorName] && attribute.setConstantValue(props[accessorName])) {} else if (attribute.needsUpdate()) {\n                updated = true;\n                this._updateAttribute({\n                    attribute,\n                    numInstances,\n                    data,\n                    props,\n                    context\n                });\n            }\n            this.needsRedraw = this.needsRedraw || attribute.needsRedraw();\n        }\n        if (updated) {\n            (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_UPDATE_END, this, numInstances);\n        }\n        if (this.stats) {\n            this.stats.get(\"Update Attributes\").timeEnd();\n        }\n        this.attributeTransitionManager.update({\n            attributes: this.attributes,\n            numInstances,\n            transitions\n        });\n    }\n    updateTransition() {\n        const { attributeTransitionManager } = this;\n        const transitionUpdated = attributeTransitionManager.run();\n        this.needsRedraw = this.needsRedraw || transitionUpdated;\n        return transitionUpdated;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    getBounds(attributeNames) {\n        const bounds = attributeNames.map((attributeName)=>{\n            var _this$attributes$attr;\n            return (_this$attributes$attr = this.attributes[attributeName]) === null || _this$attributes$attr === void 0 ? void 0 : _this$attributes$attr.getBounds();\n        });\n        return this.mergeBoundsMemoized(bounds);\n    }\n    getChangedAttributes(opts = {\n        clearChangedFlags: false\n    }) {\n        const { attributes, attributeTransitionManager } = this;\n        const changedAttributes = {\n            ...attributeTransitionManager.getAttributes()\n        };\n        for(const attributeName in attributes){\n            const attribute = attributes[attributeName];\n            if (attribute.needsRedraw(opts) && !attributeTransitionManager.hasAttribute(attributeName)) {\n                changedAttributes[attributeName] = attribute;\n            }\n        }\n        return changedAttributes;\n    }\n    getShaderAttributes(attributes, excludeAttributes = {}) {\n        if (!attributes) {\n            attributes = this.getAttributes();\n        }\n        const shaderAttributes = {};\n        for(const attributeName in attributes){\n            if (!excludeAttributes[attributeName]) {\n                Object.assign(shaderAttributes, attributes[attributeName].getShaderAttributes());\n            }\n        }\n        return shaderAttributes;\n    }\n    _add(attributes, extraProps = {}) {\n        for(const attributeName in attributes){\n            const attribute = attributes[attributeName];\n            this.attributes[attributeName] = this._createAttribute(attributeName, attribute, extraProps);\n        }\n        this._mapUpdateTriggersToAttributes();\n    }\n    _createAttribute(name, attribute, extraProps) {\n        const props = {\n            ...attribute,\n            id: name,\n            size: attribute.isIndexed && 1 || attribute.size || 1,\n            divisor: extraProps.instanced ? 1 : attribute.divisor || 0\n        };\n        return new _attribute__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this.gl, props);\n    }\n    _mapUpdateTriggersToAttributes() {\n        const triggers = {};\n        for(const attributeName in this.attributes){\n            const attribute = this.attributes[attributeName];\n            attribute.getUpdateTriggers().forEach((triggerName)=>{\n                if (!triggers[triggerName]) {\n                    triggers[triggerName] = [];\n                }\n                triggers[triggerName].push(attributeName);\n            });\n        }\n        this.updateTriggers = triggers;\n    }\n    _invalidateTrigger(triggerName, dataRange) {\n        const { attributes, updateTriggers } = this;\n        const invalidatedAttributes = updateTriggers[triggerName];\n        if (invalidatedAttributes) {\n            invalidatedAttributes.forEach((name)=>{\n                const attribute = attributes[name];\n                if (attribute) {\n                    attribute.setNeedsUpdate(attribute.id, dataRange);\n                }\n            });\n        }\n        return invalidatedAttributes;\n    }\n    _updateAttribute(opts) {\n        const { attribute, numInstances } = opts;\n        (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_ATTRIBUTE_UPDATE_START, attribute);\n        if (attribute.constant) {\n            attribute.setConstantValue(attribute.value);\n            return;\n        }\n        if (attribute.allocate(numInstances)) {\n            (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_ATTRIBUTE_ALLOCATE, attribute, numInstances);\n        }\n        const updated = attribute.updateBuffer(opts);\n        if (updated) {\n            this.needsRedraw = true;\n            (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_ATTRIBUTE_UPDATE_END, attribute, numInstances);\n        }\n    }\n} //# sourceMappingURL=attribute-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-manager.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-manager.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AttributeTransitionManager)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/transform.js\");\n/* harmony import */ var _transitions_gpu_interpolation_transition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../transitions/gpu-interpolation-transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/gpu-interpolation-transition.js\");\n/* harmony import */ var _transitions_gpu_spring_transition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../transitions/gpu-spring-transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/gpu-spring-transition.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\n\n\n\n\nconst TRANSITION_TYPES = {\n    interpolation: _transitions_gpu_interpolation_transition__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    spring: _transitions_gpu_spring_transition__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n};\nclass AttributeTransitionManager {\n    constructor(gl, { id, timeline }){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isSupported\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"timeline\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"transitions\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"needsRedraw\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"numInstances\", void 0);\n        this.id = id;\n        this.gl = gl;\n        this.timeline = timeline;\n        this.transitions = {};\n        this.needsRedraw = false;\n        this.numInstances = 1;\n        this.isSupported = _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isSupported(gl);\n    }\n    finalize() {\n        for(const attributeName in this.transitions){\n            this._removeTransition(attributeName);\n        }\n    }\n    update({ attributes, transitions, numInstances }) {\n        this.numInstances = numInstances || 1;\n        for(const attributeName in attributes){\n            const attribute = attributes[attributeName];\n            const settings = attribute.getTransitionSetting(transitions);\n            if (!settings) continue;\n            this._updateAttribute(attributeName, attribute, settings);\n        }\n        for(const attributeName in this.transitions){\n            const attribute = attributes[attributeName];\n            if (!attribute || !attribute.getTransitionSetting(transitions)) {\n                this._removeTransition(attributeName);\n            }\n        }\n    }\n    hasAttribute(attributeName) {\n        const transition = this.transitions[attributeName];\n        return transition && transition.inProgress;\n    }\n    getAttributes() {\n        const animatedAttributes = {};\n        for(const attributeName in this.transitions){\n            const transition = this.transitions[attributeName];\n            if (transition.inProgress) {\n                animatedAttributes[attributeName] = transition.attributeInTransition;\n            }\n        }\n        return animatedAttributes;\n    }\n    run() {\n        if (!this.isSupported || this.numInstances === 0) {\n            return false;\n        }\n        for(const attributeName in this.transitions){\n            const updated = this.transitions[attributeName].update();\n            if (updated) {\n                this.needsRedraw = true;\n            }\n        }\n        const needsRedraw = this.needsRedraw;\n        this.needsRedraw = false;\n        return needsRedraw;\n    }\n    _removeTransition(attributeName) {\n        this.transitions[attributeName].cancel();\n        delete this.transitions[attributeName];\n    }\n    _updateAttribute(attributeName, attribute, settings) {\n        const transition = this.transitions[attributeName];\n        let isNew = !transition || transition.type !== settings.type;\n        if (isNew) {\n            if (!this.isSupported) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_4__[\"default\"].warn(\"WebGL2 not supported by this browser. Transition for \".concat(attributeName, \" is disabled.\"))();\n                return;\n            }\n            if (transition) {\n                this._removeTransition(attributeName);\n            }\n            const TransitionType = TRANSITION_TYPES[settings.type];\n            if (TransitionType) {\n                this.transitions[attributeName] = new TransitionType({\n                    attribute,\n                    timeline: this.timeline,\n                    gl: this.gl\n                });\n            } else {\n                _utils_log__WEBPACK_IMPORTED_MODULE_4__[\"default\"].error(\"unsupported transition type '\".concat(settings.type, \"'\"))();\n                isNew = false;\n            }\n        }\n        if (isNew || attribute.needsRedraw()) {\n            this.needsRedraw = true;\n            this.transitions[attributeName].start(settings, this.numInstances);\n        }\n    }\n} //# sourceMappingURL=attribute-transition-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-utils.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-utils.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cycleBuffers: () => (/* binding */ cycleBuffers),\n/* harmony export */   getAttributeBufferLength: () => (/* binding */ getAttributeBufferLength),\n/* harmony export */   getAttributeTypeFromSize: () => (/* binding */ getAttributeTypeFromSize),\n/* harmony export */   getSourceBufferAttribute: () => (/* binding */ getSourceBufferAttribute),\n/* harmony export */   normalizeTransitionSettings: () => (/* binding */ normalizeTransitionSettings),\n/* harmony export */   padBuffer: () => (/* binding */ padBuffer)\n/* harmony export */ });\n/* harmony import */ var _utils_array_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/array-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/array-utils.js\");\n\nconst DEFAULT_TRANSITION_SETTINGS = {\n    interpolation: {\n        duration: 0,\n        easing: (t)=>t\n    },\n    spring: {\n        stiffness: 0.05,\n        damping: 0.5\n    }\n};\nfunction normalizeTransitionSettings(userSettings, layerSettings) {\n    if (!userSettings) {\n        return null;\n    }\n    if (Number.isFinite(userSettings)) {\n        userSettings = {\n            type: \"interpolation\",\n            duration: userSettings\n        };\n    }\n    const type = userSettings.type || \"interpolation\";\n    return {\n        ...DEFAULT_TRANSITION_SETTINGS[type],\n        ...layerSettings,\n        ...userSettings,\n        type\n    };\n}\nfunction getSourceBufferAttribute(gl, attribute) {\n    const buffer = attribute.getBuffer();\n    if (buffer) {\n        return [\n            buffer,\n            {\n                divisor: 0,\n                size: attribute.size,\n                normalized: attribute.settings.normalized\n            }\n        ];\n    }\n    return attribute.value;\n}\nfunction getAttributeTypeFromSize(size) {\n    switch(size){\n        case 1:\n            return \"float\";\n        case 2:\n            return \"vec2\";\n        case 3:\n            return \"vec3\";\n        case 4:\n            return \"vec4\";\n        default:\n            throw new Error('No defined attribute type for size \"'.concat(size, '\"'));\n    }\n}\nfunction cycleBuffers(buffers) {\n    buffers.push(buffers.shift());\n}\nfunction getAttributeBufferLength(attribute, numInstances) {\n    const { doublePrecision, settings, value, size } = attribute;\n    const multiplier = doublePrecision && value instanceof Float64Array ? 2 : 1;\n    return (settings.noAlloc ? value.length : numInstances * size) * multiplier;\n}\nfunction padBuffer({ buffer, numInstances, attribute, fromLength, fromStartIndices, getData = (x)=>x }) {\n    const precisionMultiplier = attribute.doublePrecision && attribute.value instanceof Float64Array ? 2 : 1;\n    const size = attribute.size * precisionMultiplier;\n    const byteOffset = attribute.byteOffset;\n    const toStartIndices = attribute.startIndices;\n    const hasStartIndices = fromStartIndices && toStartIndices;\n    const toLength = getAttributeBufferLength(attribute, numInstances);\n    const isConstant = attribute.isConstant;\n    if (!hasStartIndices && fromLength >= toLength) {\n        return;\n    }\n    const toData = isConstant ? attribute.value : attribute.getBuffer().getData({\n        srcByteOffset: byteOffset\n    });\n    if (attribute.settings.normalized && !isConstant) {\n        const getter = getData;\n        getData = (value, chunk)=>attribute.normalizeConstant(getter(value, chunk));\n    }\n    const getMissingData = isConstant ? (i, chunk)=>getData(toData, chunk) : (i, chunk)=>getData(toData.subarray(i, i + size), chunk);\n    const source = buffer.getData({\n        length: fromLength\n    });\n    const data = new Float32Array(toLength);\n    (0,_utils_array_utils__WEBPACK_IMPORTED_MODULE_0__.padArray)({\n        source,\n        target: data,\n        sourceStartIndices: fromStartIndices,\n        targetStartIndices: toStartIndices,\n        size,\n        getData: getMissingData\n    });\n    if (buffer.byteLength < data.byteLength + byteOffset) {\n        buffer.reallocate(data.byteLength + byteOffset);\n    }\n    buffer.subData({\n        data,\n        offset: byteOffset\n    });\n} //# sourceMappingURL=attribute-transition-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvYXR0cmlidXRlL2F0dHJpYnV0ZS10cmFuc2l0aW9uLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUQ7QUFDbkQsTUFBTUMsOEJBQThCO0lBQ2xDQyxlQUFlO1FBQ2JDLFVBQVU7UUFDVkMsUUFBUUMsQ0FBQUEsSUFBS0E7SUFDZjtJQUNBQyxRQUFRO1FBQ05DLFdBQVc7UUFDWEMsU0FBUztJQUNYO0FBQ0Y7QUFDTyxTQUFTQyw0QkFBNEJDLFlBQVksRUFBRUMsYUFBYTtJQUNyRSxJQUFJLENBQUNELGNBQWM7UUFDakIsT0FBTztJQUNUO0lBRUEsSUFBSUUsT0FBT0MsUUFBUSxDQUFDSCxlQUFlO1FBQ2pDQSxlQUFlO1lBQ2JJLE1BQU07WUFDTlgsVUFBVU87UUFDWjtJQUNGO0lBRUEsTUFBTUksT0FBT0osYUFBYUksSUFBSSxJQUFJO0lBQ2xDLE9BQU87UUFBRSxHQUFHYiwyQkFBMkIsQ0FBQ2EsS0FBSztRQUMzQyxHQUFHSCxhQUFhO1FBQ2hCLEdBQUdELFlBQVk7UUFDZkk7SUFDRjtBQUNGO0FBQ08sU0FBU0MseUJBQXlCQyxFQUFFLEVBQUVDLFNBQVM7SUFDcEQsTUFBTUMsU0FBU0QsVUFBVUUsU0FBUztJQUVsQyxJQUFJRCxRQUFRO1FBQ1YsT0FBTztZQUFDQTtZQUFRO2dCQUNkRSxTQUFTO2dCQUNUQyxNQUFNSixVQUFVSSxJQUFJO2dCQUNwQkMsWUFBWUwsVUFBVU0sUUFBUSxDQUFDRCxVQUFVO1lBQzNDO1NBQUU7SUFDSjtJQUVBLE9BQU9MLFVBQVVPLEtBQUs7QUFDeEI7QUFDTyxTQUFTQyx5QkFBeUJKLElBQUk7SUFDM0MsT0FBUUE7UUFDTixLQUFLO1lBQ0gsT0FBTztRQUVULEtBQUs7WUFDSCxPQUFPO1FBRVQsS0FBSztZQUNILE9BQU87UUFFVCxLQUFLO1lBQ0gsT0FBTztRQUVUO1lBQ0UsTUFBTSxJQUFJSyxNQUFNLHVDQUF3Q0MsTUFBTSxDQUFDTixNQUFNO0lBQ3pFO0FBQ0Y7QUFDTyxTQUFTTyxhQUFhQyxPQUFPO0lBQ2xDQSxRQUFRQyxJQUFJLENBQUNELFFBQVFFLEtBQUs7QUFDNUI7QUFDTyxTQUFTQyx5QkFBeUJmLFNBQVMsRUFBRWdCLFlBQVk7SUFDOUQsTUFBTSxFQUNKQyxlQUFlLEVBQ2ZYLFFBQVEsRUFDUkMsS0FBSyxFQUNMSCxJQUFJLEVBQ0wsR0FBR0o7SUFDSixNQUFNa0IsYUFBYUQsbUJBQW1CVixpQkFBaUJZLGVBQWUsSUFBSTtJQUMxRSxPQUFPLENBQUNiLFNBQVNjLE9BQU8sR0FBR2IsTUFBTWMsTUFBTSxHQUFHTCxlQUFlWixJQUFHLElBQUtjO0FBQ25FO0FBQ08sU0FBU0ksVUFBVSxFQUN4QnJCLE1BQU0sRUFDTmUsWUFBWSxFQUNaaEIsU0FBUyxFQUNUdUIsVUFBVSxFQUNWQyxnQkFBZ0IsRUFDaEJDLFVBQVVDLENBQUFBLElBQUtBLENBQUMsRUFDakI7SUFDQyxNQUFNQyxzQkFBc0IzQixVQUFVaUIsZUFBZSxJQUFJakIsVUFBVU8sS0FBSyxZQUFZWSxlQUFlLElBQUk7SUFDdkcsTUFBTWYsT0FBT0osVUFBVUksSUFBSSxHQUFHdUI7SUFDOUIsTUFBTUMsYUFBYTVCLFVBQVU0QixVQUFVO0lBQ3ZDLE1BQU1DLGlCQUFpQjdCLFVBQVU4QixZQUFZO0lBQzdDLE1BQU1DLGtCQUFrQlAsb0JBQW9CSztJQUM1QyxNQUFNRyxXQUFXakIseUJBQXlCZixXQUFXZ0I7SUFDckQsTUFBTWlCLGFBQWFqQyxVQUFVaUMsVUFBVTtJQUV2QyxJQUFJLENBQUNGLG1CQUFtQlIsY0FBY1MsVUFBVTtRQUM5QztJQUNGO0lBRUEsTUFBTUUsU0FBU0QsYUFBYWpDLFVBQVVPLEtBQUssR0FBR1AsVUFBVUUsU0FBUyxHQUFHdUIsT0FBTyxDQUFDO1FBQzFFVSxlQUFlUDtJQUNqQjtJQUVBLElBQUk1QixVQUFVTSxRQUFRLENBQUNELFVBQVUsSUFBSSxDQUFDNEIsWUFBWTtRQUNoRCxNQUFNRyxTQUFTWDtRQUVmQSxVQUFVLENBQUNsQixPQUFPOEIsUUFBVXJDLFVBQVVzQyxpQkFBaUIsQ0FBQ0YsT0FBTzdCLE9BQU84QjtJQUN4RTtJQUVBLE1BQU1FLGlCQUFpQk4sYUFBYSxDQUFDTyxHQUFHSCxRQUFVWixRQUFRUyxRQUFRRyxTQUFTLENBQUNHLEdBQUdILFFBQVVaLFFBQVFTLE9BQU9PLFFBQVEsQ0FBQ0QsR0FBR0EsSUFBSXBDLE9BQU9pQztJQUMvSCxNQUFNSyxTQUFTekMsT0FBT3dCLE9BQU8sQ0FBQztRQUM1QkosUUFBUUU7SUFDVjtJQUNBLE1BQU1vQixPQUFPLElBQUlDLGFBQWFaO0lBQzlCakQsNERBQVFBLENBQUM7UUFDUDJEO1FBQ0FHLFFBQVFGO1FBQ1JHLG9CQUFvQnRCO1FBQ3BCdUIsb0JBQW9CbEI7UUFDcEJ6QjtRQUNBcUIsU0FBU2M7SUFDWDtJQUVBLElBQUl0QyxPQUFPK0MsVUFBVSxHQUFHTCxLQUFLSyxVQUFVLEdBQUdwQixZQUFZO1FBQ3BEM0IsT0FBT2dELFVBQVUsQ0FBQ04sS0FBS0ssVUFBVSxHQUFHcEI7SUFDdEM7SUFFQTNCLE9BQU9pRCxPQUFPLENBQUM7UUFDYlA7UUFDQVEsUUFBUXZCO0lBQ1Y7QUFDRixFQUNBLHNEQUFzRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vbGliL2F0dHJpYnV0ZS9hdHRyaWJ1dGUtdHJhbnNpdGlvbi11dGlscy5qcz83NGZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhZEFycmF5IH0gZnJvbSAnLi4vLi4vdXRpbHMvYXJyYXktdXRpbHMnO1xuY29uc3QgREVGQVVMVF9UUkFOU0lUSU9OX1NFVFRJTkdTID0ge1xuICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgZHVyYXRpb246IDAsXG4gICAgZWFzaW5nOiB0ID0+IHRcbiAgfSxcbiAgc3ByaW5nOiB7XG4gICAgc3RpZmZuZXNzOiAwLjA1LFxuICAgIGRhbXBpbmc6IDAuNVxuICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVRyYW5zaXRpb25TZXR0aW5ncyh1c2VyU2V0dGluZ3MsIGxheWVyU2V0dGluZ3MpIHtcbiAgaWYgKCF1c2VyU2V0dGluZ3MpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGlmIChOdW1iZXIuaXNGaW5pdGUodXNlclNldHRpbmdzKSkge1xuICAgIHVzZXJTZXR0aW5ncyA9IHtcbiAgICAgIHR5cGU6ICdpbnRlcnBvbGF0aW9uJyxcbiAgICAgIGR1cmF0aW9uOiB1c2VyU2V0dGluZ3NcbiAgICB9O1xuICB9XG5cbiAgY29uc3QgdHlwZSA9IHVzZXJTZXR0aW5ncy50eXBlIHx8ICdpbnRlcnBvbGF0aW9uJztcbiAgcmV0dXJuIHsgLi4uREVGQVVMVF9UUkFOU0lUSU9OX1NFVFRJTkdTW3R5cGVdLFxuICAgIC4uLmxheWVyU2V0dGluZ3MsXG4gICAgLi4udXNlclNldHRpbmdzLFxuICAgIHR5cGVcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRTb3VyY2VCdWZmZXJBdHRyaWJ1dGUoZ2wsIGF0dHJpYnV0ZSkge1xuICBjb25zdCBidWZmZXIgPSBhdHRyaWJ1dGUuZ2V0QnVmZmVyKCk7XG5cbiAgaWYgKGJ1ZmZlcikge1xuICAgIHJldHVybiBbYnVmZmVyLCB7XG4gICAgICBkaXZpc29yOiAwLFxuICAgICAgc2l6ZTogYXR0cmlidXRlLnNpemUsXG4gICAgICBub3JtYWxpemVkOiBhdHRyaWJ1dGUuc2V0dGluZ3Mubm9ybWFsaXplZFxuICAgIH1dO1xuICB9XG5cbiAgcmV0dXJuIGF0dHJpYnV0ZS52YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRBdHRyaWJ1dGVUeXBlRnJvbVNpemUoc2l6ZSkge1xuICBzd2l0Y2ggKHNpemUpIHtcbiAgICBjYXNlIDE6XG4gICAgICByZXR1cm4gJ2Zsb2F0JztcblxuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiAndmVjMic7XG5cbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4gJ3ZlYzMnO1xuXG4gICAgY2FzZSA0OlxuICAgICAgcmV0dXJuICd2ZWM0JztcblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBkZWZpbmVkIGF0dHJpYnV0ZSB0eXBlIGZvciBzaXplIFxcXCJcIi5jb25jYXQoc2l6ZSwgXCJcXFwiXCIpKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGN5Y2xlQnVmZmVycyhidWZmZXJzKSB7XG4gIGJ1ZmZlcnMucHVzaChidWZmZXJzLnNoaWZ0KCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEF0dHJpYnV0ZUJ1ZmZlckxlbmd0aChhdHRyaWJ1dGUsIG51bUluc3RhbmNlcykge1xuICBjb25zdCB7XG4gICAgZG91YmxlUHJlY2lzaW9uLFxuICAgIHNldHRpbmdzLFxuICAgIHZhbHVlLFxuICAgIHNpemVcbiAgfSA9IGF0dHJpYnV0ZTtcbiAgY29uc3QgbXVsdGlwbGllciA9IGRvdWJsZVByZWNpc2lvbiAmJiB2YWx1ZSBpbnN0YW5jZW9mIEZsb2F0NjRBcnJheSA/IDIgOiAxO1xuICByZXR1cm4gKHNldHRpbmdzLm5vQWxsb2MgPyB2YWx1ZS5sZW5ndGggOiBudW1JbnN0YW5jZXMgKiBzaXplKSAqIG11bHRpcGxpZXI7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFkQnVmZmVyKHtcbiAgYnVmZmVyLFxuICBudW1JbnN0YW5jZXMsXG4gIGF0dHJpYnV0ZSxcbiAgZnJvbUxlbmd0aCxcbiAgZnJvbVN0YXJ0SW5kaWNlcyxcbiAgZ2V0RGF0YSA9IHggPT4geFxufSkge1xuICBjb25zdCBwcmVjaXNpb25NdWx0aXBsaWVyID0gYXR0cmlidXRlLmRvdWJsZVByZWNpc2lvbiAmJiBhdHRyaWJ1dGUudmFsdWUgaW5zdGFuY2VvZiBGbG9hdDY0QXJyYXkgPyAyIDogMTtcbiAgY29uc3Qgc2l6ZSA9IGF0dHJpYnV0ZS5zaXplICogcHJlY2lzaW9uTXVsdGlwbGllcjtcbiAgY29uc3QgYnl0ZU9mZnNldCA9IGF0dHJpYnV0ZS5ieXRlT2Zmc2V0O1xuICBjb25zdCB0b1N0YXJ0SW5kaWNlcyA9IGF0dHJpYnV0ZS5zdGFydEluZGljZXM7XG4gIGNvbnN0IGhhc1N0YXJ0SW5kaWNlcyA9IGZyb21TdGFydEluZGljZXMgJiYgdG9TdGFydEluZGljZXM7XG4gIGNvbnN0IHRvTGVuZ3RoID0gZ2V0QXR0cmlidXRlQnVmZmVyTGVuZ3RoKGF0dHJpYnV0ZSwgbnVtSW5zdGFuY2VzKTtcbiAgY29uc3QgaXNDb25zdGFudCA9IGF0dHJpYnV0ZS5pc0NvbnN0YW50O1xuXG4gIGlmICghaGFzU3RhcnRJbmRpY2VzICYmIGZyb21MZW5ndGggPj0gdG9MZW5ndGgpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCB0b0RhdGEgPSBpc0NvbnN0YW50ID8gYXR0cmlidXRlLnZhbHVlIDogYXR0cmlidXRlLmdldEJ1ZmZlcigpLmdldERhdGEoe1xuICAgIHNyY0J5dGVPZmZzZXQ6IGJ5dGVPZmZzZXRcbiAgfSk7XG5cbiAgaWYgKGF0dHJpYnV0ZS5zZXR0aW5ncy5ub3JtYWxpemVkICYmICFpc0NvbnN0YW50KSB7XG4gICAgY29uc3QgZ2V0dGVyID0gZ2V0RGF0YTtcblxuICAgIGdldERhdGEgPSAodmFsdWUsIGNodW5rKSA9PiBhdHRyaWJ1dGUubm9ybWFsaXplQ29uc3RhbnQoZ2V0dGVyKHZhbHVlLCBjaHVuaykpO1xuICB9XG5cbiAgY29uc3QgZ2V0TWlzc2luZ0RhdGEgPSBpc0NvbnN0YW50ID8gKGksIGNodW5rKSA9PiBnZXREYXRhKHRvRGF0YSwgY2h1bmspIDogKGksIGNodW5rKSA9PiBnZXREYXRhKHRvRGF0YS5zdWJhcnJheShpLCBpICsgc2l6ZSksIGNodW5rKTtcbiAgY29uc3Qgc291cmNlID0gYnVmZmVyLmdldERhdGEoe1xuICAgIGxlbmd0aDogZnJvbUxlbmd0aFxuICB9KTtcbiAgY29uc3QgZGF0YSA9IG5ldyBGbG9hdDMyQXJyYXkodG9MZW5ndGgpO1xuICBwYWRBcnJheSh7XG4gICAgc291cmNlLFxuICAgIHRhcmdldDogZGF0YSxcbiAgICBzb3VyY2VTdGFydEluZGljZXM6IGZyb21TdGFydEluZGljZXMsXG4gICAgdGFyZ2V0U3RhcnRJbmRpY2VzOiB0b1N0YXJ0SW5kaWNlcyxcbiAgICBzaXplLFxuICAgIGdldERhdGE6IGdldE1pc3NpbmdEYXRhXG4gIH0pO1xuXG4gIGlmIChidWZmZXIuYnl0ZUxlbmd0aCA8IGRhdGEuYnl0ZUxlbmd0aCArIGJ5dGVPZmZzZXQpIHtcbiAgICBidWZmZXIucmVhbGxvY2F0ZShkYXRhLmJ5dGVMZW5ndGggKyBieXRlT2Zmc2V0KTtcbiAgfVxuXG4gIGJ1ZmZlci5zdWJEYXRhKHtcbiAgICBkYXRhLFxuICAgIG9mZnNldDogYnl0ZU9mZnNldFxuICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF0dHJpYnV0ZS10cmFuc2l0aW9uLXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJwYWRBcnJheSIsIkRFRkFVTFRfVFJBTlNJVElPTl9TRVRUSU5HUyIsImludGVycG9sYXRpb24iLCJkdXJhdGlvbiIsImVhc2luZyIsInQiLCJzcHJpbmciLCJzdGlmZm5lc3MiLCJkYW1waW5nIiwibm9ybWFsaXplVHJhbnNpdGlvblNldHRpbmdzIiwidXNlclNldHRpbmdzIiwibGF5ZXJTZXR0aW5ncyIsIk51bWJlciIsImlzRmluaXRlIiwidHlwZSIsImdldFNvdXJjZUJ1ZmZlckF0dHJpYnV0ZSIsImdsIiwiYXR0cmlidXRlIiwiYnVmZmVyIiwiZ2V0QnVmZmVyIiwiZGl2aXNvciIsInNpemUiLCJub3JtYWxpemVkIiwic2V0dGluZ3MiLCJ2YWx1ZSIsImdldEF0dHJpYnV0ZVR5cGVGcm9tU2l6ZSIsIkVycm9yIiwiY29uY2F0IiwiY3ljbGVCdWZmZXJzIiwiYnVmZmVycyIsInB1c2giLCJzaGlmdCIsImdldEF0dHJpYnV0ZUJ1ZmZlckxlbmd0aCIsIm51bUluc3RhbmNlcyIsImRvdWJsZVByZWNpc2lvbiIsIm11bHRpcGxpZXIiLCJGbG9hdDY0QXJyYXkiLCJub0FsbG9jIiwibGVuZ3RoIiwicGFkQnVmZmVyIiwiZnJvbUxlbmd0aCIsImZyb21TdGFydEluZGljZXMiLCJnZXREYXRhIiwieCIsInByZWNpc2lvbk11bHRpcGxpZXIiLCJieXRlT2Zmc2V0IiwidG9TdGFydEluZGljZXMiLCJzdGFydEluZGljZXMiLCJoYXNTdGFydEluZGljZXMiLCJ0b0xlbmd0aCIsImlzQ29uc3RhbnQiLCJ0b0RhdGEiLCJzcmNCeXRlT2Zmc2V0IiwiZ2V0dGVyIiwiY2h1bmsiLCJub3JtYWxpemVDb25zdGFudCIsImdldE1pc3NpbmdEYXRhIiwiaSIsInN1YmFycmF5Iiwic291cmNlIiwiZGF0YSIsIkZsb2F0MzJBcnJheSIsInRhcmdldCIsInNvdXJjZVN0YXJ0SW5kaWNlcyIsInRhcmdldFN0YXJ0SW5kaWNlcyIsImJ5dGVMZW5ndGgiLCJyZWFsbG9jYXRlIiwic3ViRGF0YSIsIm9mZnNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Attribute)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _data_column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-column */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/data-column.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/assert */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_iterable_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/iterable-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _utils_flatten__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/flatten */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/flatten.js\");\n/* harmony import */ var _utils_range__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/range */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/range.js\");\n/* harmony import */ var _attribute_transition_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attribute-transition-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-utils.js\");\n\n\n\n\n\n\n\nclass Attribute extends _data_column__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(gl, opts){\n        super(gl, opts, {\n            startIndices: null,\n            lastExternalBuffer: null,\n            binaryValue: null,\n            binaryAccessor: null,\n            needsUpdate: true,\n            needsRedraw: false,\n            updateRanges: _utils_range__WEBPACK_IMPORTED_MODULE_2__.FULL\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"constant\", false);\n        this.settings.update = opts.update || (opts.accessor ? this._autoUpdater : undefined);\n        Object.seal(this.settings);\n        Object.seal(this.state);\n        this._validateAttributeUpdaters();\n    }\n    get startIndices() {\n        return this.state.startIndices;\n    }\n    set startIndices(layout) {\n        this.state.startIndices = layout;\n    }\n    needsUpdate() {\n        return this.state.needsUpdate;\n    }\n    needsRedraw({ clearChangedFlags = false } = {}) {\n        const needsRedraw = this.state.needsRedraw;\n        this.state.needsRedraw = needsRedraw && !clearChangedFlags;\n        return needsRedraw;\n    }\n    getUpdateTriggers() {\n        const { accessor } = this.settings;\n        return [\n            this.id\n        ].concat(typeof accessor !== \"function\" && accessor || []);\n    }\n    supportsTransition() {\n        return Boolean(this.settings.transition);\n    }\n    getTransitionSetting(opts) {\n        if (!opts || !this.supportsTransition()) {\n            return null;\n        }\n        const { accessor } = this.settings;\n        const layerSettings = this.settings.transition;\n        const userSettings = Array.isArray(accessor) ? opts[accessor.find((a)=>opts[a])] : opts[accessor];\n        return (0,_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_3__.normalizeTransitionSettings)(userSettings, layerSettings);\n    }\n    setNeedsUpdate(reason = this.id, dataRange) {\n        this.state.needsUpdate = this.state.needsUpdate || reason;\n        this.setNeedsRedraw(reason);\n        if (dataRange) {\n            const { startRow = 0, endRow = Infinity } = dataRange;\n            this.state.updateRanges = _utils_range__WEBPACK_IMPORTED_MODULE_2__.add(this.state.updateRanges, [\n                startRow,\n                endRow\n            ]);\n        } else {\n            this.state.updateRanges = _utils_range__WEBPACK_IMPORTED_MODULE_2__.FULL;\n        }\n    }\n    clearNeedsUpdate() {\n        this.state.needsUpdate = false;\n        this.state.updateRanges = _utils_range__WEBPACK_IMPORTED_MODULE_2__.EMPTY;\n    }\n    setNeedsRedraw(reason = this.id) {\n        this.state.needsRedraw = this.state.needsRedraw || reason;\n    }\n    allocate(numInstances) {\n        const { state, settings } = this;\n        if (settings.noAlloc) {\n            return false;\n        }\n        if (settings.update) {\n            super.allocate(numInstances, state.updateRanges !== _utils_range__WEBPACK_IMPORTED_MODULE_2__.FULL);\n            return true;\n        }\n        return false;\n    }\n    updateBuffer({ numInstances, data, props, context }) {\n        if (!this.needsUpdate()) {\n            return false;\n        }\n        const { state: { updateRanges }, settings: { update, noAlloc } } = this;\n        let updated = true;\n        if (update) {\n            for (const [startRow, endRow] of updateRanges){\n                update.call(context, this, {\n                    data,\n                    startRow,\n                    endRow,\n                    props,\n                    numInstances\n                });\n            }\n            if (!this.value) {} else if (this.constant || this.buffer.byteLength < this.value.byteLength + this.byteOffset) {\n                this.setData({\n                    value: this.value,\n                    constant: this.constant\n                });\n                this.constant = false;\n            } else {\n                for (const [startRow, endRow] of updateRanges){\n                    const startOffset = Number.isFinite(startRow) ? this.getVertexOffset(startRow) : 0;\n                    const endOffset = Number.isFinite(endRow) ? this.getVertexOffset(endRow) : noAlloc || !Number.isFinite(numInstances) ? this.value.length : numInstances * this.size;\n                    super.updateSubBuffer({\n                        startOffset,\n                        endOffset\n                    });\n                }\n            }\n            this._checkAttributeArray();\n        } else {\n            updated = false;\n        }\n        this.clearNeedsUpdate();\n        this.setNeedsRedraw();\n        return updated;\n    }\n    setConstantValue(value) {\n        if (value === undefined || typeof value === \"function\") {\n            return false;\n        }\n        const hasChanged = this.setData({\n            constant: true,\n            value\n        });\n        if (hasChanged) {\n            this.setNeedsRedraw();\n        }\n        this.clearNeedsUpdate();\n        return true;\n    }\n    setExternalBuffer(buffer) {\n        const { state } = this;\n        if (!buffer) {\n            state.lastExternalBuffer = null;\n            return false;\n        }\n        this.clearNeedsUpdate();\n        if (state.lastExternalBuffer === buffer) {\n            return true;\n        }\n        state.lastExternalBuffer = buffer;\n        this.setNeedsRedraw();\n        this.setData(buffer);\n        return true;\n    }\n    setBinaryValue(buffer, startIndices = null) {\n        const { state, settings } = this;\n        if (!buffer) {\n            state.binaryValue = null;\n            state.binaryAccessor = null;\n            return false;\n        }\n        if (settings.noAlloc) {\n            return false;\n        }\n        if (state.binaryValue === buffer) {\n            this.clearNeedsUpdate();\n            return true;\n        }\n        state.binaryValue = buffer;\n        this.setNeedsRedraw();\n        const needsUpdate = settings.transform || startIndices !== this.startIndices;\n        if (needsUpdate) {\n            if (ArrayBuffer.isView(buffer)) {\n                buffer = {\n                    value: buffer\n                };\n            }\n            const binaryValue = buffer;\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(ArrayBuffer.isView(binaryValue.value), \"invalid \".concat(settings.accessor));\n            const needsNormalize = Boolean(binaryValue.size) && binaryValue.size !== this.size;\n            state.binaryAccessor = (0,_utils_iterable_utils__WEBPACK_IMPORTED_MODULE_5__.getAccessorFromBuffer)(binaryValue.value, {\n                size: binaryValue.size || this.size,\n                stride: binaryValue.stride,\n                offset: binaryValue.offset,\n                startIndices: startIndices,\n                nested: needsNormalize\n            });\n            return false;\n        }\n        this.clearNeedsUpdate();\n        this.setData(buffer);\n        return true;\n    }\n    getVertexOffset(row) {\n        const { startIndices } = this;\n        const vertexIndex = startIndices ? row < startIndices.length ? startIndices[row] : this.numInstances : row;\n        return vertexIndex * this.size;\n    }\n    getShaderAttributes() {\n        const shaderAttributeDefs = this.settings.shaderAttributes || {\n            [this.id]: null\n        };\n        const shaderAttributes = {};\n        for(const shaderAttributeName in shaderAttributeDefs){\n            Object.assign(shaderAttributes, super.getShaderAttributes(shaderAttributeName, shaderAttributeDefs[shaderAttributeName]));\n        }\n        return shaderAttributes;\n    }\n    _autoUpdater(attribute, { data, startRow, endRow, props, numInstances }) {\n        if (attribute.constant) {\n            return;\n        }\n        const { settings, state, value, size, startIndices } = attribute;\n        const { accessor, transform } = settings;\n        const accessorFunc = state.binaryAccessor || (typeof accessor === \"function\" ? accessor : props[accessor]);\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(typeof accessorFunc === \"function\", 'accessor \"'.concat(accessor, '\" is not a function'));\n        let i = attribute.getVertexOffset(startRow);\n        const { iterable, objectInfo } = (0,_utils_iterable_utils__WEBPACK_IMPORTED_MODULE_5__.createIterable)(data, startRow, endRow);\n        for (const object of iterable){\n            objectInfo.index++;\n            let objectValue = accessorFunc(object, objectInfo);\n            if (transform) {\n                objectValue = transform.call(this, objectValue);\n            }\n            if (startIndices) {\n                const numVertices = (objectInfo.index < startIndices.length - 1 ? startIndices[objectInfo.index + 1] : numInstances) - startIndices[objectInfo.index];\n                if (objectValue && Array.isArray(objectValue[0])) {\n                    let startIndex = i;\n                    for (const item of objectValue){\n                        attribute._normalizeValue(item, value, startIndex);\n                        startIndex += size;\n                    }\n                } else if (objectValue && objectValue.length > size) {\n                    value.set(objectValue, i);\n                } else {\n                    attribute._normalizeValue(objectValue, objectInfo.target, 0);\n                    (0,_utils_flatten__WEBPACK_IMPORTED_MODULE_6__.fillArray)({\n                        target: value,\n                        source: objectInfo.target,\n                        start: i,\n                        count: numVertices\n                    });\n                }\n                i += numVertices * size;\n            } else {\n                attribute._normalizeValue(objectValue, value, i);\n                i += size;\n            }\n        }\n    }\n    _validateAttributeUpdaters() {\n        const { settings } = this;\n        const hasUpdater = settings.noAlloc || typeof settings.update === \"function\";\n        if (!hasUpdater) {\n            throw new Error(\"Attribute \".concat(this.id, \" missing update or accessor\"));\n        }\n    }\n    _checkAttributeArray() {\n        const { value } = this;\n        const limit = Math.min(4, this.size);\n        if (value && value.length >= limit) {\n            let valid = true;\n            switch(limit){\n                case 4:\n                    valid = valid && Number.isFinite(value[3]);\n                case 3:\n                    valid = valid && Number.isFinite(value[2]);\n                case 2:\n                    valid = valid && Number.isFinite(value[1]);\n                case 1:\n                    valid = valid && Number.isFinite(value[0]);\n                    break;\n                default:\n                    valid = false;\n            }\n            if (!valid) {\n                throw new Error(\"Illegal attribute generated for \".concat(this.id));\n            }\n        }\n    }\n} //# sourceMappingURL=attribute.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/data-column.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/attribute/data-column.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DataColumn)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/features.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _shader_attribute__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./shader-attribute */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/shader-attribute.js\");\n/* harmony import */ var _gl_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gl-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/gl-utils.js\");\n/* harmony import */ var _utils_typed_array_manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/typed-array-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js\");\n/* harmony import */ var _utils_math_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/math-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/math-utils.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\n\n\n\n\n\n\nfunction getStride(accessor) {\n    return accessor.stride || accessor.size * accessor.bytesPerElement;\n}\nfunction resolveShaderAttribute(baseAccessor, shaderAttributeOptions) {\n    if (shaderAttributeOptions.offset) {\n        _utils_log__WEBPACK_IMPORTED_MODULE_1__[\"default\"].removed(\"shaderAttribute.offset\", \"vertexOffset, elementOffset\")();\n    }\n    const stride = getStride(baseAccessor);\n    const vertexOffset = shaderAttributeOptions.vertexOffset !== undefined ? shaderAttributeOptions.vertexOffset : baseAccessor.vertexOffset || 0;\n    const elementOffset = shaderAttributeOptions.elementOffset || 0;\n    const offset = vertexOffset * stride + elementOffset * baseAccessor.bytesPerElement + (baseAccessor.offset || 0);\n    return {\n        ...shaderAttributeOptions,\n        offset,\n        stride\n    };\n}\nfunction resolveDoublePrecisionShaderAttributes(baseAccessor, shaderAttributeOptions) {\n    const resolvedOptions = resolveShaderAttribute(baseAccessor, shaderAttributeOptions);\n    return {\n        high: resolvedOptions,\n        low: {\n            ...resolvedOptions,\n            offset: resolvedOptions.offset + baseAccessor.size * 4\n        }\n    };\n}\nclass DataColumn {\n    constructor(gl, opts, state){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"size\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"settings\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"value\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"doublePrecision\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_buffer\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n        this.gl = gl;\n        this.id = opts.id || \"\";\n        this.size = opts.size || 1;\n        const logicalType = opts.logicalType || opts.type;\n        const doublePrecision = logicalType === 5130;\n        let { defaultValue } = opts;\n        defaultValue = Number.isFinite(defaultValue) ? [\n            defaultValue\n        ] : defaultValue || new Array(this.size).fill(0);\n        let bufferType;\n        if (doublePrecision) {\n            bufferType = 5126;\n        } else if (!logicalType && opts.isIndexed) {\n            bufferType = gl && (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.hasFeature)(gl, _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__.FEATURES.ELEMENT_INDEX_UINT32) ? 5125 : 5123;\n        } else {\n            bufferType = logicalType || 5126;\n        }\n        let defaultType = (0,_gl_utils__WEBPACK_IMPORTED_MODULE_4__.glArrayFromType)(logicalType || bufferType || 5126);\n        this.doublePrecision = doublePrecision;\n        if (doublePrecision && opts.fp64 === false) {\n            defaultType = Float32Array;\n        }\n        this.value = null;\n        this.settings = {\n            ...opts,\n            defaultType,\n            defaultValue: defaultValue,\n            logicalType,\n            type: bufferType,\n            size: this.size,\n            bytesPerElement: defaultType.BYTES_PER_ELEMENT\n        };\n        this.state = {\n            ...state,\n            externalBuffer: null,\n            bufferAccessor: this.settings,\n            allocatedValue: null,\n            numInstances: 0,\n            bounds: null,\n            constant: false\n        };\n        this._buffer = null;\n    }\n    get isConstant() {\n        return this.state.constant;\n    }\n    get buffer() {\n        if (!this._buffer) {\n            const { isIndexed, type } = this.settings;\n            this._buffer = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.gl, {\n                id: this.id,\n                target: isIndexed ? 34963 : 34962,\n                accessor: {\n                    type\n                }\n            });\n        }\n        return this._buffer;\n    }\n    get byteOffset() {\n        const accessor = this.getAccessor();\n        if (accessor.vertexOffset) {\n            return accessor.vertexOffset * getStride(accessor);\n        }\n        return 0;\n    }\n    get numInstances() {\n        return this.state.numInstances;\n    }\n    set numInstances(n) {\n        this.state.numInstances = n;\n    }\n    delete() {\n        if (this._buffer) {\n            this._buffer.delete();\n            this._buffer = null;\n        }\n        _utils_typed_array_manager__WEBPACK_IMPORTED_MODULE_6__[\"default\"].release(this.state.allocatedValue);\n    }\n    getShaderAttributes(id, options) {\n        if (this.doublePrecision) {\n            const shaderAttributes = {};\n            const isBuffer64Bit = this.value instanceof Float64Array;\n            const doubleShaderAttributeDefs = resolveDoublePrecisionShaderAttributes(this.getAccessor(), options || {});\n            shaderAttributes[id] = new _shader_attribute__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this, doubleShaderAttributeDefs.high);\n            shaderAttributes[\"\".concat(id, \"64Low\")] = isBuffer64Bit ? new _shader_attribute__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this, doubleShaderAttributeDefs.low) : new Float32Array(this.size);\n            return shaderAttributes;\n        }\n        if (options) {\n            const shaderAttributeDef = resolveShaderAttribute(this.getAccessor(), options);\n            return {\n                [id]: new _shader_attribute__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this, shaderAttributeDef)\n            };\n        }\n        return {\n            [id]: this\n        };\n    }\n    getBuffer() {\n        if (this.state.constant) {\n            return null;\n        }\n        return this.state.externalBuffer || this._buffer;\n    }\n    getValue() {\n        if (this.state.constant) {\n            return this.value;\n        }\n        return [\n            this.getBuffer(),\n            this.getAccessor()\n        ];\n    }\n    getAccessor() {\n        return this.state.bufferAccessor;\n    }\n    getBounds() {\n        if (this.state.bounds) {\n            return this.state.bounds;\n        }\n        let result = null;\n        if (this.state.constant && this.value) {\n            const min = Array.from(this.value);\n            result = [\n                min,\n                min\n            ];\n        } else {\n            const { value, numInstances, size } = this;\n            const len = numInstances * size;\n            if (value && len && value.length >= len) {\n                const min = new Array(size).fill(Infinity);\n                const max = new Array(size).fill(-Infinity);\n                for(let i = 0; i < len;){\n                    for(let j = 0; j < size; j++){\n                        const v = value[i++];\n                        if (v < min[j]) min[j] = v;\n                        if (v > max[j]) max[j] = v;\n                    }\n                }\n                result = [\n                    min,\n                    max\n                ];\n            }\n        }\n        this.state.bounds = result;\n        return result;\n    }\n    setData(data) {\n        const { state } = this;\n        let opts;\n        if (ArrayBuffer.isView(data)) {\n            opts = {\n                value: data\n            };\n        } else if (data instanceof _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) {\n            opts = {\n                buffer: data\n            };\n        } else {\n            opts = data;\n        }\n        const accessor = {\n            ...this.settings,\n            ...opts\n        };\n        state.bufferAccessor = accessor;\n        state.bounds = null;\n        if (opts.constant) {\n            let value = opts.value;\n            value = this._normalizeValue(value, [], 0);\n            if (this.settings.normalized) {\n                value = this.normalizeConstant(value);\n            }\n            const hasChanged = !state.constant || !this._areValuesEqual(value, this.value);\n            if (!hasChanged) {\n                return false;\n            }\n            state.externalBuffer = null;\n            state.constant = true;\n            this.value = value;\n        } else if (opts.buffer) {\n            const buffer = opts.buffer;\n            state.externalBuffer = buffer;\n            state.constant = false;\n            this.value = opts.value || null;\n            const isBuffer64Bit = opts.value instanceof Float64Array;\n            accessor.type = opts.type || buffer.accessor.type;\n            accessor.bytesPerElement = buffer.accessor.BYTES_PER_ELEMENT * (isBuffer64Bit ? 2 : 1);\n            accessor.stride = getStride(accessor);\n        } else if (opts.value) {\n            this._checkExternalBuffer(opts);\n            let value = opts.value;\n            state.externalBuffer = null;\n            state.constant = false;\n            this.value = value;\n            accessor.bytesPerElement = value.BYTES_PER_ELEMENT;\n            accessor.stride = getStride(accessor);\n            const { buffer, byteOffset } = this;\n            if (this.doublePrecision && value instanceof Float64Array) {\n                value = (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_8__.toDoublePrecisionArray)(value, accessor);\n            }\n            const requiredBufferSize = value.byteLength + byteOffset + accessor.stride * 2;\n            if (buffer.byteLength < requiredBufferSize) {\n                buffer.reallocate(requiredBufferSize);\n            }\n            buffer.setAccessor(null);\n            buffer.subData({\n                data: value,\n                offset: byteOffset\n            });\n            accessor.type = opts.type || buffer.accessor.type;\n        }\n        return true;\n    }\n    updateSubBuffer(opts = {}) {\n        this.state.bounds = null;\n        const value = this.value;\n        const { startOffset = 0, endOffset } = opts;\n        this.buffer.subData({\n            data: this.doublePrecision && value instanceof Float64Array ? (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_8__.toDoublePrecisionArray)(value, {\n                size: this.size,\n                startIndex: startOffset,\n                endIndex: endOffset\n            }) : value.subarray(startOffset, endOffset),\n            offset: startOffset * value.BYTES_PER_ELEMENT + this.byteOffset\n        });\n    }\n    allocate(numInstances, copy = false) {\n        const { state } = this;\n        const oldValue = state.allocatedValue;\n        const value = _utils_typed_array_manager__WEBPACK_IMPORTED_MODULE_6__[\"default\"].allocate(oldValue, numInstances + 1, {\n            size: this.size,\n            type: this.settings.defaultType,\n            copy\n        });\n        this.value = value;\n        const { buffer, byteOffset } = this;\n        if (buffer.byteLength < value.byteLength + byteOffset) {\n            buffer.reallocate(value.byteLength + byteOffset);\n            if (copy && oldValue) {\n                buffer.subData({\n                    data: oldValue instanceof Float64Array ? (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_8__.toDoublePrecisionArray)(oldValue, this) : oldValue,\n                    offset: byteOffset\n                });\n            }\n        }\n        state.allocatedValue = value;\n        state.constant = false;\n        state.externalBuffer = null;\n        state.bufferAccessor = this.settings;\n        return true;\n    }\n    _checkExternalBuffer(opts) {\n        const { value } = opts;\n        if (!ArrayBuffer.isView(value)) {\n            throw new Error(\"Attribute \".concat(this.id, \" value is not TypedArray\"));\n        }\n        const ArrayType = this.settings.defaultType;\n        let illegalArrayType = false;\n        if (this.doublePrecision) {\n            illegalArrayType = value.BYTES_PER_ELEMENT < 4;\n        }\n        if (illegalArrayType) {\n            throw new Error(\"Attribute \".concat(this.id, \" does not support \").concat(value.constructor.name));\n        }\n        if (!(value instanceof ArrayType) && this.settings.normalized && !(\"normalized\" in opts)) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_1__[\"default\"].warn(\"Attribute \".concat(this.id, \" is normalized\"))();\n        }\n    }\n    normalizeConstant(value) {\n        switch(this.settings.type){\n            case 5120:\n                return new Float32Array(value).map((x)=>(x + 128) / 255 * 2 - 1);\n            case 5122:\n                return new Float32Array(value).map((x)=>(x + 32768) / 65535 * 2 - 1);\n            case 5121:\n                return new Float32Array(value).map((x)=>x / 255);\n            case 5123:\n                return new Float32Array(value).map((x)=>x / 65535);\n            default:\n                return value;\n        }\n    }\n    _normalizeValue(value, out, start) {\n        const { defaultValue, size } = this.settings;\n        if (Number.isFinite(value)) {\n            out[start] = value;\n            return out;\n        }\n        if (!value) {\n            let i = size;\n            while(--i >= 0){\n                out[start + i] = defaultValue[i];\n            }\n            return out;\n        }\n        switch(size){\n            case 4:\n                out[start + 3] = Number.isFinite(value[3]) ? value[3] : defaultValue[3];\n            case 3:\n                out[start + 2] = Number.isFinite(value[2]) ? value[2] : defaultValue[2];\n            case 2:\n                out[start + 1] = Number.isFinite(value[1]) ? value[1] : defaultValue[1];\n            case 1:\n                out[start + 0] = Number.isFinite(value[0]) ? value[0] : defaultValue[0];\n                break;\n            default:\n                let i = size;\n                while(--i >= 0){\n                    out[start + i] = Number.isFinite(value[i]) ? value[i] : defaultValue[i];\n                }\n        }\n        return out;\n    }\n    _areValuesEqual(value1, value2) {\n        if (!value1 || !value2) {\n            return false;\n        }\n        const { size } = this;\n        for(let i = 0; i < size; i++){\n            if (value1[i] !== value2[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n} //# sourceMappingURL=data-column.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/data-column.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/gl-utils.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/attribute/gl-utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   glArrayFromType: () => (/* binding */ glArrayFromType)\n/* harmony export */ });\nfunction glArrayFromType(glType) {\n    switch(glType){\n        case 5126:\n            return Float32Array;\n        case 5130:\n            return Float64Array;\n        case 5123:\n        case 33635:\n        case 32819:\n        case 32820:\n            return Uint16Array;\n        case 5125:\n            return Uint32Array;\n        case 5121:\n            return Uint8ClampedArray;\n        case 5120:\n            return Int8Array;\n        case 5122:\n            return Int16Array;\n        case 5124:\n            return Int32Array;\n        default:\n            throw new Error(\"Unknown GL type\");\n    }\n} //# sourceMappingURL=gl-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvYXR0cmlidXRlL2dsLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxnQkFBZ0JDLE1BQU07SUFDcEMsT0FBUUE7UUFDTixLQUFLO1lBQ0gsT0FBT0M7UUFFVCxLQUFLO1lBQ0gsT0FBT0M7UUFFVCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT0M7UUFFVCxLQUFLO1lBQ0gsT0FBT0M7UUFFVCxLQUFLO1lBQ0gsT0FBT0M7UUFFVCxLQUFLO1lBQ0gsT0FBT0M7UUFFVCxLQUFLO1lBQ0gsT0FBT0M7UUFFVCxLQUFLO1lBQ0gsT0FBT0M7UUFFVDtZQUNFLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtBQUNGLEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvYXR0cmlidXRlL2dsLXV0aWxzLmpzPzE3YWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdsQXJyYXlGcm9tVHlwZShnbFR5cGUpIHtcbiAgc3dpdGNoIChnbFR5cGUpIHtcbiAgICBjYXNlIDUxMjY6XG4gICAgICByZXR1cm4gRmxvYXQzMkFycmF5O1xuXG4gICAgY2FzZSA1MTMwOlxuICAgICAgcmV0dXJuIEZsb2F0NjRBcnJheTtcblxuICAgIGNhc2UgNTEyMzpcbiAgICBjYXNlIDMzNjM1OlxuICAgIGNhc2UgMzI4MTk6XG4gICAgY2FzZSAzMjgyMDpcbiAgICAgIHJldHVybiBVaW50MTZBcnJheTtcblxuICAgIGNhc2UgNTEyNTpcbiAgICAgIHJldHVybiBVaW50MzJBcnJheTtcblxuICAgIGNhc2UgNTEyMTpcbiAgICAgIHJldHVybiBVaW50OENsYW1wZWRBcnJheTtcblxuICAgIGNhc2UgNTEyMDpcbiAgICAgIHJldHVybiBJbnQ4QXJyYXk7XG5cbiAgICBjYXNlIDUxMjI6XG4gICAgICByZXR1cm4gSW50MTZBcnJheTtcblxuICAgIGNhc2UgNTEyNDpcbiAgICAgIHJldHVybiBJbnQzMkFycmF5O1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBHTCB0eXBlJyk7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsLXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJnbEFycmF5RnJvbVR5cGUiLCJnbFR5cGUiLCJGbG9hdDMyQXJyYXkiLCJGbG9hdDY0QXJyYXkiLCJVaW50MTZBcnJheSIsIlVpbnQzMkFycmF5IiwiVWludDhDbGFtcGVkQXJyYXkiLCJJbnQ4QXJyYXkiLCJJbnQxNkFycmF5IiwiSW50MzJBcnJheSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/gl-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/shader-attribute.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/attribute/shader-attribute.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ShaderAttribute)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nclass ShaderAttribute {\n    constructor(dataColumn, opts){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"opts\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"source\", void 0);\n        this.opts = opts;\n        this.source = dataColumn;\n    }\n    get value() {\n        return this.source.value;\n    }\n    getValue() {\n        const buffer = this.source.getBuffer();\n        const accessor = this.getAccessor();\n        if (buffer) {\n            return [\n                buffer,\n                accessor\n            ];\n        }\n        const { value } = this.source;\n        const { size } = accessor;\n        let constantValue = value;\n        if (value && value.length !== size) {\n            constantValue = new Float32Array(size);\n            const index = accessor.elementOffset || 0;\n            for(let i = 0; i < size; ++i){\n                constantValue[i] = value[index + i];\n            }\n        }\n        return constantValue;\n    }\n    getAccessor() {\n        return {\n            ...this.source.getAccessor(),\n            ...this.opts\n        };\n    }\n} //# sourceMappingURL=shader-attribute.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvYXR0cmlidXRlL3NoYWRlci1hdHRyaWJ1dGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0U7QUFDekQsTUFBTUM7SUFDbkJDLFlBQVlDLFVBQVUsRUFBRUMsSUFBSSxDQUFFO1FBQzVCSixxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxLQUFLO1FBRW5DQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsVUFBVSxLQUFLO1FBRXJDLElBQUksQ0FBQ0ksSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsTUFBTSxHQUFHRjtJQUNoQjtJQUVBLElBQUlHLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQ0QsTUFBTSxDQUFDQyxLQUFLO0lBQzFCO0lBRUFDLFdBQVc7UUFDVCxNQUFNQyxTQUFTLElBQUksQ0FBQ0gsTUFBTSxDQUFDSSxTQUFTO1FBQ3BDLE1BQU1DLFdBQVcsSUFBSSxDQUFDQyxXQUFXO1FBRWpDLElBQUlILFFBQVE7WUFDVixPQUFPO2dCQUFDQTtnQkFBUUU7YUFBUztRQUMzQjtRQUVBLE1BQU0sRUFDSkosS0FBSyxFQUNOLEdBQUcsSUFBSSxDQUFDRCxNQUFNO1FBQ2YsTUFBTSxFQUNKTyxJQUFJLEVBQ0wsR0FBR0Y7UUFDSixJQUFJRyxnQkFBZ0JQO1FBRXBCLElBQUlBLFNBQVNBLE1BQU1RLE1BQU0sS0FBS0YsTUFBTTtZQUNsQ0MsZ0JBQWdCLElBQUlFLGFBQWFIO1lBQ2pDLE1BQU1JLFFBQVFOLFNBQVNPLGFBQWEsSUFBSTtZQUV4QyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSU4sTUFBTSxFQUFFTSxFQUFHO2dCQUM3QkwsYUFBYSxDQUFDSyxFQUFFLEdBQUdaLEtBQUssQ0FBQ1UsUUFBUUUsRUFBRTtZQUNyQztRQUNGO1FBRUEsT0FBT0w7SUFDVDtJQUVBRixjQUFjO1FBQ1osT0FBTztZQUFFLEdBQUcsSUFBSSxDQUFDTixNQUFNLENBQUNNLFdBQVcsRUFBRTtZQUNuQyxHQUFHLElBQUksQ0FBQ1AsSUFBSTtRQUNkO0lBQ0Y7QUFFRixFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vbGliL2F0dHJpYnV0ZS9zaGFkZXItYXR0cmlidXRlLmpzPzUyM2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHlcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNoYWRlckF0dHJpYnV0ZSB7XG4gIGNvbnN0cnVjdG9yKGRhdGFDb2x1bW4sIG9wdHMpIHtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJvcHRzXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJzb3VyY2VcIiwgdm9pZCAwKTtcblxuICAgIHRoaXMub3B0cyA9IG9wdHM7XG4gICAgdGhpcy5zb3VyY2UgPSBkYXRhQ29sdW1uO1xuICB9XG5cbiAgZ2V0IHZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLnNvdXJjZS52YWx1ZTtcbiAgfVxuXG4gIGdldFZhbHVlKCkge1xuICAgIGNvbnN0IGJ1ZmZlciA9IHRoaXMuc291cmNlLmdldEJ1ZmZlcigpO1xuICAgIGNvbnN0IGFjY2Vzc29yID0gdGhpcy5nZXRBY2Nlc3NvcigpO1xuXG4gICAgaWYgKGJ1ZmZlcikge1xuICAgICAgcmV0dXJuIFtidWZmZXIsIGFjY2Vzc29yXTtcbiAgICB9XG5cbiAgICBjb25zdCB7XG4gICAgICB2YWx1ZVxuICAgIH0gPSB0aGlzLnNvdXJjZTtcbiAgICBjb25zdCB7XG4gICAgICBzaXplXG4gICAgfSA9IGFjY2Vzc29yO1xuICAgIGxldCBjb25zdGFudFZhbHVlID0gdmFsdWU7XG5cbiAgICBpZiAodmFsdWUgJiYgdmFsdWUubGVuZ3RoICE9PSBzaXplKSB7XG4gICAgICBjb25zdGFudFZhbHVlID0gbmV3IEZsb2F0MzJBcnJheShzaXplKTtcbiAgICAgIGNvbnN0IGluZGV4ID0gYWNjZXNzb3IuZWxlbWVudE9mZnNldCB8fCAwO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7ICsraSkge1xuICAgICAgICBjb25zdGFudFZhbHVlW2ldID0gdmFsdWVbaW5kZXggKyBpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY29uc3RhbnRWYWx1ZTtcbiAgfVxuXG4gIGdldEFjY2Vzc29yKCkge1xuICAgIHJldHVybiB7IC4uLnRoaXMuc291cmNlLmdldEFjY2Vzc29yKCksXG4gICAgICAuLi50aGlzLm9wdHNcbiAgICB9O1xuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYWRlci1hdHRyaWJ1dGUuanMubWFwIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIlNoYWRlckF0dHJpYnV0ZSIsImNvbnN0cnVjdG9yIiwiZGF0YUNvbHVtbiIsIm9wdHMiLCJzb3VyY2UiLCJ2YWx1ZSIsImdldFZhbHVlIiwiYnVmZmVyIiwiZ2V0QnVmZmVyIiwiYWNjZXNzb3IiLCJnZXRBY2Nlc3NvciIsInNpemUiLCJjb25zdGFudFZhbHVlIiwibGVuZ3RoIiwiRmxvYXQzMkFycmF5IiwiaW5kZXgiLCJlbGVtZW50T2Zmc2V0IiwiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/shader-attribute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js":
/*!********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CompositeLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layer */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../debug */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/index.js\");\n/* harmony import */ var _utils_flatten__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/flatten */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/flatten.js\");\n/* harmony import */ var _lifecycle_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lifecycle/constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js\");\n\n\n\n\n\nconst TRACE_RENDER_LAYERS = \"compositeLayer.renderLayers\";\nclass CompositeLayer extends _layer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get isComposite() {\n        return true;\n    }\n    get isLoaded() {\n        return super.isLoaded && this.getSubLayers().every((layer)=>layer.isLoaded);\n    }\n    getSubLayers() {\n        return this.internalState && this.internalState.subLayers || [];\n    }\n    initializeState(context) {}\n    setState(updateObject) {\n        super.setState(updateObject);\n        this.setNeedsUpdate();\n    }\n    getPickingInfo({ info }) {\n        const { object } = info;\n        const isDataWrapped = object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n        if (!isDataWrapped) {\n            return info;\n        }\n        info.object = object.__source.object;\n        info.index = object.__source.index;\n        return info;\n    }\n    filterSubLayer(context) {\n        return true;\n    }\n    shouldRenderSubLayer(subLayerId, data) {\n        return data && data.length;\n    }\n    getSubLayerClass(subLayerId, DefaultLayerClass) {\n        const { _subLayerProps: overridingProps } = this.props;\n        return overridingProps && overridingProps[subLayerId] && overridingProps[subLayerId].type || DefaultLayerClass;\n    }\n    getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n        row.__source = {\n            parent: this,\n            object: sourceObject,\n            index: sourceObjectIndex\n        };\n        return row;\n    }\n    getSubLayerAccessor(accessor) {\n        if (typeof accessor === \"function\") {\n            const objectInfo = {\n                index: -1,\n                data: this.props.data,\n                target: []\n            };\n            return (x, i)=>{\n                if (x && x.__source) {\n                    objectInfo.index = x.__source.index;\n                    return accessor(x.__source.object, objectInfo);\n                }\n                return accessor(x, i);\n            };\n        }\n        return accessor;\n    }\n    getSubLayerProps(sublayerProps = {}) {\n        var _this$props$updateTri;\n        const { opacity, pickable, visible, parameters, getPolygonOffset, highlightedObjectIndex, autoHighlight, highlightColor, coordinateSystem, coordinateOrigin, wrapLongitude, positionFormat, modelMatrix, extensions, fetch, operation, _subLayerProps: overridingProps } = this.props;\n        const newProps = {\n            id: \"\",\n            updateTriggers: {},\n            opacity,\n            pickable,\n            visible,\n            parameters,\n            getPolygonOffset,\n            highlightedObjectIndex,\n            autoHighlight,\n            highlightColor,\n            coordinateSystem,\n            coordinateOrigin,\n            wrapLongitude,\n            positionFormat,\n            modelMatrix,\n            extensions,\n            fetch,\n            operation\n        };\n        const overridingSublayerProps = overridingProps && sublayerProps.id && overridingProps[sublayerProps.id];\n        const overridingSublayerTriggers = overridingSublayerProps && overridingSublayerProps.updateTriggers;\n        const sublayerId = sublayerProps.id || \"sublayer\";\n        if (overridingSublayerProps) {\n            const propTypes = this.props[_lifecycle_constants__WEBPACK_IMPORTED_MODULE_2__.PROP_TYPES_SYMBOL];\n            const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n            for(const key in overridingSublayerProps){\n                const propType = subLayerPropTypes[key] || propTypes[key];\n                if (propType && propType.type === \"accessor\") {\n                    overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n                }\n            }\n        }\n        Object.assign(newProps, sublayerProps, overridingSublayerProps);\n        newProps.id = \"\".concat(this.props.id, \"-\").concat(sublayerId);\n        newProps.updateTriggers = {\n            all: (_this$props$updateTri = this.props.updateTriggers) === null || _this$props$updateTri === void 0 ? void 0 : _this$props$updateTri.all,\n            ...sublayerProps.updateTriggers,\n            ...overridingSublayerTriggers\n        };\n        for (const extension of extensions){\n            const passThroughProps = extension.getSubLayerProps.call(this, extension);\n            if (passThroughProps) {\n                Object.assign(newProps, passThroughProps, {\n                    updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n                });\n            }\n        }\n        return newProps;\n    }\n    _updateAutoHighlight(info) {\n        for (const layer of this.getSubLayers()){\n            layer.updateAutoHighlight(info);\n        }\n    }\n    _getAttributeManager() {\n        return null;\n    }\n    _postUpdate(updateParams, forceUpdate) {\n        let subLayers = this.internalState.subLayers;\n        const shouldUpdate = !subLayers || this.needsUpdate();\n        if (shouldUpdate) {\n            const subLayersList = this.renderLayers();\n            subLayers = (0,_utils_flatten__WEBPACK_IMPORTED_MODULE_3__.flatten)(subLayersList, Boolean);\n            this.internalState.subLayers = subLayers;\n        }\n        (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n        for (const layer of subLayers){\n            layer.parent = this;\n        }\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(CompositeLayer, \"layerName\", \"CompositeLayer\"); //# sourceMappingURL=composite-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js":
/*!**************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/constants.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COORDINATE_SYSTEM: () => (/* binding */ COORDINATE_SYSTEM),\n/* harmony export */   EVENTS: () => (/* binding */ EVENTS),\n/* harmony export */   OPERATION: () => (/* binding */ OPERATION),\n/* harmony export */   PROJECTION_MODE: () => (/* binding */ PROJECTION_MODE),\n/* harmony export */   UNIT: () => (/* binding */ UNIT)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\nconst COORDINATE_SYSTEM = {\n    DEFAULT: -1,\n    LNGLAT: 1,\n    METER_OFFSETS: 2,\n    LNGLAT_OFFSETS: 3,\n    CARTESIAN: 0\n};\nObject.defineProperty(COORDINATE_SYSTEM, \"IDENTITY\", {\n    get: ()=>{\n        _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deprecated(\"COORDINATE_SYSTEM.IDENTITY\", \"COORDINATE_SYSTEM.CARTESIAN\")();\n        return 0;\n    }\n});\nconst PROJECTION_MODE = {\n    WEB_MERCATOR: 1,\n    GLOBE: 2,\n    WEB_MERCATOR_AUTO_OFFSET: 4,\n    IDENTITY: 0\n};\nconst UNIT = {\n    common: 0,\n    meters: 1,\n    pixels: 2\n};\nconst EVENTS = {\n    click: {\n        handler: \"onClick\"\n    },\n    panstart: {\n        handler: \"onDragStart\"\n    },\n    panmove: {\n        handler: \"onDrag\"\n    },\n    panend: {\n        handler: \"onDragEnd\"\n    }\n};\nconst OPERATION = {\n    DRAW: \"draw\",\n    MASK: \"mask\",\n    TERRAIN: \"terrain\"\n}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQjtBQUN4QixNQUFNQyxvQkFBb0I7SUFDL0JDLFNBQVMsQ0FBQztJQUNWQyxRQUFRO0lBQ1JDLGVBQWU7SUFDZkMsZ0JBQWdCO0lBQ2hCQyxXQUFXO0FBQ2IsRUFBRTtBQUNGQyxPQUFPQyxjQUFjLENBQUNQLG1CQUFtQixZQUFZO0lBQ25EUSxLQUFLO1FBQ0hULGtEQUFHQSxDQUFDVSxVQUFVLENBQUMsOEJBQThCO1FBQzdDLE9BQU87SUFDVDtBQUNGO0FBQ08sTUFBTUMsa0JBQWtCO0lBQzdCQyxjQUFjO0lBQ2RDLE9BQU87SUFDUEMsMEJBQTBCO0lBQzFCQyxVQUFVO0FBQ1osRUFBRTtBQUNLLE1BQU1DLE9BQU87SUFDbEJDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxRQUFRO0FBQ1YsRUFBRTtBQUNLLE1BQU1DLFNBQVM7SUFDcEJDLE9BQU87UUFDTEMsU0FBUztJQUNYO0lBQ0FDLFVBQVU7UUFDUkQsU0FBUztJQUNYO0lBQ0FFLFNBQVM7UUFDUEYsU0FBUztJQUNYO0lBQ0FHLFFBQVE7UUFDTkgsU0FBUztJQUNYO0FBQ0YsRUFBRTtBQUNLLE1BQU1JLFlBQVk7SUFDdkJDLE1BQU07SUFDTkMsTUFBTTtJQUNOQyxTQUFTO0FBQ1gsRUFBRSxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vbGliL2NvbnN0YW50cy5qcz8yYzUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2cgZnJvbSAnLi4vdXRpbHMvbG9nJztcbmV4cG9ydCBjb25zdCBDT09SRElOQVRFX1NZU1RFTSA9IHtcbiAgREVGQVVMVDogLTEsXG4gIExOR0xBVDogMSxcbiAgTUVURVJfT0ZGU0VUUzogMixcbiAgTE5HTEFUX09GRlNFVFM6IDMsXG4gIENBUlRFU0lBTjogMFxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShDT09SRElOQVRFX1NZU1RFTSwgJ0lERU5USVRZJywge1xuICBnZXQ6ICgpID0+IHtcbiAgICBsb2cuZGVwcmVjYXRlZCgnQ09PUkRJTkFURV9TWVNURU0uSURFTlRJVFknLCAnQ09PUkRJTkFURV9TWVNURU0uQ0FSVEVTSUFOJykoKTtcbiAgICByZXR1cm4gMDtcbiAgfVxufSk7XG5leHBvcnQgY29uc3QgUFJPSkVDVElPTl9NT0RFID0ge1xuICBXRUJfTUVSQ0FUT1I6IDEsXG4gIEdMT0JFOiAyLFxuICBXRUJfTUVSQ0FUT1JfQVVUT19PRkZTRVQ6IDQsXG4gIElERU5USVRZOiAwXG59O1xuZXhwb3J0IGNvbnN0IFVOSVQgPSB7XG4gIGNvbW1vbjogMCxcbiAgbWV0ZXJzOiAxLFxuICBwaXhlbHM6IDJcbn07XG5leHBvcnQgY29uc3QgRVZFTlRTID0ge1xuICBjbGljazoge1xuICAgIGhhbmRsZXI6ICdvbkNsaWNrJ1xuICB9LFxuICBwYW5zdGFydDoge1xuICAgIGhhbmRsZXI6ICdvbkRyYWdTdGFydCdcbiAgfSxcbiAgcGFubW92ZToge1xuICAgIGhhbmRsZXI6ICdvbkRyYWcnXG4gIH0sXG4gIHBhbmVuZDoge1xuICAgIGhhbmRsZXI6ICdvbkRyYWdFbmQnXG4gIH1cbn07XG5leHBvcnQgY29uc3QgT1BFUkFUSU9OID0ge1xuICBEUkFXOiAnZHJhdycsXG4gIE1BU0s6ICdtYXNrJyxcbiAgVEVSUkFJTjogJ3RlcnJhaW4nXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJsb2ciLCJDT09SRElOQVRFX1NZU1RFTSIsIkRFRkFVTFQiLCJMTkdMQVQiLCJNRVRFUl9PRkZTRVRTIiwiTE5HTEFUX09GRlNFVFMiLCJDQVJURVNJQU4iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsImRlcHJlY2F0ZWQiLCJQUk9KRUNUSU9OX01PREUiLCJXRUJfTUVSQ0FUT1IiLCJHTE9CRSIsIldFQl9NRVJDQVRPUl9BVVRPX09GRlNFVCIsIklERU5USVRZIiwiVU5JVCIsImNvbW1vbiIsIm1ldGVycyIsInBpeGVscyIsIkVWRU5UUyIsImNsaWNrIiwiaGFuZGxlciIsInBhbnN0YXJ0IiwicGFubW92ZSIsInBhbmVuZCIsIk9QRVJBVElPTiIsIkRSQVciLCJNQVNLIiwiVEVSUkFJTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck-picker.js":
/*!****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/deck-picker.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DeckPicker)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js\");\n/* harmony import */ var _passes_pick_layers_pass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../passes/pick-layers-pass */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/pick-layers-pass.js\");\n/* harmony import */ var _picking_query_object__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./picking/query-object */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/picking/query-object.js\");\n/* harmony import */ var _picking_pick_info__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./picking/pick-info */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/picking/pick-info.js\");\n\n\n\n\n\nclass DeckPicker {\n    constructor(gl){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pickingFBO\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"depthFBO\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pickLayersPass\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"layerFilter\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastPickedInfo\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_pickable\", true);\n        this.gl = gl;\n        this.pickLayersPass = new _passes_pick_layers_pass__WEBPACK_IMPORTED_MODULE_1__[\"default\"](gl);\n        this.lastPickedInfo = {\n            index: -1,\n            layerId: null,\n            info: null\n        };\n    }\n    setProps(props) {\n        if (\"layerFilter\" in props) {\n            this.layerFilter = props.layerFilter;\n        }\n        if (\"_pickable\" in props) {\n            this._pickable = props._pickable;\n        }\n    }\n    finalize() {\n        if (this.pickingFBO) {\n            this.pickingFBO.delete();\n        }\n        if (this.depthFBO) {\n            this.depthFBO.color.delete();\n            this.depthFBO.delete();\n        }\n    }\n    pickObject(opts) {\n        return this._pickClosestObject(opts);\n    }\n    pickObjects(opts) {\n        return this._pickVisibleObjects(opts);\n    }\n    getLastPickedObject({ x, y, layers, viewports }, lastPickedInfo = this.lastPickedInfo.info) {\n        const lastPickedLayerId = lastPickedInfo && lastPickedInfo.layer && lastPickedInfo.layer.id;\n        const lastPickedViewportId = lastPickedInfo && lastPickedInfo.viewport && lastPickedInfo.viewport.id;\n        const layer = lastPickedLayerId ? layers.find((l)=>l.id === lastPickedLayerId) : null;\n        const viewport = lastPickedViewportId && viewports.find((v)=>v.id === lastPickedViewportId) || viewports[0];\n        const coordinate = viewport && viewport.unproject([\n            x - viewport.x,\n            y - viewport.y\n        ]);\n        const info = {\n            x,\n            y,\n            viewport,\n            coordinate,\n            layer\n        };\n        return {\n            ...lastPickedInfo,\n            ...info\n        };\n    }\n    _resizeBuffer() {\n        var _this$pickingFBO, _this$depthFBO;\n        const { gl } = this;\n        if (!this.pickingFBO) {\n            this.pickingFBO = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"](gl);\n            if (_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isSupported(gl, {\n                colorBufferFloat: true\n            })) {\n                const depthFBO = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"](gl);\n                depthFBO.attach({\n                    [36064]: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, {\n                        format: (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_4__.isWebGL2)(gl) ? 34836 : 6408,\n                        type: 5126\n                    })\n                });\n                this.depthFBO = depthFBO;\n            }\n        }\n        (_this$pickingFBO = this.pickingFBO) === null || _this$pickingFBO === void 0 ? void 0 : _this$pickingFBO.resize({\n            width: gl.canvas.width,\n            height: gl.canvas.height\n        });\n        (_this$depthFBO = this.depthFBO) === null || _this$depthFBO === void 0 ? void 0 : _this$depthFBO.resize({\n            width: gl.canvas.width,\n            height: gl.canvas.height\n        });\n    }\n    _getPickable(layers) {\n        if (this._pickable === false) {\n            return null;\n        }\n        const pickableLayers = layers.filter((layer)=>this.pickLayersPass.shouldDrawLayer(layer) && !layer.isComposite);\n        return pickableLayers.length ? pickableLayers : null;\n    }\n    _pickClosestObject({ layers, views, viewports, x, y, radius = 0, depth = 1, mode = \"query\", unproject3D, onViewportActive, effects }) {\n        const pickableLayers = this._getPickable(layers);\n        const pixelRatio = (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_4__.cssToDeviceRatio)(this.gl);\n        if (!pickableLayers) {\n            return {\n                result: [],\n                emptyInfo: (0,_picking_pick_info__WEBPACK_IMPORTED_MODULE_5__.getEmptyPickingInfo)({\n                    viewports,\n                    x,\n                    y,\n                    pixelRatio\n                })\n            };\n        }\n        this._resizeBuffer();\n        const devicePixelRange = (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_4__.cssToDevicePixels)(this.gl, [\n            x,\n            y\n        ], true);\n        const devicePixel = [\n            devicePixelRange.x + Math.floor(devicePixelRange.width / 2),\n            devicePixelRange.y + Math.floor(devicePixelRange.height / 2)\n        ];\n        const deviceRadius = Math.round(radius * pixelRatio);\n        const { width, height } = this.pickingFBO;\n        const deviceRect = this._getPickingRect({\n            deviceX: devicePixel[0],\n            deviceY: devicePixel[1],\n            deviceRadius,\n            deviceWidth: width,\n            deviceHeight: height\n        });\n        const cullRect = {\n            x: x - radius,\n            y: y - radius,\n            width: radius * 2 + 1,\n            height: radius * 2 + 1\n        };\n        let infos;\n        const result = [];\n        const affectedLayers = new Set();\n        for(let i = 0; i < depth; i++){\n            let pickInfo;\n            if (deviceRect) {\n                const pickedResult = this._drawAndSample({\n                    layers: pickableLayers,\n                    views,\n                    viewports,\n                    onViewportActive,\n                    deviceRect,\n                    cullRect,\n                    effects,\n                    pass: \"picking:\".concat(mode)\n                });\n                pickInfo = (0,_picking_query_object__WEBPACK_IMPORTED_MODULE_6__.getClosestObject)({\n                    ...pickedResult,\n                    deviceX: devicePixel[0],\n                    deviceY: devicePixel[1],\n                    deviceRadius,\n                    deviceRect\n                });\n            } else {\n                pickInfo = {\n                    pickedColor: null,\n                    pickedObjectIndex: -1\n                };\n            }\n            let z;\n            if (pickInfo.pickedLayer && unproject3D && this.depthFBO) {\n                const { pickedColors: pickedColors2 } = this._drawAndSample({\n                    layers: [\n                        pickInfo.pickedLayer\n                    ],\n                    views,\n                    viewports,\n                    onViewportActive,\n                    deviceRect: {\n                        x: pickInfo.pickedX,\n                        y: pickInfo.pickedY,\n                        width: 1,\n                        height: 1\n                    },\n                    cullRect,\n                    effects,\n                    pass: \"picking:\".concat(mode, \":z\")\n                }, true);\n                if (pickedColors2[3]) {\n                    z = pickedColors2[0];\n                }\n            }\n            if (pickInfo.pickedLayer && i + 1 < depth) {\n                affectedLayers.add(pickInfo.pickedLayer);\n                pickInfo.pickedLayer.disablePickingIndex(pickInfo.pickedObjectIndex);\n            }\n            infos = (0,_picking_pick_info__WEBPACK_IMPORTED_MODULE_5__.processPickInfo)({\n                pickInfo,\n                lastPickedInfo: this.lastPickedInfo,\n                mode,\n                layers: pickableLayers,\n                viewports,\n                x,\n                y,\n                z,\n                pixelRatio\n            });\n            for (const info of infos.values()){\n                if (info.layer) {\n                    result.push(info);\n                }\n            }\n            if (!pickInfo.pickedColor) {\n                break;\n            }\n        }\n        for (const layer of affectedLayers){\n            layer.restorePickingColors();\n        }\n        return {\n            result,\n            emptyInfo: infos.get(null)\n        };\n    }\n    _pickVisibleObjects({ layers, views, viewports, x, y, width = 1, height = 1, mode = \"query\", maxObjects = null, onViewportActive, effects }) {\n        const pickableLayers = this._getPickable(layers);\n        if (!pickableLayers) {\n            return [];\n        }\n        this._resizeBuffer();\n        const pixelRatio = (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_4__.cssToDeviceRatio)(this.gl);\n        const leftTop = (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_4__.cssToDevicePixels)(this.gl, [\n            x,\n            y\n        ], true);\n        const deviceLeft = leftTop.x;\n        const deviceTop = leftTop.y + leftTop.height;\n        const rightBottom = (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_4__.cssToDevicePixels)(this.gl, [\n            x + width,\n            y + height\n        ], true);\n        const deviceRight = rightBottom.x + rightBottom.width;\n        const deviceBottom = rightBottom.y;\n        const deviceRect = {\n            x: deviceLeft,\n            y: deviceBottom,\n            width: deviceRight - deviceLeft,\n            height: deviceTop - deviceBottom\n        };\n        const pickedResult = this._drawAndSample({\n            layers: pickableLayers,\n            views,\n            viewports,\n            onViewportActive,\n            deviceRect,\n            cullRect: {\n                x,\n                y,\n                width,\n                height\n            },\n            effects,\n            pass: \"picking:\".concat(mode)\n        });\n        const pickInfos = (0,_picking_query_object__WEBPACK_IMPORTED_MODULE_6__.getUniqueObjects)(pickedResult);\n        const uniqueInfos = new Map();\n        const isMaxObjects = Number.isFinite(maxObjects);\n        for(let i = 0; i < pickInfos.length; i++){\n            if (isMaxObjects && maxObjects && uniqueInfos.size >= maxObjects) {\n                break;\n            }\n            const pickInfo = pickInfos[i];\n            let info = {\n                color: pickInfo.pickedColor,\n                layer: null,\n                index: pickInfo.pickedObjectIndex,\n                picked: true,\n                x,\n                y,\n                pixelRatio\n            };\n            info = (0,_picking_pick_info__WEBPACK_IMPORTED_MODULE_5__.getLayerPickingInfo)({\n                layer: pickInfo.pickedLayer,\n                info,\n                mode\n            });\n            if (!uniqueInfos.has(info.object)) {\n                uniqueInfos.set(info.object, info);\n            }\n        }\n        return Array.from(uniqueInfos.values());\n    }\n    _drawAndSample({ layers, views, viewports, onViewportActive, deviceRect, cullRect, effects, pass }, pickZ = false) {\n        const pickingFBO = pickZ ? this.depthFBO : this.pickingFBO;\n        const opts = {\n            layers,\n            layerFilter: this.layerFilter,\n            views,\n            viewports,\n            onViewportActive,\n            pickingFBO,\n            deviceRect,\n            cullRect,\n            effects,\n            pass,\n            pickZ,\n            preRenderStats: {}\n        };\n        for (const effect of effects){\n            if (effect.useInPicking) {\n                opts.preRenderStats[effect.id] = effect.preRender(this.gl, opts);\n            }\n        }\n        const { decodePickingColor } = this.pickLayersPass.render(opts);\n        const { x, y, width, height } = deviceRect;\n        const pickedColors = new (pickZ ? Float32Array : Uint8Array)(width * height * 4);\n        (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_7__.readPixelsToArray)(pickingFBO, {\n            sourceX: x,\n            sourceY: y,\n            sourceWidth: width,\n            sourceHeight: height,\n            target: pickedColors\n        });\n        return {\n            pickedColors,\n            decodePickingColor\n        };\n    }\n    _getPickingRect({ deviceX, deviceY, deviceRadius, deviceWidth, deviceHeight }) {\n        const x = Math.max(0, deviceX - deviceRadius);\n        const y = Math.max(0, deviceY - deviceRadius);\n        const width = Math.min(deviceWidth, deviceX + deviceRadius + 1) - x;\n        const height = Math.min(deviceHeight, deviceY + deviceRadius + 1) - y;\n        if (width <= 0 || height <= 0) {\n            return null;\n        }\n        return {\n            x,\n            y,\n            width,\n            height\n        };\n    }\n} //# sourceMappingURL=deck-picker.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck-picker.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck-renderer.js":
/*!******************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/deck-renderer.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DeckRenderer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../debug */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/index.js\");\n/* harmony import */ var _passes_draw_layers_pass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../passes/draw-layers-pass */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/draw-layers-pass.js\");\n/* harmony import */ var _passes_pick_layers_pass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../passes/pick-layers-pass */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/pick-layers-pass.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n\n\n\n\n\nconst TRACE_RENDER_LAYERS = \"deckRenderer.renderLayers\";\nclass DeckRenderer {\n    constructor(gl){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"layerFilter\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"drawPickingColors\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"drawLayersPass\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pickLayersPass\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"renderCount\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_needsRedraw\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"renderBuffers\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lastPostProcessEffect\", void 0);\n        this.gl = gl;\n        this.layerFilter = null;\n        this.drawPickingColors = false;\n        this.drawLayersPass = new _passes_draw_layers_pass__WEBPACK_IMPORTED_MODULE_1__[\"default\"](gl);\n        this.pickLayersPass = new _passes_pick_layers_pass__WEBPACK_IMPORTED_MODULE_2__[\"default\"](gl);\n        this.renderCount = 0;\n        this._needsRedraw = \"Initial render\";\n        this.renderBuffers = [];\n        this.lastPostProcessEffect = null;\n    }\n    setProps(props) {\n        if (this.layerFilter !== props.layerFilter) {\n            this.layerFilter = props.layerFilter;\n            this._needsRedraw = \"layerFilter changed\";\n        }\n        if (this.drawPickingColors !== props.drawPickingColors) {\n            this.drawPickingColors = props.drawPickingColors;\n            this._needsRedraw = \"drawPickingColors changed\";\n        }\n    }\n    renderLayers(opts) {\n        if (!opts.viewports.length) {\n            return;\n        }\n        const layerPass = this.drawPickingColors ? this.pickLayersPass : this.drawLayersPass;\n        const renderOpts = {\n            layerFilter: this.layerFilter,\n            isPicking: this.drawPickingColors,\n            ...opts,\n            target: opts.target || _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getDefaultFramebuffer(this.gl)\n        };\n        if (renderOpts.effects) {\n            this._preRender(renderOpts.effects, renderOpts);\n        }\n        const outputBuffer = this.lastPostProcessEffect ? this.renderBuffers[0] : renderOpts.target;\n        const renderStats = layerPass.render({\n            ...renderOpts,\n            target: outputBuffer\n        });\n        if (renderOpts.effects) {\n            this._postRender(renderOpts.effects, renderOpts);\n        }\n        this.renderCount++;\n        (0,_debug__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TRACE_RENDER_LAYERS, this, renderStats, opts);\n    }\n    needsRedraw(opts = {\n        clearRedrawFlags: false\n    }) {\n        const redraw = this._needsRedraw;\n        if (opts.clearRedrawFlags) {\n            this._needsRedraw = false;\n        }\n        return redraw;\n    }\n    finalize() {\n        const { renderBuffers } = this;\n        for (const buffer of renderBuffers){\n            buffer.delete();\n        }\n        renderBuffers.length = 0;\n    }\n    _preRender(effects, opts) {\n        this.lastPostProcessEffect = null;\n        opts.preRenderStats = opts.preRenderStats || {};\n        for (const effect of effects){\n            opts.preRenderStats[effect.id] = effect.preRender(this.gl, opts);\n            if (effect.postRender) {\n                this.lastPostProcessEffect = effect.id;\n            }\n        }\n        if (this.lastPostProcessEffect) {\n            this._resizeRenderBuffers();\n        }\n    }\n    _resizeRenderBuffers() {\n        const { renderBuffers } = this;\n        if (renderBuffers.length === 0) {\n            renderBuffers.push(new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.gl), new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.gl));\n        }\n        for (const buffer of renderBuffers){\n            buffer.resize();\n        }\n    }\n    _postRender(effects, opts) {\n        const { renderBuffers } = this;\n        const params = {\n            ...opts,\n            inputBuffer: renderBuffers[0],\n            swapBuffer: renderBuffers[1],\n            target: null\n        };\n        for (const effect of effects){\n            if (effect.postRender) {\n                if (effect.id === this.lastPostProcessEffect) {\n                    params.target = opts.target;\n                    effect.postRender(this.gl, params);\n                    break;\n                }\n                const buffer = effect.postRender(this.gl, params);\n                params.inputBuffer = buffer;\n                params.swapBuffer = buffer === renderBuffers[0] ? renderBuffers[1] : renderBuffers[0];\n            }\n        }\n    }\n} //# sourceMappingURL=deck-renderer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck-renderer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck.js":
/*!*********************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/deck.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Deck)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _layer_manager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./layer-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer-manager.js\");\n/* harmony import */ var _view_manager__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./view-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/view-manager.js\");\n/* harmony import */ var _views_map_view__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../views/map-view */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/views/map-view.js\");\n/* harmony import */ var _effect_manager__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./effect-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/effect-manager.js\");\n/* harmony import */ var _deck_renderer__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./deck-renderer */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck-renderer.js\");\n/* harmony import */ var _deck_picker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./deck-picker */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck-picker.js\");\n/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./tooltip */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/tooltip.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _utils_deep_equal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/deep-equal */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/deep-equal.js\");\n/* harmony import */ var _utils_typed_array_manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/typed-array-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js\");\n/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./init */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/init.js\");\n/* harmony import */ var _probe_gl_env__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @probe.gl/env */ \"(ssr)/./node_modules/@probe.gl/env/dist/esm/lib/get-browser.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/animation-loop.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/animation/timeline.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/init.js\");\n/* harmony import */ var _probe_gl_stats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @probe.gl/stats */ \"(ssr)/./node_modules/@probe.gl/stats/dist/esm/index.js\");\n/* harmony import */ var mjolnir_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mjolnir.js */ \"(ssr)/./node_modules/mjolnir.js/dist/esm/index.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction noop() {}\nconst getCursor = ({ isDragging })=>isDragging ? \"grabbing\" : \"grab\";\nconst defaultProps = {\n    id: \"\",\n    width: \"100%\",\n    height: \"100%\",\n    style: null,\n    viewState: null,\n    initialViewState: null,\n    pickingRadius: 0,\n    layerFilter: null,\n    glOptions: {},\n    parameters: {},\n    parent: null,\n    gl: null,\n    canvas: null,\n    layers: [],\n    effects: [],\n    views: null,\n    controller: null,\n    useDevicePixels: true,\n    touchAction: \"none\",\n    eventRecognizerOptions: {},\n    _framebuffer: null,\n    _animate: false,\n    _pickable: true,\n    _typedArrayManagerProps: {},\n    _customRender: null,\n    onWebGLInitialized: noop,\n    onResize: noop,\n    onViewStateChange: noop,\n    onInteractionStateChange: noop,\n    onBeforeRender: noop,\n    onAfterRender: noop,\n    onLoad: noop,\n    onError: (error)=>_utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(error.message, error.cause)(),\n    onHover: null,\n    onClick: null,\n    onDragStart: null,\n    onDrag: null,\n    onDragEnd: null,\n    _onMetrics: null,\n    getCursor,\n    getTooltip: null,\n    debug: false,\n    drawPickingColors: false\n};\nclass Deck {\n    constructor(props){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"props\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"width\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"height\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"userData\", {});\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"canvas\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewManager\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"layerManager\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"effectManager\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"deckRenderer\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"deckPicker\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"eventManager\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"tooltip\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"metrics\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"animationLoop\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"stats\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewState\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"cursorState\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_needsRedraw\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_pickRequest\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_lastPointerDownInfo\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_metricsCounter\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_onPointerMove\", (event)=>{\n            const { _pickRequest } = this;\n            if (event.type === \"pointerleave\") {\n                _pickRequest.x = -1;\n                _pickRequest.y = -1;\n                _pickRequest.radius = 0;\n            } else if (event.leftButton || event.rightButton) {\n                return;\n            } else {\n                const pos = event.offsetCenter;\n                if (!pos) {\n                    return;\n                }\n                _pickRequest.x = pos.x;\n                _pickRequest.y = pos.y;\n                _pickRequest.radius = this.props.pickingRadius;\n            }\n            if (this.layerManager) {\n                this.layerManager.context.mousePosition = {\n                    x: _pickRequest.x,\n                    y: _pickRequest.y\n                };\n            }\n            _pickRequest.event = event;\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_onEvent\", (event)=>{\n            const eventOptions = _constants__WEBPACK_IMPORTED_MODULE_4__.EVENTS[event.type];\n            const pos = event.offsetCenter;\n            if (!eventOptions || !pos || !this.layerManager) {\n                return;\n            }\n            const layers = this.layerManager.getLayers();\n            const info = this.deckPicker.getLastPickedObject({\n                x: pos.x,\n                y: pos.y,\n                layers,\n                viewports: this.getViewports(pos)\n            }, this._lastPointerDownInfo);\n            const { layer } = info;\n            const layerHandler = layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n            const rootHandler = this.props[eventOptions.handler];\n            let handled = false;\n            if (layerHandler) {\n                handled = layerHandler.call(layer, info, event);\n            }\n            if (!handled && rootHandler) {\n                rootHandler(info, event);\n            }\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_onPointerDown\", (event)=>{\n            const pos = event.offsetCenter;\n            const pickedInfo = this._pick(\"pickObject\", \"pickObject Time\", {\n                x: pos.x,\n                y: pos.y,\n                radius: this.props.pickingRadius\n            });\n            this._lastPointerDownInfo = pickedInfo.result[0] || pickedInfo.emptyInfo;\n        });\n        this.props = {\n            ...defaultProps,\n            ...props\n        };\n        props = this.props;\n        this._needsRedraw = \"Initial render\";\n        this._pickRequest = {\n            mode: \"hover\",\n            x: -1,\n            y: -1,\n            radius: 0,\n            event: null\n        };\n        this.cursorState = {\n            isHovering: false,\n            isDragging: false\n        };\n        if (props.viewState && props.initialViewState) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn(\"View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.\")();\n        }\n        if ((0,_probe_gl_env__WEBPACK_IMPORTED_MODULE_5__[\"default\"])() === \"IE\") {\n            _utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn(\"IE 11 is not supported\")();\n        }\n        this.viewState = props.initialViewState;\n        if (!props.gl) {\n            if (typeof document !== \"undefined\") {\n                this.canvas = this._createCanvas(props);\n            }\n        }\n        this.animationLoop = this._createAnimationLoop(props);\n        this.stats = new _probe_gl_stats__WEBPACK_IMPORTED_MODULE_1__.Stats({\n            id: \"deck.gl\"\n        });\n        this.metrics = {\n            fps: 0,\n            setPropsTime: 0,\n            updateAttributesTime: 0,\n            framesRedrawn: 0,\n            pickTime: 0,\n            pickCount: 0,\n            gpuTime: 0,\n            gpuTimePerFrame: 0,\n            cpuTime: 0,\n            cpuTimePerFrame: 0,\n            bufferMemory: 0,\n            textureMemory: 0,\n            renderbufferMemory: 0,\n            gpuMemory: 0\n        };\n        this._metricsCounter = 0;\n        this.setProps(props);\n        if (props._typedArrayManagerProps) {\n            _utils_typed_array_manager__WEBPACK_IMPORTED_MODULE_6__[\"default\"].setOptions(props._typedArrayManagerProps);\n        }\n        this.animationLoop.start();\n    }\n    finalize() {\n        var _this$animationLoop, _this$layerManager, _this$viewManager, _this$effectManager, _this$deckRenderer, _this$deckPicker, _this$eventManager, _this$tooltip;\n        (_this$animationLoop = this.animationLoop) === null || _this$animationLoop === void 0 ? void 0 : _this$animationLoop.stop();\n        this.animationLoop = null;\n        this._lastPointerDownInfo = null;\n        (_this$layerManager = this.layerManager) === null || _this$layerManager === void 0 ? void 0 : _this$layerManager.finalize();\n        this.layerManager = null;\n        (_this$viewManager = this.viewManager) === null || _this$viewManager === void 0 ? void 0 : _this$viewManager.finalize();\n        this.viewManager = null;\n        (_this$effectManager = this.effectManager) === null || _this$effectManager === void 0 ? void 0 : _this$effectManager.finalize();\n        this.effectManager = null;\n        (_this$deckRenderer = this.deckRenderer) === null || _this$deckRenderer === void 0 ? void 0 : _this$deckRenderer.finalize();\n        this.deckRenderer = null;\n        (_this$deckPicker = this.deckPicker) === null || _this$deckPicker === void 0 ? void 0 : _this$deckPicker.finalize();\n        this.deckPicker = null;\n        (_this$eventManager = this.eventManager) === null || _this$eventManager === void 0 ? void 0 : _this$eventManager.destroy();\n        this.eventManager = null;\n        (_this$tooltip = this.tooltip) === null || _this$tooltip === void 0 ? void 0 : _this$tooltip.remove();\n        this.tooltip = null;\n        if (!this.props.canvas && !this.props.gl && this.canvas) {\n            var _this$canvas$parentEl;\n            (_this$canvas$parentEl = this.canvas.parentElement) === null || _this$canvas$parentEl === void 0 ? void 0 : _this$canvas$parentEl.removeChild(this.canvas);\n            this.canvas = null;\n        }\n    }\n    setProps(props) {\n        this.stats.get(\"setProps Time\").timeStart();\n        if (\"onLayerHover\" in props) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].removed(\"onLayerHover\", \"onHover\")();\n        }\n        if (\"onLayerClick\" in props) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].removed(\"onLayerClick\", \"onClick\")();\n        }\n        if (props.initialViewState && !(0,_utils_deep_equal__WEBPACK_IMPORTED_MODULE_7__.deepEqual)(this.props.initialViewState, props.initialViewState, 3)) {\n            this.viewState = props.initialViewState;\n        }\n        Object.assign(this.props, props);\n        this._setCanvasSize(this.props);\n        const resolvedProps = Object.create(this.props);\n        Object.assign(resolvedProps, {\n            views: this._getViews(),\n            width: this.width,\n            height: this.height,\n            viewState: this._getViewState()\n        });\n        this.animationLoop.setProps(resolvedProps);\n        if (this.layerManager) {\n            this.viewManager.setProps(resolvedProps);\n            this.layerManager.activateViewport(this.getViewports()[0]);\n            this.layerManager.setProps(resolvedProps);\n            this.effectManager.setProps(resolvedProps);\n            this.deckRenderer.setProps(resolvedProps);\n            this.deckPicker.setProps(resolvedProps);\n        }\n        this.stats.get(\"setProps Time\").timeEnd();\n    }\n    needsRedraw(opts = {\n        clearRedrawFlags: false\n    }) {\n        if (!this.layerManager) {\n            return false;\n        }\n        if (this.props._animate) {\n            return \"Deck._animate\";\n        }\n        let redraw = this._needsRedraw;\n        if (opts.clearRedrawFlags) {\n            this._needsRedraw = false;\n        }\n        const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n        const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n        const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n        const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n        redraw = redraw || viewManagerNeedsRedraw || layerManagerNeedsRedraw || effectManagerNeedsRedraw || deckRendererNeedsRedraw;\n        return redraw;\n    }\n    redraw(reason) {\n        if (!this.layerManager) {\n            return;\n        }\n        let redrawReason = this.needsRedraw({\n            clearRedrawFlags: true\n        });\n        redrawReason = reason || redrawReason;\n        if (!redrawReason) {\n            return;\n        }\n        this.stats.get(\"Redraw Count\").incrementCount();\n        if (this.props._customRender) {\n            this.props._customRender(redrawReason);\n        } else {\n            this._drawLayers(redrawReason);\n        }\n    }\n    get isInitialized() {\n        return this.viewManager !== null;\n    }\n    getViews() {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(this.viewManager);\n        return this.viewManager.views;\n    }\n    getViewports(rect) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(this.viewManager);\n        return this.viewManager.getViewports(rect);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    pickObject(opts) {\n        const infos = this._pick(\"pickObject\", \"pickObject Time\", opts).result;\n        return infos.length ? infos[0] : null;\n    }\n    pickMultipleObjects(opts) {\n        opts.depth = opts.depth || 10;\n        return this._pick(\"pickObject\", \"pickMultipleObjects Time\", opts).result;\n    }\n    pickObjects(opts) {\n        return this._pick(\"pickObjects\", \"pickObjects Time\", opts);\n    }\n    _addResources(resources, forceUpdate = false) {\n        for(const id in resources){\n            this.layerManager.resourceManager.add({\n                resourceId: id,\n                data: resources[id],\n                forceUpdate\n            });\n        }\n    }\n    _removeResources(resourceIds) {\n        for (const id of resourceIds){\n            this.layerManager.resourceManager.remove(id);\n        }\n    }\n    _addDefaultEffect(effect) {\n        this.effectManager.addDefaultEffect(effect);\n    }\n    _pick(method, statKey, opts) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(this.deckPicker);\n        const { stats } = this;\n        stats.get(\"Pick Count\").incrementCount();\n        stats.get(statKey).timeStart();\n        const infos = this.deckPicker[method]({\n            layers: this.layerManager.getLayers(opts),\n            views: this.viewManager.getViews(),\n            viewports: this.getViewports(opts),\n            onViewportActive: this.layerManager.activateViewport,\n            effects: this.effectManager.getEffects(),\n            ...opts\n        });\n        stats.get(statKey).timeEnd();\n        return infos;\n    }\n    _createCanvas(props) {\n        let canvas = props.canvas;\n        if (typeof canvas === \"string\") {\n            canvas = document.getElementById(canvas);\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(canvas);\n        }\n        if (!canvas) {\n            canvas = document.createElement(\"canvas\");\n            canvas.id = props.id || \"deckgl-overlay\";\n            const parent = props.parent || document.body;\n            parent.appendChild(canvas);\n        }\n        Object.assign(canvas.style, props.style);\n        return canvas;\n    }\n    _setCanvasSize(props) {\n        if (!this.canvas) {\n            return;\n        }\n        const { width, height } = props;\n        if (width || width === 0) {\n            const cssWidth = Number.isFinite(width) ? \"\".concat(width, \"px\") : width;\n            this.canvas.style.width = cssWidth;\n        }\n        if (height || height === 0) {\n            var _props$style;\n            const cssHeight = Number.isFinite(height) ? \"\".concat(height, \"px\") : height;\n            this.canvas.style.position = ((_props$style = props.style) === null || _props$style === void 0 ? void 0 : _props$style.position) || \"absolute\";\n            this.canvas.style.height = cssHeight;\n        }\n    }\n    _updateCanvasSize() {\n        var _canvas$clientWidth, _canvas$clientHeight;\n        const { canvas } = this;\n        if (!canvas) {\n            return;\n        }\n        const newWidth = (_canvas$clientWidth = canvas.clientWidth) !== null && _canvas$clientWidth !== void 0 ? _canvas$clientWidth : canvas.width;\n        const newHeight = (_canvas$clientHeight = canvas.clientHeight) !== null && _canvas$clientHeight !== void 0 ? _canvas$clientHeight : canvas.height;\n        if (newWidth !== this.width || newHeight !== this.height) {\n            var _this$viewManager2, _this$layerManager2;\n            this.width = newWidth;\n            this.height = newHeight;\n            (_this$viewManager2 = this.viewManager) === null || _this$viewManager2 === void 0 ? void 0 : _this$viewManager2.setProps({\n                width: newWidth,\n                height: newHeight\n            });\n            (_this$layerManager2 = this.layerManager) === null || _this$layerManager2 === void 0 ? void 0 : _this$layerManager2.activateViewport(this.getViewports()[0]);\n            this.props.onResize({\n                width: newWidth,\n                height: newHeight\n            });\n        }\n    }\n    _createAnimationLoop(props) {\n        const { width, height, gl, glOptions, debug, onError, onBeforeRender, onAfterRender, useDevicePixels } = props;\n        return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n            width,\n            height,\n            useDevicePixels,\n            autoResizeDrawingBuffer: !gl,\n            autoResizeViewport: false,\n            gl,\n            onCreateContext: (opts)=>(0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_10__.createGLContext)({\n                    ...glOptions,\n                    ...opts,\n                    canvas: this.canvas,\n                    debug,\n                    onContextLost: ()=>this._onContextLost()\n                }),\n            onInitialize: (context)=>this._setGLContext(context.gl),\n            onRender: this._onRenderFrame.bind(this),\n            onBeforeRender,\n            onAfterRender,\n            onError\n        });\n    }\n    _getViewState() {\n        return this.props.viewState || this.viewState;\n    }\n    _getViews() {\n        let views = this.props.views || [\n            new _views_map_view__WEBPACK_IMPORTED_MODULE_11__[\"default\"]({\n                id: \"default-view\"\n            })\n        ];\n        views = Array.isArray(views) ? views : [\n            views\n        ];\n        if (views.length && this.props.controller) {\n            views[0].props.controller = this.props.controller;\n        }\n        return views;\n    }\n    _onContextLost() {\n        const { onError } = this.props;\n        if (this.animationLoop && onError) {\n            onError(new Error(\"WebGL context is lost\"));\n        }\n    }\n    _pickAndCallback() {\n        const { _pickRequest } = this;\n        if (_pickRequest.event) {\n            const { result, emptyInfo } = this._pick(\"pickObject\", \"pickObject Time\", _pickRequest);\n            this.cursorState.isHovering = result.length > 0;\n            let pickedInfo = emptyInfo;\n            let handled = false;\n            for (const info of result){\n                var _info$layer;\n                pickedInfo = info;\n                handled = ((_info$layer = info.layer) === null || _info$layer === void 0 ? void 0 : _info$layer.onHover(info, _pickRequest.event)) || handled;\n            }\n            if (!handled && this.props.onHover) {\n                this.props.onHover(pickedInfo, _pickRequest.event);\n            }\n            if (this.props.getTooltip && this.tooltip) {\n                const displayInfo = this.props.getTooltip(pickedInfo);\n                this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n            }\n            _pickRequest.event = null;\n        }\n    }\n    _updateCursor() {\n        const container = this.props.parent || this.canvas;\n        if (container) {\n            container.style.cursor = this.props.getCursor(this.cursorState);\n        }\n    }\n    _setGLContext(gl) {\n        if (this.layerManager) {\n            return;\n        }\n        if (!this.canvas) {\n            this.canvas = gl.canvas;\n            (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_10__.instrumentGLContext)(gl, {\n                enable: true,\n                copyState: true\n            });\n        }\n        this.tooltip = new _tooltip__WEBPACK_IMPORTED_MODULE_12__[\"default\"](this.canvas);\n        (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_10__.setParameters)(gl, {\n            blend: true,\n            blendFunc: [\n                770,\n                771,\n                1,\n                771\n            ],\n            polygonOffsetFill: true,\n            depthTest: true,\n            depthFunc: 515\n        });\n        this.props.onWebGLInitialized(gl);\n        const timeline = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_13__.Timeline();\n        timeline.play();\n        this.animationLoop.attachTimeline(timeline);\n        this.eventManager = new mjolnir_js__WEBPACK_IMPORTED_MODULE_2__.EventManager(this.props.parent || gl.canvas, {\n            touchAction: this.props.touchAction,\n            recognizerOptions: this.props.eventRecognizerOptions,\n            events: {\n                pointerdown: this._onPointerDown,\n                pointermove: this._onPointerMove,\n                pointerleave: this._onPointerMove\n            }\n        });\n        for(const eventType in _constants__WEBPACK_IMPORTED_MODULE_4__.EVENTS){\n            this.eventManager.on(eventType, this._onEvent);\n        }\n        this.viewManager = new _view_manager__WEBPACK_IMPORTED_MODULE_14__[\"default\"]({\n            timeline,\n            eventManager: this.eventManager,\n            onViewStateChange: this._onViewStateChange.bind(this),\n            onInteractionStateChange: this._onInteractionStateChange.bind(this),\n            views: this._getViews(),\n            viewState: this._getViewState(),\n            width: this.width,\n            height: this.height\n        });\n        const viewport = this.viewManager.getViewports()[0];\n        this.layerManager = new _layer_manager__WEBPACK_IMPORTED_MODULE_15__[\"default\"](gl, {\n            deck: this,\n            stats: this.stats,\n            viewport,\n            timeline\n        });\n        this.effectManager = new _effect_manager__WEBPACK_IMPORTED_MODULE_16__[\"default\"]();\n        this.deckRenderer = new _deck_renderer__WEBPACK_IMPORTED_MODULE_17__[\"default\"](gl);\n        this.deckPicker = new _deck_picker__WEBPACK_IMPORTED_MODULE_18__[\"default\"](gl);\n        this.setProps(this.props);\n        this._updateCanvasSize();\n        this.props.onLoad();\n    }\n    _drawLayers(redrawReason, renderOptions) {\n        const { gl } = this.layerManager.context;\n        (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_10__.setParameters)(gl, this.props.parameters);\n        this.props.onBeforeRender({\n            gl\n        });\n        this.deckRenderer.renderLayers({\n            target: this.props._framebuffer,\n            layers: this.layerManager.getLayers(),\n            viewports: this.viewManager.getViewports(),\n            onViewportActive: this.layerManager.activateViewport,\n            views: this.viewManager.getViews(),\n            pass: \"screen\",\n            effects: this.effectManager.getEffects(),\n            ...renderOptions\n        });\n        this.props.onAfterRender({\n            gl\n        });\n    }\n    _onRenderFrame(animationProps) {\n        this._getFrameStats();\n        if (this._metricsCounter++ % 60 === 0) {\n            this._getMetrics();\n            this.stats.reset();\n            _utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].table(4, this.metrics)();\n            if (this.props._onMetrics) {\n                this.props._onMetrics(this.metrics);\n            }\n        }\n        this._updateCanvasSize();\n        this._updateCursor();\n        if (this.tooltip.isVisible && this.viewManager.needsRedraw()) {\n            this.tooltip.setTooltip(null);\n        }\n        this.layerManager.updateLayers();\n        this._pickAndCallback();\n        this.redraw();\n        if (this.viewManager) {\n            this.viewManager.updateViewStates();\n        }\n    }\n    _onViewStateChange(params) {\n        const viewState = this.props.onViewStateChange(params) || params.viewState;\n        if (this.viewState) {\n            this.viewState = {\n                ...this.viewState,\n                [params.viewId]: viewState\n            };\n            if (!this.props.viewState) {\n                if (this.viewManager) {\n                    this.viewManager.setProps({\n                        viewState: this.viewState\n                    });\n                }\n            }\n        }\n    }\n    _onInteractionStateChange(interactionState) {\n        this.cursorState.isDragging = interactionState.isDragging || false;\n        this.props.onInteractionStateChange(interactionState);\n    }\n    _getFrameStats() {\n        const { stats } = this;\n        stats.get(\"frameRate\").timeEnd();\n        stats.get(\"frameRate\").timeStart();\n        const animationLoopStats = this.animationLoop.stats;\n        stats.get(\"GPU Time\").addTime(animationLoopStats.get(\"GPU Time\").lastTiming);\n        stats.get(\"CPU Time\").addTime(animationLoopStats.get(\"CPU Time\").lastTiming);\n    }\n    _getMetrics() {\n        const { metrics, stats } = this;\n        metrics.fps = stats.get(\"frameRate\").getHz();\n        metrics.setPropsTime = stats.get(\"setProps Time\").time;\n        metrics.updateAttributesTime = stats.get(\"Update Attributes\").time;\n        metrics.framesRedrawn = stats.get(\"Redraw Count\").count;\n        metrics.pickTime = stats.get(\"pickObject Time\").time + stats.get(\"pickMultipleObjects Time\").time + stats.get(\"pickObjects Time\").time;\n        metrics.pickCount = stats.get(\"Pick Count\").count;\n        metrics.gpuTime = stats.get(\"GPU Time\").time;\n        metrics.cpuTime = stats.get(\"CPU Time\").time;\n        metrics.gpuTimePerFrame = stats.get(\"GPU Time\").getAverageTime();\n        metrics.cpuTimePerFrame = stats.get(\"CPU Time\").getAverageTime();\n        const memoryStats = _luma_gl_core__WEBPACK_IMPORTED_MODULE_19__.lumaStats.get(\"Memory Usage\");\n        metrics.bufferMemory = memoryStats.get(\"Buffer Memory\").count;\n        metrics.textureMemory = memoryStats.get(\"Texture Memory\").count;\n        metrics.renderbufferMemory = memoryStats.get(\"Renderbuffer Memory\").count;\n        metrics.gpuMemory = memoryStats.get(\"GPU Memory\").count;\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Deck, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Deck, \"VERSION\", _init__WEBPACK_IMPORTED_MODULE_20__.VERSION); //# sourceMappingURL=deck.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/effect-manager.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/effect-manager.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EffectManager)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utils_deep_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/deep-equal */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/deep-equal.js\");\n/* harmony import */ var _effects_lighting_lighting_effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../effects/lighting/lighting-effect */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/effects/lighting/lighting-effect.js\");\n\n\n\nconst DEFAULT_LIGHTING_EFFECT = new _effects_lighting_lighting_effect__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\nfunction compareEffects(e1, e2) {\n    var _e1$order, _e2$order;\n    const o1 = (_e1$order = e1.order) !== null && _e1$order !== void 0 ? _e1$order : Infinity;\n    const o2 = (_e2$order = e2.order) !== null && _e2$order !== void 0 ? _e2$order : Infinity;\n    return o1 - o2;\n}\nclass EffectManager {\n    constructor(){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"effects\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_resolvedEffects\", []);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_defaultEffects\", []);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_needsRedraw\", void 0);\n        this.effects = [];\n        this._needsRedraw = \"Initial render\";\n        this._setEffects([]);\n    }\n    addDefaultEffect(effect) {\n        const defaultEffects = this._defaultEffects;\n        if (!defaultEffects.find((e)=>e.id === effect.id)) {\n            const index = defaultEffects.findIndex((e)=>compareEffects(e, effect) > 0);\n            if (index < 0) {\n                defaultEffects.push(effect);\n            } else {\n                defaultEffects.splice(index, 0, effect);\n            }\n            this._setEffects(this.effects);\n        }\n    }\n    setProps(props) {\n        if (\"effects\" in props) {\n            if (!(0,_utils_deep_equal__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(props.effects, this.effects, 1)) {\n                this._setEffects(props.effects);\n            }\n        }\n    }\n    needsRedraw(opts = {\n        clearRedrawFlags: false\n    }) {\n        const redraw = this._needsRedraw;\n        if (opts.clearRedrawFlags) {\n            this._needsRedraw = false;\n        }\n        return redraw;\n    }\n    getEffects() {\n        return this._resolvedEffects;\n    }\n    _setEffects(effects) {\n        const oldEffectsMap = {};\n        for (const effect of this.effects){\n            oldEffectsMap[effect.id] = effect;\n        }\n        const nextEffects = [];\n        for (const effect of effects){\n            const oldEffect = oldEffectsMap[effect.id];\n            if (oldEffect && oldEffect !== effect) {\n                if (oldEffect.setProps) {\n                    oldEffect.setProps(effect.props);\n                    nextEffects.push(oldEffect);\n                } else {\n                    oldEffect.cleanup();\n                    nextEffects.push(effect);\n                }\n            } else {\n                nextEffects.push(effect);\n            }\n            delete oldEffectsMap[effect.id];\n        }\n        for(const removedEffectId in oldEffectsMap){\n            oldEffectsMap[removedEffectId].cleanup();\n        }\n        this.effects = nextEffects;\n        this._resolvedEffects = nextEffects.concat(this._defaultEffects);\n        if (!effects.some((effect)=>effect instanceof _effects_lighting_lighting_effect__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n            this._resolvedEffects.push(DEFAULT_LIGHTING_EFFECT);\n        }\n        this._needsRedraw = \"effects changed\";\n    }\n    finalize() {\n        for (const effect of this._resolvedEffects){\n            effect.cleanup();\n        }\n        this.effects.length = 0;\n        this._resolvedEffects.length = 0;\n        this._defaultEffects.length = 0;\n    }\n} //# sourceMappingURL=effect-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/effect-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/init.js":
/*!*********************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/init.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\n/* harmony import */ var _loaders_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @loaders.gl/core */ \"(ssr)/./node_modules/@loaders.gl/core/dist/esm/lib/api/register-loaders.js\");\n/* harmony import */ var _loaders_gl_images__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @loaders.gl/images */ \"(ssr)/./node_modules/@loaders.gl/images/dist/esm/image-loader.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/index.js\");\n/* harmony import */ var _utils_json_loader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/json-loader */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/json-loader.js\");\n\n\n\n\n\nfunction checkVersion() {\n    const version =  true ? \"8.9.32\" : 0;\n    const existingVersion = globalThis.deck && globalThis.deck.VERSION;\n    if (existingVersion && existingVersion !== version) {\n        throw new Error(\"deck.gl - multiple versions detected: \".concat(existingVersion, \" vs \").concat(version));\n    }\n    if (!existingVersion) {\n        _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(1, \"deck.gl \".concat(version))();\n        globalThis.deck = {\n            ...globalThis.deck,\n            VERSION: version,\n            version,\n            log: _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n            _registerLoggers: _debug__WEBPACK_IMPORTED_MODULE_1__.register\n        };\n        (0,_loaders_gl_core__WEBPACK_IMPORTED_MODULE_2__.registerLoaders)([\n            _utils_json_loader__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n            [\n                _loaders_gl_images__WEBPACK_IMPORTED_MODULE_4__.ImageLoader,\n                {\n                    imagebitmap: {\n                        premultiplyAlpha: \"none\"\n                    }\n                }\n            ]\n        ]);\n    }\n    return version;\n}\nconst VERSION = checkVersion(); //# sourceMappingURL=init.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvaW5pdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBbUQ7QUFDRjtBQUNsQjtBQUNLO0FBQ1U7QUFFOUMsU0FBU0s7SUFDUCxNQUFNQyxVQUFVLEtBQW9CLEdBQWMsV0FBV0MsQ0FBMkI7SUFDeEYsTUFBTUUsa0JBQWtCRixXQUFXRyxJQUFJLElBQUlILFdBQVdHLElBQUksQ0FBQ0MsT0FBTztJQUVsRSxJQUFJRixtQkFBbUJBLG9CQUFvQkgsU0FBUztRQUNsRCxNQUFNLElBQUlNLE1BQU0seUNBQXlDQyxNQUFNLENBQUNKLGlCQUFpQixRQUFRSSxNQUFNLENBQUNQO0lBQ2xHO0lBRUEsSUFBSSxDQUFDRyxpQkFBaUI7UUFDcEJQLGtEQUFHQSxDQUFDQSxHQUFHLENBQUMsR0FBRyxXQUFXVyxNQUFNLENBQUNQO1FBQzdCQyxXQUFXRyxJQUFJLEdBQUc7WUFBRSxHQUFHSCxXQUFXRyxJQUFJO1lBQ3BDQyxTQUFTTDtZQUNUQTtZQUNBSixHQUFHQSxvREFBQUE7WUFDSFksa0JBQWtCWCw0Q0FBUUE7UUFDNUI7UUFDQUgsaUVBQWVBLENBQUM7WUFBQ0ksMERBQVVBO1lBQUU7Z0JBQUNILDJEQUFXQTtnQkFBRTtvQkFDekNjLGFBQWE7d0JBQ1hDLGtCQUFrQjtvQkFDcEI7Z0JBQ0Y7YUFBRTtTQUFDO0lBQ0w7SUFFQSxPQUFPVjtBQUNUO0FBRU8sTUFBTUssVUFBVU4sZUFBZSxDQUN0QyxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL2xpYi9pbml0LmpzP2VlY2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVnaXN0ZXJMb2FkZXJzIH0gZnJvbSAnQGxvYWRlcnMuZ2wvY29yZSc7XG5pbXBvcnQgeyBJbWFnZUxvYWRlciB9IGZyb20gJ0Bsb2FkZXJzLmdsL2ltYWdlcyc7XG5pbXBvcnQgbG9nIGZyb20gJy4uL3V0aWxzL2xvZyc7XG5pbXBvcnQgeyByZWdpc3RlciB9IGZyb20gJy4uL2RlYnVnJztcbmltcG9ydCBqc29uTG9hZGVyIGZyb20gJy4uL3V0aWxzL2pzb24tbG9hZGVyJztcblxuZnVuY3Rpb24gY2hlY2tWZXJzaW9uKCkge1xuICBjb25zdCB2ZXJzaW9uID0gdHlwZW9mIFwiOC45LjMyXCIgIT09ICd1bmRlZmluZWQnID8gXCI4LjkuMzJcIiA6IGdsb2JhbFRoaXMuREVDS19WRVJTSU9OIHx8ICd1bnRyYW5zcGlsZWQgc291cmNlJztcbiAgY29uc3QgZXhpc3RpbmdWZXJzaW9uID0gZ2xvYmFsVGhpcy5kZWNrICYmIGdsb2JhbFRoaXMuZGVjay5WRVJTSU9OO1xuXG4gIGlmIChleGlzdGluZ1ZlcnNpb24gJiYgZXhpc3RpbmdWZXJzaW9uICE9PSB2ZXJzaW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZGVjay5nbCAtIG11bHRpcGxlIHZlcnNpb25zIGRldGVjdGVkOiBcIi5jb25jYXQoZXhpc3RpbmdWZXJzaW9uLCBcIiB2cyBcIikuY29uY2F0KHZlcnNpb24pKTtcbiAgfVxuXG4gIGlmICghZXhpc3RpbmdWZXJzaW9uKSB7XG4gICAgbG9nLmxvZygxLCBcImRlY2suZ2wgXCIuY29uY2F0KHZlcnNpb24pKSgpO1xuICAgIGdsb2JhbFRoaXMuZGVjayA9IHsgLi4uZ2xvYmFsVGhpcy5kZWNrLFxuICAgICAgVkVSU0lPTjogdmVyc2lvbixcbiAgICAgIHZlcnNpb24sXG4gICAgICBsb2csXG4gICAgICBfcmVnaXN0ZXJMb2dnZXJzOiByZWdpc3RlclxuICAgIH07XG4gICAgcmVnaXN0ZXJMb2FkZXJzKFtqc29uTG9hZGVyLCBbSW1hZ2VMb2FkZXIsIHtcbiAgICAgIGltYWdlYml0bWFwOiB7XG4gICAgICAgIHByZW11bHRpcGx5QWxwaGE6ICdub25lJ1xuICAgICAgfVxuICAgIH1dXSk7XG4gIH1cblxuICByZXR1cm4gdmVyc2lvbjtcbn1cblxuZXhwb3J0IGNvbnN0IFZFUlNJT04gPSBjaGVja1ZlcnNpb24oKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluaXQuanMubWFwIl0sIm5hbWVzIjpbInJlZ2lzdGVyTG9hZGVycyIsIkltYWdlTG9hZGVyIiwibG9nIiwicmVnaXN0ZXIiLCJqc29uTG9hZGVyIiwiY2hlY2tWZXJzaW9uIiwidmVyc2lvbiIsImdsb2JhbFRoaXMiLCJERUNLX1ZFUlNJT04iLCJleGlzdGluZ1ZlcnNpb24iLCJkZWNrIiwiVkVSU0lPTiIsIkVycm9yIiwiY29uY2F0IiwiX3JlZ2lzdGVyTG9nZ2VycyIsImltYWdlYml0bWFwIiwicHJlbXVsdGlwbHlBbHBoYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/init.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer-manager.js":
/*!******************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/layer-manager.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LayerManager)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/animation/timeline.js\");\n/* harmony import */ var _lifecycle_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../lifecycle/constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../debug */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/index.js\");\n/* harmony import */ var _utils_flatten__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/flatten */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/flatten.js\");\n/* harmony import */ var _probe_gl_stats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @probe.gl/stats */ \"(ssr)/./node_modules/@probe.gl/stats/dist/esm/index.js\");\n/* harmony import */ var _resource_resource_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resource/resource-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/resource/resource-manager.js\");\n/* harmony import */ var _viewports_viewport__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../viewports/viewport */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/viewport.js\");\n/* harmony import */ var _shaderlib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shaderlib */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/index.js\");\n\n\n\n\n\n\n\n\n\n\nconst TRACE_SET_LAYERS = \"layerManager.setLayers\";\nconst TRACE_ACTIVATE_VIEWPORT = \"layerManager.activateViewport\";\nclass LayerManager {\n    constructor(gl, { deck, stats, viewport: _viewport, timeline } = {}){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"layers\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"context\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"resourceManager\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_lastRenderedLayers\", []);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_needsRedraw\", false);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_needsUpdate\", false);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_nextLayers\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_debug\", false);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"activateViewport\", (viewport)=>{\n            (0,_debug__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(TRACE_ACTIVATE_VIEWPORT, this, viewport);\n            if (viewport) {\n                this.context.viewport = viewport;\n            }\n        });\n        this.layers = [];\n        this.resourceManager = new _resource_resource_manager__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n            gl,\n            protocol: \"deck://\"\n        });\n        this.context = {\n            mousePosition: null,\n            userData: {},\n            layerManager: this,\n            gl,\n            deck,\n            programManager: gl && (0,_shaderlib__WEBPACK_IMPORTED_MODULE_4__.createProgramManager)(gl),\n            stats: stats || new _probe_gl_stats__WEBPACK_IMPORTED_MODULE_1__.Stats({\n                id: \"deck.gl\"\n            }),\n            viewport: _viewport || new _viewports_viewport__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n                id: \"DEFAULT-INITIAL-VIEWPORT\"\n            }),\n            timeline: timeline || new _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__.Timeline(),\n            resourceManager: this.resourceManager,\n            onError: undefined\n        };\n        Object.seal(this);\n    }\n    finalize() {\n        this.resourceManager.finalize();\n        for (const layer of this.layers){\n            this._finalizeLayer(layer);\n        }\n    }\n    needsRedraw(opts = {\n        clearRedrawFlags: false\n    }) {\n        let redraw = this._needsRedraw;\n        if (opts.clearRedrawFlags) {\n            this._needsRedraw = false;\n        }\n        for (const layer of this.layers){\n            const layerNeedsRedraw = layer.getNeedsRedraw(opts);\n            redraw = redraw || layerNeedsRedraw;\n        }\n        return redraw;\n    }\n    needsUpdate() {\n        if (this._nextLayers && this._nextLayers !== this._lastRenderedLayers) {\n            return \"layers changed\";\n        }\n        return this._needsUpdate;\n    }\n    setNeedsRedraw(reason) {\n        this._needsRedraw = this._needsRedraw || reason;\n    }\n    setNeedsUpdate(reason) {\n        this._needsUpdate = this._needsUpdate || reason;\n    }\n    getLayers({ layerIds } = {}) {\n        return layerIds ? this.layers.filter((layer)=>layerIds.find((layerId)=>layer.id.indexOf(layerId) === 0)) : this.layers;\n    }\n    setProps(props) {\n        if (\"debug\" in props) {\n            this._debug = props.debug;\n        }\n        if (\"userData\" in props) {\n            this.context.userData = props.userData;\n        }\n        if (\"layers\" in props) {\n            this._nextLayers = props.layers;\n        }\n        if (\"onError\" in props) {\n            this.context.onError = props.onError;\n        }\n    }\n    setLayers(newLayers, reason) {\n        (0,_debug__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(TRACE_SET_LAYERS, this, reason, newLayers);\n        this._lastRenderedLayers = newLayers;\n        const flatLayers = (0,_utils_flatten__WEBPACK_IMPORTED_MODULE_7__.flatten)(newLayers, Boolean);\n        for (const layer of flatLayers){\n            layer.context = this.context;\n        }\n        this._updateLayers(this.layers, flatLayers);\n    }\n    updateLayers() {\n        const reason = this.needsUpdate();\n        if (reason) {\n            this.setNeedsRedraw(\"updating layers: \".concat(reason));\n            this.setLayers(this._nextLayers || this._lastRenderedLayers, reason);\n        }\n        this._nextLayers = null;\n    }\n    _handleError(stage, error, layer) {\n        layer.raiseError(error, \"\".concat(stage, \" of \").concat(layer));\n    }\n    _updateLayers(oldLayers, newLayers) {\n        const oldLayerMap = {};\n        for (const oldLayer of oldLayers){\n            if (oldLayerMap[oldLayer.id]) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_8__[\"default\"].warn(\"Multiple old layers with same id \".concat(oldLayer.id))();\n            } else {\n                oldLayerMap[oldLayer.id] = oldLayer;\n            }\n        }\n        const generatedLayers = [];\n        this._updateSublayersRecursively(newLayers, oldLayerMap, generatedLayers);\n        this._finalizeOldLayers(oldLayerMap);\n        let needsUpdate = false;\n        for (const layer of generatedLayers){\n            if (layer.hasUniformTransition()) {\n                needsUpdate = \"Uniform transition in \".concat(layer);\n                break;\n            }\n        }\n        this._needsUpdate = needsUpdate;\n        this.layers = generatedLayers;\n    }\n    _updateSublayersRecursively(newLayers, oldLayerMap, generatedLayers) {\n        for (const newLayer of newLayers){\n            newLayer.context = this.context;\n            const oldLayer = oldLayerMap[newLayer.id];\n            if (oldLayer === null) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_8__[\"default\"].warn(\"Multiple new layers with same id \".concat(newLayer.id))();\n            }\n            oldLayerMap[newLayer.id] = null;\n            let sublayers = null;\n            try {\n                if (this._debug && oldLayer !== newLayer) {\n                    newLayer.validateProps();\n                }\n                if (!oldLayer) {\n                    this._initializeLayer(newLayer);\n                } else {\n                    this._transferLayerState(oldLayer, newLayer);\n                    this._updateLayer(newLayer);\n                }\n                generatedLayers.push(newLayer);\n                sublayers = newLayer.isComposite ? newLayer.getSubLayers() : null;\n            } catch (err) {\n                this._handleError(\"matching\", err, newLayer);\n            }\n            if (sublayers) {\n                this._updateSublayersRecursively(sublayers, oldLayerMap, generatedLayers);\n            }\n        }\n    }\n    _finalizeOldLayers(oldLayerMap) {\n        for(const layerId in oldLayerMap){\n            const layer = oldLayerMap[layerId];\n            if (layer) {\n                this._finalizeLayer(layer);\n            }\n        }\n    }\n    _initializeLayer(layer) {\n        try {\n            layer._initialize();\n            layer.lifecycle = _lifecycle_constants__WEBPACK_IMPORTED_MODULE_9__.LIFECYCLE.INITIALIZED;\n        } catch (err) {\n            this._handleError(\"initialization\", err, layer);\n        }\n    }\n    _transferLayerState(oldLayer, newLayer) {\n        newLayer._transferState(oldLayer);\n        newLayer.lifecycle = _lifecycle_constants__WEBPACK_IMPORTED_MODULE_9__.LIFECYCLE.MATCHED;\n        if (newLayer !== oldLayer) {\n            oldLayer.lifecycle = _lifecycle_constants__WEBPACK_IMPORTED_MODULE_9__.LIFECYCLE.AWAITING_GC;\n        }\n    }\n    _updateLayer(layer) {\n        try {\n            layer._update();\n        } catch (err) {\n            this._handleError(\"update\", err, layer);\n        }\n    }\n    _finalizeLayer(layer) {\n        this._needsRedraw = this._needsRedraw || \"finalized \".concat(layer);\n        layer.lifecycle = _lifecycle_constants__WEBPACK_IMPORTED_MODULE_9__.LIFECYCLE.AWAITING_FINALIZATION;\n        try {\n            layer._finalize();\n            layer.lifecycle = _lifecycle_constants__WEBPACK_IMPORTED_MODULE_9__.LIFECYCLE.FINALIZED;\n        } catch (err) {\n            this._handleError(\"finalization\", err, layer);\n        }\n    }\n} //# sourceMappingURL=layer-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer-state.js":
/*!****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/layer-state.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LayerState)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _lifecycle_component_state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lifecycle/component-state */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/component-state.js\");\n\n\nclass LayerState extends _lifecycle_component_state__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor({ attributeManager, layer }){\n        super(layer);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attributeManager\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"needsRedraw\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"needsUpdate\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"subLayers\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"usesPickingColorCache\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"hasPickingBuffer\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"changeFlags\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewport\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"uniformTransitions\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"propsInTransition\", void 0);\n        this.attributeManager = attributeManager;\n        this.needsRedraw = true;\n        this.needsUpdate = true;\n        this.subLayers = null;\n        this.usesPickingColorCache = false;\n    }\n    get layer() {\n        return this.component;\n    }\n    _fetch(propName, url) {\n        const layer = this.layer;\n        const fetch = layer === null || layer === void 0 ? void 0 : layer.props.fetch;\n        if (fetch) {\n            return fetch(url, {\n                propName,\n                layer\n            });\n        }\n        return super._fetch(propName, url);\n    }\n    _onResolve(propName, value) {\n        const layer = this.layer;\n        if (layer) {\n            const onDataLoad = layer.props.onDataLoad;\n            if (propName === \"data\" && onDataLoad) {\n                onDataLoad(value, {\n                    propName,\n                    layer\n                });\n            }\n        }\n    }\n    _onError(propName, error) {\n        const layer = this.layer;\n        if (layer) {\n            layer.raiseError(error, \"loading \".concat(propName, \" of \").concat(this.layer));\n        }\n    }\n} //# sourceMappingURL=layer-state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvbGF5ZXItc3RhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdFO0FBQ2Q7QUFDM0MsTUFBTUUsbUJBQW1CRCxrRUFBY0E7SUFDcERFLFlBQVksRUFDVkMsZ0JBQWdCLEVBQ2hCQyxLQUFLLEVBQ04sQ0FBRTtRQUNELEtBQUssQ0FBQ0E7UUFFTkwscUZBQWVBLENBQUMsSUFBSSxFQUFFLG9CQUFvQixLQUFLO1FBRS9DQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsZUFBZSxLQUFLO1FBRTFDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsZUFBZSxLQUFLO1FBRTFDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsYUFBYSxLQUFLO1FBRXhDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUseUJBQXlCLEtBQUs7UUFFcERBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxvQkFBb0IsS0FBSztRQUUvQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGVBQWUsS0FBSztRQUUxQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFlBQVksS0FBSztRQUV2Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLHNCQUFzQixLQUFLO1FBRWpEQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUscUJBQXFCLEtBQUs7UUFFaEQsSUFBSSxDQUFDSSxnQkFBZ0IsR0FBR0E7UUFDeEIsSUFBSSxDQUFDRSxXQUFXLEdBQUc7UUFDbkIsSUFBSSxDQUFDQyxXQUFXLEdBQUc7UUFDbkIsSUFBSSxDQUFDQyxTQUFTLEdBQUc7UUFDakIsSUFBSSxDQUFDQyxxQkFBcUIsR0FBRztJQUMvQjtJQUVBLElBQUlKLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQ0ssU0FBUztJQUN2QjtJQUVBQyxPQUFPQyxRQUFRLEVBQUVDLEdBQUcsRUFBRTtRQUNwQixNQUFNUixRQUFRLElBQUksQ0FBQ0EsS0FBSztRQUN4QixNQUFNUyxRQUFRVCxVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTVUsS0FBSyxDQUFDRCxLQUFLO1FBRTdFLElBQUlBLE9BQU87WUFDVCxPQUFPQSxNQUFNRCxLQUFLO2dCQUNoQkQ7Z0JBQ0FQO1lBQ0Y7UUFDRjtRQUVBLE9BQU8sS0FBSyxDQUFDTSxPQUFPQyxVQUFVQztJQUNoQztJQUVBRyxXQUFXSixRQUFRLEVBQUVLLEtBQUssRUFBRTtRQUMxQixNQUFNWixRQUFRLElBQUksQ0FBQ0EsS0FBSztRQUV4QixJQUFJQSxPQUFPO1lBQ1QsTUFBTWEsYUFBYWIsTUFBTVUsS0FBSyxDQUFDRyxVQUFVO1lBRXpDLElBQUlOLGFBQWEsVUFBVU0sWUFBWTtnQkFDckNBLFdBQVdELE9BQU87b0JBQ2hCTDtvQkFDQVA7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7SUFFQWMsU0FBU1AsUUFBUSxFQUFFUSxLQUFLLEVBQUU7UUFDeEIsTUFBTWYsUUFBUSxJQUFJLENBQUNBLEtBQUs7UUFFeEIsSUFBSUEsT0FBTztZQUNUQSxNQUFNZ0IsVUFBVSxDQUFDRCxPQUFPLFdBQVdFLE1BQU0sQ0FBQ1YsVUFBVSxRQUFRVSxNQUFNLENBQUMsSUFBSSxDQUFDakIsS0FBSztRQUMvRTtJQUNGO0FBRUYsRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL2xpYi9sYXllci1zdGF0ZS5qcz85MzllIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgQ29tcG9uZW50U3RhdGUgZnJvbSAnLi4vbGlmZWN5Y2xlL2NvbXBvbmVudC1zdGF0ZSc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMYXllclN0YXRlIGV4dGVuZHMgQ29tcG9uZW50U3RhdGUge1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgYXR0cmlidXRlTWFuYWdlcixcbiAgICBsYXllclxuICB9KSB7XG4gICAgc3VwZXIobGF5ZXIpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiYXR0cmlidXRlTWFuYWdlclwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwibmVlZHNSZWRyYXdcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5lZWRzVXBkYXRlXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJzdWJMYXllcnNcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInVzZXNQaWNraW5nQ29sb3JDYWNoZVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaGFzUGlja2luZ0J1ZmZlclwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiY2hhbmdlRmxhZ3NcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInZpZXdwb3J0XCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJ1bmlmb3JtVHJhbnNpdGlvbnNcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInByb3BzSW5UcmFuc2l0aW9uXCIsIHZvaWQgMCk7XG5cbiAgICB0aGlzLmF0dHJpYnV0ZU1hbmFnZXIgPSBhdHRyaWJ1dGVNYW5hZ2VyO1xuICAgIHRoaXMubmVlZHNSZWRyYXcgPSB0cnVlO1xuICAgIHRoaXMubmVlZHNVcGRhdGUgPSB0cnVlO1xuICAgIHRoaXMuc3ViTGF5ZXJzID0gbnVsbDtcbiAgICB0aGlzLnVzZXNQaWNraW5nQ29sb3JDYWNoZSA9IGZhbHNlO1xuICB9XG5cbiAgZ2V0IGxheWVyKCkge1xuICAgIHJldHVybiB0aGlzLmNvbXBvbmVudDtcbiAgfVxuXG4gIF9mZXRjaChwcm9wTmFtZSwgdXJsKSB7XG4gICAgY29uc3QgbGF5ZXIgPSB0aGlzLmxheWVyO1xuICAgIGNvbnN0IGZldGNoID0gbGF5ZXIgPT09IG51bGwgfHwgbGF5ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGxheWVyLnByb3BzLmZldGNoO1xuXG4gICAgaWYgKGZldGNoKSB7XG4gICAgICByZXR1cm4gZmV0Y2godXJsLCB7XG4gICAgICAgIHByb3BOYW1lLFxuICAgICAgICBsYXllclxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN1cGVyLl9mZXRjaChwcm9wTmFtZSwgdXJsKTtcbiAgfVxuXG4gIF9vblJlc29sdmUocHJvcE5hbWUsIHZhbHVlKSB7XG4gICAgY29uc3QgbGF5ZXIgPSB0aGlzLmxheWVyO1xuXG4gICAgaWYgKGxheWVyKSB7XG4gICAgICBjb25zdCBvbkRhdGFMb2FkID0gbGF5ZXIucHJvcHMub25EYXRhTG9hZDtcblxuICAgICAgaWYgKHByb3BOYW1lID09PSAnZGF0YScgJiYgb25EYXRhTG9hZCkge1xuICAgICAgICBvbkRhdGFMb2FkKHZhbHVlLCB7XG4gICAgICAgICAgcHJvcE5hbWUsXG4gICAgICAgICAgbGF5ZXJcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgX29uRXJyb3IocHJvcE5hbWUsIGVycm9yKSB7XG4gICAgY29uc3QgbGF5ZXIgPSB0aGlzLmxheWVyO1xuXG4gICAgaWYgKGxheWVyKSB7XG4gICAgICBsYXllci5yYWlzZUVycm9yKGVycm9yLCBcImxvYWRpbmcgXCIuY29uY2F0KHByb3BOYW1lLCBcIiBvZiBcIikuY29uY2F0KHRoaXMubGF5ZXIpKTtcbiAgICB9XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGF5ZXItc3RhdGUuanMubWFwIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIkNvbXBvbmVudFN0YXRlIiwiTGF5ZXJTdGF0ZSIsImNvbnN0cnVjdG9yIiwiYXR0cmlidXRlTWFuYWdlciIsImxheWVyIiwibmVlZHNSZWRyYXciLCJuZWVkc1VwZGF0ZSIsInN1YkxheWVycyIsInVzZXNQaWNraW5nQ29sb3JDYWNoZSIsImNvbXBvbmVudCIsIl9mZXRjaCIsInByb3BOYW1lIiwidXJsIiwiZmV0Y2giLCJwcm9wcyIsIl9vblJlc29sdmUiLCJ2YWx1ZSIsIm9uRGF0YUxvYWQiLCJfb25FcnJvciIsImVycm9yIiwicmFpc2VFcnJvciIsImNvbmNhdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer-state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js":
/*!**********************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/layer.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Layer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _attribute_attribute_manager__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./attribute/attribute-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-manager.js\");\n/* harmony import */ var _uniform_transition_manager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./uniform-transition-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/uniform-transition-manager.js\");\n/* harmony import */ var _lifecycle_props__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../lifecycle/props */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/props.js\");\n/* harmony import */ var _lifecycle_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lifecycle/constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js\");\n/* harmony import */ var _utils_count__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/count */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/count.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../debug */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/debug/index.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js\");\n/* harmony import */ var _utils_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/memoize */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/memoize.js\");\n/* harmony import */ var _utils_shader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/shader */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/shader.js\");\n/* harmony import */ var _shaderlib_project_project_functions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shaderlib/project/project-functions */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project-functions.js\");\n/* harmony import */ var _utils_typed_array_manager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/typed-array-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js\");\n/* harmony import */ var _lifecycle_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lifecycle/component */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/component.js\");\n/* harmony import */ var _layer_state__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./layer-state */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer-state.js\");\n/* harmony import */ var _math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/web-mercator */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/index.js\");\n/* harmony import */ var _loaders_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @loaders.gl/core */ \"(ssr)/./node_modules/@loaders.gl/core/dist/esm/lib/api/load.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst TRACE_CHANGE_FLAG = \"layer.changeFlag\";\nconst TRACE_INITIALIZE = \"layer.initialize\";\nconst TRACE_UPDATE = \"layer.update\";\nconst TRACE_FINALIZE = \"layer.finalize\";\nconst TRACE_MATCHED = \"layer.matched\";\nconst MAX_PICKING_COLOR_CACHE_SIZE = 2 ** 24 - 1;\nconst EMPTY_ARRAY = Object.freeze([]);\nconst areViewportsEqual = (0,_utils_memoize__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(({ oldViewport, viewport })=>{\n    return oldViewport.equals(viewport);\n});\nlet pickingColorCache = new Uint8ClampedArray(0);\nconst defaultProps = {\n    data: {\n        type: \"data\",\n        value: EMPTY_ARRAY,\n        async: true\n    },\n    dataComparator: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    _dataDiff: {\n        type: \"function\",\n        value: (data)=>data && data.__diff,\n        optional: true\n    },\n    dataTransform: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    onDataLoad: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    onError: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    fetch: {\n        type: \"function\",\n        value: (url, { propName, layer, loaders, loadOptions, signal })=>{\n            const { resourceManager } = layer.context;\n            loadOptions = loadOptions || layer.getLoadOptions();\n            loaders = loaders || layer.props.loaders;\n            if (signal) {\n                var _loadOptions;\n                loadOptions = {\n                    ...loadOptions,\n                    fetch: {\n                        ...(_loadOptions = loadOptions) === null || _loadOptions === void 0 ? void 0 : _loadOptions.fetch,\n                        signal\n                    }\n                };\n            }\n            let inResourceManager = resourceManager.contains(url);\n            if (!inResourceManager && !loadOptions) {\n                resourceManager.add({\n                    resourceId: url,\n                    data: (0,_loaders_gl_core__WEBPACK_IMPORTED_MODULE_3__.load)(url, loaders),\n                    persistent: false\n                });\n                inResourceManager = true;\n            }\n            if (inResourceManager) {\n                return resourceManager.subscribe({\n                    resourceId: url,\n                    onChange: (data)=>{\n                        var _layer$internalState;\n                        return (_layer$internalState = layer.internalState) === null || _layer$internalState === void 0 ? void 0 : _layer$internalState.reloadAsyncProp(propName, data);\n                    },\n                    consumerId: layer.id,\n                    requestId: propName\n                });\n            }\n            return (0,_loaders_gl_core__WEBPACK_IMPORTED_MODULE_3__.load)(url, loaders, loadOptions);\n        }\n    },\n    updateTriggers: {},\n    visible: true,\n    pickable: false,\n    opacity: {\n        type: \"number\",\n        min: 0,\n        max: 1,\n        value: 1\n    },\n    operation: \"draw\",\n    onHover: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    onClick: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    onDragStart: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    onDrag: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    onDragEnd: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    coordinateSystem: _constants__WEBPACK_IMPORTED_MODULE_4__.COORDINATE_SYSTEM.DEFAULT,\n    coordinateOrigin: {\n        type: \"array\",\n        value: [\n            0,\n            0,\n            0\n        ],\n        compare: true\n    },\n    modelMatrix: {\n        type: \"array\",\n        value: null,\n        compare: true,\n        optional: true\n    },\n    wrapLongitude: false,\n    positionFormat: \"XYZ\",\n    colorFormat: \"RGBA\",\n    parameters: {\n        type: \"object\",\n        value: {},\n        optional: true,\n        compare: 2\n    },\n    loadOptions: {\n        type: \"object\",\n        value: null,\n        optional: true,\n        ignore: true\n    },\n    transitions: null,\n    extensions: [],\n    loaders: {\n        type: \"array\",\n        value: [],\n        optional: true,\n        ignore: true\n    },\n    getPolygonOffset: {\n        type: \"function\",\n        value: ({ layerIndex })=>[\n                0,\n                -layerIndex * 100\n            ]\n    },\n    highlightedObjectIndex: null,\n    autoHighlight: false,\n    highlightColor: {\n        type: \"accessor\",\n        value: [\n            0,\n            0,\n            128,\n            128\n        ]\n    }\n};\nclass Layer extends _lifecycle_component__WEBPACK_IMPORTED_MODULE_5__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"internalState\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"lifecycle\", _lifecycle_constants__WEBPACK_IMPORTED_MODULE_6__.LIFECYCLE.NO_STATE);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"context\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"parent\", null);\n    }\n    static get componentName() {\n        return Object.prototype.hasOwnProperty.call(this, \"layerName\") ? this.layerName : \"\";\n    }\n    get root() {\n        let layer = this;\n        while(layer.parent){\n            layer = layer.parent;\n        }\n        return layer;\n    }\n    toString() {\n        const className = this.constructor.layerName || this.constructor.name;\n        return \"\".concat(className, \"({id: '\").concat(this.props.id, \"'})\");\n    }\n    project(xyz) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this.internalState);\n        const viewport = this.internalState.viewport || this.context.viewport;\n        const worldPosition = (0,_shaderlib_project_project_functions__WEBPACK_IMPORTED_MODULE_8__.getWorldPosition)(xyz, {\n            viewport,\n            modelMatrix: this.props.modelMatrix,\n            coordinateOrigin: this.props.coordinateOrigin,\n            coordinateSystem: this.props.coordinateSystem\n        });\n        const [x, y, z] = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.worldToPixels)(worldPosition, viewport.pixelProjectionMatrix);\n        return xyz.length === 2 ? [\n            x,\n            y\n        ] : [\n            x,\n            y,\n            z\n        ];\n    }\n    unproject(xy) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this.internalState);\n        const viewport = this.internalState.viewport || this.context.viewport;\n        return viewport.unproject(xy);\n    }\n    projectPosition(xyz, params) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this.internalState);\n        const viewport = this.internalState.viewport || this.context.viewport;\n        return (0,_shaderlib_project_project_functions__WEBPACK_IMPORTED_MODULE_8__.projectPosition)(xyz, {\n            viewport,\n            modelMatrix: this.props.modelMatrix,\n            coordinateOrigin: this.props.coordinateOrigin,\n            coordinateSystem: this.props.coordinateSystem,\n            ...params\n        });\n    }\n    get isComposite() {\n        return false;\n    }\n    setState(partialState) {\n        this.setChangeFlags({\n            stateChanged: true\n        });\n        Object.assign(this.state, partialState);\n        this.setNeedsRedraw();\n    }\n    setNeedsRedraw() {\n        if (this.internalState) {\n            this.internalState.needsRedraw = true;\n        }\n    }\n    setNeedsUpdate() {\n        if (this.internalState) {\n            this.context.layerManager.setNeedsUpdate(String(this));\n            this.internalState.needsUpdate = true;\n        }\n    }\n    get isLoaded() {\n        return this.internalState ? !this.internalState.isAsyncPropLoading() : false;\n    }\n    get wrapLongitude() {\n        return this.props.wrapLongitude;\n    }\n    isPickable() {\n        return this.props.pickable && this.props.visible;\n    }\n    getModels() {\n        return this.state && (this.state.models || this.state.model && [\n            this.state.model\n        ]) || [];\n    }\n    setModuleParameters(moduleParameters) {\n        for (const model of this.getModels()){\n            model.updateModuleSettings(moduleParameters);\n        }\n    }\n    getAttributeManager() {\n        return this.internalState && this.internalState.attributeManager;\n    }\n    getCurrentLayer() {\n        return this.internalState && this.internalState.layer;\n    }\n    getLoadOptions() {\n        return this.props.loadOptions;\n    }\n    use64bitPositions() {\n        const { coordinateSystem } = this.props;\n        return coordinateSystem === _constants__WEBPACK_IMPORTED_MODULE_4__.COORDINATE_SYSTEM.DEFAULT || coordinateSystem === _constants__WEBPACK_IMPORTED_MODULE_4__.COORDINATE_SYSTEM.LNGLAT || coordinateSystem === _constants__WEBPACK_IMPORTED_MODULE_4__.COORDINATE_SYSTEM.CARTESIAN;\n    }\n    onHover(info, pickingEvent) {\n        if (this.props.onHover) {\n            return this.props.onHover(info, pickingEvent) || false;\n        }\n        return false;\n    }\n    onClick(info, pickingEvent) {\n        if (this.props.onClick) {\n            return this.props.onClick(info, pickingEvent) || false;\n        }\n        return false;\n    }\n    nullPickingColor() {\n        return [\n            0,\n            0,\n            0\n        ];\n    }\n    encodePickingColor(i, target = []) {\n        target[0] = i + 1 & 255;\n        target[1] = i + 1 >> 8 & 255;\n        target[2] = i + 1 >> 8 >> 8 & 255;\n        return target;\n    }\n    decodePickingColor(color) {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(color instanceof Uint8Array);\n        const [i1, i2, i3] = color;\n        const index = i1 + i2 * 256 + i3 * 65536 - 1;\n        return index;\n    }\n    getNumInstances() {\n        if (Number.isFinite(this.props.numInstances)) {\n            return this.props.numInstances;\n        }\n        if (this.state && this.state.numInstances !== undefined) {\n            return this.state.numInstances;\n        }\n        return (0,_utils_count__WEBPACK_IMPORTED_MODULE_9__.count)(this.props.data);\n    }\n    getStartIndices() {\n        if (this.props.startIndices) {\n            return this.props.startIndices;\n        }\n        if (this.state && this.state.startIndices) {\n            return this.state.startIndices;\n        }\n        return null;\n    }\n    getBounds() {\n        var _this$getAttributeMan;\n        return (_this$getAttributeMan = this.getAttributeManager()) === null || _this$getAttributeMan === void 0 ? void 0 : _this$getAttributeMan.getBounds([\n            \"positions\",\n            \"instancePositions\"\n        ]);\n    }\n    getShaders(shaders) {\n        for (const extension of this.props.extensions){\n            shaders = (0,_utils_shader__WEBPACK_IMPORTED_MODULE_10__.mergeShaders)(shaders, extension.getShaders.call(this, extension));\n        }\n        return shaders;\n    }\n    shouldUpdateState(params) {\n        return params.changeFlags.propsOrDataChanged;\n    }\n    updateState(params) {\n        const attributeManager = this.getAttributeManager();\n        const { dataChanged } = params.changeFlags;\n        if (dataChanged && attributeManager) {\n            if (Array.isArray(dataChanged)) {\n                for (const dataRange of dataChanged){\n                    attributeManager.invalidateAll(dataRange);\n                }\n            } else {\n                attributeManager.invalidateAll();\n            }\n        }\n        if (attributeManager) {\n            const { props } = params;\n            const hasPickingBuffer = this.internalState.hasPickingBuffer;\n            const needsPickingBuffer = Number.isInteger(props.highlightedObjectIndex) || props.pickable || props.extensions.some((extension)=>extension.getNeedsPickingBuffer.call(this, extension));\n            if (hasPickingBuffer !== needsPickingBuffer) {\n                this.internalState.hasPickingBuffer = needsPickingBuffer;\n                const { pickingColors, instancePickingColors } = attributeManager.attributes;\n                const pickingColorsAttribute = pickingColors || instancePickingColors;\n                if (pickingColorsAttribute) {\n                    if (needsPickingBuffer && pickingColorsAttribute.constant) {\n                        pickingColorsAttribute.constant = false;\n                        attributeManager.invalidate(pickingColorsAttribute.id);\n                    }\n                    if (!pickingColorsAttribute.value && !needsPickingBuffer) {\n                        pickingColorsAttribute.constant = true;\n                        pickingColorsAttribute.value = [\n                            0,\n                            0,\n                            0\n                        ];\n                    }\n                }\n            }\n        }\n    }\n    finalizeState(context) {\n        for (const model of this.getModels()){\n            model.delete();\n        }\n        const attributeManager = this.getAttributeManager();\n        if (attributeManager) {\n            attributeManager.finalize();\n        }\n        if (this.context) {\n            this.context.resourceManager.unsubscribe({\n                consumerId: this.id\n            });\n        }\n        if (this.internalState) {\n            this.internalState.uniformTransitions.clear();\n            this.internalState.finalize();\n        }\n    }\n    draw(opts) {\n        for (const model of this.getModels()){\n            model.draw(opts);\n        }\n    }\n    getPickingInfo({ info, mode, sourceLayer }) {\n        const { index } = info;\n        if (index >= 0) {\n            if (Array.isArray(this.props.data)) {\n                info.object = this.props.data[index];\n            }\n        }\n        return info;\n    }\n    raiseError(error, message) {\n        var _this$props$onError, _this$props;\n        if (message) {\n            error = new Error(\"\".concat(message, \": \").concat(error.message), {\n                cause: error\n            });\n        }\n        if (!((_this$props$onError = (_this$props = this.props).onError) !== null && _this$props$onError !== void 0 && _this$props$onError.call(_this$props, error))) {\n            var _this$context, _this$context$onError;\n            (_this$context = this.context) === null || _this$context === void 0 ? void 0 : (_this$context$onError = _this$context.onError) === null || _this$context$onError === void 0 ? void 0 : _this$context$onError.call(_this$context, error, this);\n        }\n    }\n    getNeedsRedraw(opts = {\n        clearRedrawFlags: false\n    }) {\n        return this._getNeedsRedraw(opts);\n    }\n    needsUpdate() {\n        if (!this.internalState) {\n            return false;\n        }\n        return this.internalState.needsUpdate || this.hasUniformTransition() || this.shouldUpdateState(this._getUpdateParams());\n    }\n    hasUniformTransition() {\n        var _this$internalState;\n        return ((_this$internalState = this.internalState) === null || _this$internalState === void 0 ? void 0 : _this$internalState.uniformTransitions.active) || false;\n    }\n    activateViewport(viewport) {\n        if (!this.internalState) {\n            return;\n        }\n        const oldViewport = this.internalState.viewport;\n        this.internalState.viewport = viewport;\n        if (!oldViewport || !areViewportsEqual({\n            oldViewport,\n            viewport\n        })) {\n            this.setChangeFlags({\n                viewportChanged: true\n            });\n            if (this.isComposite) {\n                if (this.needsUpdate()) {\n                    this.setNeedsUpdate();\n                }\n            } else {\n                this._update();\n            }\n        }\n    }\n    invalidateAttribute(name = \"all\") {\n        const attributeManager = this.getAttributeManager();\n        if (!attributeManager) {\n            return;\n        }\n        if (name === \"all\") {\n            attributeManager.invalidateAll();\n        } else {\n            attributeManager.invalidate(name);\n        }\n    }\n    updateAttributes(changedAttributes) {\n        for (const model of this.getModels()){\n            this._setModelAttributes(model, changedAttributes);\n        }\n    }\n    _updateAttributes() {\n        const attributeManager = this.getAttributeManager();\n        if (!attributeManager) {\n            return;\n        }\n        const props = this.props;\n        const numInstances = this.getNumInstances();\n        const startIndices = this.getStartIndices();\n        attributeManager.update({\n            data: props.data,\n            numInstances,\n            startIndices,\n            props,\n            transitions: props.transitions,\n            buffers: props.data.attributes,\n            context: this\n        });\n        const changedAttributes = attributeManager.getChangedAttributes({\n            clearChangedFlags: true\n        });\n        this.updateAttributes(changedAttributes);\n    }\n    _updateAttributeTransition() {\n        const attributeManager = this.getAttributeManager();\n        if (attributeManager) {\n            attributeManager.updateTransition();\n        }\n    }\n    _updateUniformTransition() {\n        const { uniformTransitions } = this.internalState;\n        if (uniformTransitions.active) {\n            const propsInTransition = uniformTransitions.update();\n            const props = Object.create(this.props);\n            for(const key in propsInTransition){\n                Object.defineProperty(props, key, {\n                    value: propsInTransition[key]\n                });\n            }\n            return props;\n        }\n        return this.props;\n    }\n    calculateInstancePickingColors(attribute, { numInstances }) {\n        if (attribute.constant) {\n            return;\n        }\n        const cacheSize = Math.floor(pickingColorCache.length / 3);\n        this.internalState.usesPickingColorCache = true;\n        if (cacheSize < numInstances) {\n            if (numInstances > MAX_PICKING_COLOR_CACHE_SIZE) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_11__[\"default\"].warn(\"Layer has too many data objects. Picking might not be able to distinguish all objects.\")();\n            }\n            pickingColorCache = _utils_typed_array_manager__WEBPACK_IMPORTED_MODULE_12__[\"default\"].allocate(pickingColorCache, numInstances, {\n                size: 3,\n                copy: true,\n                maxCount: Math.max(numInstances, MAX_PICKING_COLOR_CACHE_SIZE)\n            });\n            const newCacheSize = Math.floor(pickingColorCache.length / 3);\n            const pickingColor = [];\n            for(let i = cacheSize; i < newCacheSize; i++){\n                this.encodePickingColor(i, pickingColor);\n                pickingColorCache[i * 3 + 0] = pickingColor[0];\n                pickingColorCache[i * 3 + 1] = pickingColor[1];\n                pickingColorCache[i * 3 + 2] = pickingColor[2];\n            }\n        }\n        attribute.value = pickingColorCache.subarray(0, numInstances * 3);\n    }\n    _setModelAttributes(model, changedAttributes) {\n        const attributeManager = this.getAttributeManager();\n        const excludeAttributes = model.userData.excludeAttributes || {};\n        const shaderAttributes = attributeManager.getShaderAttributes(changedAttributes, excludeAttributes);\n        model.setAttributes(shaderAttributes);\n    }\n    disablePickingIndex(objectIndex) {\n        const data = this.props.data;\n        if (!(\"attributes\" in data)) {\n            this._disablePickingIndex(objectIndex);\n            return;\n        }\n        const { pickingColors, instancePickingColors } = this.getAttributeManager().attributes;\n        const colors = pickingColors || instancePickingColors;\n        const externalColorAttribute = colors && data.attributes && data.attributes[colors.id];\n        if (externalColorAttribute && externalColorAttribute.value) {\n            const values = externalColorAttribute.value;\n            const objectColor = this.encodePickingColor(objectIndex);\n            for(let index = 0; index < data.length; index++){\n                const i = colors.getVertexOffset(index);\n                if (values[i] === objectColor[0] && values[i + 1] === objectColor[1] && values[i + 2] === objectColor[2]) {\n                    this._disablePickingIndex(index);\n                }\n            }\n        } else {\n            this._disablePickingIndex(objectIndex);\n        }\n    }\n    _disablePickingIndex(objectIndex) {\n        const { pickingColors, instancePickingColors } = this.getAttributeManager().attributes;\n        const colors = pickingColors || instancePickingColors;\n        if (!colors) {\n            return;\n        }\n        const start = colors.getVertexOffset(objectIndex);\n        const end = colors.getVertexOffset(objectIndex + 1);\n        colors.buffer.subData({\n            data: new Uint8Array(end - start),\n            offset: start\n        });\n    }\n    restorePickingColors() {\n        const { pickingColors, instancePickingColors } = this.getAttributeManager().attributes;\n        const colors = pickingColors || instancePickingColors;\n        if (!colors) {\n            return;\n        }\n        if (this.internalState.usesPickingColorCache && colors.value.buffer !== pickingColorCache.buffer) {\n            colors.value = pickingColorCache.subarray(0, colors.value.length);\n        }\n        colors.updateSubBuffer({\n            startOffset: 0\n        });\n    }\n    _initialize() {\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(!this.internalState);\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Number.isFinite(this.props.coordinateSystem));\n        (0,_debug__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(TRACE_INITIALIZE, this);\n        const attributeManager = this._getAttributeManager();\n        if (attributeManager) {\n            attributeManager.addInstanced({\n                instancePickingColors: {\n                    type: 5121,\n                    size: 3,\n                    noAlloc: true,\n                    update: this.calculateInstancePickingColors\n                }\n            });\n        }\n        this.internalState = new _layer_state__WEBPACK_IMPORTED_MODULE_14__[\"default\"]({\n            attributeManager,\n            layer: this\n        });\n        this._clearChangeFlags();\n        this.state = {};\n        Object.defineProperty(this.state, \"attributeManager\", {\n            get: ()=>{\n                _utils_log__WEBPACK_IMPORTED_MODULE_11__[\"default\"].deprecated(\"layer.state.attributeManager\", \"layer.getAttributeManager()\")();\n                return attributeManager;\n            }\n        });\n        this.internalState.uniformTransitions = new _uniform_transition_manager__WEBPACK_IMPORTED_MODULE_15__[\"default\"](this.context.timeline);\n        this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n        this.internalState.setAsyncProps(this.props);\n        this.initializeState(this.context);\n        for (const extension of this.props.extensions){\n            extension.initializeState.call(this, this.context, extension);\n        }\n        this.setChangeFlags({\n            dataChanged: \"init\",\n            propsChanged: \"init\",\n            viewportChanged: true,\n            extensionsChanged: true\n        });\n        this._update();\n    }\n    _transferState(oldLayer) {\n        (0,_debug__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(TRACE_MATCHED, this, this === oldLayer);\n        const { state, internalState } = oldLayer;\n        if (this === oldLayer) {\n            return;\n        }\n        this.internalState = internalState;\n        this.state = state;\n        this.internalState.setAsyncProps(this.props);\n        this._diffProps(this.props, this.internalState.getOldProps());\n    }\n    _update() {\n        const stateNeedsUpdate = this.needsUpdate();\n        (0,_debug__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(TRACE_UPDATE, this, stateNeedsUpdate);\n        if (!stateNeedsUpdate) {\n            return;\n        }\n        const currentProps = this.props;\n        const context = this.context;\n        const internalState = this.internalState;\n        const currentViewport = context.viewport;\n        const propsInTransition = this._updateUniformTransition();\n        internalState.propsInTransition = propsInTransition;\n        context.viewport = internalState.viewport || currentViewport;\n        this.props = propsInTransition;\n        try {\n            const updateParams = this._getUpdateParams();\n            const oldModels = this.getModels();\n            if (context.gl) {\n                this.updateState(updateParams);\n            } else {\n                try {\n                    this.updateState(updateParams);\n                } catch (error) {}\n            }\n            for (const extension of this.props.extensions){\n                extension.updateState.call(this, updateParams, extension);\n            }\n            const modelChanged = this.getModels()[0] !== oldModels[0];\n            this._postUpdate(updateParams, modelChanged);\n        } finally{\n            context.viewport = currentViewport;\n            this.props = currentProps;\n            this._clearChangeFlags();\n            internalState.needsUpdate = false;\n            internalState.resetOldProps();\n        }\n    }\n    _finalize() {\n        (0,_debug__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(TRACE_FINALIZE, this);\n        this.finalizeState(this.context);\n        for (const extension of this.props.extensions){\n            extension.finalizeState.call(this, this.context, extension);\n        }\n    }\n    _drawLayer({ moduleParameters = null, uniforms = {}, parameters = {} }) {\n        this._updateAttributeTransition();\n        const currentProps = this.props;\n        const context = this.context;\n        this.props = this.internalState.propsInTransition || currentProps;\n        const opacity = this.props.opacity;\n        uniforms.opacity = Math.pow(opacity, 1 / 2.2);\n        try {\n            if (moduleParameters) {\n                this.setModuleParameters(moduleParameters);\n            }\n            const { getPolygonOffset } = this.props;\n            const offsets = getPolygonOffset && getPolygonOffset(uniforms) || [\n                0,\n                0\n            ];\n            (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_16__.setParameters)(context.gl, {\n                polygonOffset: offsets\n            });\n            (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_16__.withParameters)(context.gl, parameters, ()=>{\n                const opts = {\n                    moduleParameters,\n                    uniforms,\n                    parameters,\n                    context\n                };\n                for (const extension of this.props.extensions){\n                    extension.draw.call(this, opts, extension);\n                }\n                this.draw(opts);\n            });\n        } finally{\n            this.props = currentProps;\n        }\n    }\n    getChangeFlags() {\n        var _this$internalState2;\n        return (_this$internalState2 = this.internalState) === null || _this$internalState2 === void 0 ? void 0 : _this$internalState2.changeFlags;\n    }\n    setChangeFlags(flags) {\n        if (!this.internalState) {\n            return;\n        }\n        const { changeFlags } = this.internalState;\n        for(const key in flags){\n            if (flags[key]) {\n                let flagChanged = false;\n                switch(key){\n                    case \"dataChanged\":\n                        const dataChangedReason = flags[key];\n                        const prevDataChangedReason = changeFlags[key];\n                        if (dataChangedReason && Array.isArray(prevDataChangedReason)) {\n                            changeFlags.dataChanged = Array.isArray(dataChangedReason) ? prevDataChangedReason.concat(dataChangedReason) : dataChangedReason;\n                            flagChanged = true;\n                        }\n                    default:\n                        if (!changeFlags[key]) {\n                            changeFlags[key] = flags[key];\n                            flagChanged = true;\n                        }\n                }\n                if (flagChanged) {\n                    (0,_debug__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(TRACE_CHANGE_FLAG, this, key, flags);\n                }\n            }\n        }\n        const propsOrDataChanged = Boolean(changeFlags.dataChanged || changeFlags.updateTriggersChanged || changeFlags.propsChanged || changeFlags.extensionsChanged);\n        changeFlags.propsOrDataChanged = propsOrDataChanged;\n        changeFlags.somethingChanged = propsOrDataChanged || changeFlags.viewportChanged || changeFlags.stateChanged;\n    }\n    _clearChangeFlags() {\n        this.internalState.changeFlags = {\n            dataChanged: false,\n            propsChanged: false,\n            updateTriggersChanged: false,\n            viewportChanged: false,\n            stateChanged: false,\n            extensionsChanged: false,\n            propsOrDataChanged: false,\n            somethingChanged: false\n        };\n    }\n    _diffProps(newProps, oldProps) {\n        const changeFlags = (0,_lifecycle_props__WEBPACK_IMPORTED_MODULE_17__.diffProps)(newProps, oldProps);\n        if (changeFlags.updateTriggersChanged) {\n            for(const key in changeFlags.updateTriggersChanged){\n                if (changeFlags.updateTriggersChanged[key]) {\n                    this.invalidateAttribute(key);\n                }\n            }\n        }\n        if (changeFlags.transitionsChanged) {\n            for(const key in changeFlags.transitionsChanged){\n                var _newProps$transitions;\n                this.internalState.uniformTransitions.add(key, oldProps[key], newProps[key], (_newProps$transitions = newProps.transitions) === null || _newProps$transitions === void 0 ? void 0 : _newProps$transitions[key]);\n            }\n        }\n        return this.setChangeFlags(changeFlags);\n    }\n    validateProps() {\n        (0,_lifecycle_props__WEBPACK_IMPORTED_MODULE_17__.validateProps)(this.props);\n    }\n    updateAutoHighlight(info) {\n        if (this.props.autoHighlight && !Number.isInteger(this.props.highlightedObjectIndex)) {\n            this._updateAutoHighlight(info);\n        }\n    }\n    _updateAutoHighlight(info) {\n        const pickingModuleParameters = {\n            pickingSelectedColor: info.picked ? info.color : null\n        };\n        const { highlightColor } = this.props;\n        if (info.picked && typeof highlightColor === \"function\") {\n            pickingModuleParameters.pickingHighlightColor = highlightColor(info);\n        }\n        this.setModuleParameters(pickingModuleParameters);\n        this.setNeedsRedraw();\n    }\n    _getAttributeManager() {\n        const context = this.context;\n        return new _attribute_attribute_manager__WEBPACK_IMPORTED_MODULE_18__[\"default\"](context.gl, {\n            id: this.props.id,\n            stats: context.stats,\n            timeline: context.timeline\n        });\n    }\n    _postUpdate(updateParams, forceUpdate) {\n        const { props, oldProps } = updateParams;\n        this.setNeedsRedraw();\n        this._updateAttributes();\n        const { model } = this.state;\n        model === null || model === void 0 ? void 0 : model.setInstanceCount(this.getNumInstances());\n        const { autoHighlight, highlightedObjectIndex, highlightColor } = props;\n        if (forceUpdate || oldProps.autoHighlight !== autoHighlight || oldProps.highlightedObjectIndex !== highlightedObjectIndex || oldProps.highlightColor !== highlightColor) {\n            const parameters = {};\n            if (!autoHighlight) {\n                parameters.pickingSelectedColor = null;\n            }\n            if (Array.isArray(highlightColor)) {\n                parameters.pickingHighlightColor = highlightColor;\n            }\n            if (forceUpdate || highlightedObjectIndex !== oldProps.highlightedObjectIndex) {\n                parameters.pickingSelectedColor = Number.isFinite(highlightedObjectIndex) && highlightedObjectIndex >= 0 ? this.encodePickingColor(highlightedObjectIndex) : null;\n            }\n            this.setModuleParameters(parameters);\n        }\n    }\n    _getUpdateParams() {\n        return {\n            props: this.props,\n            oldProps: this.internalState.getOldProps(),\n            context: this.context,\n            changeFlags: this.internalState.changeFlags\n        };\n    }\n    _getNeedsRedraw(opts) {\n        if (!this.internalState) {\n            return false;\n        }\n        let redraw = false;\n        redraw = redraw || this.internalState.needsRedraw && this.id;\n        const attributeManager = this.getAttributeManager();\n        const attributeManagerNeedsRedraw = attributeManager ? attributeManager.getNeedsRedraw(opts) : false;\n        redraw = redraw || attributeManagerNeedsRedraw;\n        if (redraw) {\n            for (const extension of this.props.extensions){\n                extension.onNeedsRedraw.call(this, extension);\n            }\n        }\n        this.internalState.needsRedraw = this.internalState.needsRedraw && !opts.clearRedrawFlags;\n        return redraw;\n    }\n    _onAsyncPropUpdated() {\n        this._diffProps(this.props, this.internalState.getOldProps());\n        this.setNeedsUpdate();\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Layer, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Layer, \"layerName\", \"Layer\"); //# sourceMappingURL=layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/picking/pick-info.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/picking/pick-info.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEmptyPickingInfo: () => (/* binding */ getEmptyPickingInfo),\n/* harmony export */   getLayerPickingInfo: () => (/* binding */ getLayerPickingInfo),\n/* harmony export */   processPickInfo: () => (/* binding */ processPickInfo)\n/* harmony export */ });\nfunction getEmptyPickingInfo({ pickInfo, viewports, pixelRatio, x, y, z }) {\n    let pickedViewport = viewports[0];\n    if (viewports.length > 1) {\n        pickedViewport = getViewportFromCoordinates((pickInfo === null || pickInfo === void 0 ? void 0 : pickInfo.pickedViewports) || viewports, {\n            x,\n            y\n        });\n    }\n    let coordinate;\n    if (pickedViewport) {\n        const point = [\n            x - pickedViewport.x,\n            y - pickedViewport.y\n        ];\n        if (z !== undefined) {\n            point[2] = z;\n        }\n        coordinate = pickedViewport.unproject(point);\n    }\n    return {\n        color: null,\n        layer: null,\n        viewport: pickedViewport,\n        index: -1,\n        picked: false,\n        x,\n        y,\n        pixel: [\n            x,\n            y\n        ],\n        coordinate,\n        devicePixel: pickInfo && \"pickedX\" in pickInfo ? [\n            pickInfo.pickedX,\n            pickInfo.pickedY\n        ] : undefined,\n        pixelRatio\n    };\n}\nfunction processPickInfo(opts) {\n    const { pickInfo, lastPickedInfo, mode, layers } = opts;\n    const { pickedColor, pickedLayer, pickedObjectIndex } = pickInfo;\n    const affectedLayers = pickedLayer ? [\n        pickedLayer\n    ] : [];\n    if (mode === \"hover\") {\n        const lastPickedPixelIndex = lastPickedInfo.index;\n        const lastPickedLayerId = lastPickedInfo.layerId;\n        const pickedLayerId = pickedLayer ? pickedLayer.props.id : null;\n        if (pickedLayerId !== lastPickedLayerId || pickedObjectIndex !== lastPickedPixelIndex) {\n            if (pickedLayerId !== lastPickedLayerId) {\n                const lastPickedLayer = layers.find((layer)=>layer.props.id === lastPickedLayerId);\n                if (lastPickedLayer) {\n                    affectedLayers.unshift(lastPickedLayer);\n                }\n            }\n            lastPickedInfo.layerId = pickedLayerId;\n            lastPickedInfo.index = pickedObjectIndex;\n            lastPickedInfo.info = null;\n        }\n    }\n    const baseInfo = getEmptyPickingInfo(opts);\n    const infos = new Map();\n    infos.set(null, baseInfo);\n    affectedLayers.forEach((layer)=>{\n        let info = {\n            ...baseInfo\n        };\n        if (layer === pickedLayer) {\n            info.color = pickedColor;\n            info.index = pickedObjectIndex;\n            info.picked = true;\n        }\n        info = getLayerPickingInfo({\n            layer,\n            info,\n            mode\n        });\n        const rootLayer = info.layer;\n        if (layer === pickedLayer && mode === \"hover\") {\n            lastPickedInfo.info = info;\n        }\n        infos.set(rootLayer.id, info);\n        if (mode === \"hover\") {\n            rootLayer.updateAutoHighlight(info);\n        }\n    });\n    return infos;\n}\nfunction getLayerPickingInfo({ layer, info, mode }) {\n    while(layer && info){\n        const sourceLayer = info.layer || null;\n        info.sourceLayer = sourceLayer;\n        info.layer = layer;\n        info = layer.getPickingInfo({\n            info,\n            mode,\n            sourceLayer\n        });\n        layer = layer.parent;\n    }\n    return info;\n}\nfunction getViewportFromCoordinates(viewports, pixel) {\n    for(let i = viewports.length - 1; i >= 0; i--){\n        const viewport = viewports[i];\n        if (viewport.containsPixel(pixel)) {\n            return viewport;\n        }\n    }\n    return viewports[0];\n} //# sourceMappingURL=pick-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/picking/pick-info.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/picking/query-object.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/picking/query-object.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClosestObject: () => (/* binding */ getClosestObject),\n/* harmony export */   getUniqueObjects: () => (/* binding */ getUniqueObjects)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\nconst NO_PICKED_OBJECT = {\n    pickedColor: null,\n    pickedObjectIndex: -1\n};\nfunction getClosestObject({ pickedColors, decodePickingColor, deviceX, deviceY, deviceRadius, deviceRect }) {\n    const { x, y, width, height } = deviceRect;\n    let minSquareDistanceToCenter = deviceRadius * deviceRadius;\n    let closestPixelIndex = -1;\n    let i = 0;\n    for(let row = 0; row < height; row++){\n        const dy = row + y - deviceY;\n        const dy2 = dy * dy;\n        if (dy2 > minSquareDistanceToCenter) {\n            i += 4 * width;\n        } else {\n            for(let col = 0; col < width; col++){\n                const pickedLayerIndex = pickedColors[i + 3] - 1;\n                if (pickedLayerIndex >= 0) {\n                    const dx = col + x - deviceX;\n                    const d2 = dx * dx + dy2;\n                    if (d2 <= minSquareDistanceToCenter) {\n                        minSquareDistanceToCenter = d2;\n                        closestPixelIndex = i;\n                    }\n                }\n                i += 4;\n            }\n        }\n    }\n    if (closestPixelIndex >= 0) {\n        const pickedColor = pickedColors.slice(closestPixelIndex, closestPixelIndex + 4);\n        const pickedObject = decodePickingColor(pickedColor);\n        if (pickedObject) {\n            const dy = Math.floor(closestPixelIndex / 4 / width);\n            const dx = closestPixelIndex / 4 - dy * width;\n            return {\n                ...pickedObject,\n                pickedColor,\n                pickedX: x + dx,\n                pickedY: y + dy\n            };\n        }\n        _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"Picked non-existent layer. Is picking buffer corrupt?\")();\n    }\n    return NO_PICKED_OBJECT;\n}\nfunction getUniqueObjects({ pickedColors, decodePickingColor }) {\n    const uniqueColors = new Map();\n    if (pickedColors) {\n        for(let i = 0; i < pickedColors.length; i += 4){\n            const pickedLayerIndex = pickedColors[i + 3] - 1;\n            if (pickedLayerIndex >= 0) {\n                const pickedColor = pickedColors.slice(i, i + 4);\n                const colorKey = pickedColor.join(\",\");\n                if (!uniqueColors.has(colorKey)) {\n                    const pickedObject = decodePickingColor(pickedColor);\n                    if (pickedObject) {\n                        uniqueColors.set(colorKey, {\n                            ...pickedObject,\n                            color: pickedColor\n                        });\n                    } else {\n                        _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"Picked non-existent layer. Is picking buffer corrupt?\")();\n                    }\n                }\n            }\n        }\n    }\n    return Array.from(uniqueColors.values());\n} //# sourceMappingURL=query-object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvcGlja2luZy9xdWVyeS1vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQ2xDLE1BQU1DLG1CQUFtQjtJQUN2QkMsYUFBYTtJQUNiQyxtQkFBbUIsQ0FBQztBQUN0QjtBQUNPLFNBQVNDLGlCQUFpQixFQUMvQkMsWUFBWSxFQUNaQyxrQkFBa0IsRUFDbEJDLE9BQU8sRUFDUEMsT0FBTyxFQUNQQyxZQUFZLEVBQ1pDLFVBQVUsRUFDWDtJQUNDLE1BQU0sRUFDSkMsQ0FBQyxFQUNEQyxDQUFDLEVBQ0RDLEtBQUssRUFDTEMsTUFBTSxFQUNQLEdBQUdKO0lBQ0osSUFBSUssNEJBQTRCTixlQUFlQTtJQUMvQyxJQUFJTyxvQkFBb0IsQ0FBQztJQUN6QixJQUFJQyxJQUFJO0lBRVIsSUFBSyxJQUFJQyxNQUFNLEdBQUdBLE1BQU1KLFFBQVFJLE1BQU87UUFDckMsTUFBTUMsS0FBS0QsTUFBTU4sSUFBSUo7UUFDckIsTUFBTVksTUFBTUQsS0FBS0E7UUFFakIsSUFBSUMsTUFBTUwsMkJBQTJCO1lBQ25DRSxLQUFLLElBQUlKO1FBQ1gsT0FBTztZQUNMLElBQUssSUFBSVEsTUFBTSxHQUFHQSxNQUFNUixPQUFPUSxNQUFPO2dCQUNwQyxNQUFNQyxtQkFBbUJqQixZQUFZLENBQUNZLElBQUksRUFBRSxHQUFHO2dCQUUvQyxJQUFJSyxvQkFBb0IsR0FBRztvQkFDekIsTUFBTUMsS0FBS0YsTUFBTVYsSUFBSUo7b0JBQ3JCLE1BQU1pQixLQUFLRCxLQUFLQSxLQUFLSDtvQkFFckIsSUFBSUksTUFBTVQsMkJBQTJCO3dCQUNuQ0EsNEJBQTRCUzt3QkFDNUJSLG9CQUFvQkM7b0JBQ3RCO2dCQUNGO2dCQUVBQSxLQUFLO1lBQ1A7UUFDRjtJQUNGO0lBRUEsSUFBSUQscUJBQXFCLEdBQUc7UUFDMUIsTUFBTWQsY0FBY0csYUFBYW9CLEtBQUssQ0FBQ1QsbUJBQW1CQSxvQkFBb0I7UUFDOUUsTUFBTVUsZUFBZXBCLG1CQUFtQko7UUFFeEMsSUFBSXdCLGNBQWM7WUFDaEIsTUFBTVAsS0FBS1EsS0FBS0MsS0FBSyxDQUFDWixvQkFBb0IsSUFBSUg7WUFDOUMsTUFBTVUsS0FBS1Asb0JBQW9CLElBQUlHLEtBQUtOO1lBQ3hDLE9BQU87Z0JBQUUsR0FBR2EsWUFBWTtnQkFDdEJ4QjtnQkFDQTJCLFNBQVNsQixJQUFJWTtnQkFDYk8sU0FBU2xCLElBQUlPO1lBQ2Y7UUFDRjtRQUVBbkIsa0RBQUdBLENBQUMrQixLQUFLLENBQUM7SUFDWjtJQUVBLE9BQU85QjtBQUNUO0FBQ08sU0FBUytCLGlCQUFpQixFQUMvQjNCLFlBQVksRUFDWkMsa0JBQWtCLEVBQ25CO0lBQ0MsTUFBTTJCLGVBQWUsSUFBSUM7SUFFekIsSUFBSTdCLGNBQWM7UUFDaEIsSUFBSyxJQUFJWSxJQUFJLEdBQUdBLElBQUlaLGFBQWE4QixNQUFNLEVBQUVsQixLQUFLLEVBQUc7WUFDL0MsTUFBTUssbUJBQW1CakIsWUFBWSxDQUFDWSxJQUFJLEVBQUUsR0FBRztZQUUvQyxJQUFJSyxvQkFBb0IsR0FBRztnQkFDekIsTUFBTXBCLGNBQWNHLGFBQWFvQixLQUFLLENBQUNSLEdBQUdBLElBQUk7Z0JBQzlDLE1BQU1tQixXQUFXbEMsWUFBWW1DLElBQUksQ0FBQztnQkFFbEMsSUFBSSxDQUFDSixhQUFhSyxHQUFHLENBQUNGLFdBQVc7b0JBQy9CLE1BQU1WLGVBQWVwQixtQkFBbUJKO29CQUV4QyxJQUFJd0IsY0FBYzt3QkFDaEJPLGFBQWFNLEdBQUcsQ0FBQ0gsVUFBVTs0QkFBRSxHQUFHVixZQUFZOzRCQUMxQ2MsT0FBT3RDO3dCQUNUO29CQUNGLE9BQU87d0JBQ0xGLGtEQUFHQSxDQUFDK0IsS0FBSyxDQUFDO29CQUNaO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsT0FBT1UsTUFBTUMsSUFBSSxDQUFDVCxhQUFhVSxNQUFNO0FBQ3ZDLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvcGlja2luZy9xdWVyeS1vYmplY3QuanM/MTY0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9nIGZyb20gJy4uLy4uL3V0aWxzL2xvZyc7XG5jb25zdCBOT19QSUNLRURfT0JKRUNUID0ge1xuICBwaWNrZWRDb2xvcjogbnVsbCxcbiAgcGlja2VkT2JqZWN0SW5kZXg6IC0xXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGdldENsb3Nlc3RPYmplY3Qoe1xuICBwaWNrZWRDb2xvcnMsXG4gIGRlY29kZVBpY2tpbmdDb2xvcixcbiAgZGV2aWNlWCxcbiAgZGV2aWNlWSxcbiAgZGV2aWNlUmFkaXVzLFxuICBkZXZpY2VSZWN0XG59KSB7XG4gIGNvbnN0IHtcbiAgICB4LFxuICAgIHksXG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH0gPSBkZXZpY2VSZWN0O1xuICBsZXQgbWluU3F1YXJlRGlzdGFuY2VUb0NlbnRlciA9IGRldmljZVJhZGl1cyAqIGRldmljZVJhZGl1cztcbiAgbGV0IGNsb3Nlc3RQaXhlbEluZGV4ID0gLTE7XG4gIGxldCBpID0gMDtcblxuICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBoZWlnaHQ7IHJvdysrKSB7XG4gICAgY29uc3QgZHkgPSByb3cgKyB5IC0gZGV2aWNlWTtcbiAgICBjb25zdCBkeTIgPSBkeSAqIGR5O1xuXG4gICAgaWYgKGR5MiA+IG1pblNxdWFyZURpc3RhbmNlVG9DZW50ZXIpIHtcbiAgICAgIGkgKz0gNCAqIHdpZHRoO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCB3aWR0aDsgY29sKyspIHtcbiAgICAgICAgY29uc3QgcGlja2VkTGF5ZXJJbmRleCA9IHBpY2tlZENvbG9yc1tpICsgM10gLSAxO1xuXG4gICAgICAgIGlmIChwaWNrZWRMYXllckluZGV4ID49IDApIHtcbiAgICAgICAgICBjb25zdCBkeCA9IGNvbCArIHggLSBkZXZpY2VYO1xuICAgICAgICAgIGNvbnN0IGQyID0gZHggKiBkeCArIGR5MjtcblxuICAgICAgICAgIGlmIChkMiA8PSBtaW5TcXVhcmVEaXN0YW5jZVRvQ2VudGVyKSB7XG4gICAgICAgICAgICBtaW5TcXVhcmVEaXN0YW5jZVRvQ2VudGVyID0gZDI7XG4gICAgICAgICAgICBjbG9zZXN0UGl4ZWxJbmRleCA9IGk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaSArPSA0O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChjbG9zZXN0UGl4ZWxJbmRleCA+PSAwKSB7XG4gICAgY29uc3QgcGlja2VkQ29sb3IgPSBwaWNrZWRDb2xvcnMuc2xpY2UoY2xvc2VzdFBpeGVsSW5kZXgsIGNsb3Nlc3RQaXhlbEluZGV4ICsgNCk7XG4gICAgY29uc3QgcGlja2VkT2JqZWN0ID0gZGVjb2RlUGlja2luZ0NvbG9yKHBpY2tlZENvbG9yKTtcblxuICAgIGlmIChwaWNrZWRPYmplY3QpIHtcbiAgICAgIGNvbnN0IGR5ID0gTWF0aC5mbG9vcihjbG9zZXN0UGl4ZWxJbmRleCAvIDQgLyB3aWR0aCk7XG4gICAgICBjb25zdCBkeCA9IGNsb3Nlc3RQaXhlbEluZGV4IC8gNCAtIGR5ICogd2lkdGg7XG4gICAgICByZXR1cm4geyAuLi5waWNrZWRPYmplY3QsXG4gICAgICAgIHBpY2tlZENvbG9yLFxuICAgICAgICBwaWNrZWRYOiB4ICsgZHgsXG4gICAgICAgIHBpY2tlZFk6IHkgKyBkeVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBsb2cuZXJyb3IoJ1BpY2tlZCBub24tZXhpc3RlbnQgbGF5ZXIuIElzIHBpY2tpbmcgYnVmZmVyIGNvcnJ1cHQ/JykoKTtcbiAgfVxuXG4gIHJldHVybiBOT19QSUNLRURfT0JKRUNUO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFVuaXF1ZU9iamVjdHMoe1xuICBwaWNrZWRDb2xvcnMsXG4gIGRlY29kZVBpY2tpbmdDb2xvclxufSkge1xuICBjb25zdCB1bmlxdWVDb2xvcnMgPSBuZXcgTWFwKCk7XG5cbiAgaWYgKHBpY2tlZENvbG9ycykge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGlja2VkQ29sb3JzLmxlbmd0aDsgaSArPSA0KSB7XG4gICAgICBjb25zdCBwaWNrZWRMYXllckluZGV4ID0gcGlja2VkQ29sb3JzW2kgKyAzXSAtIDE7XG5cbiAgICAgIGlmIChwaWNrZWRMYXllckluZGV4ID49IDApIHtcbiAgICAgICAgY29uc3QgcGlja2VkQ29sb3IgPSBwaWNrZWRDb2xvcnMuc2xpY2UoaSwgaSArIDQpO1xuICAgICAgICBjb25zdCBjb2xvcktleSA9IHBpY2tlZENvbG9yLmpvaW4oJywnKTtcblxuICAgICAgICBpZiAoIXVuaXF1ZUNvbG9ycy5oYXMoY29sb3JLZXkpKSB7XG4gICAgICAgICAgY29uc3QgcGlja2VkT2JqZWN0ID0gZGVjb2RlUGlja2luZ0NvbG9yKHBpY2tlZENvbG9yKTtcblxuICAgICAgICAgIGlmIChwaWNrZWRPYmplY3QpIHtcbiAgICAgICAgICAgIHVuaXF1ZUNvbG9ycy5zZXQoY29sb3JLZXksIHsgLi4ucGlja2VkT2JqZWN0LFxuICAgICAgICAgICAgICBjb2xvcjogcGlja2VkQ29sb3JcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsb2cuZXJyb3IoJ1BpY2tlZCBub24tZXhpc3RlbnQgbGF5ZXIuIElzIHBpY2tpbmcgYnVmZmVyIGNvcnJ1cHQ/JykoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gQXJyYXkuZnJvbSh1bmlxdWVDb2xvcnMudmFsdWVzKCkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcnktb2JqZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJsb2ciLCJOT19QSUNLRURfT0JKRUNUIiwicGlja2VkQ29sb3IiLCJwaWNrZWRPYmplY3RJbmRleCIsImdldENsb3Nlc3RPYmplY3QiLCJwaWNrZWRDb2xvcnMiLCJkZWNvZGVQaWNraW5nQ29sb3IiLCJkZXZpY2VYIiwiZGV2aWNlWSIsImRldmljZVJhZGl1cyIsImRldmljZVJlY3QiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwibWluU3F1YXJlRGlzdGFuY2VUb0NlbnRlciIsImNsb3Nlc3RQaXhlbEluZGV4IiwiaSIsInJvdyIsImR5IiwiZHkyIiwiY29sIiwicGlja2VkTGF5ZXJJbmRleCIsImR4IiwiZDIiLCJzbGljZSIsInBpY2tlZE9iamVjdCIsIk1hdGgiLCJmbG9vciIsInBpY2tlZFgiLCJwaWNrZWRZIiwiZXJyb3IiLCJnZXRVbmlxdWVPYmplY3RzIiwidW5pcXVlQ29sb3JzIiwiTWFwIiwibGVuZ3RoIiwiY29sb3JLZXkiLCJqb2luIiwiaGFzIiwic2V0IiwiY29sb3IiLCJBcnJheSIsImZyb20iLCJ2YWx1ZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/picking/query-object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/resource/resource-manager.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/resource/resource-manager.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ResourceManager)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _resource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resource */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/resource/resource.js\");\n\n\nclass ResourceManager {\n    constructor({ gl, protocol }){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"protocol\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_context\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_resources\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_consumers\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_pruneRequest\", void 0);\n        this.protocol = protocol || \"resource://\";\n        this._context = {\n            gl,\n            resourceManager: this\n        };\n        this._resources = {};\n        this._consumers = {};\n        this._pruneRequest = null;\n    }\n    contains(resourceId) {\n        if (resourceId.startsWith(this.protocol)) {\n            return true;\n        }\n        return resourceId in this._resources;\n    }\n    add({ resourceId, data, forceUpdate = false, persistent = true }) {\n        let res = this._resources[resourceId];\n        if (res) {\n            res.setData(data, forceUpdate);\n        } else {\n            res = new _resource__WEBPACK_IMPORTED_MODULE_1__[\"default\"](resourceId, data, this._context);\n            this._resources[resourceId] = res;\n        }\n        res.persistent = persistent;\n    }\n    remove(resourceId) {\n        const res = this._resources[resourceId];\n        if (res) {\n            res.delete();\n            delete this._resources[resourceId];\n        }\n    }\n    unsubscribe({ consumerId }) {\n        const consumer = this._consumers[consumerId];\n        if (consumer) {\n            for(const requestId in consumer){\n                const request = consumer[requestId];\n                const resource = this._resources[request.resourceId];\n                if (resource) {\n                    resource.unsubscribe(request);\n                }\n            }\n            delete this._consumers[consumerId];\n            this.prune();\n        }\n    }\n    subscribe({ resourceId, onChange, consumerId, requestId = \"default\" }) {\n        const { _resources: resources, protocol } = this;\n        if (resourceId.startsWith(protocol)) {\n            resourceId = resourceId.replace(protocol, \"\");\n            if (!resources[resourceId]) {\n                this.add({\n                    resourceId,\n                    data: null,\n                    persistent: false\n                });\n            }\n        }\n        const res = resources[resourceId];\n        this._track(consumerId, requestId, res, onChange);\n        if (res) {\n            return res.getData();\n        }\n        return undefined;\n    }\n    prune() {\n        if (!this._pruneRequest) {\n            this._pruneRequest = setTimeout(()=>this._prune(), 0);\n        }\n    }\n    finalize() {\n        for(const key in this._resources){\n            this._resources[key].delete();\n        }\n    }\n    _track(consumerId, requestId, resource, onChange) {\n        const consumers = this._consumers;\n        const consumer = consumers[consumerId] = consumers[consumerId] || {};\n        const request = consumer[requestId] || {};\n        const oldResource = request.resourceId && this._resources[request.resourceId];\n        if (oldResource) {\n            oldResource.unsubscribe(request);\n            this.prune();\n        }\n        if (resource) {\n            consumer[requestId] = request;\n            request.onChange = onChange;\n            request.resourceId = resource.id;\n            resource.subscribe(request);\n        }\n    }\n    _prune() {\n        this._pruneRequest = null;\n        for (const key of Object.keys(this._resources)){\n            const res = this._resources[key];\n            if (!res.persistent && !res.inUse()) {\n                res.delete();\n                delete this._resources[key];\n            }\n        }\n    }\n} //# sourceMappingURL=resource-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/resource/resource-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/resource/resource.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/resource/resource.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Resource)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _loaders_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @loaders.gl/core */ \"(ssr)/./node_modules/@loaders.gl/core/dist/esm/lib/api/load.js\");\n\n\nclass Resource {\n    constructor(id, data, context){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"context\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isLoaded\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"persistent\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_loadCount\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_subscribers\", new Set());\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_data\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_loader\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_error\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_content\", void 0);\n        this.id = id;\n        this.context = context;\n        this.setData(data);\n    }\n    subscribe(consumer) {\n        this._subscribers.add(consumer);\n    }\n    unsubscribe(consumer) {\n        this._subscribers.delete(consumer);\n    }\n    inUse() {\n        return this._subscribers.size > 0;\n    }\n    delete() {}\n    getData() {\n        return this.isLoaded ? this._error ? Promise.reject(this._error) : this._content : this._loader.then(()=>this.getData());\n    }\n    setData(data, forceUpdate) {\n        if (data === this._data && !forceUpdate) {\n            return;\n        }\n        this._data = data;\n        const loadCount = ++this._loadCount;\n        let loader = data;\n        if (typeof data === \"string\") {\n            loader = (0,_loaders_gl_core__WEBPACK_IMPORTED_MODULE_1__.load)(data);\n        }\n        if (loader instanceof Promise) {\n            this.isLoaded = false;\n            this._loader = loader.then((result)=>{\n                if (this._loadCount === loadCount) {\n                    this.isLoaded = true;\n                    this._error = undefined;\n                    this._content = result;\n                }\n            }).catch((error)=>{\n                if (this._loadCount === loadCount) {\n                    this.isLoaded = true;\n                    this._error = error || true;\n                }\n            });\n        } else {\n            this.isLoaded = true;\n            this._error = undefined;\n            this._content = data;\n        }\n        for (const subscriber of this._subscribers){\n            subscriber.onChange(this.getData());\n        }\n    }\n} //# sourceMappingURL=resource.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvcmVzb3VyY2UvcmVzb3VyY2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdFO0FBQ2hDO0FBQ3pCLE1BQU1FO0lBQ25CQyxZQUFZQyxFQUFFLEVBQUVDLElBQUksRUFBRUMsT0FBTyxDQUFFO1FBQzdCTixxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsTUFBTSxLQUFLO1FBRWpDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsV0FBVyxLQUFLO1FBRXRDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsWUFBWSxLQUFLO1FBRXZDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsY0FBYyxLQUFLO1FBRXpDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsY0FBYztRQUVwQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGdCQUFnQixJQUFJTztRQUUxQ1AscUZBQWVBLENBQUMsSUFBSSxFQUFFLFNBQVMsS0FBSztRQUVwQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFdBQVcsS0FBSztRQUV0Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFVBQVUsS0FBSztRQUVyQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFlBQVksS0FBSztRQUV2QyxJQUFJLENBQUNJLEVBQUUsR0FBR0E7UUFDVixJQUFJLENBQUNFLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNFLE9BQU8sQ0FBQ0g7SUFDZjtJQUVBSSxVQUFVQyxRQUFRLEVBQUU7UUFDbEIsSUFBSSxDQUFDQyxZQUFZLENBQUNDLEdBQUcsQ0FBQ0Y7SUFDeEI7SUFFQUcsWUFBWUgsUUFBUSxFQUFFO1FBQ3BCLElBQUksQ0FBQ0MsWUFBWSxDQUFDRyxNQUFNLENBQUNKO0lBQzNCO0lBRUFLLFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQ0osWUFBWSxDQUFDSyxJQUFJLEdBQUc7SUFDbEM7SUFFQUYsU0FBUyxDQUFDO0lBRVZHLFVBQVU7UUFDUixPQUFPLElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUksQ0FBQ0MsTUFBTSxHQUFHQyxRQUFRQyxNQUFNLENBQUMsSUFBSSxDQUFDRixNQUFNLElBQUksSUFBSSxDQUFDRyxRQUFRLEdBQUcsSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFNLElBQUksQ0FBQ1AsT0FBTztJQUN6SDtJQUVBVCxRQUFRSCxJQUFJLEVBQUVvQixXQUFXLEVBQUU7UUFDekIsSUFBSXBCLFNBQVMsSUFBSSxDQUFDcUIsS0FBSyxJQUFJLENBQUNELGFBQWE7WUFDdkM7UUFDRjtRQUVBLElBQUksQ0FBQ0MsS0FBSyxHQUFHckI7UUFDYixNQUFNc0IsWUFBWSxFQUFFLElBQUksQ0FBQ0MsVUFBVTtRQUNuQyxJQUFJQyxTQUFTeEI7UUFFYixJQUFJLE9BQU9BLFNBQVMsVUFBVTtZQUM1QndCLFNBQVM1QixzREFBSUEsQ0FBQ0k7UUFDaEI7UUFFQSxJQUFJd0Isa0JBQWtCVCxTQUFTO1lBQzdCLElBQUksQ0FBQ0YsUUFBUSxHQUFHO1lBQ2hCLElBQUksQ0FBQ0ssT0FBTyxHQUFHTSxPQUFPTCxJQUFJLENBQUNNLENBQUFBO2dCQUN6QixJQUFJLElBQUksQ0FBQ0YsVUFBVSxLQUFLRCxXQUFXO29CQUNqQyxJQUFJLENBQUNULFFBQVEsR0FBRztvQkFDaEIsSUFBSSxDQUFDQyxNQUFNLEdBQUdZO29CQUNkLElBQUksQ0FBQ1QsUUFBUSxHQUFHUTtnQkFDbEI7WUFDRixHQUFHRSxLQUFLLENBQUNDLENBQUFBO2dCQUNQLElBQUksSUFBSSxDQUFDTCxVQUFVLEtBQUtELFdBQVc7b0JBQ2pDLElBQUksQ0FBQ1QsUUFBUSxHQUFHO29CQUNoQixJQUFJLENBQUNDLE1BQU0sR0FBR2MsU0FBUztnQkFDekI7WUFDRjtRQUNGLE9BQU87WUFDTCxJQUFJLENBQUNmLFFBQVEsR0FBRztZQUNoQixJQUFJLENBQUNDLE1BQU0sR0FBR1k7WUFDZCxJQUFJLENBQUNULFFBQVEsR0FBR2pCO1FBQ2xCO1FBRUEsS0FBSyxNQUFNNkIsY0FBYyxJQUFJLENBQUN2QixZQUFZLENBQUU7WUFDMUN1QixXQUFXQyxRQUFRLENBQUMsSUFBSSxDQUFDbEIsT0FBTztRQUNsQztJQUNGO0FBRUYsRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL2xpYi9yZXNvdXJjZS9yZXNvdXJjZS5qcz9jMjNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgeyBsb2FkIH0gZnJvbSAnQGxvYWRlcnMuZ2wvY29yZSc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZXNvdXJjZSB7XG4gIGNvbnN0cnVjdG9yKGlkLCBkYXRhLCBjb250ZXh0KSB7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaWRcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNvbnRleHRcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlzTG9hZGVkXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJwZXJzaXN0ZW50XCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfbG9hZENvdW50XCIsIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiX3N1YnNjcmliZXJzXCIsIG5ldyBTZXQoKSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfZGF0YVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiX2xvYWRlclwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiX2Vycm9yXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfY29udGVudFwiLCB2b2lkIDApO1xuXG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgdGhpcy5zZXREYXRhKGRhdGEpO1xuICB9XG5cbiAgc3Vic2NyaWJlKGNvbnN1bWVyKSB7XG4gICAgdGhpcy5fc3Vic2NyaWJlcnMuYWRkKGNvbnN1bWVyKTtcbiAgfVxuXG4gIHVuc3Vic2NyaWJlKGNvbnN1bWVyKSB7XG4gICAgdGhpcy5fc3Vic2NyaWJlcnMuZGVsZXRlKGNvbnN1bWVyKTtcbiAgfVxuXG4gIGluVXNlKCkge1xuICAgIHJldHVybiB0aGlzLl9zdWJzY3JpYmVycy5zaXplID4gMDtcbiAgfVxuXG4gIGRlbGV0ZSgpIHt9XG5cbiAgZ2V0RGF0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5pc0xvYWRlZCA/IHRoaXMuX2Vycm9yID8gUHJvbWlzZS5yZWplY3QodGhpcy5fZXJyb3IpIDogdGhpcy5fY29udGVudCA6IHRoaXMuX2xvYWRlci50aGVuKCgpID0+IHRoaXMuZ2V0RGF0YSgpKTtcbiAgfVxuXG4gIHNldERhdGEoZGF0YSwgZm9yY2VVcGRhdGUpIHtcbiAgICBpZiAoZGF0YSA9PT0gdGhpcy5fZGF0YSAmJiAhZm9yY2VVcGRhdGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgICBjb25zdCBsb2FkQ291bnQgPSArK3RoaXMuX2xvYWRDb3VudDtcbiAgICBsZXQgbG9hZGVyID0gZGF0YTtcblxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGxvYWRlciA9IGxvYWQoZGF0YSk7XG4gICAgfVxuXG4gICAgaWYgKGxvYWRlciBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgIHRoaXMuaXNMb2FkZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlci50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgIGlmICh0aGlzLl9sb2FkQ291bnQgPT09IGxvYWRDb3VudCkge1xuICAgICAgICAgIHRoaXMuaXNMb2FkZWQgPSB0cnVlO1xuICAgICAgICAgIHRoaXMuX2Vycm9yID0gdW5kZWZpbmVkO1xuICAgICAgICAgIHRoaXMuX2NvbnRlbnQgPSByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgIH0pLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgaWYgKHRoaXMuX2xvYWRDb3VudCA9PT0gbG9hZENvdW50KSB7XG4gICAgICAgICAgdGhpcy5pc0xvYWRlZCA9IHRydWU7XG4gICAgICAgICAgdGhpcy5fZXJyb3IgPSBlcnJvciB8fCB0cnVlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pc0xvYWRlZCA9IHRydWU7XG4gICAgICB0aGlzLl9lcnJvciA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2NvbnRlbnQgPSBkYXRhO1xuICAgIH1cblxuICAgIGZvciAoY29uc3Qgc3Vic2NyaWJlciBvZiB0aGlzLl9zdWJzY3JpYmVycykge1xuICAgICAgc3Vic2NyaWJlci5vbkNoYW5nZSh0aGlzLmdldERhdGEoKSk7XG4gICAgfVxuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc291cmNlLmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJsb2FkIiwiUmVzb3VyY2UiLCJjb25zdHJ1Y3RvciIsImlkIiwiZGF0YSIsImNvbnRleHQiLCJTZXQiLCJzZXREYXRhIiwic3Vic2NyaWJlIiwiY29uc3VtZXIiLCJfc3Vic2NyaWJlcnMiLCJhZGQiLCJ1bnN1YnNjcmliZSIsImRlbGV0ZSIsImluVXNlIiwic2l6ZSIsImdldERhdGEiLCJpc0xvYWRlZCIsIl9lcnJvciIsIlByb21pc2UiLCJyZWplY3QiLCJfY29udGVudCIsIl9sb2FkZXIiLCJ0aGVuIiwiZm9yY2VVcGRhdGUiLCJfZGF0YSIsImxvYWRDb3VudCIsIl9sb2FkQ291bnQiLCJsb2FkZXIiLCJyZXN1bHQiLCJ1bmRlZmluZWQiLCJjYXRjaCIsImVycm9yIiwic3Vic2NyaWJlciIsIm9uQ2hhbmdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/resource/resource.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/tooltip.js":
/*!************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/tooltip.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tooltip)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nconst defaultStyle = {\n    zIndex: \"1\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    color: \"#a0a7b4\",\n    backgroundColor: \"#29323c\",\n    padding: \"10px\",\n    top: \"0\",\n    left: \"0\",\n    display: \"none\"\n};\nclass Tooltip {\n    constructor(canvas){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"el\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isVisible\", false);\n        const canvasParent = canvas.parentElement;\n        if (canvasParent) {\n            this.el = document.createElement(\"div\");\n            this.el.className = \"deck-tooltip\";\n            Object.assign(this.el.style, defaultStyle);\n            canvasParent.appendChild(this.el);\n        }\n    }\n    setTooltip(displayInfo, x, y) {\n        const el = this.el;\n        if (!el) {\n            return;\n        }\n        if (typeof displayInfo === \"string\") {\n            el.innerText = displayInfo;\n        } else if (!displayInfo) {\n            this.isVisible = false;\n            el.style.display = \"none\";\n            return;\n        } else {\n            if (displayInfo.text) {\n                el.innerText = displayInfo.text;\n            }\n            if (displayInfo.html) {\n                el.innerHTML = displayInfo.html;\n            }\n            if (displayInfo.className) {\n                el.className = displayInfo.className;\n            }\n        }\n        this.isVisible = true;\n        el.style.display = \"block\";\n        el.style.transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n        if (displayInfo && typeof displayInfo === \"object\" && \"style\" in displayInfo) {\n            Object.assign(el.style, displayInfo.style);\n        }\n    }\n    remove() {\n        if (this.el) {\n            this.el.remove();\n            this.el = null;\n        }\n    }\n} //# sourceMappingURL=tooltip.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvdG9vbHRpcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RTtBQUN4RSxNQUFNQyxlQUFlO0lBQ25CQyxRQUFRO0lBQ1JDLFVBQVU7SUFDVkMsZUFBZTtJQUNmQyxPQUFPO0lBQ1BDLGlCQUFpQjtJQUNqQkMsU0FBUztJQUNUQyxLQUFLO0lBQ0xDLE1BQU07SUFDTkMsU0FBUztBQUNYO0FBQ2UsTUFBTUM7SUFDbkJDLFlBQVlDLE1BQU0sQ0FBRTtRQUNsQmIscUZBQWVBLENBQUMsSUFBSSxFQUFFLE1BQU07UUFFNUJBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxhQUFhO1FBRW5DLE1BQU1jLGVBQWVELE9BQU9FLGFBQWE7UUFFekMsSUFBSUQsY0FBYztZQUNoQixJQUFJLENBQUNFLEVBQUUsR0FBR0MsU0FBU0MsYUFBYSxDQUFDO1lBQ2pDLElBQUksQ0FBQ0YsRUFBRSxDQUFDRyxTQUFTLEdBQUc7WUFDcEJDLE9BQU9DLE1BQU0sQ0FBQyxJQUFJLENBQUNMLEVBQUUsQ0FBQ00sS0FBSyxFQUFFckI7WUFDN0JhLGFBQWFTLFdBQVcsQ0FBQyxJQUFJLENBQUNQLEVBQUU7UUFDbEM7SUFDRjtJQUVBUSxXQUFXQyxXQUFXLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO1FBQzVCLE1BQU1YLEtBQUssSUFBSSxDQUFDQSxFQUFFO1FBRWxCLElBQUksQ0FBQ0EsSUFBSTtZQUNQO1FBQ0Y7UUFFQSxJQUFJLE9BQU9TLGdCQUFnQixVQUFVO1lBQ25DVCxHQUFHWSxTQUFTLEdBQUdIO1FBQ2pCLE9BQU8sSUFBSSxDQUFDQSxhQUFhO1lBQ3ZCLElBQUksQ0FBQ0ksU0FBUyxHQUFHO1lBQ2pCYixHQUFHTSxLQUFLLENBQUNaLE9BQU8sR0FBRztZQUNuQjtRQUNGLE9BQU87WUFDTCxJQUFJZSxZQUFZSyxJQUFJLEVBQUU7Z0JBQ3BCZCxHQUFHWSxTQUFTLEdBQUdILFlBQVlLLElBQUk7WUFDakM7WUFFQSxJQUFJTCxZQUFZTSxJQUFJLEVBQUU7Z0JBQ3BCZixHQUFHZ0IsU0FBUyxHQUFHUCxZQUFZTSxJQUFJO1lBQ2pDO1lBRUEsSUFBSU4sWUFBWU4sU0FBUyxFQUFFO2dCQUN6QkgsR0FBR0csU0FBUyxHQUFHTSxZQUFZTixTQUFTO1lBQ3RDO1FBQ0Y7UUFFQSxJQUFJLENBQUNVLFNBQVMsR0FBRztRQUNqQmIsR0FBR00sS0FBSyxDQUFDWixPQUFPLEdBQUc7UUFDbkJNLEdBQUdNLEtBQUssQ0FBQ1csU0FBUyxHQUFHLGFBQWFDLE1BQU0sQ0FBQ1IsR0FBRyxRQUFRUSxNQUFNLENBQUNQLEdBQUc7UUFFOUQsSUFBSUYsZUFBZSxPQUFPQSxnQkFBZ0IsWUFBWSxXQUFXQSxhQUFhO1lBQzVFTCxPQUFPQyxNQUFNLENBQUNMLEdBQUdNLEtBQUssRUFBRUcsWUFBWUgsS0FBSztRQUMzQztJQUNGO0lBRUFhLFNBQVM7UUFDUCxJQUFJLElBQUksQ0FBQ25CLEVBQUUsRUFBRTtZQUNYLElBQUksQ0FBQ0EsRUFBRSxDQUFDbUIsTUFBTTtZQUNkLElBQUksQ0FBQ25CLEVBQUUsR0FBRztRQUNaO0lBQ0Y7QUFFRixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vbGliL3Rvb2x0aXAuanM/ZjEwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eVwiO1xuY29uc3QgZGVmYXVsdFN0eWxlID0ge1xuICB6SW5kZXg6ICcxJyxcbiAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgY29sb3I6ICcjYTBhN2I0JyxcbiAgYmFja2dyb3VuZENvbG9yOiAnIzI5MzIzYycsXG4gIHBhZGRpbmc6ICcxMHB4JyxcbiAgdG9wOiAnMCcsXG4gIGxlZnQ6ICcwJyxcbiAgZGlzcGxheTogJ25vbmUnXG59O1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9vbHRpcCB7XG4gIGNvbnN0cnVjdG9yKGNhbnZhcykge1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImVsXCIsIG51bGwpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaXNWaXNpYmxlXCIsIGZhbHNlKTtcblxuICAgIGNvbnN0IGNhbnZhc1BhcmVudCA9IGNhbnZhcy5wYXJlbnRFbGVtZW50O1xuXG4gICAgaWYgKGNhbnZhc1BhcmVudCkge1xuICAgICAgdGhpcy5lbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgdGhpcy5lbC5jbGFzc05hbWUgPSAnZGVjay10b29sdGlwJztcbiAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5lbC5zdHlsZSwgZGVmYXVsdFN0eWxlKTtcbiAgICAgIGNhbnZhc1BhcmVudC5hcHBlbmRDaGlsZCh0aGlzLmVsKTtcbiAgICB9XG4gIH1cblxuICBzZXRUb29sdGlwKGRpc3BsYXlJbmZvLCB4LCB5KSB7XG4gICAgY29uc3QgZWwgPSB0aGlzLmVsO1xuXG4gICAgaWYgKCFlbCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGlzcGxheUluZm8gPT09ICdzdHJpbmcnKSB7XG4gICAgICBlbC5pbm5lclRleHQgPSBkaXNwbGF5SW5mbztcbiAgICB9IGVsc2UgaWYgKCFkaXNwbGF5SW5mbykge1xuICAgICAgdGhpcy5pc1Zpc2libGUgPSBmYWxzZTtcbiAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChkaXNwbGF5SW5mby50ZXh0KSB7XG4gICAgICAgIGVsLmlubmVyVGV4dCA9IGRpc3BsYXlJbmZvLnRleHQ7XG4gICAgICB9XG5cbiAgICAgIGlmIChkaXNwbGF5SW5mby5odG1sKSB7XG4gICAgICAgIGVsLmlubmVySFRNTCA9IGRpc3BsYXlJbmZvLmh0bWw7XG4gICAgICB9XG5cbiAgICAgIGlmIChkaXNwbGF5SW5mby5jbGFzc05hbWUpIHtcbiAgICAgICAgZWwuY2xhc3NOYW1lID0gZGlzcGxheUluZm8uY2xhc3NOYW1lO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuaXNWaXNpYmxlID0gdHJ1ZTtcbiAgICBlbC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBlbC5zdHlsZS50cmFuc2Zvcm0gPSBcInRyYW5zbGF0ZShcIi5jb25jYXQoeCwgXCJweCwgXCIpLmNvbmNhdCh5LCBcInB4KVwiKTtcblxuICAgIGlmIChkaXNwbGF5SW5mbyAmJiB0eXBlb2YgZGlzcGxheUluZm8gPT09ICdvYmplY3QnICYmICdzdHlsZScgaW4gZGlzcGxheUluZm8pIHtcbiAgICAgIE9iamVjdC5hc3NpZ24oZWwuc3R5bGUsIGRpc3BsYXlJbmZvLnN0eWxlKTtcbiAgICB9XG4gIH1cblxuICByZW1vdmUoKSB7XG4gICAgaWYgKHRoaXMuZWwpIHtcbiAgICAgIHRoaXMuZWwucmVtb3ZlKCk7XG4gICAgICB0aGlzLmVsID0gbnVsbDtcbiAgICB9XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9vbHRpcC5qcy5tYXAiXSwibmFtZXMiOlsiX2RlZmluZVByb3BlcnR5IiwiZGVmYXVsdFN0eWxlIiwiekluZGV4IiwicG9zaXRpb24iLCJwb2ludGVyRXZlbnRzIiwiY29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJwYWRkaW5nIiwidG9wIiwibGVmdCIsImRpc3BsYXkiLCJUb29sdGlwIiwiY29uc3RydWN0b3IiLCJjYW52YXMiLCJjYW52YXNQYXJlbnQiLCJwYXJlbnRFbGVtZW50IiwiZWwiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJPYmplY3QiLCJhc3NpZ24iLCJzdHlsZSIsImFwcGVuZENoaWxkIiwic2V0VG9vbHRpcCIsImRpc3BsYXlJbmZvIiwieCIsInkiLCJpbm5lclRleHQiLCJpc1Zpc2libGUiLCJ0ZXh0IiwiaHRtbCIsImlubmVySFRNTCIsInRyYW5zZm9ybSIsImNvbmNhdCIsInJlbW92ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/tooltip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/uniform-transition-manager.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/uniform-transition-manager.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ UniformTransitionManager)\n/* harmony export */ });\n/* harmony import */ var _attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./attribute/attribute-transition-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-utils.js\");\n/* harmony import */ var _transitions_cpu_interpolation_transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transitions/cpu-interpolation-transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/cpu-interpolation-transition.js\");\n/* harmony import */ var _transitions_cpu_spring_transition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transitions/cpu-spring-transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/cpu-spring-transition.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\n\n\n\nconst TRANSITION_TYPES = {\n    interpolation: _transitions_cpu_interpolation_transition__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    spring: _transitions_cpu_spring_transition__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n};\nclass UniformTransitionManager {\n    constructor(timeline){\n        this.transitions = new Map();\n        this.timeline = timeline;\n    }\n    get active() {\n        return this.transitions.size > 0;\n    }\n    add(key, fromValue, toValue, settings) {\n        const { transitions } = this;\n        if (transitions.has(key)) {\n            const transition = transitions.get(key);\n            const { value = transition.settings.fromValue } = transition;\n            fromValue = value;\n            this.remove(key);\n        }\n        settings = (0,_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeTransitionSettings)(settings);\n        if (!settings) {\n            return;\n        }\n        const TransitionType = TRANSITION_TYPES[settings.type];\n        if (!TransitionType) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"unsupported transition type '\".concat(settings.type, \"'\"))();\n            return;\n        }\n        const transition = new TransitionType(this.timeline);\n        transition.start({\n            ...settings,\n            fromValue,\n            toValue\n        });\n        transitions.set(key, transition);\n    }\n    remove(key) {\n        const { transitions } = this;\n        if (transitions.has(key)) {\n            transitions.get(key).cancel();\n            transitions.delete(key);\n        }\n    }\n    update() {\n        const propsInTransition = {};\n        for (const [key, transition] of this.transitions){\n            transition.update();\n            propsInTransition[key] = transition.value;\n            if (!transition.inProgress) {\n                this.remove(key);\n            }\n        }\n        return propsInTransition;\n    }\n    clear() {\n        for (const key of this.transitions.keys()){\n            this.remove(key);\n        }\n    }\n} //# sourceMappingURL=uniform-transition-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWIvdW5pZm9ybS10cmFuc2l0aW9uLW1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUY7QUFDQTtBQUNkO0FBQ3hDO0FBQy9CLE1BQU1JLG1CQUFtQjtJQUN2QkMsZUFBZUosaUZBQTBCQTtJQUN6Q0ssUUFBUUosMEVBQW1CQTtBQUM3QjtBQUNlLE1BQU1LO0lBQ25CQyxZQUFZQyxRQUFRLENBQUU7UUFDcEIsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSUM7UUFDdkIsSUFBSSxDQUFDRixRQUFRLEdBQUdBO0lBQ2xCO0lBRUEsSUFBSUcsU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDRixXQUFXLENBQUNHLElBQUksR0FBRztJQUNqQztJQUVBQyxJQUFJQyxHQUFHLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUU7UUFDckMsTUFBTSxFQUNKUixXQUFXLEVBQ1osR0FBRyxJQUFJO1FBRVIsSUFBSUEsWUFBWVMsR0FBRyxDQUFDSixNQUFNO1lBQ3hCLE1BQU1LLGFBQWFWLFlBQVlXLEdBQUcsQ0FBQ047WUFDbkMsTUFBTSxFQUNKTyxRQUFRRixXQUFXRixRQUFRLENBQUNGLFNBQVMsRUFDdEMsR0FBR0k7WUFDSkosWUFBWU07WUFDWixJQUFJLENBQUNDLE1BQU0sQ0FBQ1I7UUFDZDtRQUVBRyxXQUFXbEIsa0dBQTJCQSxDQUFDa0I7UUFFdkMsSUFBSSxDQUFDQSxVQUFVO1lBQ2I7UUFDRjtRQUVBLE1BQU1NLGlCQUFpQnBCLGdCQUFnQixDQUFDYyxTQUFTTyxJQUFJLENBQUM7UUFFdEQsSUFBSSxDQUFDRCxnQkFBZ0I7WUFDbkJyQixrREFBR0EsQ0FBQ3VCLEtBQUssQ0FBQyxnQ0FBZ0NDLE1BQU0sQ0FBQ1QsU0FBU08sSUFBSSxFQUFFO1lBQ2hFO1FBQ0Y7UUFFQSxNQUFNTCxhQUFhLElBQUlJLGVBQWUsSUFBSSxDQUFDZixRQUFRO1FBQ25EVyxXQUFXUSxLQUFLLENBQUM7WUFBRSxHQUFHVixRQUFRO1lBQzVCRjtZQUNBQztRQUNGO1FBQ0FQLFlBQVltQixHQUFHLENBQUNkLEtBQUtLO0lBQ3ZCO0lBRUFHLE9BQU9SLEdBQUcsRUFBRTtRQUNWLE1BQU0sRUFDSkwsV0FBVyxFQUNaLEdBQUcsSUFBSTtRQUVSLElBQUlBLFlBQVlTLEdBQUcsQ0FBQ0osTUFBTTtZQUN4QkwsWUFBWVcsR0FBRyxDQUFDTixLQUFLZSxNQUFNO1lBQzNCcEIsWUFBWXFCLE1BQU0sQ0FBQ2hCO1FBQ3JCO0lBQ0Y7SUFFQWlCLFNBQVM7UUFDUCxNQUFNQyxvQkFBb0IsQ0FBQztRQUUzQixLQUFLLE1BQU0sQ0FBQ2xCLEtBQUtLLFdBQVcsSUFBSSxJQUFJLENBQUNWLFdBQVcsQ0FBRTtZQUNoRFUsV0FBV1ksTUFBTTtZQUNqQkMsaUJBQWlCLENBQUNsQixJQUFJLEdBQUdLLFdBQVdFLEtBQUs7WUFFekMsSUFBSSxDQUFDRixXQUFXYyxVQUFVLEVBQUU7Z0JBQzFCLElBQUksQ0FBQ1gsTUFBTSxDQUFDUjtZQUNkO1FBQ0Y7UUFFQSxPQUFPa0I7SUFDVDtJQUVBRSxRQUFRO1FBQ04sS0FBSyxNQUFNcEIsT0FBTyxJQUFJLENBQUNMLFdBQVcsQ0FBQzBCLElBQUksR0FBSTtZQUN6QyxJQUFJLENBQUNiLE1BQU0sQ0FBQ1I7UUFDZDtJQUNGO0FBRUYsRUFDQSxzREFBc0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL2xpYi91bmlmb3JtLXRyYW5zaXRpb24tbWFuYWdlci5qcz80NzhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vcm1hbGl6ZVRyYW5zaXRpb25TZXR0aW5ncyB9IGZyb20gJy4vYXR0cmlidXRlL2F0dHJpYnV0ZS10cmFuc2l0aW9uLXV0aWxzJztcbmltcG9ydCBDUFVJbnRlcnBvbGF0aW9uVHJhbnNpdGlvbiBmcm9tICcuLi90cmFuc2l0aW9ucy9jcHUtaW50ZXJwb2xhdGlvbi10cmFuc2l0aW9uJztcbmltcG9ydCBDUFVTcHJpbmdUcmFuc2l0aW9uIGZyb20gJy4uL3RyYW5zaXRpb25zL2NwdS1zcHJpbmctdHJhbnNpdGlvbic7XG5pbXBvcnQgbG9nIGZyb20gJy4uL3V0aWxzL2xvZyc7XG5jb25zdCBUUkFOU0lUSU9OX1RZUEVTID0ge1xuICBpbnRlcnBvbGF0aW9uOiBDUFVJbnRlcnBvbGF0aW9uVHJhbnNpdGlvbixcbiAgc3ByaW5nOiBDUFVTcHJpbmdUcmFuc2l0aW9uXG59O1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVW5pZm9ybVRyYW5zaXRpb25NYW5hZ2VyIHtcbiAgY29uc3RydWN0b3IodGltZWxpbmUpIHtcbiAgICB0aGlzLnRyYW5zaXRpb25zID0gbmV3IE1hcCgpO1xuICAgIHRoaXMudGltZWxpbmUgPSB0aW1lbGluZTtcbiAgfVxuXG4gIGdldCBhY3RpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMudHJhbnNpdGlvbnMuc2l6ZSA+IDA7XG4gIH1cblxuICBhZGQoa2V5LCBmcm9tVmFsdWUsIHRvVmFsdWUsIHNldHRpbmdzKSB7XG4gICAgY29uc3Qge1xuICAgICAgdHJhbnNpdGlvbnNcbiAgICB9ID0gdGhpcztcblxuICAgIGlmICh0cmFuc2l0aW9ucy5oYXMoa2V5KSkge1xuICAgICAgY29uc3QgdHJhbnNpdGlvbiA9IHRyYW5zaXRpb25zLmdldChrZXkpO1xuICAgICAgY29uc3Qge1xuICAgICAgICB2YWx1ZSA9IHRyYW5zaXRpb24uc2V0dGluZ3MuZnJvbVZhbHVlXG4gICAgICB9ID0gdHJhbnNpdGlvbjtcbiAgICAgIGZyb21WYWx1ZSA9IHZhbHVlO1xuICAgICAgdGhpcy5yZW1vdmUoa2V5KTtcbiAgICB9XG5cbiAgICBzZXR0aW5ncyA9IG5vcm1hbGl6ZVRyYW5zaXRpb25TZXR0aW5ncyhzZXR0aW5ncyk7XG5cbiAgICBpZiAoIXNldHRpbmdzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgVHJhbnNpdGlvblR5cGUgPSBUUkFOU0lUSU9OX1RZUEVTW3NldHRpbmdzLnR5cGVdO1xuXG4gICAgaWYgKCFUcmFuc2l0aW9uVHlwZSkge1xuICAgICAgbG9nLmVycm9yKFwidW5zdXBwb3J0ZWQgdHJhbnNpdGlvbiB0eXBlICdcIi5jb25jYXQoc2V0dGluZ3MudHlwZSwgXCInXCIpKSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHRyYW5zaXRpb24gPSBuZXcgVHJhbnNpdGlvblR5cGUodGhpcy50aW1lbGluZSk7XG4gICAgdHJhbnNpdGlvbi5zdGFydCh7IC4uLnNldHRpbmdzLFxuICAgICAgZnJvbVZhbHVlLFxuICAgICAgdG9WYWx1ZVxuICAgIH0pO1xuICAgIHRyYW5zaXRpb25zLnNldChrZXksIHRyYW5zaXRpb24pO1xuICB9XG5cbiAgcmVtb3ZlKGtleSkge1xuICAgIGNvbnN0IHtcbiAgICAgIHRyYW5zaXRpb25zXG4gICAgfSA9IHRoaXM7XG5cbiAgICBpZiAodHJhbnNpdGlvbnMuaGFzKGtleSkpIHtcbiAgICAgIHRyYW5zaXRpb25zLmdldChrZXkpLmNhbmNlbCgpO1xuICAgICAgdHJhbnNpdGlvbnMuZGVsZXRlKGtleSk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlKCkge1xuICAgIGNvbnN0IHByb3BzSW5UcmFuc2l0aW9uID0ge307XG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIHRyYW5zaXRpb25dIG9mIHRoaXMudHJhbnNpdGlvbnMpIHtcbiAgICAgIHRyYW5zaXRpb24udXBkYXRlKCk7XG4gICAgICBwcm9wc0luVHJhbnNpdGlvbltrZXldID0gdHJhbnNpdGlvbi52YWx1ZTtcblxuICAgICAgaWYgKCF0cmFuc2l0aW9uLmluUHJvZ3Jlc3MpIHtcbiAgICAgICAgdGhpcy5yZW1vdmUoa2V5KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcHJvcHNJblRyYW5zaXRpb247XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiB0aGlzLnRyYW5zaXRpb25zLmtleXMoKSkge1xuICAgICAgdGhpcy5yZW1vdmUoa2V5KTtcbiAgICB9XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5pZm9ybS10cmFuc2l0aW9uLW1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZVRyYW5zaXRpb25TZXR0aW5ncyIsIkNQVUludGVycG9sYXRpb25UcmFuc2l0aW9uIiwiQ1BVU3ByaW5nVHJhbnNpdGlvbiIsImxvZyIsIlRSQU5TSVRJT05fVFlQRVMiLCJpbnRlcnBvbGF0aW9uIiwic3ByaW5nIiwiVW5pZm9ybVRyYW5zaXRpb25NYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJ0aW1lbGluZSIsInRyYW5zaXRpb25zIiwiTWFwIiwiYWN0aXZlIiwic2l6ZSIsImFkZCIsImtleSIsImZyb21WYWx1ZSIsInRvVmFsdWUiLCJzZXR0aW5ncyIsImhhcyIsInRyYW5zaXRpb24iLCJnZXQiLCJ2YWx1ZSIsInJlbW92ZSIsIlRyYW5zaXRpb25UeXBlIiwidHlwZSIsImVycm9yIiwiY29uY2F0Iiwic3RhcnQiLCJzZXQiLCJjYW5jZWwiLCJkZWxldGUiLCJ1cGRhdGUiLCJwcm9wc0luVHJhbnNpdGlvbiIsImluUHJvZ3Jlc3MiLCJjbGVhciIsImtleXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/uniform-transition-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/view-manager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/view-manager.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ViewManager)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utils_deep_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/deep-equal */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/deep-equal.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _utils_flatten__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/flatten */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/flatten.js\");\n\n\n\n\nclass ViewManager {\n    constructor(props){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"width\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"height\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"views\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewState\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"controllers\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"timeline\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_viewports\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_viewportMap\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_isUpdating\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_needsRedraw\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_needsUpdate\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_eventManager\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_eventCallbacks\", void 0);\n        this.views = [];\n        this.width = 100;\n        this.height = 100;\n        this.viewState = {};\n        this.controllers = {};\n        this.timeline = props.timeline;\n        this._viewports = [];\n        this._viewportMap = {};\n        this._isUpdating = false;\n        this._needsRedraw = \"First render\";\n        this._needsUpdate = \"Initialize\";\n        this._eventManager = props.eventManager;\n        this._eventCallbacks = {\n            onViewStateChange: props.onViewStateChange,\n            onInteractionStateChange: props.onInteractionStateChange\n        };\n        Object.seal(this);\n        this.setProps(props);\n    }\n    finalize() {\n        for(const key in this.controllers){\n            const controller = this.controllers[key];\n            if (controller) {\n                controller.finalize();\n            }\n        }\n        this.controllers = {};\n    }\n    needsRedraw(opts = {\n        clearRedrawFlags: false\n    }) {\n        const redraw = this._needsRedraw;\n        if (opts.clearRedrawFlags) {\n            this._needsRedraw = false;\n        }\n        return redraw;\n    }\n    setNeedsUpdate(reason) {\n        this._needsUpdate = this._needsUpdate || reason;\n        this._needsRedraw = this._needsRedraw || reason;\n    }\n    updateViewStates() {\n        for(const viewId in this.controllers){\n            const controller = this.controllers[viewId];\n            if (controller) {\n                controller.updateTransition();\n            }\n        }\n    }\n    getViewports(rect) {\n        if (rect) {\n            return this._viewports.filter((viewport)=>viewport.containsPixel(rect));\n        }\n        return this._viewports;\n    }\n    getViews() {\n        const viewMap = {};\n        this.views.forEach((view)=>{\n            viewMap[view.id] = view;\n        });\n        return viewMap;\n    }\n    getView(viewId) {\n        return this.views.find((view)=>view.id === viewId);\n    }\n    getViewState(viewOrViewId) {\n        const view = typeof viewOrViewId === \"string\" ? this.getView(viewOrViewId) : viewOrViewId;\n        const viewState = view && this.viewState[view.getViewStateId()] || this.viewState;\n        return view ? view.filterViewState(viewState) : viewState;\n    }\n    getViewport(viewId) {\n        return this._viewportMap[viewId];\n    }\n    unproject(xyz, opts) {\n        const viewports = this.getViewports();\n        const pixel = {\n            x: xyz[0],\n            y: xyz[1]\n        };\n        for(let i = viewports.length - 1; i >= 0; --i){\n            const viewport = viewports[i];\n            if (viewport.containsPixel(pixel)) {\n                const p = xyz.slice();\n                p[0] -= viewport.x;\n                p[1] -= viewport.y;\n                return viewport.unproject(p, opts);\n            }\n        }\n        return null;\n    }\n    setProps(props) {\n        if (props.views) {\n            this._setViews(props.views);\n        }\n        if (props.viewState) {\n            this._setViewState(props.viewState);\n        }\n        if (\"width\" in props || \"height\" in props) {\n            this._setSize(props.width, props.height);\n        }\n        if (!this._isUpdating) {\n            this._update();\n        }\n    }\n    _update() {\n        this._isUpdating = true;\n        if (this._needsUpdate) {\n            this._needsUpdate = false;\n            this._rebuildViewports();\n        }\n        if (this._needsUpdate) {\n            this._needsUpdate = false;\n            this._rebuildViewports();\n        }\n        this._isUpdating = false;\n    }\n    _setSize(width, height) {\n        if (width !== this.width || height !== this.height) {\n            this.width = width;\n            this.height = height;\n            this.setNeedsUpdate(\"Size changed\");\n        }\n    }\n    _setViews(views) {\n        views = (0,_utils_flatten__WEBPACK_IMPORTED_MODULE_1__.flatten)(views, Boolean);\n        const viewsChanged = this._diffViews(views, this.views);\n        if (viewsChanged) {\n            this.setNeedsUpdate(\"views changed\");\n        }\n        this.views = views;\n    }\n    _setViewState(viewState) {\n        if (viewState) {\n            const viewStateChanged = !(0,_utils_deep_equal__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(viewState, this.viewState, 3);\n            if (viewStateChanged) {\n                this.setNeedsUpdate(\"viewState changed\");\n            }\n            this.viewState = viewState;\n        } else {\n            _utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn(\"missing `viewState` or `initialViewState`\")();\n        }\n    }\n    _onViewStateChange(viewId, event) {\n        if (this._eventCallbacks.onViewStateChange) {\n            this._eventCallbacks.onViewStateChange({\n                ...event,\n                viewId\n            });\n        }\n    }\n    _createController(view, props) {\n        const Controller = props.type;\n        const controller = new Controller({\n            timeline: this.timeline,\n            eventManager: this._eventManager,\n            onViewStateChange: this._onViewStateChange.bind(this, props.id),\n            onStateChange: this._eventCallbacks.onInteractionStateChange,\n            makeViewport: (viewState)=>{\n                var _this$getView;\n                return (_this$getView = this.getView(view.id)) === null || _this$getView === void 0 ? void 0 : _this$getView.makeViewport({\n                    viewState,\n                    width: this.width,\n                    height: this.height\n                });\n            }\n        });\n        return controller;\n    }\n    _updateController(view, viewState, viewport, controller) {\n        const controllerProps = view.controller;\n        if (controllerProps && viewport) {\n            const resolvedProps = {\n                ...viewState,\n                ...controllerProps,\n                id: view.id,\n                x: viewport.x,\n                y: viewport.y,\n                width: viewport.width,\n                height: viewport.height\n            };\n            if (!controller || controller.constructor !== controllerProps.type) {\n                controller = this._createController(view, resolvedProps);\n            }\n            if (controller) {\n                controller.setProps(resolvedProps);\n            }\n            return controller;\n        }\n        return null;\n    }\n    _rebuildViewports() {\n        const { views } = this;\n        const oldControllers = this.controllers;\n        this._viewports = [];\n        this.controllers = {};\n        let invalidateControllers = false;\n        for(let i = views.length; i--;){\n            const view = views[i];\n            const viewState = this.getViewState(view);\n            const viewport = view.makeViewport({\n                viewState,\n                width: this.width,\n                height: this.height\n            });\n            let oldController = oldControllers[view.id];\n            const hasController = Boolean(view.controller);\n            if (hasController && !oldController) {\n                invalidateControllers = true;\n            }\n            if ((invalidateControllers || !hasController) && oldController) {\n                oldController.finalize();\n                oldController = null;\n            }\n            this.controllers[view.id] = this._updateController(view, viewState, viewport, oldController);\n            if (viewport) {\n                this._viewports.unshift(viewport);\n            }\n        }\n        for(const id in oldControllers){\n            const oldController = oldControllers[id];\n            if (oldController && !this.controllers[id]) {\n                oldController.finalize();\n            }\n        }\n        this._buildViewportMap();\n    }\n    _buildViewportMap() {\n        this._viewportMap = {};\n        this._viewports.forEach((viewport)=>{\n            if (viewport.id) {\n                this._viewportMap[viewport.id] = this._viewportMap[viewport.id] || viewport;\n            }\n        });\n    }\n    _diffViews(newViews, oldViews) {\n        if (newViews.length !== oldViews.length) {\n            return true;\n        }\n        return newViews.some((_, i)=>!newViews[i].equals(oldViews[i]));\n    }\n} //# sourceMappingURL=view-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/view-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/component-state.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lifecycle/component-state.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ComponentState)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utils_iterable_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/iterable-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js\");\n\n\n\nconst EMPTY_PROPS = Object.freeze({});\nclass ComponentState {\n    constructor(component){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"component\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"onAsyncPropUpdated\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"asyncProps\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"oldProps\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"oldAsyncProps\", void 0);\n        this.component = component;\n        this.asyncProps = {};\n        this.onAsyncPropUpdated = ()=>{};\n        this.oldProps = null;\n        this.oldAsyncProps = null;\n    }\n    finalize() {\n        for(const propName in this.asyncProps){\n            const asyncProp = this.asyncProps[propName];\n            if (asyncProp && asyncProp.type && asyncProp.type.release) {\n                asyncProp.type.release(asyncProp.resolvedValue, asyncProp.type, this.component);\n            }\n        }\n        this.asyncProps = {};\n        this.component = null;\n        this.resetOldProps();\n    }\n    getOldProps() {\n        return this.oldAsyncProps || this.oldProps || EMPTY_PROPS;\n    }\n    resetOldProps() {\n        this.oldAsyncProps = null;\n        this.oldProps = this.component ? this.component.props : null;\n    }\n    hasAsyncProp(propName) {\n        return propName in this.asyncProps;\n    }\n    getAsyncProp(propName) {\n        const asyncProp = this.asyncProps[propName];\n        return asyncProp && asyncProp.resolvedValue;\n    }\n    isAsyncPropLoading(propName) {\n        if (propName) {\n            const asyncProp = this.asyncProps[propName];\n            return Boolean(asyncProp && asyncProp.pendingLoadCount > 0 && asyncProp.pendingLoadCount !== asyncProp.resolvedLoadCount);\n        }\n        for(const key in this.asyncProps){\n            if (this.isAsyncPropLoading(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    reloadAsyncProp(propName, value) {\n        this._watchPromise(propName, Promise.resolve(value));\n    }\n    setAsyncProps(props) {\n        this.component = props[_constants__WEBPACK_IMPORTED_MODULE_1__.COMPONENT_SYMBOL] || this.component;\n        const resolvedValues = props[_constants__WEBPACK_IMPORTED_MODULE_1__.ASYNC_RESOLVED_SYMBOL] || {};\n        const originalValues = props[_constants__WEBPACK_IMPORTED_MODULE_1__.ASYNC_ORIGINAL_SYMBOL] || props;\n        const defaultValues = props[_constants__WEBPACK_IMPORTED_MODULE_1__.ASYNC_DEFAULTS_SYMBOL] || {};\n        for(const propName in resolvedValues){\n            const value = resolvedValues[propName];\n            this._createAsyncPropData(propName, defaultValues[propName]);\n            this._updateAsyncProp(propName, value);\n            resolvedValues[propName] = this.getAsyncProp(propName);\n        }\n        for(const propName in originalValues){\n            const value = originalValues[propName];\n            this._createAsyncPropData(propName, defaultValues[propName]);\n            this._updateAsyncProp(propName, value);\n        }\n    }\n    _fetch(propName, url) {\n        return null;\n    }\n    _onResolve(propName, value) {}\n    _onError(propName, error) {}\n    _updateAsyncProp(propName, value) {\n        if (!this._didAsyncInputValueChange(propName, value)) {\n            return;\n        }\n        if (typeof value === \"string\") {\n            value = this._fetch(propName, value);\n        }\n        if (value instanceof Promise) {\n            this._watchPromise(propName, value);\n            return;\n        }\n        if ((0,_utils_iterable_utils__WEBPACK_IMPORTED_MODULE_2__.isAsyncIterable)(value)) {\n            this._resolveAsyncIterable(propName, value);\n            return;\n        }\n        this._setPropValue(propName, value);\n    }\n    _freezeAsyncOldProps() {\n        if (!this.oldAsyncProps && this.oldProps) {\n            this.oldAsyncProps = Object.create(this.oldProps);\n            for(const propName in this.asyncProps){\n                Object.defineProperty(this.oldAsyncProps, propName, {\n                    enumerable: true,\n                    value: this.oldProps[propName]\n                });\n            }\n        }\n    }\n    _didAsyncInputValueChange(propName, value) {\n        const asyncProp = this.asyncProps[propName];\n        if (value === asyncProp.resolvedValue || value === asyncProp.lastValue) {\n            return false;\n        }\n        asyncProp.lastValue = value;\n        return true;\n    }\n    _setPropValue(propName, value) {\n        this._freezeAsyncOldProps();\n        const asyncProp = this.asyncProps[propName];\n        if (asyncProp) {\n            value = this._postProcessValue(asyncProp, value);\n            asyncProp.resolvedValue = value;\n            asyncProp.pendingLoadCount++;\n            asyncProp.resolvedLoadCount = asyncProp.pendingLoadCount;\n        }\n    }\n    _setAsyncPropValue(propName, value, loadCount) {\n        const asyncProp = this.asyncProps[propName];\n        if (asyncProp && loadCount >= asyncProp.resolvedLoadCount && value !== undefined) {\n            this._freezeAsyncOldProps();\n            asyncProp.resolvedValue = value;\n            asyncProp.resolvedLoadCount = loadCount;\n            this.onAsyncPropUpdated(propName, value);\n        }\n    }\n    _watchPromise(propName, promise) {\n        const asyncProp = this.asyncProps[propName];\n        if (asyncProp) {\n            asyncProp.pendingLoadCount++;\n            const loadCount = asyncProp.pendingLoadCount;\n            promise.then((data)=>{\n                if (!this.component) {\n                    return;\n                }\n                data = this._postProcessValue(asyncProp, data);\n                this._setAsyncPropValue(propName, data, loadCount);\n                this._onResolve(propName, data);\n            }).catch((error)=>{\n                this._onError(propName, error);\n            });\n        }\n    }\n    async _resolveAsyncIterable(propName, iterable) {\n        if (propName !== \"data\") {\n            this._setPropValue(propName, iterable);\n            return;\n        }\n        const asyncProp = this.asyncProps[propName];\n        if (!asyncProp) {\n            return;\n        }\n        asyncProp.pendingLoadCount++;\n        const loadCount = asyncProp.pendingLoadCount;\n        let data = [];\n        let count = 0;\n        for await (const chunk of iterable){\n            if (!this.component) {\n                return;\n            }\n            const { dataTransform } = this.component.props;\n            if (dataTransform) {\n                data = dataTransform(chunk, data);\n            } else {\n                data = data.concat(chunk);\n            }\n            Object.defineProperty(data, \"__diff\", {\n                enumerable: false,\n                value: [\n                    {\n                        startRow: count,\n                        endRow: data.length\n                    }\n                ]\n            });\n            count = data.length;\n            this._setAsyncPropValue(propName, data, loadCount);\n        }\n        this._onResolve(propName, data);\n    }\n    _postProcessValue(asyncProp, value) {\n        const propType = asyncProp.type;\n        if (propType && this.component) {\n            if (propType.release) {\n                propType.release(asyncProp.resolvedValue, propType, this.component);\n            }\n            if (propType.transform) {\n                return propType.transform(value, propType, this.component);\n            }\n        }\n        return value;\n    }\n    _createAsyncPropData(propName, defaultValue) {\n        const asyncProp = this.asyncProps[propName];\n        if (!asyncProp) {\n            const propTypes = this.component && this.component.props[_constants__WEBPACK_IMPORTED_MODULE_1__.PROP_TYPES_SYMBOL];\n            this.asyncProps[propName] = {\n                type: propTypes && propTypes[propName],\n                lastValue: null,\n                resolvedValue: defaultValue,\n                pendingLoadCount: 0,\n                resolvedLoadCount: 0\n            };\n        }\n    }\n} //# sourceMappingURL=component-state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/component-state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/component.js":
/*!********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lifecycle/component.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Component)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js\");\n/* harmony import */ var _create_props__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-props */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/create-props.js\");\n\n\n\nlet counter = 0;\nclass Component {\n    constructor(...propObjects){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"props\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"count\", void 0);\n        this.props = (0,_create_props__WEBPACK_IMPORTED_MODULE_1__.createProps)(this, propObjects);\n        this.id = this.props.id;\n        this.count = counter++;\n    }\n    clone(newProps) {\n        const { props } = this;\n        const asyncProps = {};\n        for(const key in props[_constants__WEBPACK_IMPORTED_MODULE_2__.ASYNC_DEFAULTS_SYMBOL]){\n            if (key in props[_constants__WEBPACK_IMPORTED_MODULE_2__.ASYNC_RESOLVED_SYMBOL]) {\n                asyncProps[key] = props[_constants__WEBPACK_IMPORTED_MODULE_2__.ASYNC_RESOLVED_SYMBOL][key];\n            } else if (key in props[_constants__WEBPACK_IMPORTED_MODULE_2__.ASYNC_ORIGINAL_SYMBOL]) {\n                asyncProps[key] = props[_constants__WEBPACK_IMPORTED_MODULE_2__.ASYNC_ORIGINAL_SYMBOL][key];\n            }\n        }\n        return new this.constructor({\n            ...props,\n            ...asyncProps,\n            ...newProps\n        });\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Component, \"componentName\", \"Component\");\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Component, \"defaultProps\", {}); //# sourceMappingURL=component.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWZlY3ljbGUvY29tcG9uZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0U7QUFDK0Q7QUFDMUY7QUFDN0MsSUFBSU8sVUFBVTtBQUNDLE1BQU1DO0lBQ25CQyxZQUFZLEdBQUdDLFdBQVcsQ0FBRTtRQUMxQlYscUZBQWVBLENBQUMsSUFBSSxFQUFFLE1BQU0sS0FBSztRQUVqQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFNBQVMsS0FBSztRQUVwQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFNBQVMsS0FBSztRQUVwQyxJQUFJLENBQUNXLEtBQUssR0FBR0wsMERBQVdBLENBQUMsSUFBSSxFQUFFSTtRQUMvQixJQUFJLENBQUNFLEVBQUUsR0FBRyxJQUFJLENBQUNELEtBQUssQ0FBQ0MsRUFBRTtRQUN2QixJQUFJLENBQUNDLEtBQUssR0FBR047SUFDZjtJQUVBTyxNQUFNQyxRQUFRLEVBQUU7UUFDZCxNQUFNLEVBQ0pKLEtBQUssRUFDTixHQUFHLElBQUk7UUFDUixNQUFNSyxhQUFhLENBQUM7UUFFcEIsSUFBSyxNQUFNQyxPQUFPTixLQUFLLENBQUNOLDZEQUFxQkEsQ0FBQyxDQUFFO1lBQzlDLElBQUlZLE9BQU9OLEtBQUssQ0FBQ1AsNkRBQXFCQSxDQUFDLEVBQUU7Z0JBQ3ZDWSxVQUFVLENBQUNDLElBQUksR0FBR04sS0FBSyxDQUFDUCw2REFBcUJBLENBQUMsQ0FBQ2EsSUFBSTtZQUNyRCxPQUFPLElBQUlBLE9BQU9OLEtBQUssQ0FBQ1IsNkRBQXFCQSxDQUFDLEVBQUU7Z0JBQzlDYSxVQUFVLENBQUNDLElBQUksR0FBR04sS0FBSyxDQUFDUiw2REFBcUJBLENBQUMsQ0FBQ2MsSUFBSTtZQUNyRDtRQUNGO1FBRUEsT0FBTyxJQUFJLElBQUksQ0FBQ1IsV0FBVyxDQUFDO1lBQUUsR0FBR0UsS0FBSztZQUNwQyxHQUFHSyxVQUFVO1lBQ2IsR0FBR0QsUUFBUTtRQUNiO0lBQ0Y7QUFFRjtBQUVBZixxRkFBZUEsQ0FBQ1EsV0FBVyxpQkFBaUI7QUFFNUNSLHFGQUFlQSxDQUFDUSxXQUFXLGdCQUFnQixDQUFDLElBQzVDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vbGlmZWN5Y2xlL2NvbXBvbmVudC5qcz8yZDc5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgeyBDT01QT05FTlRfU1lNQk9MLCBQUk9QX1RZUEVTX1NZTUJPTCwgQVNZTkNfT1JJR0lOQUxfU1lNQk9MLCBBU1lOQ19SRVNPTFZFRF9TWU1CT0wsIEFTWU5DX0RFRkFVTFRTX1NZTUJPTCB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGNyZWF0ZVByb3BzIH0gZnJvbSAnLi9jcmVhdGUtcHJvcHMnO1xubGV0IGNvdW50ZXIgPSAwO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoLi4ucHJvcE9iamVjdHMpIHtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpZFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwicHJvcHNcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNvdW50XCIsIHZvaWQgMCk7XG5cbiAgICB0aGlzLnByb3BzID0gY3JlYXRlUHJvcHModGhpcywgcHJvcE9iamVjdHMpO1xuICAgIHRoaXMuaWQgPSB0aGlzLnByb3BzLmlkO1xuICAgIHRoaXMuY291bnQgPSBjb3VudGVyKys7XG4gIH1cblxuICBjbG9uZShuZXdQcm9wcykge1xuICAgIGNvbnN0IHtcbiAgICAgIHByb3BzXG4gICAgfSA9IHRoaXM7XG4gICAgY29uc3QgYXN5bmNQcm9wcyA9IHt9O1xuXG4gICAgZm9yIChjb25zdCBrZXkgaW4gcHJvcHNbQVNZTkNfREVGQVVMVFNfU1lNQk9MXSkge1xuICAgICAgaWYgKGtleSBpbiBwcm9wc1tBU1lOQ19SRVNPTFZFRF9TWU1CT0xdKSB7XG4gICAgICAgIGFzeW5jUHJvcHNba2V5XSA9IHByb3BzW0FTWU5DX1JFU09MVkVEX1NZTUJPTF1ba2V5XTtcbiAgICAgIH0gZWxzZSBpZiAoa2V5IGluIHByb3BzW0FTWU5DX09SSUdJTkFMX1NZTUJPTF0pIHtcbiAgICAgICAgYXN5bmNQcm9wc1trZXldID0gcHJvcHNbQVNZTkNfT1JJR0lOQUxfU1lNQk9MXVtrZXldO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgdGhpcy5jb25zdHJ1Y3Rvcih7IC4uLnByb3BzLFxuICAgICAgLi4uYXN5bmNQcm9wcyxcbiAgICAgIC4uLm5ld1Byb3BzXG4gICAgfSk7XG4gIH1cblxufVxuXG5fZGVmaW5lUHJvcGVydHkoQ29tcG9uZW50LCBcImNvbXBvbmVudE5hbWVcIiwgJ0NvbXBvbmVudCcpO1xuXG5fZGVmaW5lUHJvcGVydHkoQ29tcG9uZW50LCBcImRlZmF1bHRQcm9wc1wiLCB7fSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wb25lbnQuanMubWFwIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIkNPTVBPTkVOVF9TWU1CT0wiLCJQUk9QX1RZUEVTX1NZTUJPTCIsIkFTWU5DX09SSUdJTkFMX1NZTUJPTCIsIkFTWU5DX1JFU09MVkVEX1NZTUJPTCIsIkFTWU5DX0RFRkFVTFRTX1NZTUJPTCIsImNyZWF0ZVByb3BzIiwiY291bnRlciIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcE9iamVjdHMiLCJwcm9wcyIsImlkIiwiY291bnQiLCJjbG9uZSIsIm5ld1Byb3BzIiwiYXN5bmNQcm9wcyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/component.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js":
/*!********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASYNC_DEFAULTS_SYMBOL: () => (/* binding */ ASYNC_DEFAULTS_SYMBOL),\n/* harmony export */   ASYNC_ORIGINAL_SYMBOL: () => (/* binding */ ASYNC_ORIGINAL_SYMBOL),\n/* harmony export */   ASYNC_RESOLVED_SYMBOL: () => (/* binding */ ASYNC_RESOLVED_SYMBOL),\n/* harmony export */   COMPONENT_SYMBOL: () => (/* binding */ COMPONENT_SYMBOL),\n/* harmony export */   DEPRECATED_PROPS_SYMBOL: () => (/* binding */ DEPRECATED_PROPS_SYMBOL),\n/* harmony export */   LIFECYCLE: () => (/* binding */ LIFECYCLE),\n/* harmony export */   PROP_TYPES_SYMBOL: () => (/* binding */ PROP_TYPES_SYMBOL)\n/* harmony export */ });\nconst LIFECYCLE = {\n    NO_STATE: \"Awaiting state\",\n    MATCHED: \"Matched. State transferred from previous layer\",\n    INITIALIZED: \"Initialized\",\n    AWAITING_GC: \"Discarded. Awaiting garbage collection\",\n    AWAITING_FINALIZATION: \"No longer matched. Awaiting garbage collection\",\n    FINALIZED: \"Finalized! Awaiting garbage collection\"\n};\nconst COMPONENT_SYMBOL = Symbol.for(\"component\");\nconst PROP_TYPES_SYMBOL = Symbol.for(\"propTypes\");\nconst DEPRECATED_PROPS_SYMBOL = Symbol.for(\"deprecatedProps\");\nconst ASYNC_DEFAULTS_SYMBOL = Symbol.for(\"asyncPropDefaults\");\nconst ASYNC_ORIGINAL_SYMBOL = Symbol.for(\"asyncPropOriginal\");\nconst ASYNC_RESOLVED_SYMBOL = Symbol.for(\"asyncPropResolved\"); //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9saWZlY3ljbGUvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxZQUFZO0lBQ3ZCQyxVQUFVO0lBQ1ZDLFNBQVM7SUFDVEMsYUFBYTtJQUNiQyxhQUFhO0lBQ2JDLHVCQUF1QjtJQUN2QkMsV0FBVztBQUNiLEVBQUU7QUFDSyxNQUFNQyxtQkFBbUJDLE9BQU9DLEdBQUcsQ0FBQyxhQUFhO0FBQ2pELE1BQU1DLG9CQUFvQkYsT0FBT0MsR0FBRyxDQUFDLGFBQWE7QUFDbEQsTUFBTUUsMEJBQTBCSCxPQUFPQyxHQUFHLENBQUMsbUJBQW1CO0FBQzlELE1BQU1HLHdCQUF3QkosT0FBT0MsR0FBRyxDQUFDLHFCQUFxQjtBQUM5RCxNQUFNSSx3QkFBd0JMLE9BQU9DLEdBQUcsQ0FBQyxxQkFBcUI7QUFDOUQsTUFBTUssd0JBQXdCTixPQUFPQyxHQUFHLENBQUMscUJBQXFCLENBQ3JFLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vbGlmZWN5Y2xlL2NvbnN0YW50cy5qcz8yMGQ0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBMSUZFQ1lDTEUgPSB7XG4gIE5PX1NUQVRFOiAnQXdhaXRpbmcgc3RhdGUnLFxuICBNQVRDSEVEOiAnTWF0Y2hlZC4gU3RhdGUgdHJhbnNmZXJyZWQgZnJvbSBwcmV2aW91cyBsYXllcicsXG4gIElOSVRJQUxJWkVEOiAnSW5pdGlhbGl6ZWQnLFxuICBBV0FJVElOR19HQzogJ0Rpc2NhcmRlZC4gQXdhaXRpbmcgZ2FyYmFnZSBjb2xsZWN0aW9uJyxcbiAgQVdBSVRJTkdfRklOQUxJWkFUSU9OOiAnTm8gbG9uZ2VyIG1hdGNoZWQuIEF3YWl0aW5nIGdhcmJhZ2UgY29sbGVjdGlvbicsXG4gIEZJTkFMSVpFRDogJ0ZpbmFsaXplZCEgQXdhaXRpbmcgZ2FyYmFnZSBjb2xsZWN0aW9uJ1xufTtcbmV4cG9ydCBjb25zdCBDT01QT05FTlRfU1lNQk9MID0gU3ltYm9sLmZvcignY29tcG9uZW50Jyk7XG5leHBvcnQgY29uc3QgUFJPUF9UWVBFU19TWU1CT0wgPSBTeW1ib2wuZm9yKCdwcm9wVHlwZXMnKTtcbmV4cG9ydCBjb25zdCBERVBSRUNBVEVEX1BST1BTX1NZTUJPTCA9IFN5bWJvbC5mb3IoJ2RlcHJlY2F0ZWRQcm9wcycpO1xuZXhwb3J0IGNvbnN0IEFTWU5DX0RFRkFVTFRTX1NZTUJPTCA9IFN5bWJvbC5mb3IoJ2FzeW5jUHJvcERlZmF1bHRzJyk7XG5leHBvcnQgY29uc3QgQVNZTkNfT1JJR0lOQUxfU1lNQk9MID0gU3ltYm9sLmZvcignYXN5bmNQcm9wT3JpZ2luYWwnKTtcbmV4cG9ydCBjb25zdCBBU1lOQ19SRVNPTFZFRF9TWU1CT0wgPSBTeW1ib2wuZm9yKCdhc3luY1Byb3BSZXNvbHZlZCcpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJMSUZFQ1lDTEUiLCJOT19TVEFURSIsIk1BVENIRUQiLCJJTklUSUFMSVpFRCIsIkFXQUlUSU5HX0dDIiwiQVdBSVRJTkdfRklOQUxJWkFUSU9OIiwiRklOQUxJWkVEIiwiQ09NUE9ORU5UX1NZTUJPTCIsIlN5bWJvbCIsImZvciIsIlBST1BfVFlQRVNfU1lNQk9MIiwiREVQUkVDQVRFRF9QUk9QU19TWU1CT0wiLCJBU1lOQ19ERUZBVUxUU19TWU1CT0wiLCJBU1lOQ19PUklHSU5BTF9TWU1CT0wiLCJBU1lOQ19SRVNPTFZFRF9TWU1CT0wiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/create-props.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lifecycle/create-props.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createProps: () => (/* binding */ createProps)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _utils_iterable_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/iterable-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prop-types */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/prop-types.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js\");\n\n\n\n\nfunction createProps(component, propObjects) {\n    let extensions;\n    for(let i = propObjects.length - 1; i >= 0; i--){\n        const props = propObjects[i];\n        if (\"extensions\" in props) {\n            extensions = props.extensions;\n        }\n    }\n    const propsPrototype = getPropsPrototype(component.constructor, extensions);\n    const propsInstance = Object.create(propsPrototype);\n    propsInstance[_constants__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYMBOL] = component;\n    propsInstance[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_ORIGINAL_SYMBOL] = {};\n    propsInstance[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_RESOLVED_SYMBOL] = {};\n    for(let i = 0; i < propObjects.length; ++i){\n        const props = propObjects[i];\n        for(const key in props){\n            propsInstance[key] = props[key];\n        }\n    }\n    Object.freeze(propsInstance);\n    return propsInstance;\n}\nconst MergedDefaultPropsCacheKey = \"_mergedDefaultProps\";\nfunction getPropsPrototype(componentClass, extensions) {\n    let cacheKey = MergedDefaultPropsCacheKey;\n    if (extensions) {\n        for (const extension of extensions){\n            const ExtensionClass = extension.constructor;\n            if (ExtensionClass) {\n                cacheKey += \":\".concat(ExtensionClass.extensionName || ExtensionClass.name);\n            }\n        }\n    }\n    const defaultProps = getOwnProperty(componentClass, cacheKey);\n    if (!defaultProps) {\n        return componentClass[cacheKey] = createPropsPrototypeAndTypes(componentClass, extensions || []);\n    }\n    return defaultProps;\n}\nfunction createPropsPrototypeAndTypes(componentClass, extensions) {\n    const parent = componentClass.prototype;\n    if (!parent) {\n        return null;\n    }\n    const parentClass = Object.getPrototypeOf(componentClass);\n    const parentDefaultProps = getPropsPrototype(parentClass);\n    const componentDefaultProps = getOwnProperty(componentClass, \"defaultProps\") || {};\n    const componentPropDefs = (0,_prop_types__WEBPACK_IMPORTED_MODULE_1__.parsePropTypes)(componentDefaultProps);\n    const defaultProps = Object.assign(Object.create(null), parentDefaultProps, componentPropDefs.defaultProps);\n    const propTypes = Object.assign(Object.create(null), parentDefaultProps === null || parentDefaultProps === void 0 ? void 0 : parentDefaultProps[_constants__WEBPACK_IMPORTED_MODULE_0__.PROP_TYPES_SYMBOL], componentPropDefs.propTypes);\n    const deprecatedProps = Object.assign(Object.create(null), parentDefaultProps === null || parentDefaultProps === void 0 ? void 0 : parentDefaultProps[_constants__WEBPACK_IMPORTED_MODULE_0__.DEPRECATED_PROPS_SYMBOL], componentPropDefs.deprecatedProps);\n    for (const extension of extensions){\n        const extensionDefaultProps = getPropsPrototype(extension.constructor);\n        if (extensionDefaultProps) {\n            Object.assign(defaultProps, extensionDefaultProps);\n            Object.assign(propTypes, extensionDefaultProps[_constants__WEBPACK_IMPORTED_MODULE_0__.PROP_TYPES_SYMBOL]);\n            Object.assign(deprecatedProps, extensionDefaultProps[_constants__WEBPACK_IMPORTED_MODULE_0__.DEPRECATED_PROPS_SYMBOL]);\n        }\n    }\n    createPropsPrototype(defaultProps, componentClass);\n    addAsyncPropsToPropPrototype(defaultProps, propTypes);\n    addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps);\n    defaultProps[_constants__WEBPACK_IMPORTED_MODULE_0__.PROP_TYPES_SYMBOL] = propTypes;\n    defaultProps[_constants__WEBPACK_IMPORTED_MODULE_0__.DEPRECATED_PROPS_SYMBOL] = deprecatedProps;\n    if (extensions.length === 0 && !hasOwnProperty(componentClass, \"_propTypes\")) {\n        componentClass._propTypes = propTypes;\n    }\n    return defaultProps;\n}\nfunction createPropsPrototype(defaultProps, componentClass) {\n    const id = getComponentName(componentClass);\n    Object.defineProperties(defaultProps, {\n        id: {\n            writable: true,\n            value: id\n        }\n    });\n}\nfunction addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps) {\n    for(const propName in deprecatedProps){\n        Object.defineProperty(defaultProps, propName, {\n            enumerable: false,\n            set (newValue) {\n                const nameStr = \"\".concat(this.id, \": \").concat(propName);\n                for (const newPropName of deprecatedProps[propName]){\n                    if (!hasOwnProperty(this, newPropName)) {\n                        this[newPropName] = newValue;\n                    }\n                }\n                _utils_log__WEBPACK_IMPORTED_MODULE_2__[\"default\"].deprecated(nameStr, deprecatedProps[propName].join(\"/\"))();\n            }\n        });\n    }\n}\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n    const defaultValues = {};\n    const descriptors = {};\n    for(const propName in propTypes){\n        const propType = propTypes[propName];\n        const { name, value } = propType;\n        if (propType.async) {\n            defaultValues[name] = value;\n            descriptors[name] = getDescriptorForAsyncProp(name);\n        }\n    }\n    defaultProps[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_DEFAULTS_SYMBOL] = defaultValues;\n    defaultProps[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_ORIGINAL_SYMBOL] = {};\n    Object.defineProperties(defaultProps, descriptors);\n}\nfunction getDescriptorForAsyncProp(name) {\n    return {\n        enumerable: true,\n        set (newValue) {\n            if (typeof newValue === \"string\" || newValue instanceof Promise || (0,_utils_iterable_utils__WEBPACK_IMPORTED_MODULE_3__.isAsyncIterable)(newValue)) {\n                this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_ORIGINAL_SYMBOL][name] = newValue;\n            } else {\n                this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_RESOLVED_SYMBOL][name] = newValue;\n            }\n        },\n        get () {\n            if (this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_RESOLVED_SYMBOL]) {\n                if (name in this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_RESOLVED_SYMBOL]) {\n                    const value = this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_RESOLVED_SYMBOL][name];\n                    return value || this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_DEFAULTS_SYMBOL][name];\n                }\n                if (name in this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_ORIGINAL_SYMBOL]) {\n                    const state = this[_constants__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYMBOL] && this[_constants__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYMBOL].internalState;\n                    if (state && state.hasAsyncProp(name)) {\n                        return state.getAsyncProp(name) || this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_DEFAULTS_SYMBOL][name];\n                    }\n                }\n            }\n            return this[_constants__WEBPACK_IMPORTED_MODULE_0__.ASYNC_DEFAULTS_SYMBOL][name];\n        }\n    };\n}\nfunction hasOwnProperty(object, prop) {\n    return Object.prototype.hasOwnProperty.call(object, prop);\n}\nfunction getOwnProperty(object, prop) {\n    return hasOwnProperty(object, prop) && object[prop];\n}\nfunction getComponentName(componentClass) {\n    const componentName = componentClass.componentName;\n    if (!componentName) {\n        _utils_log__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn(\"\".concat(componentClass.name, \".componentName not specified\"))();\n    }\n    return componentName || componentClass.name;\n} //# sourceMappingURL=create-props.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/create-props.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/prop-types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lifecycle/prop-types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePropTypes: () => (/* binding */ parsePropTypes)\n/* harmony export */ });\n/* harmony import */ var _utils_texture__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/texture */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/texture.js\");\n/* harmony import */ var _utils_deep_equal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/deep-equal */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/deep-equal.js\");\n\n\nconst TYPE_DEFINITIONS = {\n    boolean: {\n        validate (value, propType) {\n            return true;\n        },\n        equal (value1, value2, propType) {\n            return Boolean(value1) === Boolean(value2);\n        }\n    },\n    number: {\n        validate (value, propType) {\n            return Number.isFinite(value) && (!(\"max\" in propType) || value <= propType.max) && (!(\"min\" in propType) || value >= propType.min);\n        }\n    },\n    color: {\n        validate (value, propType) {\n            return propType.optional && !value || isArray(value) && (value.length === 3 || value.length === 4);\n        },\n        equal (value1, value2, propType) {\n            return (0,_utils_deep_equal__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(value1, value2, 1);\n        }\n    },\n    accessor: {\n        validate (value, propType) {\n            const valueType = getTypeOf(value);\n            return valueType === \"function\" || valueType === getTypeOf(propType.value);\n        },\n        equal (value1, value2, propType) {\n            if (typeof value2 === \"function\") {\n                return true;\n            }\n            return (0,_utils_deep_equal__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(value1, value2, 1);\n        }\n    },\n    array: {\n        validate (value, propType) {\n            return propType.optional && !value || isArray(value);\n        },\n        equal (value1, value2, propType) {\n            const { compare } = propType;\n            const depth = Number.isInteger(compare) ? compare : compare ? 1 : 0;\n            return compare ? (0,_utils_deep_equal__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(value1, value2, depth) : value1 === value2;\n        }\n    },\n    object: {\n        equal (value1, value2, propType) {\n            if (propType.ignore) {\n                return true;\n            }\n            const { compare } = propType;\n            const depth = Number.isInteger(compare) ? compare : compare ? 1 : 0;\n            return compare ? (0,_utils_deep_equal__WEBPACK_IMPORTED_MODULE_0__.deepEqual)(value1, value2, depth) : value1 === value2;\n        }\n    },\n    function: {\n        validate (value, propType) {\n            return propType.optional && !value || typeof value === \"function\";\n        },\n        equal (value1, value2, propType) {\n            const shouldIgnore = !propType.compare && propType.ignore !== false;\n            return shouldIgnore || value1 === value2;\n        }\n    },\n    data: {\n        transform: (value, propType, component)=>{\n            const { dataTransform } = component.props;\n            return dataTransform && value ? dataTransform(value) : value;\n        }\n    },\n    image: {\n        transform: (value, propType, component)=>{\n            const context = component.context;\n            if (!context || !context.gl) {\n                return null;\n            }\n            return (0,_utils_texture__WEBPACK_IMPORTED_MODULE_1__.createTexture)(component.id, context.gl, value, {\n                ...propType.parameters,\n                ...component.props.textureParameters\n            });\n        },\n        release: (value, propType, component)=>{\n            (0,_utils_texture__WEBPACK_IMPORTED_MODULE_1__.destroyTexture)(component.id, value);\n        }\n    }\n};\nfunction parsePropTypes(propDefs) {\n    const propTypes = {};\n    const defaultProps = {};\n    const deprecatedProps = {};\n    for (const [propName, propDef] of Object.entries(propDefs)){\n        const deprecated = propDef === null || propDef === void 0 ? void 0 : propDef.deprecatedFor;\n        if (deprecated) {\n            deprecatedProps[propName] = Array.isArray(deprecated) ? deprecated : [\n                deprecated\n            ];\n        } else {\n            const propType = parsePropType(propName, propDef);\n            propTypes[propName] = propType;\n            defaultProps[propName] = propType.value;\n        }\n    }\n    return {\n        propTypes,\n        defaultProps,\n        deprecatedProps\n    };\n}\nfunction parsePropType(name, propDef) {\n    switch(getTypeOf(propDef)){\n        case \"object\":\n            return normalizePropDefinition(name, propDef);\n        case \"array\":\n            return normalizePropDefinition(name, {\n                type: \"array\",\n                value: propDef,\n                compare: false\n            });\n        case \"boolean\":\n            return normalizePropDefinition(name, {\n                type: \"boolean\",\n                value: propDef\n            });\n        case \"number\":\n            return normalizePropDefinition(name, {\n                type: \"number\",\n                value: propDef\n            });\n        case \"function\":\n            return normalizePropDefinition(name, {\n                type: \"function\",\n                value: propDef,\n                compare: true\n            });\n        default:\n            return {\n                name,\n                type: \"unknown\",\n                value: propDef\n            };\n    }\n}\nfunction normalizePropDefinition(name, propDef) {\n    if (!(\"type\" in propDef)) {\n        if (!(\"value\" in propDef)) {\n            return {\n                name,\n                type: \"object\",\n                value: propDef\n            };\n        }\n        return {\n            name,\n            type: getTypeOf(propDef.value),\n            ...propDef\n        };\n    }\n    return {\n        name,\n        ...TYPE_DEFINITIONS[propDef.type],\n        ...propDef\n    };\n}\nfunction isArray(value) {\n    return Array.isArray(value) || ArrayBuffer.isView(value);\n}\nfunction getTypeOf(value) {\n    if (isArray(value)) {\n        return \"array\";\n    }\n    if (value === null) {\n        return \"null\";\n    }\n    return typeof value;\n} //# sourceMappingURL=prop-types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/prop-types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/props.js":
/*!****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lifecycle/props.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareProps: () => (/* binding */ compareProps),\n/* harmony export */   diffProps: () => (/* binding */ diffProps),\n/* harmony export */   validateProps: () => (/* binding */ validateProps)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/constants.js\");\n\nfunction validateProps(props) {\n    const propTypes = props[_constants__WEBPACK_IMPORTED_MODULE_0__.PROP_TYPES_SYMBOL];\n    for(const propName in propTypes){\n        const propType = propTypes[propName];\n        const { validate } = propType;\n        if (validate && !validate(props[propName], propType)) {\n            throw new Error(\"Invalid prop \".concat(propName, \": \").concat(props[propName]));\n        }\n    }\n}\nfunction diffProps(props, oldProps) {\n    const propsChangedReason = compareProps({\n        newProps: props,\n        oldProps,\n        propTypes: props[_constants__WEBPACK_IMPORTED_MODULE_0__.PROP_TYPES_SYMBOL],\n        ignoreProps: {\n            data: null,\n            updateTriggers: null,\n            extensions: null,\n            transitions: null\n        }\n    });\n    const dataChangedReason = diffDataProps(props, oldProps);\n    let updateTriggersChangedReason = false;\n    if (!dataChangedReason) {\n        updateTriggersChangedReason = diffUpdateTriggers(props, oldProps);\n    }\n    return {\n        dataChanged: dataChangedReason,\n        propsChanged: propsChangedReason,\n        updateTriggersChanged: updateTriggersChangedReason,\n        extensionsChanged: diffExtensions(props, oldProps),\n        transitionsChanged: diffTransitions(props, oldProps)\n    };\n}\nfunction diffTransitions(props, oldProps) {\n    if (!props.transitions) {\n        return false;\n    }\n    const result = {};\n    const propTypes = props[_constants__WEBPACK_IMPORTED_MODULE_0__.PROP_TYPES_SYMBOL];\n    let changed = false;\n    for(const key in props.transitions){\n        const propType = propTypes[key];\n        const type = propType && propType.type;\n        const isTransitionable = type === \"number\" || type === \"color\" || type === \"array\";\n        if (isTransitionable && comparePropValues(props[key], oldProps[key], propType)) {\n            result[key] = true;\n            changed = true;\n        }\n    }\n    return changed ? result : false;\n}\nfunction compareProps({ newProps, oldProps, ignoreProps = {}, propTypes = {}, triggerName = \"props\" }) {\n    if (oldProps === newProps) {\n        return false;\n    }\n    if (typeof newProps !== \"object\" || newProps === null) {\n        return \"\".concat(triggerName, \" changed shallowly\");\n    }\n    if (typeof oldProps !== \"object\" || oldProps === null) {\n        return \"\".concat(triggerName, \" changed shallowly\");\n    }\n    for (const key of Object.keys(newProps)){\n        if (!(key in ignoreProps)) {\n            if (!(key in oldProps)) {\n                return \"\".concat(triggerName, \".\").concat(key, \" added\");\n            }\n            const changed = comparePropValues(newProps[key], oldProps[key], propTypes[key]);\n            if (changed) {\n                return \"\".concat(triggerName, \".\").concat(key, \" \").concat(changed);\n            }\n        }\n    }\n    for (const key of Object.keys(oldProps)){\n        if (!(key in ignoreProps)) {\n            if (!(key in newProps)) {\n                return \"\".concat(triggerName, \".\").concat(key, \" dropped\");\n            }\n            if (!Object.hasOwnProperty.call(newProps, key)) {\n                const changed = comparePropValues(newProps[key], oldProps[key], propTypes[key]);\n                if (changed) {\n                    return \"\".concat(triggerName, \".\").concat(key, \" \").concat(changed);\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction comparePropValues(newProp, oldProp, propType) {\n    let equal = propType && propType.equal;\n    if (equal && !equal(newProp, oldProp, propType)) {\n        return \"changed deeply\";\n    }\n    if (!equal) {\n        equal = newProp && oldProp && newProp.equals;\n        if (equal && !equal.call(newProp, oldProp)) {\n            return \"changed deeply\";\n        }\n    }\n    if (!equal && oldProp !== newProp) {\n        return \"changed shallowly\";\n    }\n    return null;\n}\nfunction diffDataProps(props, oldProps) {\n    if (oldProps === null) {\n        return \"oldProps is null, initial diff\";\n    }\n    let dataChanged = false;\n    const { dataComparator, _dataDiff } = props;\n    if (dataComparator) {\n        if (!dataComparator(props.data, oldProps.data)) {\n            dataChanged = \"Data comparator detected a change\";\n        }\n    } else if (props.data !== oldProps.data) {\n        dataChanged = \"A new data container was supplied\";\n    }\n    if (dataChanged && _dataDiff) {\n        dataChanged = _dataDiff(props.data, oldProps.data) || dataChanged;\n    }\n    return dataChanged;\n}\nfunction diffUpdateTriggers(props, oldProps) {\n    if (oldProps === null) {\n        return {\n            all: true\n        };\n    }\n    if (\"all\" in props.updateTriggers) {\n        const diffReason = diffUpdateTrigger(props, oldProps, \"all\");\n        if (diffReason) {\n            return {\n                all: true\n            };\n        }\n    }\n    const reason = {};\n    let changed = false;\n    for(const triggerName in props.updateTriggers){\n        if (triggerName !== \"all\") {\n            const diffReason = diffUpdateTrigger(props, oldProps, triggerName);\n            if (diffReason) {\n                reason[triggerName] = true;\n                changed = true;\n            }\n        }\n    }\n    return changed ? reason : false;\n}\nfunction diffExtensions(props, oldProps) {\n    if (oldProps === null) {\n        return true;\n    }\n    const oldExtensions = oldProps.extensions;\n    const { extensions } = props;\n    if (extensions === oldExtensions) {\n        return false;\n    }\n    if (!oldExtensions || !extensions) {\n        return true;\n    }\n    if (extensions.length !== oldExtensions.length) {\n        return true;\n    }\n    for(let i = 0; i < extensions.length; i++){\n        if (!extensions[i].equals(oldExtensions[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction diffUpdateTrigger(props, oldProps, triggerName) {\n    let newTriggers = props.updateTriggers[triggerName];\n    newTriggers = newTriggers === undefined || newTriggers === null ? {} : newTriggers;\n    let oldTriggers = oldProps.updateTriggers[triggerName];\n    oldTriggers = oldTriggers === undefined || oldTriggers === null ? {} : oldTriggers;\n    const diffReason = compareProps({\n        oldProps: oldTriggers,\n        newProps: newTriggers,\n        triggerName\n    });\n    return diffReason;\n} //# sourceMappingURL=props.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/lifecycle/props.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/draw-layers-pass.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/passes/draw-layers-pass.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DrawLayersPass)\n/* harmony export */ });\n/* harmony import */ var _layers_pass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layers-pass */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/layers-pass.js\");\n\nclass DrawLayersPass extends _layers_pass__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    shouldDrawLayer(layer) {\n        const { operation } = layer.props;\n        return operation.includes(\"draw\") || operation.includes(\"terrain\");\n    }\n} //# sourceMappingURL=draw-layers-pass.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9wYXNzZXMvZHJhdy1sYXllcnMtcGFzcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUN4QixNQUFNQyx1QkFBdUJELG9EQUFVQTtJQUNwREUsZ0JBQWdCQyxLQUFLLEVBQUU7UUFDckIsTUFBTSxFQUNKQyxTQUFTLEVBQ1YsR0FBR0QsTUFBTUUsS0FBSztRQUNmLE9BQU9ELFVBQVVFLFFBQVEsQ0FBQyxXQUFXRixVQUFVRSxRQUFRLENBQUM7SUFDMUQ7QUFFRixFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vcGFzc2VzL2RyYXctbGF5ZXJzLXBhc3MuanM/NmJlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGF5ZXJzUGFzcyBmcm9tICcuL2xheWVycy1wYXNzJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERyYXdMYXllcnNQYXNzIGV4dGVuZHMgTGF5ZXJzUGFzcyB7XG4gIHNob3VsZERyYXdMYXllcihsYXllcikge1xuICAgIGNvbnN0IHtcbiAgICAgIG9wZXJhdGlvblxuICAgIH0gPSBsYXllci5wcm9wcztcbiAgICByZXR1cm4gb3BlcmF0aW9uLmluY2x1ZGVzKCdkcmF3JykgfHwgb3BlcmF0aW9uLmluY2x1ZGVzKCd0ZXJyYWluJyk7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHJhdy1sYXllcnMtcGFzcy5qcy5tYXAiXSwibmFtZXMiOlsiTGF5ZXJzUGFzcyIsIkRyYXdMYXllcnNQYXNzIiwic2hvdWxkRHJhd0xheWVyIiwibGF5ZXIiLCJvcGVyYXRpb24iLCJwcm9wcyIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/draw-layers-pass.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/layers-pass.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/passes/layers-pass.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LayersPass),\n/* harmony export */   layerIndexResolver: () => (/* binding */ layerIndexResolver)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _pass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pass */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/pass.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/clear.js\");\n\n\n\nclass LayersPass extends _pass__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_lastRenderIndex\", -1);\n    }\n    render(options) {\n        const gl = this.gl;\n        (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.setParameters)(gl, {\n            framebuffer: options.target\n        });\n        return this._drawLayers(options);\n    }\n    _drawLayers(options) {\n        const { target, moduleParameters, viewports, views, onViewportActive, clearStack = true, clearCanvas = true } = options;\n        options.pass = options.pass || \"unknown\";\n        const gl = this.gl;\n        if (clearCanvas) {\n            clearGLCanvas(gl, target);\n        }\n        if (clearStack) {\n            this._lastRenderIndex = -1;\n        }\n        const renderStats = [];\n        for (const viewport of viewports){\n            const view = views && views[viewport.id];\n            onViewportActive === null || onViewportActive === void 0 ? void 0 : onViewportActive(viewport);\n            const drawLayerParams = this._getDrawLayerParams(viewport, options);\n            const subViewports = viewport.subViewports || [\n                viewport\n            ];\n            for (const subViewport of subViewports){\n                const stats = this._drawLayersInViewport(gl, {\n                    target,\n                    moduleParameters,\n                    viewport: subViewport,\n                    view,\n                    pass: options.pass,\n                    layers: options.layers\n                }, drawLayerParams);\n                renderStats.push(stats);\n            }\n        }\n        return renderStats;\n    }\n    _getDrawLayerParams(viewport, { layers, pass, isPicking = false, layerFilter, cullRect, effects, moduleParameters }, evaluateShouldDrawOnly = false) {\n        const drawLayerParams = [];\n        const indexResolver = layerIndexResolver(this._lastRenderIndex + 1);\n        const drawContext = {\n            layer: layers[0],\n            viewport,\n            isPicking,\n            renderPass: pass,\n            cullRect\n        };\n        const layerFilterCache = {};\n        for(let layerIndex = 0; layerIndex < layers.length; layerIndex++){\n            const layer = layers[layerIndex];\n            const shouldDrawLayer = this._shouldDrawLayer(layer, drawContext, layerFilter, layerFilterCache);\n            const layerParam = {\n                shouldDrawLayer\n            };\n            if (shouldDrawLayer && !evaluateShouldDrawOnly) {\n                layerParam.layerRenderIndex = indexResolver(layer, shouldDrawLayer);\n                layerParam.moduleParameters = this._getModuleParameters(layer, effects, pass, moduleParameters);\n                layerParam.layerParameters = this.getLayerParameters(layer, layerIndex, viewport);\n            }\n            drawLayerParams[layerIndex] = layerParam;\n        }\n        return drawLayerParams;\n    }\n    _drawLayersInViewport(gl, { layers, moduleParameters: globalModuleParameters, pass, target, viewport, view }, drawLayerParams) {\n        const glViewport = getGLViewport(gl, {\n            moduleParameters: globalModuleParameters,\n            target,\n            viewport\n        });\n        if (view && view.props.clear) {\n            const clearOpts = view.props.clear === true ? {\n                color: true,\n                depth: true\n            } : view.props.clear;\n            (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.withParameters)(gl, {\n                scissorTest: true,\n                scissor: glViewport\n            }, ()=>(0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_3__.clear)(gl, clearOpts));\n        }\n        const renderStatus = {\n            totalCount: layers.length,\n            visibleCount: 0,\n            compositeCount: 0,\n            pickableCount: 0\n        };\n        (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.setParameters)(gl, {\n            viewport: glViewport\n        });\n        for(let layerIndex = 0; layerIndex < layers.length; layerIndex++){\n            const layer = layers[layerIndex];\n            const { shouldDrawLayer, layerRenderIndex, moduleParameters, layerParameters } = drawLayerParams[layerIndex];\n            if (shouldDrawLayer && layer.props.pickable) {\n                renderStatus.pickableCount++;\n            }\n            if (layer.isComposite) {\n                renderStatus.compositeCount++;\n            } else if (shouldDrawLayer) {\n                renderStatus.visibleCount++;\n                this._lastRenderIndex = Math.max(this._lastRenderIndex, layerRenderIndex);\n                moduleParameters.viewport = viewport;\n                try {\n                    layer._drawLayer({\n                        moduleParameters,\n                        uniforms: {\n                            layerIndex: layerRenderIndex\n                        },\n                        parameters: layerParameters\n                    });\n                } catch (err) {\n                    layer.raiseError(err, \"drawing \".concat(layer, \" to \").concat(pass));\n                }\n            }\n        }\n        return renderStatus;\n    }\n    shouldDrawLayer(layer) {\n        return true;\n    }\n    getModuleParameters(layer, effects) {\n        return null;\n    }\n    getLayerParameters(layer, layerIndex, viewport) {\n        return layer.props.parameters;\n    }\n    _shouldDrawLayer(layer, drawContext, layerFilter, layerFilterCache) {\n        const shouldDrawLayer = layer.props.visible && this.shouldDrawLayer(layer);\n        if (!shouldDrawLayer) {\n            return false;\n        }\n        drawContext.layer = layer;\n        let parent = layer.parent;\n        while(parent){\n            if (!parent.props.visible || !parent.filterSubLayer(drawContext)) {\n                return false;\n            }\n            drawContext.layer = parent;\n            parent = parent.parent;\n        }\n        if (layerFilter) {\n            const rootLayerId = drawContext.layer.id;\n            if (!(rootLayerId in layerFilterCache)) {\n                layerFilterCache[rootLayerId] = layerFilter(drawContext);\n            }\n            if (!layerFilterCache[rootLayerId]) {\n                return false;\n            }\n        }\n        layer.activateViewport(drawContext.viewport);\n        return true;\n    }\n    _getModuleParameters(layer, effects, pass, overrides) {\n        var _layer$internalState;\n        const moduleParameters = Object.assign(Object.create(((_layer$internalState = layer.internalState) === null || _layer$internalState === void 0 ? void 0 : _layer$internalState.propsInTransition) || layer.props), {\n            autoWrapLongitude: layer.wrapLongitude,\n            viewport: layer.context.viewport,\n            mousePosition: layer.context.mousePosition,\n            pickingActive: 0,\n            devicePixelRatio: (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.cssToDeviceRatio)(this.gl)\n        });\n        if (effects) {\n            for (const effect of effects){\n                var _effect$getModulePara;\n                Object.assign(moduleParameters, (_effect$getModulePara = effect.getModuleParameters) === null || _effect$getModulePara === void 0 ? void 0 : _effect$getModulePara.call(effect, layer));\n            }\n        }\n        return Object.assign(moduleParameters, this.getModuleParameters(layer, effects), overrides);\n    }\n}\nfunction layerIndexResolver(startIndex = 0, layerIndices = {}) {\n    const resolvers = {};\n    const resolveLayerIndex = (layer, isDrawn)=>{\n        const indexOverride = layer.props._offset;\n        const layerId = layer.id;\n        const parentId = layer.parent && layer.parent.id;\n        let index;\n        if (parentId && !(parentId in layerIndices)) {\n            resolveLayerIndex(layer.parent, false);\n        }\n        if (parentId in resolvers) {\n            const resolver = resolvers[parentId] = resolvers[parentId] || layerIndexResolver(layerIndices[parentId], layerIndices);\n            index = resolver(layer, isDrawn);\n            resolvers[layerId] = resolver;\n        } else if (Number.isFinite(indexOverride)) {\n            index = indexOverride + (layerIndices[parentId] || 0);\n            resolvers[layerId] = null;\n        } else {\n            index = startIndex;\n        }\n        if (isDrawn && index >= startIndex) {\n            startIndex = index + 1;\n        }\n        layerIndices[layerId] = index;\n        return index;\n    };\n    return resolveLayerIndex;\n}\nfunction getGLViewport(gl, { moduleParameters, target, viewport }) {\n    const useTarget = target && target.id !== \"default-framebuffer\";\n    const pixelRatio = moduleParameters && moduleParameters.devicePixelRatio || (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.cssToDeviceRatio)(gl);\n    const height = useTarget ? target.height : gl.drawingBufferHeight;\n    const dimensions = viewport;\n    return [\n        dimensions.x * pixelRatio,\n        height - (dimensions.y + dimensions.height) * pixelRatio,\n        dimensions.width * pixelRatio,\n        dimensions.height * pixelRatio\n    ];\n}\nfunction clearGLCanvas(gl, targetFramebuffer) {\n    const width = targetFramebuffer ? targetFramebuffer.width : gl.drawingBufferWidth;\n    const height = targetFramebuffer ? targetFramebuffer.height : gl.drawingBufferHeight;\n    (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.setParameters)(gl, {\n        viewport: [\n            0,\n            0,\n            width,\n            height\n        ]\n    });\n    gl.clear(16384 | 256);\n} //# sourceMappingURL=layers-pass.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/layers-pass.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/pass.js":
/*!************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/passes/pass.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Pass)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nclass Pass {\n    constructor(gl, props = {\n        id: \"pass\"\n    }){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"props\", void 0);\n        const { id } = props;\n        this.id = id;\n        this.gl = gl;\n        this.props = {\n            ...props\n        };\n    }\n    setProps(props) {\n        Object.assign(this.props, props);\n    }\n    render(params) {}\n    cleanup() {}\n} //# sourceMappingURL=pass.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9wYXNzZXMvcGFzcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RTtBQUN6RCxNQUFNQztJQUNuQkMsWUFBWUMsRUFBRSxFQUFFQyxRQUFRO1FBQ3RCQyxJQUFJO0lBQ04sQ0FBQyxDQUFFO1FBQ0RMLHFGQUFlQSxDQUFDLElBQUksRUFBRSxNQUFNLEtBQUs7UUFFakNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxNQUFNLEtBQUs7UUFFakNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxTQUFTLEtBQUs7UUFFcEMsTUFBTSxFQUNKSyxFQUFFLEVBQ0gsR0FBR0Q7UUFDSixJQUFJLENBQUNDLEVBQUUsR0FBR0E7UUFDVixJQUFJLENBQUNGLEVBQUUsR0FBR0E7UUFDVixJQUFJLENBQUNDLEtBQUssR0FBRztZQUFFLEdBQUdBLEtBQUs7UUFDdkI7SUFDRjtJQUVBRSxTQUFTRixLQUFLLEVBQUU7UUFDZEcsT0FBT0MsTUFBTSxDQUFDLElBQUksQ0FBQ0osS0FBSyxFQUFFQTtJQUM1QjtJQUVBSyxPQUFPQyxNQUFNLEVBQUUsQ0FBQztJQUVoQkMsVUFBVSxDQUFDO0FBRWIsRUFDQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3Bhc3Nlcy9wYXNzLmpzPzk1NjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHlcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhc3Mge1xuICBjb25zdHJ1Y3RvcihnbCwgcHJvcHMgPSB7XG4gICAgaWQ6ICdwYXNzJ1xuICB9KSB7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiaWRcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImdsXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJwcm9wc1wiLCB2b2lkIDApO1xuXG4gICAgY29uc3Qge1xuICAgICAgaWRcbiAgICB9ID0gcHJvcHM7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLnByb3BzID0geyAuLi5wcm9wc1xuICAgIH07XG4gIH1cblxuICBzZXRQcm9wcyhwcm9wcykge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5wcm9wcywgcHJvcHMpO1xuICB9XG5cbiAgcmVuZGVyKHBhcmFtcykge31cblxuICBjbGVhbnVwKCkge31cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFzcy5qcy5tYXAiXSwibmFtZXMiOlsiX2RlZmluZVByb3BlcnR5IiwiUGFzcyIsImNvbnN0cnVjdG9yIiwiZ2wiLCJwcm9wcyIsImlkIiwic2V0UHJvcHMiLCJPYmplY3QiLCJhc3NpZ24iLCJyZW5kZXIiLCJwYXJhbXMiLCJjbGVhbnVwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/pass.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/pick-layers-pass.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/passes/pick-layers-pass.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PickLayersPass)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _layers_pass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layers-pass */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/layers-pass.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\n\n\n\nconst PICKING_PARAMETERS = {\n    blendFunc: [\n        1,\n        0,\n        32771,\n        0\n    ],\n    blendEquation: 32774\n};\nclass PickLayersPass extends _layers_pass__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pickZ\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_colorEncoderState\", null);\n    }\n    render(props) {\n        if (\"pickingFBO\" in props) {\n            return this._drawPickingBuffer(props);\n        }\n        return super.render(props);\n    }\n    _drawPickingBuffer({ layers, layerFilter, views, viewports, onViewportActive, pickingFBO, deviceRect: { x, y, width, height }, cullRect, effects, pass = \"picking\", pickZ, moduleParameters }) {\n        const gl = this.gl;\n        this.pickZ = pickZ;\n        const colorEncoderState = this._resetColorEncoder(pickZ);\n        const renderStatus = (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.withParameters)(gl, {\n            scissorTest: true,\n            scissor: [\n                x,\n                y,\n                width,\n                height\n            ],\n            clearColor: [\n                0,\n                0,\n                0,\n                0\n            ],\n            depthMask: true,\n            depthTest: true,\n            depthRange: [\n                0,\n                1\n            ],\n            colorMask: [\n                true,\n                true,\n                true,\n                true\n            ],\n            ...PICKING_PARAMETERS,\n            blend: !pickZ\n        }, ()=>super.render({\n                target: pickingFBO,\n                layers,\n                layerFilter,\n                views,\n                viewports,\n                onViewportActive,\n                cullRect,\n                effects: effects === null || effects === void 0 ? void 0 : effects.filter((e)=>e.useInPicking),\n                pass,\n                isPicking: true,\n                moduleParameters\n            }));\n        this._colorEncoderState = null;\n        const decodePickingColor = colorEncoderState && decodeColor.bind(null, colorEncoderState);\n        return {\n            decodePickingColor,\n            stats: renderStatus\n        };\n    }\n    shouldDrawLayer(layer) {\n        const { pickable, operation } = layer.props;\n        return pickable && operation.includes(\"draw\") || operation.includes(\"terrain\") || operation.includes(\"mask\");\n    }\n    getModuleParameters() {\n        return {\n            pickingActive: 1,\n            pickingAttribute: this.pickZ,\n            lightSources: {}\n        };\n    }\n    getLayerParameters(layer, layerIndex, viewport) {\n        const pickParameters = {\n            ...layer.props.parameters\n        };\n        const { pickable, operation } = layer.props;\n        if (!this._colorEncoderState) {\n            pickParameters.blend = false;\n        } else if (pickable && operation.includes(\"draw\")) {\n            Object.assign(pickParameters, PICKING_PARAMETERS);\n            pickParameters.blend = true;\n            pickParameters.blendColor = encodeColor(this._colorEncoderState, layer, viewport);\n        }\n        if (operation.includes(\"terrain\")) {\n            pickParameters.blend = false;\n        }\n        return pickParameters;\n    }\n    _resetColorEncoder(pickZ) {\n        this._colorEncoderState = pickZ ? null : {\n            byLayer: new Map(),\n            byAlpha: []\n        };\n        return this._colorEncoderState;\n    }\n}\nfunction encodeColor(encoded, layer, viewport) {\n    const { byLayer, byAlpha } = encoded;\n    let a;\n    let entry = byLayer.get(layer);\n    if (entry) {\n        entry.viewports.push(viewport);\n        a = entry.a;\n    } else {\n        a = byLayer.size + 1;\n        if (a <= 255) {\n            entry = {\n                a,\n                layer,\n                viewports: [\n                    viewport\n                ]\n            };\n            byLayer.set(layer, entry);\n            byAlpha[a] = entry;\n        } else {\n            _utils_log__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn(\"Too many pickable layers, only picking the first 255\")();\n            a = 0;\n        }\n    }\n    return [\n        0,\n        0,\n        0,\n        a / 255\n    ];\n}\nfunction decodeColor(encoded, pickedColor) {\n    const entry = encoded.byAlpha[pickedColor[3]];\n    return entry && {\n        pickedLayer: entry.layer,\n        pickedViewports: entry.viewports,\n        pickedObjectIndex: entry.layer.decodePickingColor(pickedColor)\n    };\n} //# sourceMappingURL=pick-layers-pass.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/pick-layers-pass.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/shadow-pass.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/passes/shadow-pass.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ShadowPass)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _layers_pass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layers-pass */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/layers-pass.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/renderbuffer.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/gltools/dist/esm/index.js\");\n\n\n\nclass ShadowPass extends _layers_pass__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(gl, props){\n        super(gl, props);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"shadowMap\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"depthBuffer\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"fbo\", void 0);\n        this.shadowMap = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"](gl, {\n            width: 1,\n            height: 1,\n            parameters: {\n                [10241]: 9729,\n                [10240]: 9729,\n                [10242]: 33071,\n                [10243]: 33071\n            }\n        });\n        this.depthBuffer = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, {\n            format: 33189,\n            width: 1,\n            height: 1\n        });\n        this.fbo = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"](gl, {\n            id: \"shadowmap\",\n            width: 1,\n            height: 1,\n            attachments: {\n                [36064]: this.shadowMap,\n                [36096]: this.depthBuffer\n            }\n        });\n    }\n    render(params) {\n        const target = this.fbo;\n        (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_5__.withParameters)(this.gl, {\n            depthRange: [\n                0,\n                1\n            ],\n            depthTest: true,\n            blend: false,\n            clearColor: [\n                1,\n                1,\n                1,\n                1\n            ]\n        }, ()=>{\n            const viewport = params.viewports[0];\n            const pixelRatio = (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_5__.cssToDeviceRatio)(this.gl);\n            const width = viewport.width * pixelRatio;\n            const height = viewport.height * pixelRatio;\n            if (width !== target.width || height !== target.height) {\n                target.resize({\n                    width,\n                    height\n                });\n            }\n            super.render({\n                ...params,\n                target,\n                pass: \"shadow\"\n            });\n        });\n    }\n    shouldDrawLayer(layer) {\n        return layer.props.shadowEnabled !== false;\n    }\n    getModuleParameters() {\n        return {\n            drawToShadowMap: true\n        };\n    }\n    delete() {\n        if (this.fbo) {\n            this.fbo.delete();\n            this.fbo = null;\n        }\n        if (this.shadowMap) {\n            this.shadowMap.delete();\n            this.shadowMap = null;\n        }\n        if (this.depthBuffer) {\n            this.depthBuffer.delete();\n            this.depthBuffer = null;\n        }\n    }\n} //# sourceMappingURL=shadow-pass.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9wYXNzZXMvc2hhZG93LXBhc3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF3RTtBQUNsQjtBQUNpRDtBQUN4RixNQUFNUSxtQkFBbUJOLG9EQUFVQTtJQUNoRE8sWUFBWUMsRUFBRSxFQUFFQyxLQUFLLENBQUU7UUFDckIsS0FBSyxDQUFDRCxJQUFJQztRQUVWWCxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsYUFBYSxLQUFLO1FBRXhDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsZUFBZSxLQUFLO1FBRTFDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsT0FBTyxLQUFLO1FBRWxDLElBQUksQ0FBQ1ksU0FBUyxHQUFHLElBQUlSLHFEQUFTQSxDQUFDTSxJQUFJO1lBQ2pDRyxPQUFPO1lBQ1BDLFFBQVE7WUFDUkMsWUFBWTtnQkFDVixDQUFDLE1BQU0sRUFBRTtnQkFDVCxDQUFDLE1BQU0sRUFBRTtnQkFDVCxDQUFDLE1BQU0sRUFBRTtnQkFDVCxDQUFDLE1BQU0sRUFBRTtZQUNYO1FBQ0Y7UUFDQSxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJWCxxREFBWUEsQ0FBQ0ssSUFBSTtZQUN0Q08sUUFBUTtZQUNSSixPQUFPO1lBQ1BDLFFBQVE7UUFDVjtRQUNBLElBQUksQ0FBQ0ksR0FBRyxHQUFHLElBQUlmLHFEQUFXQSxDQUFDTyxJQUFJO1lBQzdCUyxJQUFJO1lBQ0pOLE9BQU87WUFDUEMsUUFBUTtZQUNSTSxhQUFhO2dCQUNYLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQ1IsU0FBUztnQkFDdkIsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDSSxXQUFXO1lBQzNCO1FBQ0Y7SUFDRjtJQUVBSyxPQUFPQyxNQUFNLEVBQUU7UUFDYixNQUFNQyxTQUFTLElBQUksQ0FBQ0wsR0FBRztRQUN2QlosNkRBQWNBLENBQUMsSUFBSSxDQUFDSSxFQUFFLEVBQUU7WUFDdEJjLFlBQVk7Z0JBQUM7Z0JBQUc7YUFBRTtZQUNsQkMsV0FBVztZQUNYQyxPQUFPO1lBQ1BDLFlBQVk7Z0JBQUM7Z0JBQUc7Z0JBQUc7Z0JBQUc7YUFBRTtRQUMxQixHQUFHO1lBQ0QsTUFBTUMsV0FBV04sT0FBT08sU0FBUyxDQUFDLEVBQUU7WUFDcEMsTUFBTUMsYUFBYXZCLCtEQUFnQkEsQ0FBQyxJQUFJLENBQUNHLEVBQUU7WUFDM0MsTUFBTUcsUUFBUWUsU0FBU2YsS0FBSyxHQUFHaUI7WUFDL0IsTUFBTWhCLFNBQVNjLFNBQVNkLE1BQU0sR0FBR2dCO1lBRWpDLElBQUlqQixVQUFVVSxPQUFPVixLQUFLLElBQUlDLFdBQVdTLE9BQU9ULE1BQU0sRUFBRTtnQkFDdERTLE9BQU9RLE1BQU0sQ0FBQztvQkFDWmxCO29CQUNBQztnQkFDRjtZQUNGO1lBRUEsS0FBSyxDQUFDTyxPQUFPO2dCQUFFLEdBQUdDLE1BQU07Z0JBQ3RCQztnQkFDQVMsTUFBTTtZQUNSO1FBQ0Y7SUFDRjtJQUVBQyxnQkFBZ0JDLEtBQUssRUFBRTtRQUNyQixPQUFPQSxNQUFNdkIsS0FBSyxDQUFDd0IsYUFBYSxLQUFLO0lBQ3ZDO0lBRUFDLHNCQUFzQjtRQUNwQixPQUFPO1lBQ0xDLGlCQUFpQjtRQUNuQjtJQUNGO0lBRUFDLFNBQVM7UUFDUCxJQUFJLElBQUksQ0FBQ3BCLEdBQUcsRUFBRTtZQUNaLElBQUksQ0FBQ0EsR0FBRyxDQUFDb0IsTUFBTTtZQUNmLElBQUksQ0FBQ3BCLEdBQUcsR0FBRztRQUNiO1FBRUEsSUFBSSxJQUFJLENBQUNOLFNBQVMsRUFBRTtZQUNsQixJQUFJLENBQUNBLFNBQVMsQ0FBQzBCLE1BQU07WUFDckIsSUFBSSxDQUFDMUIsU0FBUyxHQUFHO1FBQ25CO1FBRUEsSUFBSSxJQUFJLENBQUNJLFdBQVcsRUFBRTtZQUNwQixJQUFJLENBQUNBLFdBQVcsQ0FBQ3NCLE1BQU07WUFDdkIsSUFBSSxDQUFDdEIsV0FBVyxHQUFHO1FBQ3JCO0lBQ0Y7QUFFRixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vcGFzc2VzL3NoYWRvdy1wYXNzLmpzPzljY2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCB7IGRlZmF1bHQgYXMgTGF5ZXJzUGFzcyB9IGZyb20gJy4vbGF5ZXJzLXBhc3MnO1xuaW1wb3J0IHsgRnJhbWVidWZmZXIsIFRleHR1cmUyRCwgUmVuZGVyYnVmZmVyLCB3aXRoUGFyYW1ldGVycywgY3NzVG9EZXZpY2VSYXRpbyB9IGZyb20gJ0BsdW1hLmdsL2NvcmUnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hhZG93UGFzcyBleHRlbmRzIExheWVyc1Bhc3Mge1xuICBjb25zdHJ1Y3RvcihnbCwgcHJvcHMpIHtcbiAgICBzdXBlcihnbCwgcHJvcHMpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwic2hhZG93TWFwXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJkZXB0aEJ1ZmZlclwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiZmJvXCIsIHZvaWQgMCk7XG5cbiAgICB0aGlzLnNoYWRvd01hcCA9IG5ldyBUZXh0dXJlMkQoZ2wsIHtcbiAgICAgIHdpZHRoOiAxLFxuICAgICAgaGVpZ2h0OiAxLFxuICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICBbMTAyNDFdOiA5NzI5LFxuICAgICAgICBbMTAyNDBdOiA5NzI5LFxuICAgICAgICBbMTAyNDJdOiAzMzA3MSxcbiAgICAgICAgWzEwMjQzXTogMzMwNzFcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLmRlcHRoQnVmZmVyID0gbmV3IFJlbmRlcmJ1ZmZlcihnbCwge1xuICAgICAgZm9ybWF0OiAzMzE4OSxcbiAgICAgIHdpZHRoOiAxLFxuICAgICAgaGVpZ2h0OiAxXG4gICAgfSk7XG4gICAgdGhpcy5mYm8gPSBuZXcgRnJhbWVidWZmZXIoZ2wsIHtcbiAgICAgIGlkOiAnc2hhZG93bWFwJyxcbiAgICAgIHdpZHRoOiAxLFxuICAgICAgaGVpZ2h0OiAxLFxuICAgICAgYXR0YWNobWVudHM6IHtcbiAgICAgICAgWzM2MDY0XTogdGhpcy5zaGFkb3dNYXAsXG4gICAgICAgIFszNjA5Nl06IHRoaXMuZGVwdGhCdWZmZXJcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcihwYXJhbXMpIHtcbiAgICBjb25zdCB0YXJnZXQgPSB0aGlzLmZibztcbiAgICB3aXRoUGFyYW1ldGVycyh0aGlzLmdsLCB7XG4gICAgICBkZXB0aFJhbmdlOiBbMCwgMV0sXG4gICAgICBkZXB0aFRlc3Q6IHRydWUsXG4gICAgICBibGVuZDogZmFsc2UsXG4gICAgICBjbGVhckNvbG9yOiBbMSwgMSwgMSwgMV1cbiAgICB9LCAoKSA9PiB7XG4gICAgICBjb25zdCB2aWV3cG9ydCA9IHBhcmFtcy52aWV3cG9ydHNbMF07XG4gICAgICBjb25zdCBwaXhlbFJhdGlvID0gY3NzVG9EZXZpY2VSYXRpbyh0aGlzLmdsKTtcbiAgICAgIGNvbnN0IHdpZHRoID0gdmlld3BvcnQud2lkdGggKiBwaXhlbFJhdGlvO1xuICAgICAgY29uc3QgaGVpZ2h0ID0gdmlld3BvcnQuaGVpZ2h0ICogcGl4ZWxSYXRpbztcblxuICAgICAgaWYgKHdpZHRoICE9PSB0YXJnZXQud2lkdGggfHwgaGVpZ2h0ICE9PSB0YXJnZXQuaGVpZ2h0KSB7XG4gICAgICAgIHRhcmdldC5yZXNpemUoe1xuICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgIGhlaWdodFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgc3VwZXIucmVuZGVyKHsgLi4ucGFyYW1zLFxuICAgICAgICB0YXJnZXQsXG4gICAgICAgIHBhc3M6ICdzaGFkb3cnXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHNob3VsZERyYXdMYXllcihsYXllcikge1xuICAgIHJldHVybiBsYXllci5wcm9wcy5zaGFkb3dFbmFibGVkICE9PSBmYWxzZTtcbiAgfVxuXG4gIGdldE1vZHVsZVBhcmFtZXRlcnMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRyYXdUb1NoYWRvd01hcDogdHJ1ZVxuICAgIH07XG4gIH1cblxuICBkZWxldGUoKSB7XG4gICAgaWYgKHRoaXMuZmJvKSB7XG4gICAgICB0aGlzLmZiby5kZWxldGUoKTtcbiAgICAgIHRoaXMuZmJvID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zaGFkb3dNYXApIHtcbiAgICAgIHRoaXMuc2hhZG93TWFwLmRlbGV0ZSgpO1xuICAgICAgdGhpcy5zaGFkb3dNYXAgPSBudWxsO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmRlcHRoQnVmZmVyKSB7XG4gICAgICB0aGlzLmRlcHRoQnVmZmVyLmRlbGV0ZSgpO1xuICAgICAgdGhpcy5kZXB0aEJ1ZmZlciA9IG51bGw7XG4gICAgfVxuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYWRvdy1wYXNzLmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJkZWZhdWx0IiwiTGF5ZXJzUGFzcyIsIkZyYW1lYnVmZmVyIiwiVGV4dHVyZTJEIiwiUmVuZGVyYnVmZmVyIiwid2l0aFBhcmFtZXRlcnMiLCJjc3NUb0RldmljZVJhdGlvIiwiU2hhZG93UGFzcyIsImNvbnN0cnVjdG9yIiwiZ2wiLCJwcm9wcyIsInNoYWRvd01hcCIsIndpZHRoIiwiaGVpZ2h0IiwicGFyYW1ldGVycyIsImRlcHRoQnVmZmVyIiwiZm9ybWF0IiwiZmJvIiwiaWQiLCJhdHRhY2htZW50cyIsInJlbmRlciIsInBhcmFtcyIsInRhcmdldCIsImRlcHRoUmFuZ2UiLCJkZXB0aFRlc3QiLCJibGVuZCIsImNsZWFyQ29sb3IiLCJ2aWV3cG9ydCIsInZpZXdwb3J0cyIsInBpeGVsUmF0aW8iLCJyZXNpemUiLCJwYXNzIiwic2hvdWxkRHJhd0xheWVyIiwibGF5ZXIiLCJzaGFkb3dFbmFibGVkIiwiZ2V0TW9kdWxlUGFyYW1ldGVycyIsImRyYXdUb1NoYWRvd01hcCIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/passes/shadow-pass.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createProgramManager: () => (/* binding */ createProgramManager),\n/* harmony export */   gouraudLighting: () => (/* reexport safe */ _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__.gouraudLighting),\n/* harmony export */   phongLighting: () => (/* reexport safe */ _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__.phongLighting),\n/* harmony export */   picking: () => (/* reexport safe */ _picking_picking__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   project: () => (/* reexport safe */ _project_project__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   project32: () => (/* reexport safe */ _project32_project32__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   shadow: () => (/* reexport safe */ _shadow_shadow__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/program-manager.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js\");\n/* harmony import */ var _project_project__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./project/project */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.js\");\n/* harmony import */ var _project32_project32__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./project32/project32 */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _shadow_shadow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shadow/shadow */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/shadow/shadow.js\");\n/* harmony import */ var _picking_picking__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./picking/picking */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n\n\n\n\n\n\nconst DEFAULT_MODULES = [\n    _project_project__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n];\nconst SHADER_HOOKS = [\n    \"vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)\",\n    \"vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)\",\n    \"vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)\",\n    \"fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)\"\n];\nfunction createProgramManager(gl) {\n    const programManager = _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getDefaultProgramManager(gl);\n    for (const shaderModule of DEFAULT_MODULES){\n        programManager.addDefaultModule(shaderModule);\n    }\n    for (const shaderHook of SHADER_HOOKS){\n        programManager.addShaderHook(shaderHook);\n    }\n    return programManager;\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9zaGFkZXJsaWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUErQztBQUNnQjtBQUN2QjtBQUNNO0FBQ1Q7QUFDRztBQUN4QyxNQUFNTyxrQkFBa0I7SUFBQ0osd0RBQU9BO0NBQUM7QUFDakMsTUFBTUssZUFBZTtJQUFDO0lBQW1FO0lBQThFO0lBQXFFO0NBQXNFO0FBQzNTLFNBQVNDLHFCQUFxQkMsRUFBRTtJQUNyQyxNQUFNQyxpQkFBaUJYLHFEQUFjQSxDQUFDWSx3QkFBd0IsQ0FBQ0Y7SUFFL0QsS0FBSyxNQUFNRyxnQkFBZ0JOLGdCQUFpQjtRQUMxQ0ksZUFBZUcsZ0JBQWdCLENBQUNEO0lBQ2xDO0lBRUEsS0FBSyxNQUFNRSxjQUFjUCxhQUFjO1FBQ3JDRyxlQUFlSyxhQUFhLENBQUNEO0lBQy9CO0lBRUEsT0FBT0o7QUFDVDtBQUMrRSxDQUMvRSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3NoYWRlcmxpYi9pbmRleC5qcz80YTI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb2dyYW1NYW5hZ2VyIH0gZnJvbSAnQGx1bWEuZ2wvY29yZSc7XG5pbXBvcnQgeyBnb3VyYXVkTGlnaHRpbmcsIHBob25nTGlnaHRpbmcgfSBmcm9tICdAbHVtYS5nbC9jb3JlJztcbmltcG9ydCBwcm9qZWN0IGZyb20gJy4vcHJvamVjdC9wcm9qZWN0JztcbmltcG9ydCBwcm9qZWN0MzIgZnJvbSAnLi9wcm9qZWN0MzIvcHJvamVjdDMyJztcbmltcG9ydCBzaGFkb3cgZnJvbSAnLi9zaGFkb3cvc2hhZG93JztcbmltcG9ydCBwaWNraW5nIGZyb20gJy4vcGlja2luZy9waWNraW5nJztcbmNvbnN0IERFRkFVTFRfTU9EVUxFUyA9IFtwcm9qZWN0XTtcbmNvbnN0IFNIQURFUl9IT09LUyA9IFsndnM6REVDS0dMX0ZJTFRFUl9TSVpFKGlub3V0IHZlYzMgc2l6ZSwgVmVydGV4R2VvbWV0cnkgZ2VvbWV0cnkpJywgJ3ZzOkRFQ0tHTF9GSUxURVJfR0xfUE9TSVRJT04oaW5vdXQgdmVjNCBwb3NpdGlvbiwgVmVydGV4R2VvbWV0cnkgZ2VvbWV0cnkpJywgJ3ZzOkRFQ0tHTF9GSUxURVJfQ09MT1IoaW5vdXQgdmVjNCBjb2xvciwgVmVydGV4R2VvbWV0cnkgZ2VvbWV0cnkpJywgJ2ZzOkRFQ0tHTF9GSUxURVJfQ09MT1IoaW5vdXQgdmVjNCBjb2xvciwgRnJhZ21lbnRHZW9tZXRyeSBnZW9tZXRyeSknXTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm9ncmFtTWFuYWdlcihnbCkge1xuICBjb25zdCBwcm9ncmFtTWFuYWdlciA9IFByb2dyYW1NYW5hZ2VyLmdldERlZmF1bHRQcm9ncmFtTWFuYWdlcihnbCk7XG5cbiAgZm9yIChjb25zdCBzaGFkZXJNb2R1bGUgb2YgREVGQVVMVF9NT0RVTEVTKSB7XG4gICAgcHJvZ3JhbU1hbmFnZXIuYWRkRGVmYXVsdE1vZHVsZShzaGFkZXJNb2R1bGUpO1xuICB9XG5cbiAgZm9yIChjb25zdCBzaGFkZXJIb29rIG9mIFNIQURFUl9IT09LUykge1xuICAgIHByb2dyYW1NYW5hZ2VyLmFkZFNoYWRlckhvb2soc2hhZGVySG9vayk7XG4gIH1cblxuICByZXR1cm4gcHJvZ3JhbU1hbmFnZXI7XG59XG5leHBvcnQgeyBwaWNraW5nLCBwcm9qZWN0LCBwcm9qZWN0MzIsIGdvdXJhdWRMaWdodGluZywgcGhvbmdMaWdodGluZywgc2hhZG93IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiUHJvZ3JhbU1hbmFnZXIiLCJnb3VyYXVkTGlnaHRpbmciLCJwaG9uZ0xpZ2h0aW5nIiwicHJvamVjdCIsInByb2plY3QzMiIsInNoYWRvdyIsInBpY2tpbmciLCJERUZBVUxUX01PRFVMRVMiLCJTSEFERVJfSE9PS1MiLCJjcmVhdGVQcm9ncmFtTWFuYWdlciIsImdsIiwicHJvZ3JhbU1hbmFnZXIiLCJnZXREZWZhdWx0UHJvZ3JhbU1hbmFnZXIiLCJzaGFkZXJNb2R1bGUiLCJhZGREZWZhdWx0TW9kdWxlIiwic2hhZGVySG9vayIsImFkZFNoYWRlckhvb2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/misc/geometry.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/misc/geometry.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst defines = \"#define SMOOTH_EDGE_RADIUS 0.5\";\nconst vs = \"\\n\".concat(defines, \"\\n\\nstruct VertexGeometry {\\n  vec4 position;\\n  vec3 worldPosition;\\n  vec3 worldPositionAlt;\\n  vec3 normal;\\n  vec2 uv;\\n  vec3 pickingColor;\\n} geometry = VertexGeometry(\\n  vec4(0.0, 0.0, 1.0, 0.0),\\n  vec3(0.0),\\n  vec3(0.0),\\n  vec3(0.0),\\n  vec2(0.0),\\n  vec3(0.0)\\n);\\n\");\nconst fs = \"\\n\".concat(defines, \"\\n\\nstruct FragmentGeometry {\\n  vec2 uv;\\n} geometry;\\n\\nfloat smoothedge(float edge, float x) {\\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\\n}\\n\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: \"geometry\",\n    vs,\n    fs\n}); //# sourceMappingURL=geometry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9zaGFkZXJsaWIvbWlzYy9nZW9tZXRyeS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsVUFBVTtBQUNoQixNQUFNQyxLQUFLLEtBQUtDLE1BQU0sQ0FBQ0YsU0FBUztBQUNoQyxNQUFNRyxLQUFLLEtBQUtELE1BQU0sQ0FBQ0YsU0FBUztBQUNoQyxpRUFBZTtJQUNiSSxNQUFNO0lBQ05IO0lBQ0FFO0FBQ0YsQ0FBQyxFQUFDLENBQ0Ysb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9zaGFkZXJsaWIvbWlzYy9nZW9tZXRyeS5qcz84NTE2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRlZmluZXMgPSAnI2RlZmluZSBTTU9PVEhfRURHRV9SQURJVVMgMC41JztcbmNvbnN0IHZzID0gXCJcXG5cIi5jb25jYXQoZGVmaW5lcywgXCJcXG5cXG5zdHJ1Y3QgVmVydGV4R2VvbWV0cnkge1xcbiAgdmVjNCBwb3NpdGlvbjtcXG4gIHZlYzMgd29ybGRQb3NpdGlvbjtcXG4gIHZlYzMgd29ybGRQb3NpdGlvbkFsdDtcXG4gIHZlYzMgbm9ybWFsO1xcbiAgdmVjMiB1djtcXG4gIHZlYzMgcGlja2luZ0NvbG9yO1xcbn0gZ2VvbWV0cnkgPSBWZXJ0ZXhHZW9tZXRyeShcXG4gIHZlYzQoMC4wLCAwLjAsIDEuMCwgMC4wKSxcXG4gIHZlYzMoMC4wKSxcXG4gIHZlYzMoMC4wKSxcXG4gIHZlYzMoMC4wKSxcXG4gIHZlYzIoMC4wKSxcXG4gIHZlYzMoMC4wKVxcbik7XFxuXCIpO1xuY29uc3QgZnMgPSBcIlxcblwiLmNvbmNhdChkZWZpbmVzLCBcIlxcblxcbnN0cnVjdCBGcmFnbWVudEdlb21ldHJ5IHtcXG4gIHZlYzIgdXY7XFxufSBnZW9tZXRyeTtcXG5cXG5mbG9hdCBzbW9vdGhlZGdlKGZsb2F0IGVkZ2UsIGZsb2F0IHgpIHtcXG4gIHJldHVybiBzbW9vdGhzdGVwKGVkZ2UgLSBTTU9PVEhfRURHRV9SQURJVVMsIGVkZ2UgKyBTTU9PVEhfRURHRV9SQURJVVMsIHgpO1xcbn1cXG5cIik7XG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdnZW9tZXRyeScsXG4gIHZzLFxuICBmc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdlb21ldHJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJkZWZpbmVzIiwidnMiLCJjb25jYXQiLCJmcyIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/misc/geometry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/picking/picking.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    inject: {\n        \"vs:DECKGL_FILTER_GL_POSITION\": \"\\n    // for picking depth values\\n    picking_setPickingAttribute(position.z / position.w);\\n  \",\n        \"vs:DECKGL_FILTER_COLOR\": \"\\n  picking_setPickingColor(geometry.pickingColor);\\n  \",\n        \"fs:#decl\": \"\\nuniform bool picking_uAttribute;\\n  \",\n        \"fs:DECKGL_FILTER_COLOR\": {\n            order: 99,\n            injection: \"\\n  // use highlight color if this fragment belongs to the selected object.\\n  color = picking_filterHighlightColor(color);\\n\\n  // use picking color if rendering to picking FBO.\\n  color = picking_filterPickingColor(color);\\n    \"\n        }\n    },\n    ..._luma_gl_core__WEBPACK_IMPORTED_MODULE_0__.picking\n}); //# sourceMappingURL=picking.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9zaGFkZXJsaWIvcGlja2luZy9waWNraW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDO0FBQ3hDLGlFQUFlO0lBQ2JDLFFBQVE7UUFDTixnQ0FBZ0M7UUFDaEMsMEJBQTBCO1FBQzFCLFlBQVk7UUFDWiwwQkFBMEI7WUFDeEJDLE9BQU87WUFDUEMsV0FBVztRQUNiO0lBQ0Y7SUFDQSxHQUFHSCxrREFBTztBQUNaLENBQUMsRUFBQyxDQUNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vc2hhZGVybGliL3BpY2tpbmcvcGlja2luZy5qcz83NDY3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBpY2tpbmcgfSBmcm9tICdAbHVtYS5nbC9jb3JlJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5qZWN0OiB7XG4gICAgJ3ZzOkRFQ0tHTF9GSUxURVJfR0xfUE9TSVRJT04nOiBcIlxcbiAgICAvLyBmb3IgcGlja2luZyBkZXB0aCB2YWx1ZXNcXG4gICAgcGlja2luZ19zZXRQaWNraW5nQXR0cmlidXRlKHBvc2l0aW9uLnogLyBwb3NpdGlvbi53KTtcXG4gIFwiLFxuICAgICd2czpERUNLR0xfRklMVEVSX0NPTE9SJzogXCJcXG4gIHBpY2tpbmdfc2V0UGlja2luZ0NvbG9yKGdlb21ldHJ5LnBpY2tpbmdDb2xvcik7XFxuICBcIixcbiAgICAnZnM6I2RlY2wnOiBcIlxcbnVuaWZvcm0gYm9vbCBwaWNraW5nX3VBdHRyaWJ1dGU7XFxuICBcIixcbiAgICAnZnM6REVDS0dMX0ZJTFRFUl9DT0xPUic6IHtcbiAgICAgIG9yZGVyOiA5OSxcbiAgICAgIGluamVjdGlvbjogXCJcXG4gIC8vIHVzZSBoaWdobGlnaHQgY29sb3IgaWYgdGhpcyBmcmFnbWVudCBiZWxvbmdzIHRvIHRoZSBzZWxlY3RlZCBvYmplY3QuXFxuICBjb2xvciA9IHBpY2tpbmdfZmlsdGVySGlnaGxpZ2h0Q29sb3IoY29sb3IpO1xcblxcbiAgLy8gdXNlIHBpY2tpbmcgY29sb3IgaWYgcmVuZGVyaW5nIHRvIHBpY2tpbmcgRkJPLlxcbiAgY29sb3IgPSBwaWNraW5nX2ZpbHRlclBpY2tpbmdDb2xvcihjb2xvcik7XFxuICAgIFwiXG4gICAgfVxuICB9LFxuICAuLi5waWNraW5nXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlja2luZy5qcy5tYXAiXSwibmFtZXMiOlsicGlja2luZyIsImluamVjdCIsIm9yZGVyIiwiaW5qZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project-functions.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project-functions.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getWorldPosition: () => (/* binding */ getWorldPosition),\n/* harmony export */   projectPosition: () => (/* binding */ projectPosition)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _viewport_uniforms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./viewport-uniforms */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/viewport-uniforms.js\");\n/* harmony import */ var _viewports_web_mercator_viewport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../viewports/web-mercator-viewport */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/web-mercator-viewport.js\");\n/* harmony import */ var gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix/vec4 */ \"(ssr)/./node_modules/gl-matrix/esm/vec4.js\");\n/* harmony import */ var gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix/vec3 */ \"(ssr)/./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/web-mercator */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/index.js\");\n\n\n\n\n\n\nconst DEFAULT_COORDINATE_ORIGIN = [\n    0,\n    0,\n    0\n];\nfunction lngLatZToWorldPosition(lngLatZ, viewport, offsetMode = false) {\n    const p = viewport.projectPosition(lngLatZ);\n    if (offsetMode && viewport instanceof _viewports_web_mercator_viewport__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n        const [longitude, latitude, z = 0] = lngLatZ;\n        const distanceScales = viewport.getDistanceScales([\n            longitude,\n            latitude\n        ]);\n        p[2] = z * distanceScales.unitsPerMeter[2];\n    }\n    return p;\n}\nfunction normalizeParameters(opts) {\n    const { viewport, modelMatrix, coordinateOrigin } = opts;\n    let { coordinateSystem, fromCoordinateSystem, fromCoordinateOrigin } = opts;\n    if (coordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_2__.COORDINATE_SYSTEM.DEFAULT) {\n        coordinateSystem = viewport.isGeospatial ? _lib_constants__WEBPACK_IMPORTED_MODULE_2__.COORDINATE_SYSTEM.LNGLAT : _lib_constants__WEBPACK_IMPORTED_MODULE_2__.COORDINATE_SYSTEM.CARTESIAN;\n    }\n    if (fromCoordinateSystem === undefined) {\n        fromCoordinateSystem = coordinateSystem;\n    }\n    if (fromCoordinateOrigin === undefined) {\n        fromCoordinateOrigin = coordinateOrigin;\n    }\n    return {\n        viewport,\n        coordinateSystem,\n        coordinateOrigin,\n        modelMatrix,\n        fromCoordinateSystem,\n        fromCoordinateOrigin\n    };\n}\nfunction getWorldPosition(position, { viewport, modelMatrix, coordinateSystem, coordinateOrigin, offsetMode }) {\n    let [x, y, z = 0] = position;\n    if (modelMatrix) {\n        [x, y, z] = gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_3__.transformMat4([], [\n            x,\n            y,\n            z,\n            1.0\n        ], modelMatrix);\n    }\n    switch(coordinateSystem){\n        case _lib_constants__WEBPACK_IMPORTED_MODULE_2__.COORDINATE_SYSTEM.LNGLAT:\n            return lngLatZToWorldPosition([\n                x,\n                y,\n                z\n            ], viewport, offsetMode);\n        case _lib_constants__WEBPACK_IMPORTED_MODULE_2__.COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n            return lngLatZToWorldPosition([\n                x + coordinateOrigin[0],\n                y + coordinateOrigin[1],\n                z + (coordinateOrigin[2] || 0)\n            ], viewport, offsetMode);\n        case _lib_constants__WEBPACK_IMPORTED_MODULE_2__.COORDINATE_SYSTEM.METER_OFFSETS:\n            return lngLatZToWorldPosition((0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.addMetersToLngLat)(coordinateOrigin, [\n                x,\n                y,\n                z\n            ]), viewport, offsetMode);\n        case _lib_constants__WEBPACK_IMPORTED_MODULE_2__.COORDINATE_SYSTEM.CARTESIAN:\n        default:\n            return viewport.isGeospatial ? [\n                x + coordinateOrigin[0],\n                y + coordinateOrigin[1],\n                z + coordinateOrigin[2]\n            ] : viewport.projectPosition([\n                x,\n                y,\n                z\n            ]);\n    }\n}\nfunction projectPosition(position, params) {\n    const { viewport, coordinateSystem, coordinateOrigin, modelMatrix, fromCoordinateSystem, fromCoordinateOrigin } = normalizeParameters(params);\n    const { autoOffset = true } = params;\n    const { geospatialOrigin = DEFAULT_COORDINATE_ORIGIN, shaderCoordinateOrigin = DEFAULT_COORDINATE_ORIGIN, offsetMode = false } = autoOffset ? (0,_viewport_uniforms__WEBPACK_IMPORTED_MODULE_4__.getOffsetOrigin)(viewport, coordinateSystem, coordinateOrigin) : {};\n    const worldPosition = getWorldPosition(position, {\n        viewport,\n        modelMatrix,\n        coordinateSystem: fromCoordinateSystem,\n        coordinateOrigin: fromCoordinateOrigin,\n        offsetMode\n    });\n    if (offsetMode) {\n        const positionCommonSpace = viewport.projectPosition(geospatialOrigin || shaderCoordinateOrigin);\n        gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_5__.sub(worldPosition, worldPosition, positionCommonSpace);\n    }\n    return worldPosition;\n} //# sourceMappingURL=project-functions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9zaGFkZXJsaWIvcHJvamVjdC9wcm9qZWN0LWZ1bmN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3RDtBQUNGO0FBQ2tCO0FBQ2pDO0FBQ0E7QUFDbUI7QUFDMUQsTUFBTU0sNEJBQTRCO0lBQUM7SUFBRztJQUFHO0NBQUU7QUFFM0MsU0FBU0MsdUJBQXVCQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsYUFBYSxLQUFLO0lBQ25FLE1BQU1DLElBQUlGLFNBQVNHLGVBQWUsQ0FBQ0o7SUFFbkMsSUFBSUUsY0FBY0Qsb0JBQW9CUCx3RUFBbUJBLEVBQUU7UUFDekQsTUFBTSxDQUFDVyxXQUFXQyxVQUFVQyxJQUFJLENBQUMsQ0FBQyxHQUFHUDtRQUNyQyxNQUFNUSxpQkFBaUJQLFNBQVNRLGlCQUFpQixDQUFDO1lBQUNKO1lBQVdDO1NBQVM7UUFDdkVILENBQUMsQ0FBQyxFQUFFLEdBQUdJLElBQUlDLGVBQWVFLGFBQWEsQ0FBQyxFQUFFO0lBQzVDO0lBRUEsT0FBT1A7QUFDVDtBQUVBLFNBQVNRLG9CQUFvQkMsSUFBSTtJQUMvQixNQUFNLEVBQ0pYLFFBQVEsRUFDUlksV0FBVyxFQUNYQyxnQkFBZ0IsRUFDakIsR0FBR0Y7SUFDSixJQUFJLEVBQ0ZHLGdCQUFnQixFQUNoQkMsb0JBQW9CLEVBQ3BCQyxvQkFBb0IsRUFDckIsR0FBR0w7SUFFSixJQUFJRyxxQkFBcUJ2Qiw2REFBaUJBLENBQUMwQixPQUFPLEVBQUU7UUFDbERILG1CQUFtQmQsU0FBU2tCLFlBQVksR0FBRzNCLDZEQUFpQkEsQ0FBQzRCLE1BQU0sR0FBRzVCLDZEQUFpQkEsQ0FBQzZCLFNBQVM7SUFDbkc7SUFFQSxJQUFJTCx5QkFBeUJNLFdBQVc7UUFDdENOLHVCQUF1QkQ7SUFDekI7SUFFQSxJQUFJRSx5QkFBeUJLLFdBQVc7UUFDdENMLHVCQUF1Qkg7SUFDekI7SUFFQSxPQUFPO1FBQ0xiO1FBQ0FjO1FBQ0FEO1FBQ0FEO1FBQ0FHO1FBQ0FDO0lBQ0Y7QUFDRjtBQUVPLFNBQVNNLGlCQUFpQkMsUUFBUSxFQUFFLEVBQ3pDdkIsUUFBUSxFQUNSWSxXQUFXLEVBQ1hFLGdCQUFnQixFQUNoQkQsZ0JBQWdCLEVBQ2hCWixVQUFVLEVBQ1g7SUFDQyxJQUFJLENBQUN1QixHQUFHQyxHQUFHbkIsSUFBSSxDQUFDLENBQUMsR0FBR2lCO0lBRXBCLElBQUlYLGFBQWE7UUFDZixDQUFDWSxHQUFHQyxHQUFHbkIsRUFBRSxHQUFHWix5REFBa0IsQ0FBQyxFQUFFLEVBQUU7WUFBQzhCO1lBQUdDO1lBQUduQjtZQUFHO1NBQUksRUFBRU07SUFDckQ7SUFFQSxPQUFRRTtRQUNOLEtBQUt2Qiw2REFBaUJBLENBQUM0QixNQUFNO1lBQzNCLE9BQU9yQix1QkFBdUI7Z0JBQUMwQjtnQkFBR0M7Z0JBQUduQjthQUFFLEVBQUVOLFVBQVVDO1FBRXJELEtBQUtWLDZEQUFpQkEsQ0FBQ29DLGNBQWM7WUFDbkMsT0FBTzdCLHVCQUF1QjtnQkFBQzBCLElBQUlYLGdCQUFnQixDQUFDLEVBQUU7Z0JBQUVZLElBQUlaLGdCQUFnQixDQUFDLEVBQUU7Z0JBQUVQLElBQUtPLENBQUFBLGdCQUFnQixDQUFDLEVBQUUsSUFBSTthQUFHLEVBQUViLFVBQVVDO1FBRTlILEtBQUtWLDZEQUFpQkEsQ0FBQ3FDLGFBQWE7WUFDbEMsT0FBTzlCLHVCQUF1QkYsd0VBQWlCQSxDQUFDaUIsa0JBQWtCO2dCQUFDVztnQkFBR0M7Z0JBQUduQjthQUFFLEdBQUdOLFVBQVVDO1FBRTFGLEtBQUtWLDZEQUFpQkEsQ0FBQzZCLFNBQVM7UUFDaEM7WUFDRSxPQUFPcEIsU0FBU2tCLFlBQVksR0FBRztnQkFBQ00sSUFBSVgsZ0JBQWdCLENBQUMsRUFBRTtnQkFBRVksSUFBSVosZ0JBQWdCLENBQUMsRUFBRTtnQkFBRVAsSUFBSU8sZ0JBQWdCLENBQUMsRUFBRTthQUFDLEdBQUdiLFNBQVNHLGVBQWUsQ0FBQztnQkFBQ3FCO2dCQUFHQztnQkFBR25CO2FBQUU7SUFDbko7QUFDRjtBQUNPLFNBQVNILGdCQUFnQm9CLFFBQVEsRUFBRU0sTUFBTTtJQUM5QyxNQUFNLEVBQ0o3QixRQUFRLEVBQ1JjLGdCQUFnQixFQUNoQkQsZ0JBQWdCLEVBQ2hCRCxXQUFXLEVBQ1hHLG9CQUFvQixFQUNwQkMsb0JBQW9CLEVBQ3JCLEdBQUdOLG9CQUFvQm1CO0lBQ3hCLE1BQU0sRUFDSkMsYUFBYSxJQUFJLEVBQ2xCLEdBQUdEO0lBQ0osTUFBTSxFQUNKRSxtQkFBbUJsQyx5QkFBeUIsRUFDNUNtQyx5QkFBeUJuQyx5QkFBeUIsRUFDbERJLGFBQWEsS0FBSyxFQUNuQixHQUFHNkIsYUFBYXRDLG1FQUFlQSxDQUFDUSxVQUFVYyxrQkFBa0JELG9CQUFvQixDQUFDO0lBQ2xGLE1BQU1vQixnQkFBZ0JYLGlCQUFpQkMsVUFBVTtRQUMvQ3ZCO1FBQ0FZO1FBQ0FFLGtCQUFrQkM7UUFDbEJGLGtCQUFrQkc7UUFDbEJmO0lBQ0Y7SUFFQSxJQUFJQSxZQUFZO1FBQ2QsTUFBTWlDLHNCQUFzQmxDLFNBQVNHLGVBQWUsQ0FBQzRCLG9CQUFvQkM7UUFDekVyQywrQ0FBUSxDQUFDc0MsZUFBZUEsZUFBZUM7SUFDekM7SUFFQSxPQUFPRDtBQUNULEVBQ0EsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9zaGFkZXJsaWIvcHJvamVjdC9wcm9qZWN0LWZ1bmN0aW9ucy5qcz9mMjY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPT1JESU5BVEVfU1lTVEVNIH0gZnJvbSAnLi4vLi4vbGliL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBnZXRPZmZzZXRPcmlnaW4gfSBmcm9tICcuL3ZpZXdwb3J0LXVuaWZvcm1zJztcbmltcG9ydCBXZWJNZXJjYXRvclZpZXdwb3J0IGZyb20gJy4uLy4uL3ZpZXdwb3J0cy93ZWItbWVyY2F0b3Itdmlld3BvcnQnO1xuaW1wb3J0ICogYXMgdmVjNCBmcm9tICdnbC1tYXRyaXgvdmVjNCc7XG5pbXBvcnQgKiBhcyB2ZWMzIGZyb20gJ2dsLW1hdHJpeC92ZWMzJztcbmltcG9ydCB7IGFkZE1ldGVyc1RvTG5nTGF0IH0gZnJvbSAnQG1hdGguZ2wvd2ViLW1lcmNhdG9yJztcbmNvbnN0IERFRkFVTFRfQ09PUkRJTkFURV9PUklHSU4gPSBbMCwgMCwgMF07XG5cbmZ1bmN0aW9uIGxuZ0xhdFpUb1dvcmxkUG9zaXRpb24obG5nTGF0Wiwgdmlld3BvcnQsIG9mZnNldE1vZGUgPSBmYWxzZSkge1xuICBjb25zdCBwID0gdmlld3BvcnQucHJvamVjdFBvc2l0aW9uKGxuZ0xhdFopO1xuXG4gIGlmIChvZmZzZXRNb2RlICYmIHZpZXdwb3J0IGluc3RhbmNlb2YgV2ViTWVyY2F0b3JWaWV3cG9ydCkge1xuICAgIGNvbnN0IFtsb25naXR1ZGUsIGxhdGl0dWRlLCB6ID0gMF0gPSBsbmdMYXRaO1xuICAgIGNvbnN0IGRpc3RhbmNlU2NhbGVzID0gdmlld3BvcnQuZ2V0RGlzdGFuY2VTY2FsZXMoW2xvbmdpdHVkZSwgbGF0aXR1ZGVdKTtcbiAgICBwWzJdID0geiAqIGRpc3RhbmNlU2NhbGVzLnVuaXRzUGVyTWV0ZXJbMl07XG4gIH1cblxuICByZXR1cm4gcDtcbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplUGFyYW1ldGVycyhvcHRzKSB7XG4gIGNvbnN0IHtcbiAgICB2aWV3cG9ydCxcbiAgICBtb2RlbE1hdHJpeCxcbiAgICBjb29yZGluYXRlT3JpZ2luXG4gIH0gPSBvcHRzO1xuICBsZXQge1xuICAgIGNvb3JkaW5hdGVTeXN0ZW0sXG4gICAgZnJvbUNvb3JkaW5hdGVTeXN0ZW0sXG4gICAgZnJvbUNvb3JkaW5hdGVPcmlnaW5cbiAgfSA9IG9wdHM7XG5cbiAgaWYgKGNvb3JkaW5hdGVTeXN0ZW0gPT09IENPT1JESU5BVEVfU1lTVEVNLkRFRkFVTFQpIHtcbiAgICBjb29yZGluYXRlU3lzdGVtID0gdmlld3BvcnQuaXNHZW9zcGF0aWFsID8gQ09PUkRJTkFURV9TWVNURU0uTE5HTEFUIDogQ09PUkRJTkFURV9TWVNURU0uQ0FSVEVTSUFOO1xuICB9XG5cbiAgaWYgKGZyb21Db29yZGluYXRlU3lzdGVtID09PSB1bmRlZmluZWQpIHtcbiAgICBmcm9tQ29vcmRpbmF0ZVN5c3RlbSA9IGNvb3JkaW5hdGVTeXN0ZW07XG4gIH1cblxuICBpZiAoZnJvbUNvb3JkaW5hdGVPcmlnaW4gPT09IHVuZGVmaW5lZCkge1xuICAgIGZyb21Db29yZGluYXRlT3JpZ2luID0gY29vcmRpbmF0ZU9yaWdpbjtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdmlld3BvcnQsXG4gICAgY29vcmRpbmF0ZVN5c3RlbSxcbiAgICBjb29yZGluYXRlT3JpZ2luLFxuICAgIG1vZGVsTWF0cml4LFxuICAgIGZyb21Db29yZGluYXRlU3lzdGVtLFxuICAgIGZyb21Db29yZGluYXRlT3JpZ2luXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRXb3JsZFBvc2l0aW9uKHBvc2l0aW9uLCB7XG4gIHZpZXdwb3J0LFxuICBtb2RlbE1hdHJpeCxcbiAgY29vcmRpbmF0ZVN5c3RlbSxcbiAgY29vcmRpbmF0ZU9yaWdpbixcbiAgb2Zmc2V0TW9kZVxufSkge1xuICBsZXQgW3gsIHksIHogPSAwXSA9IHBvc2l0aW9uO1xuXG4gIGlmIChtb2RlbE1hdHJpeCkge1xuICAgIFt4LCB5LCB6XSA9IHZlYzQudHJhbnNmb3JtTWF0NChbXSwgW3gsIHksIHosIDEuMF0sIG1vZGVsTWF0cml4KTtcbiAgfVxuXG4gIHN3aXRjaCAoY29vcmRpbmF0ZVN5c3RlbSkge1xuICAgIGNhc2UgQ09PUkRJTkFURV9TWVNURU0uTE5HTEFUOlxuICAgICAgcmV0dXJuIGxuZ0xhdFpUb1dvcmxkUG9zaXRpb24oW3gsIHksIHpdLCB2aWV3cG9ydCwgb2Zmc2V0TW9kZSk7XG5cbiAgICBjYXNlIENPT1JESU5BVEVfU1lTVEVNLkxOR0xBVF9PRkZTRVRTOlxuICAgICAgcmV0dXJuIGxuZ0xhdFpUb1dvcmxkUG9zaXRpb24oW3ggKyBjb29yZGluYXRlT3JpZ2luWzBdLCB5ICsgY29vcmRpbmF0ZU9yaWdpblsxXSwgeiArIChjb29yZGluYXRlT3JpZ2luWzJdIHx8IDApXSwgdmlld3BvcnQsIG9mZnNldE1vZGUpO1xuXG4gICAgY2FzZSBDT09SRElOQVRFX1NZU1RFTS5NRVRFUl9PRkZTRVRTOlxuICAgICAgcmV0dXJuIGxuZ0xhdFpUb1dvcmxkUG9zaXRpb24oYWRkTWV0ZXJzVG9MbmdMYXQoY29vcmRpbmF0ZU9yaWdpbiwgW3gsIHksIHpdKSwgdmlld3BvcnQsIG9mZnNldE1vZGUpO1xuXG4gICAgY2FzZSBDT09SRElOQVRFX1NZU1RFTS5DQVJURVNJQU46XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB2aWV3cG9ydC5pc0dlb3NwYXRpYWwgPyBbeCArIGNvb3JkaW5hdGVPcmlnaW5bMF0sIHkgKyBjb29yZGluYXRlT3JpZ2luWzFdLCB6ICsgY29vcmRpbmF0ZU9yaWdpblsyXV0gOiB2aWV3cG9ydC5wcm9qZWN0UG9zaXRpb24oW3gsIHksIHpdKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHByb2plY3RQb3NpdGlvbihwb3NpdGlvbiwgcGFyYW1zKSB7XG4gIGNvbnN0IHtcbiAgICB2aWV3cG9ydCxcbiAgICBjb29yZGluYXRlU3lzdGVtLFxuICAgIGNvb3JkaW5hdGVPcmlnaW4sXG4gICAgbW9kZWxNYXRyaXgsXG4gICAgZnJvbUNvb3JkaW5hdGVTeXN0ZW0sXG4gICAgZnJvbUNvb3JkaW5hdGVPcmlnaW5cbiAgfSA9IG5vcm1hbGl6ZVBhcmFtZXRlcnMocGFyYW1zKTtcbiAgY29uc3Qge1xuICAgIGF1dG9PZmZzZXQgPSB0cnVlXG4gIH0gPSBwYXJhbXM7XG4gIGNvbnN0IHtcbiAgICBnZW9zcGF0aWFsT3JpZ2luID0gREVGQVVMVF9DT09SRElOQVRFX09SSUdJTixcbiAgICBzaGFkZXJDb29yZGluYXRlT3JpZ2luID0gREVGQVVMVF9DT09SRElOQVRFX09SSUdJTixcbiAgICBvZmZzZXRNb2RlID0gZmFsc2VcbiAgfSA9IGF1dG9PZmZzZXQgPyBnZXRPZmZzZXRPcmlnaW4odmlld3BvcnQsIGNvb3JkaW5hdGVTeXN0ZW0sIGNvb3JkaW5hdGVPcmlnaW4pIDoge307XG4gIGNvbnN0IHdvcmxkUG9zaXRpb24gPSBnZXRXb3JsZFBvc2l0aW9uKHBvc2l0aW9uLCB7XG4gICAgdmlld3BvcnQsXG4gICAgbW9kZWxNYXRyaXgsXG4gICAgY29vcmRpbmF0ZVN5c3RlbTogZnJvbUNvb3JkaW5hdGVTeXN0ZW0sXG4gICAgY29vcmRpbmF0ZU9yaWdpbjogZnJvbUNvb3JkaW5hdGVPcmlnaW4sXG4gICAgb2Zmc2V0TW9kZVxuICB9KTtcblxuICBpZiAob2Zmc2V0TW9kZSkge1xuICAgIGNvbnN0IHBvc2l0aW9uQ29tbW9uU3BhY2UgPSB2aWV3cG9ydC5wcm9qZWN0UG9zaXRpb24oZ2Vvc3BhdGlhbE9yaWdpbiB8fCBzaGFkZXJDb29yZGluYXRlT3JpZ2luKTtcbiAgICB2ZWMzLnN1Yih3b3JsZFBvc2l0aW9uLCB3b3JsZFBvc2l0aW9uLCBwb3NpdGlvbkNvbW1vblNwYWNlKTtcbiAgfVxuXG4gIHJldHVybiB3b3JsZFBvc2l0aW9uO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvamVjdC1mdW5jdGlvbnMuanMubWFwIl0sIm5hbWVzIjpbIkNPT1JESU5BVEVfU1lTVEVNIiwiZ2V0T2Zmc2V0T3JpZ2luIiwiV2ViTWVyY2F0b3JWaWV3cG9ydCIsInZlYzQiLCJ2ZWMzIiwiYWRkTWV0ZXJzVG9MbmdMYXQiLCJERUZBVUxUX0NPT1JESU5BVEVfT1JJR0lOIiwibG5nTGF0WlRvV29ybGRQb3NpdGlvbiIsImxuZ0xhdFoiLCJ2aWV3cG9ydCIsIm9mZnNldE1vZGUiLCJwIiwicHJvamVjdFBvc2l0aW9uIiwibG9uZ2l0dWRlIiwibGF0aXR1ZGUiLCJ6IiwiZGlzdGFuY2VTY2FsZXMiLCJnZXREaXN0YW5jZVNjYWxlcyIsInVuaXRzUGVyTWV0ZXIiLCJub3JtYWxpemVQYXJhbWV0ZXJzIiwib3B0cyIsIm1vZGVsTWF0cml4IiwiY29vcmRpbmF0ZU9yaWdpbiIsImNvb3JkaW5hdGVTeXN0ZW0iLCJmcm9tQ29vcmRpbmF0ZVN5c3RlbSIsImZyb21Db29yZGluYXRlT3JpZ2luIiwiREVGQVVMVCIsImlzR2Vvc3BhdGlhbCIsIkxOR0xBVCIsIkNBUlRFU0lBTiIsInVuZGVmaW5lZCIsImdldFdvcmxkUG9zaXRpb24iLCJwb3NpdGlvbiIsIngiLCJ5IiwidHJhbnNmb3JtTWF0NCIsIkxOR0xBVF9PRkZTRVRTIiwiTUVURVJfT0ZGU0VUUyIsInBhcmFtcyIsImF1dG9PZmZzZXQiLCJnZW9zcGF0aWFsT3JpZ2luIiwic2hhZGVyQ29vcmRpbmF0ZU9yaWdpbiIsIndvcmxkUG9zaXRpb24iLCJwb3NpdGlvbkNvbW1vblNwYWNlIiwic3ViIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project-functions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.glsl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.glsl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n\nconst COORDINATE_SYSTEM_GLSL_CONSTANTS = Object.keys(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.COORDINATE_SYSTEM).map((key)=>\"const int COORDINATE_SYSTEM_\".concat(key, \" = \").concat(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.COORDINATE_SYSTEM[key], \";\")).join(\"\");\nconst PROJECTION_MODE_GLSL_CONSTANTS = Object.keys(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.PROJECTION_MODE).map((key)=>\"const int PROJECTION_MODE_\".concat(key, \" = \").concat(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.PROJECTION_MODE[key], \";\")).join(\"\");\nconst UNIT_GLSL_CONSTANTS = Object.keys(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.UNIT).map((key)=>\"const int UNIT_\".concat(key.toUpperCase(), \" = \").concat(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.UNIT[key], \";\")).join(\"\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\".concat(COORDINATE_SYSTEM_GLSL_CONSTANTS, \"\\n\").concat(PROJECTION_MODE_GLSL_CONSTANTS, \"\\n\").concat(UNIT_GLSL_CONSTANTS, \"\\n\\nuniform int project_uCoordinateSystem;\\nuniform int project_uProjectionMode;\\nuniform float project_uScale;\\nuniform bool project_uWrapLongitude;\\nuniform vec3 project_uCommonUnitsPerMeter;\\nuniform vec3 project_uCommonUnitsPerWorldUnit;\\nuniform vec3 project_uCommonUnitsPerWorldUnit2;\\nuniform vec4 project_uCenter;\\nuniform mat4 project_uModelMatrix;\\nuniform mat4 project_uViewProjectionMatrix;\\nuniform vec2 project_uViewportSize;\\nuniform float project_uDevicePixelRatio;\\nuniform float project_uFocalDistance;\\nuniform vec3 project_uCameraPosition;\\nuniform vec3 project_uCoordinateOrigin;\\nuniform vec3 project_uCommonOrigin;\\nuniform bool project_uPseudoMeters;\\n\\nconst float TILE_SIZE = 512.0;\\nconst float PI = 3.1415926536;\\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\\nconst vec3 ZERO_64_LOW = vec3(0.0);\\nconst float EARTH_RADIUS = 6370972.0;\\nconst float GLOBE_RADIUS = 256.0;\\nfloat project_size_at_latitude(float lat) {\\n  float y = clamp(lat, -89.9, 89.9);\\n  return 1.0 / cos(radians(y));\\n}\\n\\nfloat project_size() {\\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR &&\\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\\n    project_uPseudoMeters == false) {\\n    \\n    if (geometry.position.w == 0.0) {\\n      return project_size_at_latitude(geometry.worldPosition.y);\\n    }\\n  \\n    float y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\\n    float y2 = y * y;\\n    float y4 = y2 * y2;\\n    float y6 = y4 * y2;\\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\\n  }\\n  return 1.0;\\n}\\n\\nfloat project_size_at_latitude(float meters, float lat) {\\n  return meters * project_uCommonUnitsPerMeter.z * project_size_at_latitude(lat);\\n}\\nfloat project_size(float meters) {\\n  return meters * project_uCommonUnitsPerMeter.z * project_size();\\n}\\n\\nvec2 project_size(vec2 meters) {\\n  return meters * project_uCommonUnitsPerMeter.xy * project_size();\\n}\\n\\nvec3 project_size(vec3 meters) {\\n  return meters * project_uCommonUnitsPerMeter * project_size();\\n}\\n\\nvec4 project_size(vec4 meters) {\\n  return vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);\\n}\\nmat3 project_get_orientation_matrix(vec3 up) {\\n  vec3 uz = normalize(up);\\n  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\\n  vec3 uy = cross(uz, ux);\\n  return mat3(ux, uy, uz);\\n}\\n\\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\\n    transform = project_get_orientation_matrix(commonPosition);\\n    return true;\\n  }\\n  return false;\\n}\\nvec3 project_normal(vec3 vector) {\\n  vec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);\\n  vec3 n = normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);\\n  mat3 rotation;\\n  if (project_needs_rotation(geometry.position.xyz, rotation)) {\\n    n = rotation * n;\\n  }\\n  return n;\\n}\\n\\nvec4 project_offset_(vec4 offset) {\\n  float dy = offset.y;\\n  vec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;\\n  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\\n}\\nvec2 project_mercator_(vec2 lnglat) {\\n  float x = lnglat.x;\\n  if (project_uWrapLongitude) {\\n    x = mod(x + 180., 360.0) - 180.;\\n  }\\n  float y = clamp(lnglat.y, -89.9, 89.9);\\n  return vec2(\\n    radians(x) + PI,\\n    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\\n  ) * WORLD_SCALE;\\n}\\n\\nvec3 project_globe_(vec3 lnglatz) {\\n  float lambda = radians(lnglatz.x);\\n  float phi = radians(lnglatz.y);\\n  float cosPhi = cos(phi);\\n  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\\n\\n  return vec3(\\n    sin(lambda) * cosPhi,\\n    -cos(lambda) * cosPhi,\\n    sin(phi)\\n  ) * D;\\n}\\nvec4 project_position(vec4 position, vec3 position64Low) {\\n  vec4 position_world = project_uModelMatrix * position;\\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {\\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\\n      return vec4(\\n        project_mercator_(position_world.xy),\\n        project_size_at_latitude(position_world.z, position_world.y),\\n        position_world.w\\n      );\\n    }\\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\\n      position_world.xyz += project_uCoordinateOrigin;\\n    }\\n  }\\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\\n      return vec4(\\n        project_globe_(position_world.xyz),\\n        position_world.w\\n      );\\n    }\\n  }\\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\\n      if (abs(position_world.y - project_uCoordinateOrigin.y) > 0.25) {\\n        return vec4(\\n          project_mercator_(position_world.xy) - project_uCommonOrigin.xy,\\n          project_size(position_world.z),\\n          position_world.w\\n        );\\n      }\\n    }\\n  }\\n  if (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||\\n    (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\\n    (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\\n     project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\\n    position_world.xyz -= project_uCoordinateOrigin;\\n  }\\n  return project_offset_(position_world + project_uModelMatrix * vec4(position64Low, 0.0));\\n}\\n\\nvec4 project_position(vec4 position) {\\n  return project_position(position, ZERO_64_LOW);\\n}\\n\\nvec3 project_position(vec3 position, vec3 position64Low) {\\n  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);\\n  return projected_position.xyz;\\n}\\n\\nvec3 project_position(vec3 position) {\\n  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\\n  return projected_position.xyz;\\n}\\n\\nvec2 project_position(vec2 position) {\\n  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\\n  return projected_position.xy;\\n}\\n\\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\\n  return viewProjectionMatrix * position + center;\\n}\\nvec4 project_common_position_to_clipspace(vec4 position) {\\n  return project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);\\n}\\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\\n  vec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;\\n  return offset * project_uFocalDistance;\\n}\\n\\nfloat project_size_to_pixel(float meters) {\\n  return project_size(meters) * project_uScale;\\n}\\nfloat project_size_to_pixel(float size, int unit) {\\n  if (unit == UNIT_METERS) return project_size_to_pixel(size);\\n  if (unit == UNIT_COMMON) return size * project_uScale;\\n  return size;\\n}\\nfloat project_pixel_size(float pixels) {\\n  return pixels / project_uScale;\\n}\\nvec2 project_pixel_size(vec2 pixels) {\\n  return pixels / project_uScale;\\n}\\n\")); //# sourceMappingURL=project.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/fp32/fp32.js\");\n/* harmony import */ var _misc_geometry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../misc/geometry */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/misc/geometry.js\");\n/* harmony import */ var _project_glsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./project.glsl */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.glsl.js\");\n/* harmony import */ var _viewport_uniforms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./viewport-uniforms */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/viewport-uniforms.js\");\n\n\n\n\nconst INITIAL_MODULE_OPTIONS = {};\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n    if (\"viewport\" in opts) {\n        return (0,_viewport_uniforms__WEBPACK_IMPORTED_MODULE_0__.getUniformsFromViewport)(opts);\n    }\n    return {};\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: \"project\",\n    dependencies: [\n        _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__.fp32,\n        _misc_geometry__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n    ],\n    vs: _project_glsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    getUniforms\n}); //# sourceMappingURL=project.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9zaGFkZXJsaWIvcHJvamVjdC9wcm9qZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFDO0FBQ0c7QUFDRztBQUNtQjtBQUM5RCxNQUFNSSx5QkFBeUIsQ0FBQztBQUVoQyxTQUFTQyxZQUFZQyxPQUFPRixzQkFBc0I7SUFDaEQsSUFBSSxjQUFjRSxNQUFNO1FBQ3RCLE9BQU9ILDJFQUF1QkEsQ0FBQ0c7SUFDakM7SUFFQSxPQUFPLENBQUM7QUFDVjtBQUVBLGlFQUFlO0lBQ2JDLE1BQU07SUFDTkMsY0FBYztRQUFDUiwrQ0FBSUE7UUFBRUMsc0RBQVFBO0tBQUM7SUFDOUJRLElBQUlQLHFEQUFhQTtJQUNqQkc7QUFDRixDQUFDLEVBQUMsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3NoYWRlcmxpYi9wcm9qZWN0L3Byb2plY3QuanM/MTNlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcDMyIH0gZnJvbSAnQGx1bWEuZ2wvY29yZSc7XG5pbXBvcnQgZ2VvbWV0cnkgZnJvbSAnLi4vbWlzYy9nZW9tZXRyeSc7XG5pbXBvcnQgcHJvamVjdFNoYWRlciBmcm9tICcuL3Byb2plY3QuZ2xzbCc7XG5pbXBvcnQgeyBnZXRVbmlmb3Jtc0Zyb21WaWV3cG9ydCB9IGZyb20gJy4vdmlld3BvcnQtdW5pZm9ybXMnO1xuY29uc3QgSU5JVElBTF9NT0RVTEVfT1BUSU9OUyA9IHt9O1xuXG5mdW5jdGlvbiBnZXRVbmlmb3JtcyhvcHRzID0gSU5JVElBTF9NT0RVTEVfT1BUSU9OUykge1xuICBpZiAoJ3ZpZXdwb3J0JyBpbiBvcHRzKSB7XG4gICAgcmV0dXJuIGdldFVuaWZvcm1zRnJvbVZpZXdwb3J0KG9wdHMpO1xuICB9XG5cbiAgcmV0dXJuIHt9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICdwcm9qZWN0JyxcbiAgZGVwZW5kZW5jaWVzOiBbZnAzMiwgZ2VvbWV0cnldLFxuICB2czogcHJvamVjdFNoYWRlcixcbiAgZ2V0VW5pZm9ybXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9qZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJmcDMyIiwiZ2VvbWV0cnkiLCJwcm9qZWN0U2hhZGVyIiwiZ2V0VW5pZm9ybXNGcm9tVmlld3BvcnQiLCJJTklUSUFMX01PRFVMRV9PUFRJT05TIiwiZ2V0VW5pZm9ybXMiLCJvcHRzIiwibmFtZSIsImRlcGVuZGVuY2llcyIsInZzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/viewport-uniforms.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/project/viewport-uniforms.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOffsetOrigin: () => (/* binding */ getOffsetOrigin),\n/* harmony export */   getUniformsFromViewport: () => (/* binding */ getUniformsFromViewport)\n/* harmony export */ });\n/* harmony import */ var gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix/mat4 */ \"(ssr)/./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix/vec4 */ \"(ssr)/./node_modules/gl-matrix/esm/vec4.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _utils_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/memoize */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/memoize.js\");\n\n\n\n\nconst ZERO_VECTOR = [\n    0,\n    0,\n    0,\n    0\n];\nconst VECTOR_TO_POINT_MATRIX = [\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0\n];\nconst IDENTITY_MATRIX = [\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n];\nconst DEFAULT_PIXELS_PER_UNIT2 = [\n    0,\n    0,\n    0\n];\nconst DEFAULT_COORDINATE_ORIGIN = [\n    0,\n    0,\n    0\n];\nconst getMemoizedViewportUniforms = (0,_utils_memoize__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(calculateViewportUniforms);\nfunction getOffsetOrigin(viewport, coordinateSystem, coordinateOrigin = DEFAULT_COORDINATE_ORIGIN) {\n    if (coordinateOrigin.length < 3) {\n        coordinateOrigin = [\n            coordinateOrigin[0],\n            coordinateOrigin[1],\n            0\n        ];\n    }\n    let shaderCoordinateOrigin = coordinateOrigin;\n    let geospatialOrigin;\n    let offsetMode = true;\n    if (coordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.LNGLAT_OFFSETS || coordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.METER_OFFSETS) {\n        geospatialOrigin = coordinateOrigin;\n    } else {\n        geospatialOrigin = viewport.isGeospatial ? [\n            Math.fround(viewport.longitude),\n            Math.fround(viewport.latitude),\n            0\n        ] : null;\n    }\n    switch(viewport.projectionMode){\n        case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.PROJECTION_MODE.WEB_MERCATOR:\n            if (coordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.LNGLAT || coordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.CARTESIAN) {\n                geospatialOrigin = [\n                    0,\n                    0,\n                    0\n                ];\n                offsetMode = false;\n            }\n            break;\n        case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET:\n            if (coordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.LNGLAT) {\n                shaderCoordinateOrigin = geospatialOrigin;\n            } else if (coordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.CARTESIAN) {\n                shaderCoordinateOrigin = [\n                    Math.fround(viewport.center[0]),\n                    Math.fround(viewport.center[1]),\n                    0\n                ];\n                geospatialOrigin = viewport.unprojectPosition(shaderCoordinateOrigin);\n                shaderCoordinateOrigin[0] -= coordinateOrigin[0];\n                shaderCoordinateOrigin[1] -= coordinateOrigin[1];\n                shaderCoordinateOrigin[2] -= coordinateOrigin[2];\n            }\n            break;\n        case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.PROJECTION_MODE.IDENTITY:\n            shaderCoordinateOrigin = viewport.position.map(Math.fround);\n            shaderCoordinateOrigin[2] = shaderCoordinateOrigin[2] || 0;\n            break;\n        case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.PROJECTION_MODE.GLOBE:\n            offsetMode = false;\n            geospatialOrigin = null;\n            break;\n        default:\n            offsetMode = false;\n    }\n    return {\n        geospatialOrigin,\n        shaderCoordinateOrigin,\n        offsetMode\n    };\n}\nfunction calculateMatrixAndOffset(viewport, coordinateSystem, coordinateOrigin) {\n    const { viewMatrixUncentered, projectionMatrix } = viewport;\n    let { viewMatrix, viewProjectionMatrix } = viewport;\n    let projectionCenter = ZERO_VECTOR;\n    let originCommon = ZERO_VECTOR;\n    let cameraPosCommon = viewport.cameraPosition;\n    const { geospatialOrigin, shaderCoordinateOrigin, offsetMode } = getOffsetOrigin(viewport, coordinateSystem, coordinateOrigin);\n    if (offsetMode) {\n        originCommon = viewport.projectPosition(geospatialOrigin || shaderCoordinateOrigin);\n        cameraPosCommon = [\n            cameraPosCommon[0] - originCommon[0],\n            cameraPosCommon[1] - originCommon[1],\n            cameraPosCommon[2] - originCommon[2]\n        ];\n        originCommon[3] = 1;\n        projectionCenter = gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_2__.transformMat4([], originCommon, viewProjectionMatrix);\n        viewMatrix = viewMatrixUncentered || viewMatrix;\n        viewProjectionMatrix = gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_3__.multiply([], projectionMatrix, viewMatrix);\n        viewProjectionMatrix = gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_3__.multiply([], viewProjectionMatrix, VECTOR_TO_POINT_MATRIX);\n    }\n    return {\n        viewMatrix,\n        viewProjectionMatrix,\n        projectionCenter,\n        originCommon,\n        cameraPosCommon,\n        shaderCoordinateOrigin,\n        geospatialOrigin\n    };\n}\nfunction getUniformsFromViewport({ viewport, devicePixelRatio = 1, modelMatrix = null, coordinateSystem = _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.DEFAULT, coordinateOrigin = DEFAULT_COORDINATE_ORIGIN, autoWrapLongitude = false }) {\n    if (coordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.DEFAULT) {\n        coordinateSystem = viewport.isGeospatial ? _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.LNGLAT : _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.CARTESIAN;\n    }\n    const uniforms = getMemoizedViewportUniforms({\n        viewport,\n        devicePixelRatio,\n        coordinateSystem,\n        coordinateOrigin\n    });\n    uniforms.project_uWrapLongitude = autoWrapLongitude;\n    uniforms.project_uModelMatrix = modelMatrix || IDENTITY_MATRIX;\n    return uniforms;\n}\nfunction calculateViewportUniforms({ viewport, devicePixelRatio, coordinateSystem, coordinateOrigin }) {\n    const { projectionCenter, viewProjectionMatrix, originCommon, cameraPosCommon, shaderCoordinateOrigin, geospatialOrigin } = calculateMatrixAndOffset(viewport, coordinateSystem, coordinateOrigin);\n    const distanceScales = viewport.getDistanceScales();\n    const viewportSize = [\n        viewport.width * devicePixelRatio,\n        viewport.height * devicePixelRatio\n    ];\n    const focalDistance = gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_2__.transformMat4([], [\n        0,\n        0,\n        -viewport.focalDistance,\n        1\n    ], viewport.projectionMatrix)[3] || 1;\n    const uniforms = {\n        project_uCoordinateSystem: coordinateSystem,\n        project_uProjectionMode: viewport.projectionMode,\n        project_uCoordinateOrigin: shaderCoordinateOrigin,\n        project_uCommonOrigin: originCommon.slice(0, 3),\n        project_uCenter: projectionCenter,\n        project_uPseudoMeters: Boolean(viewport._pseudoMeters),\n        project_uViewportSize: viewportSize,\n        project_uDevicePixelRatio: devicePixelRatio,\n        project_uFocalDistance: focalDistance,\n        project_uCommonUnitsPerMeter: distanceScales.unitsPerMeter,\n        project_uCommonUnitsPerWorldUnit: distanceScales.unitsPerMeter,\n        project_uCommonUnitsPerWorldUnit2: DEFAULT_PIXELS_PER_UNIT2,\n        project_uScale: viewport.scale,\n        project_uWrapLongitude: false,\n        project_uViewProjectionMatrix: viewProjectionMatrix,\n        project_uModelMatrix: IDENTITY_MATRIX,\n        project_uCameraPosition: cameraPosCommon\n    };\n    if (geospatialOrigin) {\n        const distanceScalesAtOrigin = viewport.getDistanceScales(geospatialOrigin);\n        switch(coordinateSystem){\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.METER_OFFSETS:\n                uniforms.project_uCommonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerMeter;\n                uniforms.project_uCommonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerMeter2;\n                break;\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.LNGLAT:\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n                if (!viewport._pseudoMeters) {\n                    uniforms.project_uCommonUnitsPerMeter = distanceScalesAtOrigin.unitsPerMeter;\n                }\n                uniforms.project_uCommonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerDegree;\n                uniforms.project_uCommonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerDegree2;\n                break;\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_SYSTEM.CARTESIAN:\n                uniforms.project_uCommonUnitsPerWorldUnit = [\n                    1,\n                    1,\n                    distanceScalesAtOrigin.unitsPerMeter[2]\n                ];\n                uniforms.project_uCommonUnitsPerWorldUnit2 = [\n                    0,\n                    0,\n                    distanceScalesAtOrigin.unitsPerMeter2[2]\n                ];\n                break;\n            default:\n                break;\n        }\n    }\n    return uniforms;\n} //# sourceMappingURL=viewport-uniforms.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/viewport-uniforms.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _project_project__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../project/project */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.js\");\n\nconst vs = \"\\nvec4 project_position_to_clipspace(\\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\\n) {\\n  vec3 projectedPosition = project_position(position, position64Low);\\n  mat3 rotation;\\n  if (project_needs_rotation(projectedPosition, rotation)) {\\n    // offset is specified as ENU\\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\\n    offset = rotation * offset;\\n  }\\n  commonPosition = vec4(projectedPosition + offset, 1.0);\\n  return project_common_position_to_clipspace(commonPosition);\\n}\\n\\nvec4 project_position_to_clipspace(\\n  vec3 position, vec3 position64Low, vec3 offset\\n) {\\n  vec4 commonPosition;\\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\\n}\\n\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: \"project32\",\n    dependencies: [\n        _project_project__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n    ],\n    vs\n}); //# sourceMappingURL=project32.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS9zaGFkZXJsaWIvcHJvamVjdDMyL3Byb2plY3QzMi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6QyxNQUFNQyxLQUFLO0FBQ1gsaUVBQWU7SUFDYkMsTUFBTTtJQUNOQyxjQUFjO1FBQUNILHdEQUFPQTtLQUFDO0lBQ3ZCQztBQUNGLENBQUMsRUFBQyxDQUNGLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vc2hhZGVybGliL3Byb2plY3QzMi9wcm9qZWN0MzIuanM/MzdiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcHJvamVjdCBmcm9tICcuLi9wcm9qZWN0L3Byb2plY3QnO1xuY29uc3QgdnMgPSBcIlxcbnZlYzQgcHJvamVjdF9wb3NpdGlvbl90b19jbGlwc3BhY2UoXFxuICB2ZWMzIHBvc2l0aW9uLCB2ZWMzIHBvc2l0aW9uNjRMb3csIHZlYzMgb2Zmc2V0LCBvdXQgdmVjNCBjb21tb25Qb3NpdGlvblxcbikge1xcbiAgdmVjMyBwcm9qZWN0ZWRQb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb24ocG9zaXRpb24sIHBvc2l0aW9uNjRMb3cpO1xcbiAgbWF0MyByb3RhdGlvbjtcXG4gIGlmIChwcm9qZWN0X25lZWRzX3JvdGF0aW9uKHByb2plY3RlZFBvc2l0aW9uLCByb3RhdGlvbikpIHtcXG4gICAgLy8gb2Zmc2V0IGlzIHNwZWNpZmllZCBhcyBFTlVcXG4gICAgLy8gd2hlbiBpbiBnbG9iZSBwcm9qZWN0aW9uLCByb3RhdGUgb2Zmc2V0IHNvIHRoYXQgdGhlIGdyb3VuZCBhbGlnaHMgd2l0aCB0aGUgc3VyZmFjZSBvZiB0aGUgZ2xvYmVcXG4gICAgb2Zmc2V0ID0gcm90YXRpb24gKiBvZmZzZXQ7XFxuICB9XFxuICBjb21tb25Qb3NpdGlvbiA9IHZlYzQocHJvamVjdGVkUG9zaXRpb24gKyBvZmZzZXQsIDEuMCk7XFxuICByZXR1cm4gcHJvamVjdF9jb21tb25fcG9zaXRpb25fdG9fY2xpcHNwYWNlKGNvbW1vblBvc2l0aW9uKTtcXG59XFxuXFxudmVjNCBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShcXG4gIHZlYzMgcG9zaXRpb24sIHZlYzMgcG9zaXRpb242NExvdywgdmVjMyBvZmZzZXRcXG4pIHtcXG4gIHZlYzQgY29tbW9uUG9zaXRpb247XFxuICByZXR1cm4gcHJvamVjdF9wb3NpdGlvbl90b19jbGlwc3BhY2UocG9zaXRpb24sIHBvc2l0aW9uNjRMb3csIG9mZnNldCwgY29tbW9uUG9zaXRpb24pO1xcbn1cXG5cIjtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgbmFtZTogJ3Byb2plY3QzMicsXG4gIGRlcGVuZGVuY2llczogW3Byb2plY3RdLFxuICB2c1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2plY3QzMi5qcy5tYXAiXSwibmFtZXMiOlsicHJvamVjdCIsInZzIiwibmFtZSIsImRlcGVuZGVuY2llcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/shadow/shadow.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/shaderlib/shadow/shadow.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _project_project__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../project/project */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project/project.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/matrix4.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/vector3.js\");\n/* harmony import */ var _utils_memoize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/memoize */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/memoize.js\");\n/* harmony import */ var _math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/web-mercator */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/index.js\");\n\n\n\n\n\nconst vs = \"\\nconst int max_lights = 2;\\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\\nuniform vec4 shadow_uProjectCenters[max_lights];\\nuniform bool shadow_uDrawShadowMap;\\nuniform bool shadow_uUseShadowMap;\\nuniform int shadow_uLightId;\\nuniform float shadow_uLightCount;\\n\\nvarying vec3 shadow_vPosition[max_lights];\\n\\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\\n  if (shadow_uDrawShadowMap) {\\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\\n  }\\n  if (shadow_uUseShadowMap) {\\n    for (int i = 0; i < max_lights; i++) {\\n      if(i < int(shadow_uLightCount)) {\\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\\n      }\\n    }\\n  }\\n  return gl_Position;\\n}\\n\";\nconst fs = \"\\nconst int max_lights = 2;\\nuniform bool shadow_uDrawShadowMap;\\nuniform bool shadow_uUseShadowMap;\\nuniform sampler2D shadow_uShadowMap0;\\nuniform sampler2D shadow_uShadowMap1;\\nuniform vec4 shadow_uColor;\\nuniform float shadow_uLightCount;\\n\\nvarying vec3 shadow_vPosition[max_lights];\\n\\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\\n\\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\\n  vec4 rgbaDepth = texture2D(shadowMap, position.xy);\\n\\n  float z = dot(rgbaDepth, bitUnpackShift);\\n  return smoothstep(0.001, 0.01, position.z - z);\\n}\\n\\nvec4 shadow_filterShadowColor(vec4 color) {\\n  if (shadow_uDrawShadowMap) {\\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\\n    return rgbaDepth;\\n  }\\n  if (shadow_uUseShadowMap) {\\n    float shadowAlpha = 0.0;\\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\\n    if(shadow_uLightCount > 1.0) {\\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\\n    }\\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\\n\\n    return vec4(\\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\\n      blendedAlpha\\n    );\\n  }\\n  return color;\\n}\\n\";\nconst getMemoizedViewportCenterPosition = (0,_utils_memoize__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(getViewportCenterPosition);\nconst getMemoizedViewProjectionMatrices = (0,_utils_memoize__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(getViewProjectionMatrices);\nconst DEFAULT_SHADOW_COLOR = [\n    0,\n    0,\n    0,\n    1.0\n];\nconst VECTOR_TO_POINT_MATRIX = [\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0\n];\nfunction screenToCommonSpace(xyz, pixelUnprojectionMatrix) {\n    const [x, y, z] = xyz;\n    const coord = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_0__.pixelsToWorld)([\n        x,\n        y,\n        z\n    ], pixelUnprojectionMatrix);\n    if (Number.isFinite(z)) {\n        return coord;\n    }\n    return [\n        coord[0],\n        coord[1],\n        0\n    ];\n}\nfunction getViewportCenterPosition({ viewport, center }) {\n    return new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"](viewport.viewProjectionMatrix).invert().transform(center);\n}\nfunction getViewProjectionMatrices({ viewport, shadowMatrices }) {\n    const projectionMatrices = [];\n    const pixelUnprojectionMatrix = viewport.pixelUnprojectionMatrix;\n    const farZ = viewport.isGeospatial ? undefined : 1;\n    const corners = [\n        [\n            0,\n            0,\n            farZ\n        ],\n        [\n            viewport.width,\n            0,\n            farZ\n        ],\n        [\n            0,\n            viewport.height,\n            farZ\n        ],\n        [\n            viewport.width,\n            viewport.height,\n            farZ\n        ],\n        [\n            0,\n            0,\n            -1\n        ],\n        [\n            viewport.width,\n            0,\n            -1\n        ],\n        [\n            0,\n            viewport.height,\n            -1\n        ],\n        [\n            viewport.width,\n            viewport.height,\n            -1\n        ]\n    ].map((pixel)=>screenToCommonSpace(pixel, pixelUnprojectionMatrix));\n    for (const shadowMatrix of shadowMatrices){\n        const viewMatrix = shadowMatrix.clone().translate(new _math_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](viewport.center).negate());\n        const positions = corners.map((corner)=>viewMatrix.transform(corner));\n        const projectionMatrix = new _math_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"]().ortho({\n            left: Math.min(...positions.map((position)=>position[0])),\n            right: Math.max(...positions.map((position)=>position[0])),\n            bottom: Math.min(...positions.map((position)=>position[1])),\n            top: Math.max(...positions.map((position)=>position[1])),\n            near: Math.min(...positions.map((position)=>-position[2])),\n            far: Math.max(...positions.map((position)=>-position[2]))\n        });\n        projectionMatrices.push(projectionMatrix.multiplyRight(shadowMatrix));\n    }\n    return projectionMatrices;\n}\nfunction createShadowUniforms(opts, context) {\n    const { shadowEnabled = true } = opts;\n    if (!shadowEnabled || !opts.shadowMatrices || !opts.shadowMatrices.length) {\n        return {\n            shadow_uDrawShadowMap: false,\n            shadow_uUseShadowMap: false\n        };\n    }\n    const uniforms = {\n        shadow_uDrawShadowMap: Boolean(opts.drawToShadowMap),\n        shadow_uUseShadowMap: opts.shadowMaps ? opts.shadowMaps.length > 0 : false,\n        shadow_uColor: opts.shadowColor || DEFAULT_SHADOW_COLOR,\n        shadow_uLightId: opts.shadowLightId || 0,\n        shadow_uLightCount: opts.shadowMatrices.length\n    };\n    const center = getMemoizedViewportCenterPosition({\n        viewport: opts.viewport,\n        center: context.project_uCenter\n    });\n    const projectCenters = [];\n    const viewProjectionMatrices = getMemoizedViewProjectionMatrices({\n        shadowMatrices: opts.shadowMatrices,\n        viewport: opts.viewport\n    }).slice();\n    for(let i = 0; i < opts.shadowMatrices.length; i++){\n        const viewProjectionMatrix = viewProjectionMatrices[i];\n        const viewProjectionMatrixCentered = viewProjectionMatrix.clone().translate(new _math_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](opts.viewport.center).negate());\n        if (context.project_uCoordinateSystem === _lib_constants__WEBPACK_IMPORTED_MODULE_4__.COORDINATE_SYSTEM.LNGLAT && context.project_uProjectionMode === _lib_constants__WEBPACK_IMPORTED_MODULE_4__.PROJECTION_MODE.WEB_MERCATOR) {\n            viewProjectionMatrices[i] = viewProjectionMatrixCentered;\n            projectCenters[i] = center;\n        } else {\n            viewProjectionMatrices[i] = viewProjectionMatrix.clone().multiplyRight(VECTOR_TO_POINT_MATRIX);\n            projectCenters[i] = viewProjectionMatrixCentered.transform(center);\n        }\n    }\n    for(let i = 0; i < viewProjectionMatrices.length; i++){\n        uniforms[\"shadow_uViewProjectionMatrices[\".concat(i, \"]\")] = viewProjectionMatrices[i];\n        uniforms[\"shadow_uProjectCenters[\".concat(i, \"]\")] = projectCenters[i];\n        if (opts.shadowMaps && opts.shadowMaps.length > 0) {\n            uniforms[\"shadow_uShadowMap\".concat(i)] = opts.shadowMaps[i];\n        } else {\n            uniforms[\"shadow_uShadowMap\".concat(i)] = opts.dummyShadowMap;\n        }\n    }\n    return uniforms;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: \"shadow\",\n    dependencies: [\n        _project_project__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n    ],\n    vs,\n    fs,\n    inject: {\n        \"vs:DECKGL_FILTER_GL_POSITION\": \"\\n    position = shadow_setVertexPosition(geometry.position);\\n    \",\n        \"fs:DECKGL_FILTER_COLOR\": \"\\n    color = shadow_filterShadowColor(color);\\n    \"\n    },\n    getUniforms: (opts = {}, context = {})=>{\n        if (\"viewport\" in opts && (opts.drawToShadowMap || opts.shadowMaps && opts.shadowMaps.length > 0)) {\n            return createShadowUniforms(opts, context);\n        }\n        return {};\n    }\n}); //# sourceMappingURL=shadow.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/shadow/shadow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/cpu-interpolation-transition.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/transitions/cpu-interpolation-transition.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CPUInterpolationTransition)\n/* harmony export */ });\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition.js\");\n\n\nclass CPUInterpolationTransition extends _transition__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    get value() {\n        return this._value;\n    }\n    _onUpdate() {\n        const { time, settings: { fromValue, toValue, duration, easing } } = this;\n        const t = easing(time / duration);\n        this._value = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.lerp)(fromValue, toValue, t);\n    }\n} //# sourceMappingURL=cpu-interpolation-transition.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy9jcHUtaW50ZXJwb2xhdGlvbi10cmFuc2l0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUNDO0FBQ3ZCLE1BQU1FLG1DQUFtQ0QsbURBQVVBO0lBQ2hFLElBQUlFLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQ0MsTUFBTTtJQUNwQjtJQUVBQyxZQUFZO1FBQ1YsTUFBTSxFQUNKQyxJQUFJLEVBQ0pDLFVBQVUsRUFDUkMsU0FBUyxFQUNUQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUkMsTUFBTSxFQUNQLEVBQ0YsR0FBRyxJQUFJO1FBQ1IsTUFBTUMsSUFBSUQsT0FBT0wsT0FBT0k7UUFDeEIsSUFBSSxDQUFDTixNQUFNLEdBQUdKLG1EQUFJQSxDQUFDUSxXQUFXQyxTQUFTRztJQUN6QztBQUVGLEVBQ0Esd0RBQXdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy9jcHUtaW50ZXJwb2xhdGlvbi10cmFuc2l0aW9uLmpzP2E3MDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbGVycCB9IGZyb20gJ0BtYXRoLmdsL2NvcmUnO1xuaW1wb3J0IFRyYW5zaXRpb24gZnJvbSAnLi90cmFuc2l0aW9uJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENQVUludGVycG9sYXRpb25UcmFuc2l0aW9uIGV4dGVuZHMgVHJhbnNpdGlvbiB7XG4gIGdldCB2YWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG4gIH1cblxuICBfb25VcGRhdGUoKSB7XG4gICAgY29uc3Qge1xuICAgICAgdGltZSxcbiAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgIGZyb21WYWx1ZSxcbiAgICAgICAgdG9WYWx1ZSxcbiAgICAgICAgZHVyYXRpb24sXG4gICAgICAgIGVhc2luZ1xuICAgICAgfVxuICAgIH0gPSB0aGlzO1xuICAgIGNvbnN0IHQgPSBlYXNpbmcodGltZSAvIGR1cmF0aW9uKTtcbiAgICB0aGlzLl92YWx1ZSA9IGxlcnAoZnJvbVZhbHVlLCB0b1ZhbHVlLCB0KTtcbiAgfVxuXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcHUtaW50ZXJwb2xhdGlvbi10cmFuc2l0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJsZXJwIiwiVHJhbnNpdGlvbiIsIkNQVUludGVycG9sYXRpb25UcmFuc2l0aW9uIiwidmFsdWUiLCJfdmFsdWUiLCJfb25VcGRhdGUiLCJ0aW1lIiwic2V0dGluZ3MiLCJmcm9tVmFsdWUiLCJ0b1ZhbHVlIiwiZHVyYXRpb24iLCJlYXNpbmciLCJ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/cpu-interpolation-transition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/cpu-spring-transition.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/transitions/cpu-spring-transition.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CPUSpringTransition)\n/* harmony export */ });\n/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition.js\");\n\nconst EPSILON = 1e-5;\nfunction updateSpringElement(prev, cur, dest, damping, stiffness) {\n    const velocity = cur - prev;\n    const delta = dest - cur;\n    const spring = delta * stiffness;\n    const damper = -velocity * damping;\n    return spring + damper + velocity + cur;\n}\nfunction updateSpring(prev, cur, dest, damping, stiffness) {\n    if (Array.isArray(dest)) {\n        const next = [];\n        for(let i = 0; i < dest.length; i++){\n            next[i] = updateSpringElement(prev[i], cur[i], dest[i], damping, stiffness);\n        }\n        return next;\n    }\n    return updateSpringElement(prev, cur, dest, damping, stiffness);\n}\nfunction distance(value1, value2) {\n    if (Array.isArray(value1)) {\n        let distanceSquare = 0;\n        for(let i = 0; i < value1.length; i++){\n            const d = value1[i] - value2[i];\n            distanceSquare += d * d;\n        }\n        return Math.sqrt(distanceSquare);\n    }\n    return Math.abs(value1 - value2);\n}\nclass CPUSpringTransition extends _transition__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    get value() {\n        return this._currValue;\n    }\n    _onUpdate() {\n        const { fromValue, toValue, damping, stiffness } = this.settings;\n        const { _prevValue = fromValue, _currValue = fromValue } = this;\n        let nextValue = updateSpring(_prevValue, _currValue, toValue, damping, stiffness);\n        const delta = distance(nextValue, toValue);\n        const velocity = distance(nextValue, _currValue);\n        if (delta < EPSILON && velocity < EPSILON) {\n            nextValue = toValue;\n            this.end();\n        }\n        this._prevValue = _currValue;\n        this._currValue = nextValue;\n    }\n} //# sourceMappingURL=cpu-spring-transition.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy9jcHUtc3ByaW5nLXRyYW5zaXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFDdEMsTUFBTUMsVUFBVTtBQUVoQixTQUFTQyxvQkFBb0JDLElBQUksRUFBRUMsR0FBRyxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsU0FBUztJQUM5RCxNQUFNQyxXQUFXSixNQUFNRDtJQUN2QixNQUFNTSxRQUFRSixPQUFPRDtJQUNyQixNQUFNTSxTQUFTRCxRQUFRRjtJQUN2QixNQUFNSSxTQUFTLENBQUNILFdBQVdGO0lBQzNCLE9BQU9JLFNBQVNDLFNBQVNILFdBQVdKO0FBQ3RDO0FBRUEsU0FBU1EsYUFBYVQsSUFBSSxFQUFFQyxHQUFHLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFQyxTQUFTO0lBQ3ZELElBQUlNLE1BQU1DLE9BQU8sQ0FBQ1QsT0FBTztRQUN2QixNQUFNVSxPQUFPLEVBQUU7UUFFZixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVgsS0FBS1ksTUFBTSxFQUFFRCxJQUFLO1lBQ3BDRCxJQUFJLENBQUNDLEVBQUUsR0FBR2Qsb0JBQW9CQyxJQUFJLENBQUNhLEVBQUUsRUFBRVosR0FBRyxDQUFDWSxFQUFFLEVBQUVYLElBQUksQ0FBQ1csRUFBRSxFQUFFVixTQUFTQztRQUNuRTtRQUVBLE9BQU9RO0lBQ1Q7SUFFQSxPQUFPYixvQkFBb0JDLE1BQU1DLEtBQUtDLE1BQU1DLFNBQVNDO0FBQ3ZEO0FBRUEsU0FBU1csU0FBU0MsTUFBTSxFQUFFQyxNQUFNO0lBQzlCLElBQUlQLE1BQU1DLE9BQU8sQ0FBQ0ssU0FBUztRQUN6QixJQUFJRSxpQkFBaUI7UUFFckIsSUFBSyxJQUFJTCxJQUFJLEdBQUdBLElBQUlHLE9BQU9GLE1BQU0sRUFBRUQsSUFBSztZQUN0QyxNQUFNTSxJQUFJSCxNQUFNLENBQUNILEVBQUUsR0FBR0ksTUFBTSxDQUFDSixFQUFFO1lBQy9CSyxrQkFBa0JDLElBQUlBO1FBQ3hCO1FBRUEsT0FBT0MsS0FBS0MsSUFBSSxDQUFDSDtJQUNuQjtJQUVBLE9BQU9FLEtBQUtFLEdBQUcsQ0FBQ04sU0FBU0M7QUFDM0I7QUFFZSxNQUFNTSw0QkFBNEIxQixtREFBVUE7SUFDekQsSUFBSTJCLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQ0MsVUFBVTtJQUN4QjtJQUVBQyxZQUFZO1FBQ1YsTUFBTSxFQUNKQyxTQUFTLEVBQ1RDLE9BQU8sRUFDUHpCLE9BQU8sRUFDUEMsU0FBUyxFQUNWLEdBQUcsSUFBSSxDQUFDeUIsUUFBUTtRQUNqQixNQUFNLEVBQ0pDLGFBQWFILFNBQVMsRUFDdEJGLGFBQWFFLFNBQVMsRUFDdkIsR0FBRyxJQUFJO1FBQ1IsSUFBSUksWUFBWXRCLGFBQWFxQixZQUFZTCxZQUFZRyxTQUFTekIsU0FBU0M7UUFDdkUsTUFBTUUsUUFBUVMsU0FBU2dCLFdBQVdIO1FBQ2xDLE1BQU12QixXQUFXVSxTQUFTZ0IsV0FBV047UUFFckMsSUFBSW5CLFFBQVFSLFdBQVdPLFdBQVdQLFNBQVM7WUFDekNpQyxZQUFZSDtZQUNaLElBQUksQ0FBQ0ksR0FBRztRQUNWO1FBRUEsSUFBSSxDQUFDRixVQUFVLEdBQUdMO1FBQ2xCLElBQUksQ0FBQ0EsVUFBVSxHQUFHTTtJQUNwQjtBQUVGLEVBQ0EsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy9jcHUtc3ByaW5nLXRyYW5zaXRpb24uanM/MTJhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVHJhbnNpdGlvbiBmcm9tICcuL3RyYW5zaXRpb24nO1xuY29uc3QgRVBTSUxPTiA9IDFlLTU7XG5cbmZ1bmN0aW9uIHVwZGF0ZVNwcmluZ0VsZW1lbnQocHJldiwgY3VyLCBkZXN0LCBkYW1waW5nLCBzdGlmZm5lc3MpIHtcbiAgY29uc3QgdmVsb2NpdHkgPSBjdXIgLSBwcmV2O1xuICBjb25zdCBkZWx0YSA9IGRlc3QgLSBjdXI7XG4gIGNvbnN0IHNwcmluZyA9IGRlbHRhICogc3RpZmZuZXNzO1xuICBjb25zdCBkYW1wZXIgPSAtdmVsb2NpdHkgKiBkYW1waW5nO1xuICByZXR1cm4gc3ByaW5nICsgZGFtcGVyICsgdmVsb2NpdHkgKyBjdXI7XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVNwcmluZyhwcmV2LCBjdXIsIGRlc3QsIGRhbXBpbmcsIHN0aWZmbmVzcykge1xuICBpZiAoQXJyYXkuaXNBcnJheShkZXN0KSkge1xuICAgIGNvbnN0IG5leHQgPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGVzdC5sZW5ndGg7IGkrKykge1xuICAgICAgbmV4dFtpXSA9IHVwZGF0ZVNwcmluZ0VsZW1lbnQocHJldltpXSwgY3VyW2ldLCBkZXN0W2ldLCBkYW1waW5nLCBzdGlmZm5lc3MpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXh0O1xuICB9XG5cbiAgcmV0dXJuIHVwZGF0ZVNwcmluZ0VsZW1lbnQocHJldiwgY3VyLCBkZXN0LCBkYW1waW5nLCBzdGlmZm5lc3MpO1xufVxuXG5mdW5jdGlvbiBkaXN0YW5jZSh2YWx1ZTEsIHZhbHVlMikge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZTEpKSB7XG4gICAgbGV0IGRpc3RhbmNlU3F1YXJlID0gMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsdWUxLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBkID0gdmFsdWUxW2ldIC0gdmFsdWUyW2ldO1xuICAgICAgZGlzdGFuY2VTcXVhcmUgKz0gZCAqIGQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIE1hdGguc3FydChkaXN0YW5jZVNxdWFyZSk7XG4gIH1cblxuICByZXR1cm4gTWF0aC5hYnModmFsdWUxIC0gdmFsdWUyKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ1BVU3ByaW5nVHJhbnNpdGlvbiBleHRlbmRzIFRyYW5zaXRpb24ge1xuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2N1cnJWYWx1ZTtcbiAgfVxuXG4gIF9vblVwZGF0ZSgpIHtcbiAgICBjb25zdCB7XG4gICAgICBmcm9tVmFsdWUsXG4gICAgICB0b1ZhbHVlLFxuICAgICAgZGFtcGluZyxcbiAgICAgIHN0aWZmbmVzc1xuICAgIH0gPSB0aGlzLnNldHRpbmdzO1xuICAgIGNvbnN0IHtcbiAgICAgIF9wcmV2VmFsdWUgPSBmcm9tVmFsdWUsXG4gICAgICBfY3VyclZhbHVlID0gZnJvbVZhbHVlXG4gICAgfSA9IHRoaXM7XG4gICAgbGV0IG5leHRWYWx1ZSA9IHVwZGF0ZVNwcmluZyhfcHJldlZhbHVlLCBfY3VyclZhbHVlLCB0b1ZhbHVlLCBkYW1waW5nLCBzdGlmZm5lc3MpO1xuICAgIGNvbnN0IGRlbHRhID0gZGlzdGFuY2UobmV4dFZhbHVlLCB0b1ZhbHVlKTtcbiAgICBjb25zdCB2ZWxvY2l0eSA9IGRpc3RhbmNlKG5leHRWYWx1ZSwgX2N1cnJWYWx1ZSk7XG5cbiAgICBpZiAoZGVsdGEgPCBFUFNJTE9OICYmIHZlbG9jaXR5IDwgRVBTSUxPTikge1xuICAgICAgbmV4dFZhbHVlID0gdG9WYWx1ZTtcbiAgICAgIHRoaXMuZW5kKCk7XG4gICAgfVxuXG4gICAgdGhpcy5fcHJldlZhbHVlID0gX2N1cnJWYWx1ZTtcbiAgICB0aGlzLl9jdXJyVmFsdWUgPSBuZXh0VmFsdWU7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3B1LXNwcmluZy10cmFuc2l0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJUcmFuc2l0aW9uIiwiRVBTSUxPTiIsInVwZGF0ZVNwcmluZ0VsZW1lbnQiLCJwcmV2IiwiY3VyIiwiZGVzdCIsImRhbXBpbmciLCJzdGlmZm5lc3MiLCJ2ZWxvY2l0eSIsImRlbHRhIiwic3ByaW5nIiwiZGFtcGVyIiwidXBkYXRlU3ByaW5nIiwiQXJyYXkiLCJpc0FycmF5IiwibmV4dCIsImkiLCJsZW5ndGgiLCJkaXN0YW5jZSIsInZhbHVlMSIsInZhbHVlMiIsImRpc3RhbmNlU3F1YXJlIiwiZCIsIk1hdGgiLCJzcXJ0IiwiYWJzIiwiQ1BVU3ByaW5nVHJhbnNpdGlvbiIsInZhbHVlIiwiX2N1cnJWYWx1ZSIsIl9vblVwZGF0ZSIsImZyb21WYWx1ZSIsInRvVmFsdWUiLCJzZXR0aW5ncyIsIl9wcmV2VmFsdWUiLCJuZXh0VmFsdWUiLCJlbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/cpu-spring-transition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/gpu-interpolation-transition.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/transitions/gpu-interpolation-transition.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GPUInterpolationTransition)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/transform.js\");\n/* harmony import */ var _lib_attribute_attribute__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/attribute/attribute */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute.js\");\n/* harmony import */ var _lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/attribute/attribute-transition-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-utils.js\");\n/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition.js\");\n\n\n\n\n\nclass GPUInterpolationTransition {\n    constructor({ gl, attribute, timeline }){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"type\", \"interpolation\");\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attributeInTransition\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"settings\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attribute\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"transition\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentStartIndices\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentLength\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"transform\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"buffers\", void 0);\n        this.gl = gl;\n        this.transition = new _transition__WEBPACK_IMPORTED_MODULE_1__[\"default\"](timeline);\n        this.attribute = attribute;\n        this.attributeInTransition = new _lib_attribute_attribute__WEBPACK_IMPORTED_MODULE_2__[\"default\"](gl, attribute.settings);\n        this.currentStartIndices = attribute.startIndices;\n        this.currentLength = 0;\n        this.transform = getTransform(gl, attribute);\n        const bufferOpts = {\n            byteLength: 0,\n            usage: 35050\n        };\n        this.buffers = [\n            new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, bufferOpts),\n            new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, bufferOpts)\n        ];\n    }\n    get inProgress() {\n        return this.transition.inProgress;\n    }\n    start(transitionSettings, numInstances) {\n        if (transitionSettings.duration <= 0) {\n            this.transition.cancel();\n            return;\n        }\n        this.settings = transitionSettings;\n        const { gl, buffers, attribute } = this;\n        (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.cycleBuffers)(buffers);\n        const padBufferOpts = {\n            numInstances,\n            attribute,\n            fromLength: this.currentLength,\n            fromStartIndices: this.currentStartIndices,\n            getData: transitionSettings.enter\n        };\n        for (const buffer of buffers){\n            (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.padBuffer)({\n                buffer,\n                ...padBufferOpts\n            });\n        }\n        this.currentStartIndices = attribute.startIndices;\n        this.currentLength = (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.getAttributeBufferLength)(attribute, numInstances);\n        this.attributeInTransition.setData({\n            buffer: buffers[1],\n            value: attribute.value\n        });\n        this.transition.start(transitionSettings);\n        this.transform.update({\n            elementCount: Math.floor(this.currentLength / attribute.size),\n            sourceBuffers: {\n                aFrom: buffers[0],\n                aTo: (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.getSourceBufferAttribute)(gl, attribute)\n            },\n            feedbackBuffers: {\n                vCurrent: buffers[1]\n            }\n        });\n    }\n    update() {\n        const updated = this.transition.update();\n        if (updated) {\n            const { duration, easing } = this.settings;\n            const { time } = this.transition;\n            let t = time / duration;\n            if (easing) {\n                t = easing(t);\n            }\n            this.transform.run({\n                uniforms: {\n                    time: t\n                }\n            });\n        }\n        return updated;\n    }\n    cancel() {\n        this.transition.cancel();\n        this.transform.delete();\n        for (const buffer of this.buffers){\n            buffer.delete();\n        }\n        this.buffers.length = 0;\n    }\n}\nconst vs = \"\\n#define SHADER_NAME interpolation-transition-vertex-shader\\n\\nuniform float time;\\nattribute ATTRIBUTE_TYPE aFrom;\\nattribute ATTRIBUTE_TYPE aTo;\\nvarying ATTRIBUTE_TYPE vCurrent;\\n\\nvoid main(void) {\\n  vCurrent = mix(aFrom, aTo, time);\\n  gl_Position = vec4(0.0);\\n}\\n\";\nfunction getTransform(gl, attribute) {\n    const attributeType = (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.getAttributeTypeFromSize)(attribute.size);\n    return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"](gl, {\n        vs,\n        defines: {\n            ATTRIBUTE_TYPE: attributeType\n        },\n        varyings: [\n            \"vCurrent\"\n        ]\n    });\n} //# sourceMappingURL=gpu-interpolation-transition.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy9ncHUtaW50ZXJwb2xhdGlvbi10cmFuc2l0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0U7QUFDdEI7QUFDQztBQUNpSDtBQUM5SDtBQUN2QixNQUFNVTtJQUNuQkMsWUFBWSxFQUNWQyxFQUFFLEVBQ0ZDLFNBQVMsRUFDVEMsUUFBUSxFQUNULENBQUU7UUFDRGQscUZBQWVBLENBQUMsSUFBSSxFQUFFLE1BQU0sS0FBSztRQUVqQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFFBQVE7UUFFOUJBLHFGQUFlQSxDQUFDLElBQUksRUFBRSx5QkFBeUIsS0FBSztRQUVwREEscUZBQWVBLENBQUMsSUFBSSxFQUFFLFlBQVksS0FBSztRQUV2Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGFBQWEsS0FBSztRQUV4Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGNBQWMsS0FBSztRQUV6Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLHVCQUF1QixLQUFLO1FBRWxEQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLEtBQUs7UUFFNUNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxhQUFhLEtBQUs7UUFFeENBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxXQUFXLEtBQUs7UUFFdEMsSUFBSSxDQUFDWSxFQUFFLEdBQUdBO1FBQ1YsSUFBSSxDQUFDRyxVQUFVLEdBQUcsSUFBSU4sbURBQVVBLENBQUNLO1FBQ2pDLElBQUksQ0FBQ0QsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNHLHFCQUFxQixHQUFHLElBQUliLGdFQUFTQSxDQUFDUyxJQUFJQyxVQUFVSSxRQUFRO1FBQ2pFLElBQUksQ0FBQ0MsbUJBQW1CLEdBQUdMLFVBQVVNLFlBQVk7UUFDakQsSUFBSSxDQUFDQyxhQUFhLEdBQUc7UUFDckIsSUFBSSxDQUFDQyxTQUFTLEdBQUdDLGFBQWFWLElBQUlDO1FBQ2xDLE1BQU1VLGFBQWE7WUFDakJDLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0EsSUFBSSxDQUFDQyxPQUFPLEdBQUc7WUFBQyxJQUFJekIscURBQU1BLENBQUNXLElBQUlXO1lBQWEsSUFBSXRCLHFEQUFNQSxDQUFDVyxJQUFJVztTQUFZO0lBQ3pFO0lBRUEsSUFBSUksYUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDWixVQUFVLENBQUNZLFVBQVU7SUFDbkM7SUFFQUMsTUFBTUMsa0JBQWtCLEVBQUVDLFlBQVksRUFBRTtRQUN0QyxJQUFJRCxtQkFBbUJFLFFBQVEsSUFBSSxHQUFHO1lBQ3BDLElBQUksQ0FBQ2hCLFVBQVUsQ0FBQ2lCLE1BQU07WUFDdEI7UUFDRjtRQUVBLElBQUksQ0FBQ2YsUUFBUSxHQUFHWTtRQUNoQixNQUFNLEVBQ0pqQixFQUFFLEVBQ0ZjLE9BQU8sRUFDUGIsU0FBUyxFQUNWLEdBQUcsSUFBSTtRQUNSTCx1RkFBWUEsQ0FBQ2tCO1FBQ2IsTUFBTU8sZ0JBQWdCO1lBQ3BCSDtZQUNBakI7WUFDQXFCLFlBQVksSUFBSSxDQUFDZCxhQUFhO1lBQzlCZSxrQkFBa0IsSUFBSSxDQUFDakIsbUJBQW1CO1lBQzFDa0IsU0FBU1AsbUJBQW1CUSxLQUFLO1FBQ25DO1FBRUEsS0FBSyxNQUFNQyxVQUFVWixRQUFTO1lBQzVCdEIsb0ZBQVNBLENBQUM7Z0JBQ1JrQztnQkFDQSxHQUFHTCxhQUFhO1lBQ2xCO1FBQ0Y7UUFFQSxJQUFJLENBQUNmLG1CQUFtQixHQUFHTCxVQUFVTSxZQUFZO1FBQ2pELElBQUksQ0FBQ0MsYUFBYSxHQUFHYixtR0FBd0JBLENBQUNNLFdBQVdpQjtRQUN6RCxJQUFJLENBQUNkLHFCQUFxQixDQUFDdUIsT0FBTyxDQUFDO1lBQ2pDRCxRQUFRWixPQUFPLENBQUMsRUFBRTtZQUNsQmMsT0FBTzNCLFVBQVUyQixLQUFLO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDekIsVUFBVSxDQUFDYSxLQUFLLENBQUNDO1FBQ3RCLElBQUksQ0FBQ1IsU0FBUyxDQUFDb0IsTUFBTSxDQUFDO1lBQ3BCQyxjQUFjQyxLQUFLQyxLQUFLLENBQUMsSUFBSSxDQUFDeEIsYUFBYSxHQUFHUCxVQUFVZ0MsSUFBSTtZQUM1REMsZUFBZTtnQkFDYkMsT0FBT3JCLE9BQU8sQ0FBQyxFQUFFO2dCQUNqQnNCLEtBQUsxQyxtR0FBd0JBLENBQUNNLElBQUlDO1lBQ3BDO1lBQ0FvQyxpQkFBaUI7Z0JBQ2ZDLFVBQVV4QixPQUFPLENBQUMsRUFBRTtZQUN0QjtRQUNGO0lBQ0Y7SUFFQWUsU0FBUztRQUNQLE1BQU1VLFVBQVUsSUFBSSxDQUFDcEMsVUFBVSxDQUFDMEIsTUFBTTtRQUV0QyxJQUFJVSxTQUFTO1lBQ1gsTUFBTSxFQUNKcEIsUUFBUSxFQUNScUIsTUFBTSxFQUNQLEdBQUcsSUFBSSxDQUFDbkMsUUFBUTtZQUNqQixNQUFNLEVBQ0pvQyxJQUFJLEVBQ0wsR0FBRyxJQUFJLENBQUN0QyxVQUFVO1lBQ25CLElBQUl1QyxJQUFJRCxPQUFPdEI7WUFFZixJQUFJcUIsUUFBUTtnQkFDVkUsSUFBSUYsT0FBT0U7WUFDYjtZQUVBLElBQUksQ0FBQ2pDLFNBQVMsQ0FBQ2tDLEdBQUcsQ0FBQztnQkFDakJDLFVBQVU7b0JBQ1JILE1BQU1DO2dCQUNSO1lBQ0Y7UUFDRjtRQUVBLE9BQU9IO0lBQ1Q7SUFFQW5CLFNBQVM7UUFDUCxJQUFJLENBQUNqQixVQUFVLENBQUNpQixNQUFNO1FBQ3RCLElBQUksQ0FBQ1gsU0FBUyxDQUFDb0MsTUFBTTtRQUVyQixLQUFLLE1BQU1uQixVQUFVLElBQUksQ0FBQ1osT0FBTyxDQUFFO1lBQ2pDWSxPQUFPbUIsTUFBTTtRQUNmO1FBRUEsSUFBSSxDQUFDL0IsT0FBTyxDQUFDZ0MsTUFBTSxHQUFHO0lBQ3hCO0FBRUY7QUFDQSxNQUFNQyxLQUFLO0FBRVgsU0FBU3JDLGFBQWFWLEVBQUUsRUFBRUMsU0FBUztJQUNqQyxNQUFNK0MsZ0JBQWdCdkQsbUdBQXdCQSxDQUFDUSxVQUFVZ0MsSUFBSTtJQUM3RCxPQUFPLElBQUkzQyxxREFBU0EsQ0FBQ1UsSUFBSTtRQUN2QitDO1FBQ0FFLFNBQVM7WUFDUEMsZ0JBQWdCRjtRQUNsQjtRQUNBRyxVQUFVO1lBQUM7U0FBVztJQUN4QjtBQUNGLEVBQ0Esd0RBQXdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy9ncHUtaW50ZXJwb2xhdGlvbi10cmFuc2l0aW9uLmpzP2NkNzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCB7IEJ1ZmZlciwgVHJhbnNmb3JtIH0gZnJvbSAnQGx1bWEuZ2wvY29yZSc7XG5pbXBvcnQgQXR0cmlidXRlIGZyb20gJy4uL2xpYi9hdHRyaWJ1dGUvYXR0cmlidXRlJztcbmltcG9ydCB7IHBhZEJ1ZmZlciwgZ2V0QXR0cmlidXRlVHlwZUZyb21TaXplLCBnZXRTb3VyY2VCdWZmZXJBdHRyaWJ1dGUsIGdldEF0dHJpYnV0ZUJ1ZmZlckxlbmd0aCwgY3ljbGVCdWZmZXJzIH0gZnJvbSAnLi4vbGliL2F0dHJpYnV0ZS9hdHRyaWJ1dGUtdHJhbnNpdGlvbi11dGlscyc7XG5pbXBvcnQgVHJhbnNpdGlvbiBmcm9tICcuL3RyYW5zaXRpb24nO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR1BVSW50ZXJwb2xhdGlvblRyYW5zaXRpb24ge1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgZ2wsXG4gICAgYXR0cmlidXRlLFxuICAgIHRpbWVsaW5lXG4gIH0pIHtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJnbFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwidHlwZVwiLCAnaW50ZXJwb2xhdGlvbicpO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiYXR0cmlidXRlSW5UcmFuc2l0aW9uXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJzZXR0aW5nc1wiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiYXR0cmlidXRlXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0cmFuc2l0aW9uXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJjdXJyZW50U3RhcnRJbmRpY2VzXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJjdXJyZW50TGVuZ3RoXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJ0cmFuc2Zvcm1cIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImJ1ZmZlcnNcIiwgdm9pZCAwKTtcblxuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLnRyYW5zaXRpb24gPSBuZXcgVHJhbnNpdGlvbih0aW1lbGluZSk7XG4gICAgdGhpcy5hdHRyaWJ1dGUgPSBhdHRyaWJ1dGU7XG4gICAgdGhpcy5hdHRyaWJ1dGVJblRyYW5zaXRpb24gPSBuZXcgQXR0cmlidXRlKGdsLCBhdHRyaWJ1dGUuc2V0dGluZ3MpO1xuICAgIHRoaXMuY3VycmVudFN0YXJ0SW5kaWNlcyA9IGF0dHJpYnV0ZS5zdGFydEluZGljZXM7XG4gICAgdGhpcy5jdXJyZW50TGVuZ3RoID0gMDtcbiAgICB0aGlzLnRyYW5zZm9ybSA9IGdldFRyYW5zZm9ybShnbCwgYXR0cmlidXRlKTtcbiAgICBjb25zdCBidWZmZXJPcHRzID0ge1xuICAgICAgYnl0ZUxlbmd0aDogMCxcbiAgICAgIHVzYWdlOiAzNTA1MFxuICAgIH07XG4gICAgdGhpcy5idWZmZXJzID0gW25ldyBCdWZmZXIoZ2wsIGJ1ZmZlck9wdHMpLCBuZXcgQnVmZmVyKGdsLCBidWZmZXJPcHRzKV07XG4gIH1cblxuICBnZXQgaW5Qcm9ncmVzcygpIHtcbiAgICByZXR1cm4gdGhpcy50cmFuc2l0aW9uLmluUHJvZ3Jlc3M7XG4gIH1cblxuICBzdGFydCh0cmFuc2l0aW9uU2V0dGluZ3MsIG51bUluc3RhbmNlcykge1xuICAgIGlmICh0cmFuc2l0aW9uU2V0dGluZ3MuZHVyYXRpb24gPD0gMCkge1xuICAgICAgdGhpcy50cmFuc2l0aW9uLmNhbmNlbCgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuc2V0dGluZ3MgPSB0cmFuc2l0aW9uU2V0dGluZ3M7XG4gICAgY29uc3Qge1xuICAgICAgZ2wsXG4gICAgICBidWZmZXJzLFxuICAgICAgYXR0cmlidXRlXG4gICAgfSA9IHRoaXM7XG4gICAgY3ljbGVCdWZmZXJzKGJ1ZmZlcnMpO1xuICAgIGNvbnN0IHBhZEJ1ZmZlck9wdHMgPSB7XG4gICAgICBudW1JbnN0YW5jZXMsXG4gICAgICBhdHRyaWJ1dGUsXG4gICAgICBmcm9tTGVuZ3RoOiB0aGlzLmN1cnJlbnRMZW5ndGgsXG4gICAgICBmcm9tU3RhcnRJbmRpY2VzOiB0aGlzLmN1cnJlbnRTdGFydEluZGljZXMsXG4gICAgICBnZXREYXRhOiB0cmFuc2l0aW9uU2V0dGluZ3MuZW50ZXJcbiAgICB9O1xuXG4gICAgZm9yIChjb25zdCBidWZmZXIgb2YgYnVmZmVycykge1xuICAgICAgcGFkQnVmZmVyKHtcbiAgICAgICAgYnVmZmVyLFxuICAgICAgICAuLi5wYWRCdWZmZXJPcHRzXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aGlzLmN1cnJlbnRTdGFydEluZGljZXMgPSBhdHRyaWJ1dGUuc3RhcnRJbmRpY2VzO1xuICAgIHRoaXMuY3VycmVudExlbmd0aCA9IGdldEF0dHJpYnV0ZUJ1ZmZlckxlbmd0aChhdHRyaWJ1dGUsIG51bUluc3RhbmNlcyk7XG4gICAgdGhpcy5hdHRyaWJ1dGVJblRyYW5zaXRpb24uc2V0RGF0YSh7XG4gICAgICBidWZmZXI6IGJ1ZmZlcnNbMV0sXG4gICAgICB2YWx1ZTogYXR0cmlidXRlLnZhbHVlXG4gICAgfSk7XG4gICAgdGhpcy50cmFuc2l0aW9uLnN0YXJ0KHRyYW5zaXRpb25TZXR0aW5ncyk7XG4gICAgdGhpcy50cmFuc2Zvcm0udXBkYXRlKHtcbiAgICAgIGVsZW1lbnRDb3VudDogTWF0aC5mbG9vcih0aGlzLmN1cnJlbnRMZW5ndGggLyBhdHRyaWJ1dGUuc2l6ZSksXG4gICAgICBzb3VyY2VCdWZmZXJzOiB7XG4gICAgICAgIGFGcm9tOiBidWZmZXJzWzBdLFxuICAgICAgICBhVG86IGdldFNvdXJjZUJ1ZmZlckF0dHJpYnV0ZShnbCwgYXR0cmlidXRlKVxuICAgICAgfSxcbiAgICAgIGZlZWRiYWNrQnVmZmVyczoge1xuICAgICAgICB2Q3VycmVudDogYnVmZmVyc1sxXVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlKCkge1xuICAgIGNvbnN0IHVwZGF0ZWQgPSB0aGlzLnRyYW5zaXRpb24udXBkYXRlKCk7XG5cbiAgICBpZiAodXBkYXRlZCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBkdXJhdGlvbixcbiAgICAgICAgZWFzaW5nXG4gICAgICB9ID0gdGhpcy5zZXR0aW5ncztcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgdGltZVxuICAgICAgfSA9IHRoaXMudHJhbnNpdGlvbjtcbiAgICAgIGxldCB0ID0gdGltZSAvIGR1cmF0aW9uO1xuXG4gICAgICBpZiAoZWFzaW5nKSB7XG4gICAgICAgIHQgPSBlYXNpbmcodCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudHJhbnNmb3JtLnJ1bih7XG4gICAgICAgIHVuaWZvcm1zOiB7XG4gICAgICAgICAgdGltZTogdFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXBkYXRlZDtcbiAgfVxuXG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLnRyYW5zaXRpb24uY2FuY2VsKCk7XG4gICAgdGhpcy50cmFuc2Zvcm0uZGVsZXRlKCk7XG5cbiAgICBmb3IgKGNvbnN0IGJ1ZmZlciBvZiB0aGlzLmJ1ZmZlcnMpIHtcbiAgICAgIGJ1ZmZlci5kZWxldGUoKTtcbiAgICB9XG5cbiAgICB0aGlzLmJ1ZmZlcnMubGVuZ3RoID0gMDtcbiAgfVxuXG59XG5jb25zdCB2cyA9IFwiXFxuI2RlZmluZSBTSEFERVJfTkFNRSBpbnRlcnBvbGF0aW9uLXRyYW5zaXRpb24tdmVydGV4LXNoYWRlclxcblxcbnVuaWZvcm0gZmxvYXQgdGltZTtcXG5hdHRyaWJ1dGUgQVRUUklCVVRFX1RZUEUgYUZyb207XFxuYXR0cmlidXRlIEFUVFJJQlVURV9UWVBFIGFUbztcXG52YXJ5aW5nIEFUVFJJQlVURV9UWVBFIHZDdXJyZW50O1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICB2Q3VycmVudCA9IG1peChhRnJvbSwgYVRvLCB0aW1lKTtcXG4gIGdsX1Bvc2l0aW9uID0gdmVjNCgwLjApO1xcbn1cXG5cIjtcblxuZnVuY3Rpb24gZ2V0VHJhbnNmb3JtKGdsLCBhdHRyaWJ1dGUpIHtcbiAgY29uc3QgYXR0cmlidXRlVHlwZSA9IGdldEF0dHJpYnV0ZVR5cGVGcm9tU2l6ZShhdHRyaWJ1dGUuc2l6ZSk7XG4gIHJldHVybiBuZXcgVHJhbnNmb3JtKGdsLCB7XG4gICAgdnMsXG4gICAgZGVmaW5lczoge1xuICAgICAgQVRUUklCVVRFX1RZUEU6IGF0dHJpYnV0ZVR5cGVcbiAgICB9LFxuICAgIHZhcnlpbmdzOiBbJ3ZDdXJyZW50J11cbiAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncHUtaW50ZXJwb2xhdGlvbi10cmFuc2l0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJCdWZmZXIiLCJUcmFuc2Zvcm0iLCJBdHRyaWJ1dGUiLCJwYWRCdWZmZXIiLCJnZXRBdHRyaWJ1dGVUeXBlRnJvbVNpemUiLCJnZXRTb3VyY2VCdWZmZXJBdHRyaWJ1dGUiLCJnZXRBdHRyaWJ1dGVCdWZmZXJMZW5ndGgiLCJjeWNsZUJ1ZmZlcnMiLCJUcmFuc2l0aW9uIiwiR1BVSW50ZXJwb2xhdGlvblRyYW5zaXRpb24iLCJjb25zdHJ1Y3RvciIsImdsIiwiYXR0cmlidXRlIiwidGltZWxpbmUiLCJ0cmFuc2l0aW9uIiwiYXR0cmlidXRlSW5UcmFuc2l0aW9uIiwic2V0dGluZ3MiLCJjdXJyZW50U3RhcnRJbmRpY2VzIiwic3RhcnRJbmRpY2VzIiwiY3VycmVudExlbmd0aCIsInRyYW5zZm9ybSIsImdldFRyYW5zZm9ybSIsImJ1ZmZlck9wdHMiLCJieXRlTGVuZ3RoIiwidXNhZ2UiLCJidWZmZXJzIiwiaW5Qcm9ncmVzcyIsInN0YXJ0IiwidHJhbnNpdGlvblNldHRpbmdzIiwibnVtSW5zdGFuY2VzIiwiZHVyYXRpb24iLCJjYW5jZWwiLCJwYWRCdWZmZXJPcHRzIiwiZnJvbUxlbmd0aCIsImZyb21TdGFydEluZGljZXMiLCJnZXREYXRhIiwiZW50ZXIiLCJidWZmZXIiLCJzZXREYXRhIiwidmFsdWUiLCJ1cGRhdGUiLCJlbGVtZW50Q291bnQiLCJNYXRoIiwiZmxvb3IiLCJzaXplIiwic291cmNlQnVmZmVycyIsImFGcm9tIiwiYVRvIiwiZmVlZGJhY2tCdWZmZXJzIiwidkN1cnJlbnQiLCJ1cGRhdGVkIiwiZWFzaW5nIiwidGltZSIsInQiLCJydW4iLCJ1bmlmb3JtcyIsImRlbGV0ZSIsImxlbmd0aCIsInZzIiwiYXR0cmlidXRlVHlwZSIsImRlZmluZXMiLCJBVFRSSUJVVEVfVFlQRSIsInZhcnlpbmdzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/gpu-interpolation-transition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/gpu-spring-transition.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/transitions/gpu-spring-transition.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GPUSpringTransition)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/transform/transform.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/framebuffer.js\");\n/* harmony import */ var _lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/attribute/attribute-transition-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute-transition-utils.js\");\n/* harmony import */ var _lib_attribute_attribute__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/attribute/attribute */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/attribute/attribute.js\");\n/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition.js\");\n\n\n\n\n\nclass GPUSpringTransition {\n    constructor({ gl, attribute, timeline }){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"type\", \"spring\");\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attributeInTransition\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"settings\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attribute\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"transition\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentStartIndices\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"currentLength\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"texture\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"framebuffer\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"transform\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"buffers\", void 0);\n        this.gl = gl;\n        this.type = \"spring\";\n        this.transition = new _transition__WEBPACK_IMPORTED_MODULE_1__[\"default\"](timeline);\n        this.attribute = attribute;\n        this.attributeInTransition = new _lib_attribute_attribute__WEBPACK_IMPORTED_MODULE_2__[\"default\"](gl, {\n            ...attribute.settings,\n            normalized: false\n        });\n        this.currentStartIndices = attribute.startIndices;\n        this.currentLength = 0;\n        this.texture = getTexture(gl);\n        this.framebuffer = getFramebuffer(gl, this.texture);\n        this.transform = getTransform(gl, attribute, this.framebuffer);\n        const bufferOpts = {\n            byteLength: 0,\n            usage: 35050\n        };\n        this.buffers = [\n            new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, bufferOpts),\n            new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, bufferOpts),\n            new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, bufferOpts)\n        ];\n    }\n    get inProgress() {\n        return this.transition.inProgress;\n    }\n    start(transitionSettings, numInstances) {\n        const { gl, buffers, attribute } = this;\n        const padBufferOpts = {\n            numInstances,\n            attribute,\n            fromLength: this.currentLength,\n            fromStartIndices: this.currentStartIndices,\n            getData: transitionSettings.enter\n        };\n        for (const buffer of buffers){\n            (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.padBuffer)({\n                buffer,\n                ...padBufferOpts\n            });\n        }\n        this.settings = transitionSettings;\n        this.currentStartIndices = attribute.startIndices;\n        this.currentLength = (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.getAttributeBufferLength)(attribute, numInstances);\n        this.attributeInTransition.setData({\n            buffer: buffers[1],\n            value: attribute.value\n        });\n        this.transition.start({\n            ...transitionSettings,\n            duration: Infinity\n        });\n        this.transform.update({\n            elementCount: Math.floor(this.currentLength / attribute.size),\n            sourceBuffers: {\n                aTo: (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.getSourceBufferAttribute)(gl, attribute)\n            }\n        });\n    }\n    update() {\n        const { buffers, transform, framebuffer, transition } = this;\n        const updated = transition.update();\n        if (!updated) {\n            return false;\n        }\n        const settings = this.settings;\n        transform.update({\n            sourceBuffers: {\n                aPrev: buffers[0],\n                aCur: buffers[1]\n            },\n            feedbackBuffers: {\n                vNext: buffers[2]\n            }\n        });\n        transform.run({\n            framebuffer,\n            discard: false,\n            clearRenderTarget: true,\n            uniforms: {\n                stiffness: settings.stiffness,\n                damping: settings.damping\n            },\n            parameters: {\n                depthTest: false,\n                blend: true,\n                viewport: [\n                    0,\n                    0,\n                    1,\n                    1\n                ],\n                blendFunc: [\n                    1,\n                    1\n                ],\n                blendEquation: [\n                    32776,\n                    32776\n                ]\n            }\n        });\n        (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.cycleBuffers)(buffers);\n        this.attributeInTransition.setData({\n            buffer: buffers[1],\n            value: this.attribute.value\n        });\n        const isTransitioning = (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_5__.readPixelsToArray)(framebuffer)[0] > 0;\n        if (!isTransitioning) {\n            transition.end();\n        }\n        return true;\n    }\n    cancel() {\n        this.transition.cancel();\n        this.transform.delete();\n        for (const buffer of this.buffers){\n            buffer.delete();\n        }\n        this.buffers.length = 0;\n        this.texture.delete();\n        this.framebuffer.delete();\n    }\n}\nfunction getTransform(gl, attribute, framebuffer) {\n    const attributeType = (0,_lib_attribute_attribute_transition_utils__WEBPACK_IMPORTED_MODULE_4__.getAttributeTypeFromSize)(attribute.size);\n    return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"](gl, {\n        framebuffer,\n        vs: \"\\n#define SHADER_NAME spring-transition-vertex-shader\\n\\n#define EPSILON 0.00001\\n\\nuniform float stiffness;\\nuniform float damping;\\nattribute ATTRIBUTE_TYPE aPrev;\\nattribute ATTRIBUTE_TYPE aCur;\\nattribute ATTRIBUTE_TYPE aTo;\\nvarying ATTRIBUTE_TYPE vNext;\\nvarying float vIsTransitioningFlag;\\n\\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\\n  ATTRIBUTE_TYPE velocity = cur - prev;\\n  ATTRIBUTE_TYPE delta = dest - cur;\\n  ATTRIBUTE_TYPE spring = delta * stiffness;\\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\\n  return spring + damper + velocity + cur;\\n}\\n\\nvoid main(void) {\\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\\n\\n  vNext = getNextValue(aCur, aPrev, aTo);\\n  gl_Position = vec4(0, 0, 0, 1);\\n  gl_PointSize = 100.0;\\n}\\n\",\n        fs: \"\\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\\n\\nvarying float vIsTransitioningFlag;\\n\\nvoid main(void) {\\n  if (vIsTransitioningFlag == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor = vec4(1.0);\\n}\",\n        defines: {\n            ATTRIBUTE_TYPE: attributeType\n        },\n        varyings: [\n            \"vNext\"\n        ]\n    });\n}\nfunction getTexture(gl) {\n    return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"](gl, {\n        data: new Uint8Array(4),\n        format: 6408,\n        type: 5121,\n        border: 0,\n        mipmaps: false,\n        dataFormat: 6408,\n        width: 1,\n        height: 1\n    });\n}\nfunction getFramebuffer(gl, texture) {\n    return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"](gl, {\n        id: \"spring-transition-is-transitioning-framebuffer\",\n        width: 1,\n        height: 1,\n        attachments: {\n            [36064]: texture\n        }\n    });\n} //# sourceMappingURL=gpu-spring-transition.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/gpu-spring-transition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/linear-interpolator.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/transitions/linear-interpolator.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LinearInterpolator)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _transition_interpolator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition-interpolator */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition-interpolator.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n\n\n\nconst DEFAULT_PROPS = [\n    \"longitude\",\n    \"latitude\",\n    \"zoom\",\n    \"bearing\",\n    \"pitch\"\n];\nconst DEFAULT_REQUIRED_PROPS = [\n    \"longitude\",\n    \"latitude\",\n    \"zoom\"\n];\nclass LinearInterpolator extends _transition_interpolator__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(opts = {}){\n        const transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n        const normalizedOpts = Array.isArray(opts) ? {} : opts;\n        normalizedOpts.transitionProps = Array.isArray(transitionProps) ? {\n            compare: transitionProps,\n            required: transitionProps\n        } : transitionProps || {\n            compare: DEFAULT_PROPS,\n            required: DEFAULT_REQUIRED_PROPS\n        };\n        super(normalizedOpts.transitionProps);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"opts\", void 0);\n        this.opts = normalizedOpts;\n    }\n    initializeProps(startProps, endProps) {\n        const result = super.initializeProps(startProps, endProps);\n        const { makeViewport, around } = this.opts;\n        if (makeViewport && around) {\n            const startViewport = makeViewport(startProps);\n            const endViewport = makeViewport(endProps);\n            const aroundPosition = startViewport.unproject(around);\n            result.start.around = around;\n            Object.assign(result.end, {\n                around: endViewport.project(aroundPosition),\n                aroundPosition,\n                width: endProps.width,\n                height: endProps.height\n            });\n        }\n        return result;\n    }\n    interpolateProps(startProps, endProps, t) {\n        const propsInTransition = {};\n        for (const key of this._propsToExtract){\n            propsInTransition[key] = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.lerp)(startProps[key] || 0, endProps[key] || 0, t);\n        }\n        if (endProps.aroundPosition && this.opts.makeViewport) {\n            const viewport = this.opts.makeViewport({\n                ...endProps,\n                ...propsInTransition\n            });\n            Object.assign(propsInTransition, viewport.panByPosition(endProps.aroundPosition, (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.lerp)(startProps.around, endProps.around, t)));\n        }\n        return propsInTransition;\n    }\n} //# sourceMappingURL=linear-interpolator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy9saW5lYXItaW50ZXJwb2xhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0U7QUFDVDtBQUMxQjtBQUNyQyxNQUFNRyxnQkFBZ0I7SUFBQztJQUFhO0lBQVk7SUFBUTtJQUFXO0NBQVE7QUFDM0UsTUFBTUMseUJBQXlCO0lBQUM7SUFBYTtJQUFZO0NBQU87QUFDakQsTUFBTUMsMkJBQTJCSixnRUFBc0JBO0lBQ3BFSyxZQUFZQyxPQUFPLENBQUMsQ0FBQyxDQUFFO1FBQ3JCLE1BQU1DLGtCQUFrQkMsTUFBTUMsT0FBTyxDQUFDSCxRQUFRQSxPQUFPQSxLQUFLQyxlQUFlO1FBQ3pFLE1BQU1HLGlCQUFpQkYsTUFBTUMsT0FBTyxDQUFDSCxRQUFRLENBQUMsSUFBSUE7UUFDbERJLGVBQWVILGVBQWUsR0FBR0MsTUFBTUMsT0FBTyxDQUFDRixtQkFBbUI7WUFDaEVJLFNBQVNKO1lBQ1RLLFVBQVVMO1FBQ1osSUFBSUEsbUJBQW1CO1lBQ3JCSSxTQUFTVDtZQUNUVSxVQUFVVDtRQUNaO1FBQ0EsS0FBSyxDQUFDTyxlQUFlSCxlQUFlO1FBRXBDUixxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxLQUFLO1FBRW5DLElBQUksQ0FBQ08sSUFBSSxHQUFHSTtJQUNkO0lBRUFHLGdCQUFnQkMsVUFBVSxFQUFFQyxRQUFRLEVBQUU7UUFDcEMsTUFBTUMsU0FBUyxLQUFLLENBQUNILGdCQUFnQkMsWUFBWUM7UUFDakQsTUFBTSxFQUNKRSxZQUFZLEVBQ1pDLE1BQU0sRUFDUCxHQUFHLElBQUksQ0FBQ1osSUFBSTtRQUViLElBQUlXLGdCQUFnQkMsUUFBUTtZQUMxQixNQUFNQyxnQkFBZ0JGLGFBQWFIO1lBQ25DLE1BQU1NLGNBQWNILGFBQWFGO1lBQ2pDLE1BQU1NLGlCQUFpQkYsY0FBY0csU0FBUyxDQUFDSjtZQUMvQ0YsT0FBT08sS0FBSyxDQUFDTCxNQUFNLEdBQUdBO1lBQ3RCTSxPQUFPQyxNQUFNLENBQUNULE9BQU9VLEdBQUcsRUFBRTtnQkFDeEJSLFFBQVFFLFlBQVlPLE9BQU8sQ0FBQ047Z0JBQzVCQTtnQkFDQU8sT0FBT2IsU0FBU2EsS0FBSztnQkFDckJDLFFBQVFkLFNBQVNjLE1BQU07WUFDekI7UUFDRjtRQUVBLE9BQU9iO0lBQ1Q7SUFFQWMsaUJBQWlCaEIsVUFBVSxFQUFFQyxRQUFRLEVBQUVnQixDQUFDLEVBQUU7UUFDeEMsTUFBTUMsb0JBQW9CLENBQUM7UUFFM0IsS0FBSyxNQUFNQyxPQUFPLElBQUksQ0FBQ0MsZUFBZSxDQUFFO1lBQ3RDRixpQkFBaUIsQ0FBQ0MsSUFBSSxHQUFHaEMsbURBQUlBLENBQUNhLFVBQVUsQ0FBQ21CLElBQUksSUFBSSxHQUFHbEIsUUFBUSxDQUFDa0IsSUFBSSxJQUFJLEdBQUdGO1FBQzFFO1FBRUEsSUFBSWhCLFNBQVNNLGNBQWMsSUFBSSxJQUFJLENBQUNmLElBQUksQ0FBQ1csWUFBWSxFQUFFO1lBQ3JELE1BQU1rQixXQUFXLElBQUksQ0FBQzdCLElBQUksQ0FBQ1csWUFBWSxDQUFDO2dCQUFFLEdBQUdGLFFBQVE7Z0JBQ25ELEdBQUdpQixpQkFBaUI7WUFDdEI7WUFDQVIsT0FBT0MsTUFBTSxDQUFDTyxtQkFBbUJHLFNBQVNDLGFBQWEsQ0FBQ3JCLFNBQVNNLGNBQWMsRUFBRXBCLG1EQUFJQSxDQUFDYSxXQUFXSSxNQUFNLEVBQUVILFNBQVNHLE1BQU0sRUFBRWE7UUFDNUg7UUFFQSxPQUFPQztJQUNUO0FBRUYsRUFDQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3RyYW5zaXRpb25zL2xpbmVhci1pbnRlcnBvbGF0b3IuanM/ZWNhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eVwiO1xuaW1wb3J0IFRyYW5zaXRpb25JbnRlcnBvbGF0b3IgZnJvbSAnLi90cmFuc2l0aW9uLWludGVycG9sYXRvcic7XG5pbXBvcnQgeyBsZXJwIH0gZnJvbSAnQG1hdGguZ2wvY29yZSc7XG5jb25zdCBERUZBVUxUX1BST1BTID0gWydsb25naXR1ZGUnLCAnbGF0aXR1ZGUnLCAnem9vbScsICdiZWFyaW5nJywgJ3BpdGNoJ107XG5jb25zdCBERUZBVUxUX1JFUVVJUkVEX1BST1BTID0gWydsb25naXR1ZGUnLCAnbGF0aXR1ZGUnLCAnem9vbSddO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGluZWFySW50ZXJwb2xhdG9yIGV4dGVuZHMgVHJhbnNpdGlvbkludGVycG9sYXRvciB7XG4gIGNvbnN0cnVjdG9yKG9wdHMgPSB7fSkge1xuICAgIGNvbnN0IHRyYW5zaXRpb25Qcm9wcyA9IEFycmF5LmlzQXJyYXkob3B0cykgPyBvcHRzIDogb3B0cy50cmFuc2l0aW9uUHJvcHM7XG4gICAgY29uc3Qgbm9ybWFsaXplZE9wdHMgPSBBcnJheS5pc0FycmF5KG9wdHMpID8ge30gOiBvcHRzO1xuICAgIG5vcm1hbGl6ZWRPcHRzLnRyYW5zaXRpb25Qcm9wcyA9IEFycmF5LmlzQXJyYXkodHJhbnNpdGlvblByb3BzKSA/IHtcbiAgICAgIGNvbXBhcmU6IHRyYW5zaXRpb25Qcm9wcyxcbiAgICAgIHJlcXVpcmVkOiB0cmFuc2l0aW9uUHJvcHNcbiAgICB9IDogdHJhbnNpdGlvblByb3BzIHx8IHtcbiAgICAgIGNvbXBhcmU6IERFRkFVTFRfUFJPUFMsXG4gICAgICByZXF1aXJlZDogREVGQVVMVF9SRVFVSVJFRF9QUk9QU1xuICAgIH07XG4gICAgc3VwZXIobm9ybWFsaXplZE9wdHMudHJhbnNpdGlvblByb3BzKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm9wdHNcIiwgdm9pZCAwKTtcblxuICAgIHRoaXMub3B0cyA9IG5vcm1hbGl6ZWRPcHRzO1xuICB9XG5cbiAgaW5pdGlhbGl6ZVByb3BzKHN0YXJ0UHJvcHMsIGVuZFByb3BzKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuaW5pdGlhbGl6ZVByb3BzKHN0YXJ0UHJvcHMsIGVuZFByb3BzKTtcbiAgICBjb25zdCB7XG4gICAgICBtYWtlVmlld3BvcnQsXG4gICAgICBhcm91bmRcbiAgICB9ID0gdGhpcy5vcHRzO1xuXG4gICAgaWYgKG1ha2VWaWV3cG9ydCAmJiBhcm91bmQpIHtcbiAgICAgIGNvbnN0IHN0YXJ0Vmlld3BvcnQgPSBtYWtlVmlld3BvcnQoc3RhcnRQcm9wcyk7XG4gICAgICBjb25zdCBlbmRWaWV3cG9ydCA9IG1ha2VWaWV3cG9ydChlbmRQcm9wcyk7XG4gICAgICBjb25zdCBhcm91bmRQb3NpdGlvbiA9IHN0YXJ0Vmlld3BvcnQudW5wcm9qZWN0KGFyb3VuZCk7XG4gICAgICByZXN1bHQuc3RhcnQuYXJvdW5kID0gYXJvdW5kO1xuICAgICAgT2JqZWN0LmFzc2lnbihyZXN1bHQuZW5kLCB7XG4gICAgICAgIGFyb3VuZDogZW5kVmlld3BvcnQucHJvamVjdChhcm91bmRQb3NpdGlvbiksXG4gICAgICAgIGFyb3VuZFBvc2l0aW9uLFxuICAgICAgICB3aWR0aDogZW5kUHJvcHMud2lkdGgsXG4gICAgICAgIGhlaWdodDogZW5kUHJvcHMuaGVpZ2h0XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgaW50ZXJwb2xhdGVQcm9wcyhzdGFydFByb3BzLCBlbmRQcm9wcywgdCkge1xuICAgIGNvbnN0IHByb3BzSW5UcmFuc2l0aW9uID0ge307XG5cbiAgICBmb3IgKGNvbnN0IGtleSBvZiB0aGlzLl9wcm9wc1RvRXh0cmFjdCkge1xuICAgICAgcHJvcHNJblRyYW5zaXRpb25ba2V5XSA9IGxlcnAoc3RhcnRQcm9wc1trZXldIHx8IDAsIGVuZFByb3BzW2tleV0gfHwgMCwgdCk7XG4gICAgfVxuXG4gICAgaWYgKGVuZFByb3BzLmFyb3VuZFBvc2l0aW9uICYmIHRoaXMub3B0cy5tYWtlVmlld3BvcnQpIHtcbiAgICAgIGNvbnN0IHZpZXdwb3J0ID0gdGhpcy5vcHRzLm1ha2VWaWV3cG9ydCh7IC4uLmVuZFByb3BzLFxuICAgICAgICAuLi5wcm9wc0luVHJhbnNpdGlvblxuICAgICAgfSk7XG4gICAgICBPYmplY3QuYXNzaWduKHByb3BzSW5UcmFuc2l0aW9uLCB2aWV3cG9ydC5wYW5CeVBvc2l0aW9uKGVuZFByb3BzLmFyb3VuZFBvc2l0aW9uLCBsZXJwKHN0YXJ0UHJvcHMuYXJvdW5kLCBlbmRQcm9wcy5hcm91bmQsIHQpKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb3BzSW5UcmFuc2l0aW9uO1xuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpbmVhci1pbnRlcnBvbGF0b3IuanMubWFwIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIlRyYW5zaXRpb25JbnRlcnBvbGF0b3IiLCJsZXJwIiwiREVGQVVMVF9QUk9QUyIsIkRFRkFVTFRfUkVRVUlSRURfUFJPUFMiLCJMaW5lYXJJbnRlcnBvbGF0b3IiLCJjb25zdHJ1Y3RvciIsIm9wdHMiLCJ0cmFuc2l0aW9uUHJvcHMiLCJBcnJheSIsImlzQXJyYXkiLCJub3JtYWxpemVkT3B0cyIsImNvbXBhcmUiLCJyZXF1aXJlZCIsImluaXRpYWxpemVQcm9wcyIsInN0YXJ0UHJvcHMiLCJlbmRQcm9wcyIsInJlc3VsdCIsIm1ha2VWaWV3cG9ydCIsImFyb3VuZCIsInN0YXJ0Vmlld3BvcnQiLCJlbmRWaWV3cG9ydCIsImFyb3VuZFBvc2l0aW9uIiwidW5wcm9qZWN0Iiwic3RhcnQiLCJPYmplY3QiLCJhc3NpZ24iLCJlbmQiLCJwcm9qZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJpbnRlcnBvbGF0ZVByb3BzIiwidCIsInByb3BzSW5UcmFuc2l0aW9uIiwia2V5IiwiX3Byb3BzVG9FeHRyYWN0Iiwidmlld3BvcnQiLCJwYW5CeVBvc2l0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/linear-interpolator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition-interpolator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/transitions/transition-interpolator.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransitionInterpolator)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js\");\n\n\n\nclass TransitionInterpolator {\n    constructor(opts){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_propsToCompare\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_propsToExtract\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_requiredProps\", void 0);\n        const { compare, extract, required } = opts;\n        this._propsToCompare = compare;\n        this._propsToExtract = extract || compare;\n        this._requiredProps = required;\n    }\n    arePropsEqual(currentProps, nextProps) {\n        for (const key of this._propsToCompare){\n            if (!(key in currentProps) || !(key in nextProps) || !(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_1__.equals)(currentProps[key], nextProps[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    initializeProps(startProps, endProps) {\n        const startViewStateProps = {};\n        const endViewStateProps = {};\n        for (const key of this._propsToExtract){\n            if (key in startProps || key in endProps) {\n                startViewStateProps[key] = startProps[key];\n                endViewStateProps[key] = endProps[key];\n            }\n        }\n        this._checkRequiredProps(startViewStateProps);\n        this._checkRequiredProps(endViewStateProps);\n        return {\n            start: startViewStateProps,\n            end: endViewStateProps\n        };\n    }\n    getDuration(startProps, endProps) {\n        return endProps.transitionDuration;\n    }\n    _checkRequiredProps(props) {\n        if (!this._requiredProps) {\n            return;\n        }\n        this._requiredProps.forEach((propName)=>{\n            const value = props[propName];\n            (0,_utils_assert__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Number.isFinite(value) || Array.isArray(value), \"\".concat(propName, \" is required for transition\"));\n        });\n    }\n} //# sourceMappingURL=transition-interpolator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy90cmFuc2l0aW9uLWludGVycG9sYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdFO0FBQ2pDO0FBQ0Y7QUFDdEIsTUFBTUc7SUFDbkJDLFlBQVlDLElBQUksQ0FBRTtRQUNoQkwscUZBQWVBLENBQUMsSUFBSSxFQUFFLG1CQUFtQixLQUFLO1FBRTlDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsbUJBQW1CLEtBQUs7UUFFOUNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxrQkFBa0IsS0FBSztRQUU3QyxNQUFNLEVBQ0pNLE9BQU8sRUFDUEMsT0FBTyxFQUNQQyxRQUFRLEVBQ1QsR0FBR0g7UUFDSixJQUFJLENBQUNJLGVBQWUsR0FBR0g7UUFDdkIsSUFBSSxDQUFDSSxlQUFlLEdBQUdILFdBQVdEO1FBQ2xDLElBQUksQ0FBQ0ssY0FBYyxHQUFHSDtJQUN4QjtJQUVBSSxjQUFjQyxZQUFZLEVBQUVDLFNBQVMsRUFBRTtRQUNyQyxLQUFLLE1BQU1DLE9BQU8sSUFBSSxDQUFDTixlQUFlLENBQUU7WUFDdEMsSUFBSSxDQUFFTSxDQUFBQSxPQUFPRixZQUFXLEtBQU0sQ0FBRUUsQ0FBQUEsT0FBT0QsU0FBUSxLQUFNLENBQUNiLHFEQUFNQSxDQUFDWSxZQUFZLENBQUNFLElBQUksRUFBRUQsU0FBUyxDQUFDQyxJQUFJLEdBQUc7Z0JBQy9GLE9BQU87WUFDVDtRQUNGO1FBRUEsT0FBTztJQUNUO0lBRUFDLGdCQUFnQkMsVUFBVSxFQUFFQyxRQUFRLEVBQUU7UUFDcEMsTUFBTUMsc0JBQXNCLENBQUM7UUFDN0IsTUFBTUMsb0JBQW9CLENBQUM7UUFFM0IsS0FBSyxNQUFNTCxPQUFPLElBQUksQ0FBQ0wsZUFBZSxDQUFFO1lBQ3RDLElBQUlLLE9BQU9FLGNBQWNGLE9BQU9HLFVBQVU7Z0JBQ3hDQyxtQkFBbUIsQ0FBQ0osSUFBSSxHQUFHRSxVQUFVLENBQUNGLElBQUk7Z0JBQzFDSyxpQkFBaUIsQ0FBQ0wsSUFBSSxHQUFHRyxRQUFRLENBQUNILElBQUk7WUFDeEM7UUFDRjtRQUVBLElBQUksQ0FBQ00sbUJBQW1CLENBQUNGO1FBRXpCLElBQUksQ0FBQ0UsbUJBQW1CLENBQUNEO1FBRXpCLE9BQU87WUFDTEUsT0FBT0g7WUFDUEksS0FBS0g7UUFDUDtJQUNGO0lBRUFJLFlBQVlQLFVBQVUsRUFBRUMsUUFBUSxFQUFFO1FBQ2hDLE9BQU9BLFNBQVNPLGtCQUFrQjtJQUNwQztJQUVBSixvQkFBb0JLLEtBQUssRUFBRTtRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDZixjQUFjLEVBQUU7WUFDeEI7UUFDRjtRQUVBLElBQUksQ0FBQ0EsY0FBYyxDQUFDZ0IsT0FBTyxDQUFDQyxDQUFBQTtZQUMxQixNQUFNQyxRQUFRSCxLQUFLLENBQUNFLFNBQVM7WUFDN0IxQix5REFBTUEsQ0FBQzRCLE9BQU9DLFFBQVEsQ0FBQ0YsVUFBVUcsTUFBTUMsT0FBTyxDQUFDSixRQUFRLEdBQUdLLE1BQU0sQ0FBQ04sVUFBVTtRQUM3RTtJQUNGO0FBRUYsRUFDQSxtREFBbUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3RyYW5zaXRpb25zL3RyYW5zaXRpb24taW50ZXJwb2xhdG9yLmpzPzIwNzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCB7IGVxdWFscyB9IGZyb20gJ0BtYXRoLmdsL2NvcmUnO1xuaW1wb3J0IGFzc2VydCBmcm9tICcuLi91dGlscy9hc3NlcnQnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJhbnNpdGlvbkludGVycG9sYXRvciB7XG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfcHJvcHNUb0NvbXBhcmVcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9wcm9wc1RvRXh0cmFjdFwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiX3JlcXVpcmVkUHJvcHNcIiwgdm9pZCAwKTtcblxuICAgIGNvbnN0IHtcbiAgICAgIGNvbXBhcmUsXG4gICAgICBleHRyYWN0LFxuICAgICAgcmVxdWlyZWRcbiAgICB9ID0gb3B0cztcbiAgICB0aGlzLl9wcm9wc1RvQ29tcGFyZSA9IGNvbXBhcmU7XG4gICAgdGhpcy5fcHJvcHNUb0V4dHJhY3QgPSBleHRyYWN0IHx8IGNvbXBhcmU7XG4gICAgdGhpcy5fcmVxdWlyZWRQcm9wcyA9IHJlcXVpcmVkO1xuICB9XG5cbiAgYXJlUHJvcHNFcXVhbChjdXJyZW50UHJvcHMsIG5leHRQcm9wcykge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIHRoaXMuX3Byb3BzVG9Db21wYXJlKSB7XG4gICAgICBpZiAoIShrZXkgaW4gY3VycmVudFByb3BzKSB8fCAhKGtleSBpbiBuZXh0UHJvcHMpIHx8ICFlcXVhbHMoY3VycmVudFByb3BzW2tleV0sIG5leHRQcm9wc1trZXldKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpbml0aWFsaXplUHJvcHMoc3RhcnRQcm9wcywgZW5kUHJvcHMpIHtcbiAgICBjb25zdCBzdGFydFZpZXdTdGF0ZVByb3BzID0ge307XG4gICAgY29uc3QgZW5kVmlld1N0YXRlUHJvcHMgPSB7fTtcblxuICAgIGZvciAoY29uc3Qga2V5IG9mIHRoaXMuX3Byb3BzVG9FeHRyYWN0KSB7XG4gICAgICBpZiAoa2V5IGluIHN0YXJ0UHJvcHMgfHwga2V5IGluIGVuZFByb3BzKSB7XG4gICAgICAgIHN0YXJ0Vmlld1N0YXRlUHJvcHNba2V5XSA9IHN0YXJ0UHJvcHNba2V5XTtcbiAgICAgICAgZW5kVmlld1N0YXRlUHJvcHNba2V5XSA9IGVuZFByb3BzW2tleV07XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5fY2hlY2tSZXF1aXJlZFByb3BzKHN0YXJ0Vmlld1N0YXRlUHJvcHMpO1xuXG4gICAgdGhpcy5fY2hlY2tSZXF1aXJlZFByb3BzKGVuZFZpZXdTdGF0ZVByb3BzKTtcblxuICAgIHJldHVybiB7XG4gICAgICBzdGFydDogc3RhcnRWaWV3U3RhdGVQcm9wcyxcbiAgICAgIGVuZDogZW5kVmlld1N0YXRlUHJvcHNcbiAgICB9O1xuICB9XG5cbiAgZ2V0RHVyYXRpb24oc3RhcnRQcm9wcywgZW5kUHJvcHMpIHtcbiAgICByZXR1cm4gZW5kUHJvcHMudHJhbnNpdGlvbkR1cmF0aW9uO1xuICB9XG5cbiAgX2NoZWNrUmVxdWlyZWRQcm9wcyhwcm9wcykge1xuICAgIGlmICghdGhpcy5fcmVxdWlyZWRQcm9wcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX3JlcXVpcmVkUHJvcHMuZm9yRWFjaChwcm9wTmFtZSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcbiAgICAgIGFzc2VydChOdW1iZXIuaXNGaW5pdGUodmFsdWUpIHx8IEFycmF5LmlzQXJyYXkodmFsdWUpLCBcIlwiLmNvbmNhdChwcm9wTmFtZSwgXCIgaXMgcmVxdWlyZWQgZm9yIHRyYW5zaXRpb25cIikpO1xuICAgIH0pO1xuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zaXRpb24taW50ZXJwb2xhdG9yLmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJlcXVhbHMiLCJhc3NlcnQiLCJUcmFuc2l0aW9uSW50ZXJwb2xhdG9yIiwiY29uc3RydWN0b3IiLCJvcHRzIiwiY29tcGFyZSIsImV4dHJhY3QiLCJyZXF1aXJlZCIsIl9wcm9wc1RvQ29tcGFyZSIsIl9wcm9wc1RvRXh0cmFjdCIsIl9yZXF1aXJlZFByb3BzIiwiYXJlUHJvcHNFcXVhbCIsImN1cnJlbnRQcm9wcyIsIm5leHRQcm9wcyIsImtleSIsImluaXRpYWxpemVQcm9wcyIsInN0YXJ0UHJvcHMiLCJlbmRQcm9wcyIsInN0YXJ0Vmlld1N0YXRlUHJvcHMiLCJlbmRWaWV3U3RhdGVQcm9wcyIsIl9jaGVja1JlcXVpcmVkUHJvcHMiLCJzdGFydCIsImVuZCIsImdldER1cmF0aW9uIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwicHJvcHMiLCJmb3JFYWNoIiwicHJvcE5hbWUiLCJ2YWx1ZSIsIk51bWJlciIsImlzRmluaXRlIiwiQXJyYXkiLCJpc0FycmF5IiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition-interpolator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/transitions/transition.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Transition)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nclass Transition {\n    constructor(timeline){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_inProgress\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_handle\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_timeline\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"time\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"settings\", void 0);\n        this._inProgress = false;\n        this._handle = null;\n        this._timeline = timeline;\n        this.time = 0;\n        this.settings = {\n            duration: 0\n        };\n    }\n    get inProgress() {\n        return this._inProgress;\n    }\n    start(settings) {\n        var _this$settings$onStar, _this$settings;\n        this.cancel();\n        this.settings = settings;\n        this._inProgress = true;\n        (_this$settings$onStar = (_this$settings = this.settings).onStart) === null || _this$settings$onStar === void 0 ? void 0 : _this$settings$onStar.call(_this$settings, this);\n    }\n    end() {\n        if (this._inProgress) {\n            var _this$settings$onEnd, _this$settings2;\n            this._timeline.removeChannel(this._handle);\n            this._handle = null;\n            this._inProgress = false;\n            (_this$settings$onEnd = (_this$settings2 = this.settings).onEnd) === null || _this$settings$onEnd === void 0 ? void 0 : _this$settings$onEnd.call(_this$settings2, this);\n        }\n    }\n    cancel() {\n        if (this._inProgress) {\n            var _this$settings$onInte, _this$settings3;\n            (_this$settings$onInte = (_this$settings3 = this.settings).onInterrupt) === null || _this$settings$onInte === void 0 ? void 0 : _this$settings$onInte.call(_this$settings3, this);\n            this._timeline.removeChannel(this._handle);\n            this._handle = null;\n            this._inProgress = false;\n        }\n    }\n    update() {\n        var _this$settings$onUpda, _this$settings4;\n        if (!this._inProgress) {\n            return false;\n        }\n        if (this._handle === null) {\n            const { _timeline: timeline, settings } = this;\n            this._handle = timeline.addChannel({\n                delay: timeline.getTime(),\n                duration: settings.duration\n            });\n        }\n        this.time = this._timeline.getTime(this._handle);\n        this._onUpdate();\n        (_this$settings$onUpda = (_this$settings4 = this.settings).onUpdate) === null || _this$settings$onUpda === void 0 ? void 0 : _this$settings$onUpda.call(_this$settings4, this);\n        if (this._timeline.isFinished(this._handle)) {\n            this.end();\n        }\n        return true;\n    }\n    _onUpdate() {}\n} //# sourceMappingURL=transition.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy90cmFuc2l0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdFO0FBQ3pELE1BQU1DO0lBQ25CQyxZQUFZQyxRQUFRLENBQUU7UUFDcEJILHFGQUFlQSxDQUFDLElBQUksRUFBRSxlQUFlLEtBQUs7UUFFMUNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxXQUFXLEtBQUs7UUFFdENBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxhQUFhLEtBQUs7UUFFeENBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxRQUFRLEtBQUs7UUFFbkNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxZQUFZLEtBQUs7UUFFdkMsSUFBSSxDQUFDSSxXQUFXLEdBQUc7UUFDbkIsSUFBSSxDQUFDQyxPQUFPLEdBQUc7UUFDZixJQUFJLENBQUNDLFNBQVMsR0FBR0g7UUFDakIsSUFBSSxDQUFDSSxJQUFJLEdBQUc7UUFDWixJQUFJLENBQUNDLFFBQVEsR0FBRztZQUNkQyxVQUFVO1FBQ1o7SUFDRjtJQUVBLElBQUlDLGFBQWE7UUFDZixPQUFPLElBQUksQ0FBQ04sV0FBVztJQUN6QjtJQUVBTyxNQUFNSCxRQUFRLEVBQUU7UUFDZCxJQUFJSSx1QkFBdUJDO1FBRTNCLElBQUksQ0FBQ0MsTUFBTTtRQUNYLElBQUksQ0FBQ04sUUFBUSxHQUFHQTtRQUNoQixJQUFJLENBQUNKLFdBQVcsR0FBRztRQUNsQlEsQ0FBQUEsd0JBQXdCLENBQUNDLGlCQUFpQixJQUFJLENBQUNMLFFBQVEsRUFBRU8sT0FBTyxNQUFNLFFBQVFILDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JJLElBQUksQ0FBQ0gsZ0JBQWdCLElBQUk7SUFDNUs7SUFFQUksTUFBTTtRQUNKLElBQUksSUFBSSxDQUFDYixXQUFXLEVBQUU7WUFDcEIsSUFBSWMsc0JBQXNCQztZQUUxQixJQUFJLENBQUNiLFNBQVMsQ0FBQ2MsYUFBYSxDQUFDLElBQUksQ0FBQ2YsT0FBTztZQUV6QyxJQUFJLENBQUNBLE9BQU8sR0FBRztZQUNmLElBQUksQ0FBQ0QsV0FBVyxHQUFHO1lBQ2xCYyxDQUFBQSx1QkFBdUIsQ0FBQ0Msa0JBQWtCLElBQUksQ0FBQ1gsUUFBUSxFQUFFYSxLQUFLLE1BQU0sUUFBUUgseUJBQXlCLEtBQUssSUFBSSxLQUFLLElBQUlBLHFCQUFxQkYsSUFBSSxDQUFDRyxpQkFBaUIsSUFBSTtRQUN6SztJQUNGO0lBRUFMLFNBQVM7UUFDUCxJQUFJLElBQUksQ0FBQ1YsV0FBVyxFQUFFO1lBQ3BCLElBQUlrQix1QkFBdUJDO1lBRTFCRCxDQUFBQSx3QkFBd0IsQ0FBQ0Msa0JBQWtCLElBQUksQ0FBQ2YsUUFBUSxFQUFFZ0IsV0FBVyxNQUFNLFFBQVFGLDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JOLElBQUksQ0FBQ08saUJBQWlCLElBQUk7WUFFaEwsSUFBSSxDQUFDakIsU0FBUyxDQUFDYyxhQUFhLENBQUMsSUFBSSxDQUFDZixPQUFPO1lBRXpDLElBQUksQ0FBQ0EsT0FBTyxHQUFHO1lBQ2YsSUFBSSxDQUFDRCxXQUFXLEdBQUc7UUFDckI7SUFDRjtJQUVBcUIsU0FBUztRQUNQLElBQUlDLHVCQUF1QkM7UUFFM0IsSUFBSSxDQUFDLElBQUksQ0FBQ3ZCLFdBQVcsRUFBRTtZQUNyQixPQUFPO1FBQ1Q7UUFFQSxJQUFJLElBQUksQ0FBQ0MsT0FBTyxLQUFLLE1BQU07WUFDekIsTUFBTSxFQUNKQyxXQUFXSCxRQUFRLEVBQ25CSyxRQUFRLEVBQ1QsR0FBRyxJQUFJO1lBQ1IsSUFBSSxDQUFDSCxPQUFPLEdBQUdGLFNBQVN5QixVQUFVLENBQUM7Z0JBQ2pDQyxPQUFPMUIsU0FBUzJCLE9BQU87Z0JBQ3ZCckIsVUFBVUQsU0FBU0MsUUFBUTtZQUM3QjtRQUNGO1FBRUEsSUFBSSxDQUFDRixJQUFJLEdBQUcsSUFBSSxDQUFDRCxTQUFTLENBQUN3QixPQUFPLENBQUMsSUFBSSxDQUFDekIsT0FBTztRQUUvQyxJQUFJLENBQUMwQixTQUFTO1FBRWJMLENBQUFBLHdCQUF3QixDQUFDQyxrQkFBa0IsSUFBSSxDQUFDbkIsUUFBUSxFQUFFd0IsUUFBUSxNQUFNLFFBQVFOLDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JWLElBQUksQ0FBQ1csaUJBQWlCLElBQUk7UUFFN0ssSUFBSSxJQUFJLENBQUNyQixTQUFTLENBQUMyQixVQUFVLENBQUMsSUFBSSxDQUFDNUIsT0FBTyxHQUFHO1lBQzNDLElBQUksQ0FBQ1ksR0FBRztRQUNWO1FBRUEsT0FBTztJQUNUO0lBRUFjLFlBQVksQ0FBQztBQUVmLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS90cmFuc2l0aW9ucy90cmFuc2l0aW9uLmpzP2ZjNzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHlcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyYW5zaXRpb24ge1xuICBjb25zdHJ1Y3Rvcih0aW1lbGluZSkge1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9pblByb2dyZXNzXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfaGFuZGxlXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfdGltZWxpbmVcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInRpbWVcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNldHRpbmdzXCIsIHZvaWQgMCk7XG5cbiAgICB0aGlzLl9pblByb2dyZXNzID0gZmFsc2U7XG4gICAgdGhpcy5faGFuZGxlID0gbnVsbDtcbiAgICB0aGlzLl90aW1lbGluZSA9IHRpbWVsaW5lO1xuICAgIHRoaXMudGltZSA9IDA7XG4gICAgdGhpcy5zZXR0aW5ncyA9IHtcbiAgICAgIGR1cmF0aW9uOiAwXG4gICAgfTtcbiAgfVxuXG4gIGdldCBpblByb2dyZXNzKCkge1xuICAgIHJldHVybiB0aGlzLl9pblByb2dyZXNzO1xuICB9XG5cbiAgc3RhcnQoc2V0dGluZ3MpIHtcbiAgICB2YXIgX3RoaXMkc2V0dGluZ3Mkb25TdGFyLCBfdGhpcyRzZXR0aW5ncztcblxuICAgIHRoaXMuY2FuY2VsKCk7XG4gICAgdGhpcy5zZXR0aW5ncyA9IHNldHRpbmdzO1xuICAgIHRoaXMuX2luUHJvZ3Jlc3MgPSB0cnVlO1xuICAgIChfdGhpcyRzZXR0aW5ncyRvblN0YXIgPSAoX3RoaXMkc2V0dGluZ3MgPSB0aGlzLnNldHRpbmdzKS5vblN0YXJ0KSA9PT0gbnVsbCB8fCBfdGhpcyRzZXR0aW5ncyRvblN0YXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHNldHRpbmdzJG9uU3Rhci5jYWxsKF90aGlzJHNldHRpbmdzLCB0aGlzKTtcbiAgfVxuXG4gIGVuZCgpIHtcbiAgICBpZiAodGhpcy5faW5Qcm9ncmVzcykge1xuICAgICAgdmFyIF90aGlzJHNldHRpbmdzJG9uRW5kLCBfdGhpcyRzZXR0aW5nczI7XG5cbiAgICAgIHRoaXMuX3RpbWVsaW5lLnJlbW92ZUNoYW5uZWwodGhpcy5faGFuZGxlKTtcblxuICAgICAgdGhpcy5faGFuZGxlID0gbnVsbDtcbiAgICAgIHRoaXMuX2luUHJvZ3Jlc3MgPSBmYWxzZTtcbiAgICAgIChfdGhpcyRzZXR0aW5ncyRvbkVuZCA9IChfdGhpcyRzZXR0aW5nczIgPSB0aGlzLnNldHRpbmdzKS5vbkVuZCkgPT09IG51bGwgfHwgX3RoaXMkc2V0dGluZ3Mkb25FbmQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHNldHRpbmdzJG9uRW5kLmNhbGwoX3RoaXMkc2V0dGluZ3MyLCB0aGlzKTtcbiAgICB9XG4gIH1cblxuICBjYW5jZWwoKSB7XG4gICAgaWYgKHRoaXMuX2luUHJvZ3Jlc3MpIHtcbiAgICAgIHZhciBfdGhpcyRzZXR0aW5ncyRvbkludGUsIF90aGlzJHNldHRpbmdzMztcblxuICAgICAgKF90aGlzJHNldHRpbmdzJG9uSW50ZSA9IChfdGhpcyRzZXR0aW5nczMgPSB0aGlzLnNldHRpbmdzKS5vbkludGVycnVwdCkgPT09IG51bGwgfHwgX3RoaXMkc2V0dGluZ3Mkb25JbnRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRzZXR0aW5ncyRvbkludGUuY2FsbChfdGhpcyRzZXR0aW5nczMsIHRoaXMpO1xuXG4gICAgICB0aGlzLl90aW1lbGluZS5yZW1vdmVDaGFubmVsKHRoaXMuX2hhbmRsZSk7XG5cbiAgICAgIHRoaXMuX2hhbmRsZSA9IG51bGw7XG4gICAgICB0aGlzLl9pblByb2dyZXNzID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlKCkge1xuICAgIHZhciBfdGhpcyRzZXR0aW5ncyRvblVwZGEsIF90aGlzJHNldHRpbmdzNDtcblxuICAgIGlmICghdGhpcy5faW5Qcm9ncmVzcykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9oYW5kbGUgPT09IG51bGwpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgX3RpbWVsaW5lOiB0aW1lbGluZSxcbiAgICAgICAgc2V0dGluZ3NcbiAgICAgIH0gPSB0aGlzO1xuICAgICAgdGhpcy5faGFuZGxlID0gdGltZWxpbmUuYWRkQ2hhbm5lbCh7XG4gICAgICAgIGRlbGF5OiB0aW1lbGluZS5nZXRUaW1lKCksXG4gICAgICAgIGR1cmF0aW9uOiBzZXR0aW5ncy5kdXJhdGlvblxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdGhpcy50aW1lID0gdGhpcy5fdGltZWxpbmUuZ2V0VGltZSh0aGlzLl9oYW5kbGUpO1xuXG4gICAgdGhpcy5fb25VcGRhdGUoKTtcblxuICAgIChfdGhpcyRzZXR0aW5ncyRvblVwZGEgPSAoX3RoaXMkc2V0dGluZ3M0ID0gdGhpcy5zZXR0aW5ncykub25VcGRhdGUpID09PSBudWxsIHx8IF90aGlzJHNldHRpbmdzJG9uVXBkYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkc2V0dGluZ3Mkb25VcGRhLmNhbGwoX3RoaXMkc2V0dGluZ3M0LCB0aGlzKTtcblxuICAgIGlmICh0aGlzLl90aW1lbGluZS5pc0ZpbmlzaGVkKHRoaXMuX2hhbmRsZSkpIHtcbiAgICAgIHRoaXMuZW5kKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBfb25VcGRhdGUoKSB7fVxuXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2l0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJUcmFuc2l0aW9uIiwiY29uc3RydWN0b3IiLCJ0aW1lbGluZSIsIl9pblByb2dyZXNzIiwiX2hhbmRsZSIsIl90aW1lbGluZSIsInRpbWUiLCJzZXR0aW5ncyIsImR1cmF0aW9uIiwiaW5Qcm9ncmVzcyIsInN0YXJ0IiwiX3RoaXMkc2V0dGluZ3Mkb25TdGFyIiwiX3RoaXMkc2V0dGluZ3MiLCJjYW5jZWwiLCJvblN0YXJ0IiwiY2FsbCIsImVuZCIsIl90aGlzJHNldHRpbmdzJG9uRW5kIiwiX3RoaXMkc2V0dGluZ3MyIiwicmVtb3ZlQ2hhbm5lbCIsIm9uRW5kIiwiX3RoaXMkc2V0dGluZ3Mkb25JbnRlIiwiX3RoaXMkc2V0dGluZ3MzIiwib25JbnRlcnJ1cHQiLCJ1cGRhdGUiLCJfdGhpcyRzZXR0aW5ncyRvblVwZGEiLCJfdGhpcyRzZXR0aW5nczQiLCJhZGRDaGFubmVsIiwiZGVsYXkiLCJnZXRUaW1lIiwiX29uVXBkYXRlIiwib25VcGRhdGUiLCJpc0ZpbmlzaGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/transitions/transition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/array-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/array-utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   padArray: () => (/* binding */ padArray)\n/* harmony export */ });\nfunction padArrayChunk(options) {\n    const { source, target, start = 0, size, getData } = options;\n    const end = options.end || target.length;\n    const sourceLength = source.length;\n    const targetLength = end - start;\n    if (sourceLength > targetLength) {\n        target.set(source.subarray(0, targetLength), start);\n        return;\n    }\n    target.set(source, start);\n    if (!getData) {\n        return;\n    }\n    let i = sourceLength;\n    while(i < targetLength){\n        const datum = getData(i, source);\n        for(let j = 0; j < size; j++){\n            target[start + i] = datum[j] || 0;\n            i++;\n        }\n    }\n}\nfunction padArray({ source, target, size, getData, sourceStartIndices, targetStartIndices }) {\n    if (!Array.isArray(targetStartIndices)) {\n        padArrayChunk({\n            source,\n            target,\n            size,\n            getData\n        });\n        return target;\n    }\n    let sourceIndex = 0;\n    let targetIndex = 0;\n    const getChunkData = getData && ((i, chunk)=>getData(i + targetIndex, chunk));\n    const n = Math.min(sourceStartIndices.length, targetStartIndices.length);\n    for(let i = 1; i < n; i++){\n        const nextSourceIndex = sourceStartIndices[i] * size;\n        const nextTargetIndex = targetStartIndices[i] * size;\n        padArrayChunk({\n            source: source.subarray(sourceIndex, nextSourceIndex),\n            target,\n            start: targetIndex,\n            end: nextTargetIndex,\n            size,\n            getData: getChunkData\n        });\n        sourceIndex = nextSourceIndex;\n        targetIndex = nextTargetIndex;\n    }\n    if (targetIndex < target.length) {\n        padArrayChunk({\n            source: [],\n            target,\n            start: targetIndex,\n            size,\n            getData: getChunkData\n        });\n    }\n    return target;\n} //# sourceMappingURL=array-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9hcnJheS11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsU0FBU0EsY0FBY0MsT0FBTztJQUM1QixNQUFNLEVBQ0pDLE1BQU0sRUFDTkMsTUFBTSxFQUNOQyxRQUFRLENBQUMsRUFDVEMsSUFBSSxFQUNKQyxPQUFPLEVBQ1IsR0FBR0w7SUFDSixNQUFNTSxNQUFNTixRQUFRTSxHQUFHLElBQUlKLE9BQU9LLE1BQU07SUFDeEMsTUFBTUMsZUFBZVAsT0FBT00sTUFBTTtJQUNsQyxNQUFNRSxlQUFlSCxNQUFNSDtJQUUzQixJQUFJSyxlQUFlQyxjQUFjO1FBQy9CUCxPQUFPUSxHQUFHLENBQUNULE9BQU9VLFFBQVEsQ0FBQyxHQUFHRixlQUFlTjtRQUM3QztJQUNGO0lBRUFELE9BQU9RLEdBQUcsQ0FBQ1QsUUFBUUU7SUFFbkIsSUFBSSxDQUFDRSxTQUFTO1FBQ1o7SUFDRjtJQUVBLElBQUlPLElBQUlKO0lBRVIsTUFBT0ksSUFBSUgsYUFBYztRQUN2QixNQUFNSSxRQUFRUixRQUFRTyxHQUFHWDtRQUV6QixJQUFLLElBQUlhLElBQUksR0FBR0EsSUFBSVYsTUFBTVUsSUFBSztZQUM3QlosTUFBTSxDQUFDQyxRQUFRUyxFQUFFLEdBQUdDLEtBQUssQ0FBQ0MsRUFBRSxJQUFJO1lBQ2hDRjtRQUNGO0lBQ0Y7QUFDRjtBQUVPLFNBQVNHLFNBQVMsRUFDdkJkLE1BQU0sRUFDTkMsTUFBTSxFQUNORSxJQUFJLEVBQ0pDLE9BQU8sRUFDUFcsa0JBQWtCLEVBQ2xCQyxrQkFBa0IsRUFDbkI7SUFDQyxJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0YscUJBQXFCO1FBQ3RDbEIsY0FBYztZQUNaRTtZQUNBQztZQUNBRTtZQUNBQztRQUNGO1FBQ0EsT0FBT0g7SUFDVDtJQUVBLElBQUlrQixjQUFjO0lBQ2xCLElBQUlDLGNBQWM7SUFFbEIsTUFBTUMsZUFBZWpCLFdBQVksRUFBQ08sR0FBR1csUUFBVWxCLFFBQVFPLElBQUlTLGFBQWFFLE1BQUs7SUFFN0UsTUFBTUMsSUFBSUMsS0FBS0MsR0FBRyxDQUFDVixtQkFBbUJULE1BQU0sRUFBRVUsbUJBQW1CVixNQUFNO0lBRXZFLElBQUssSUFBSUssSUFBSSxHQUFHQSxJQUFJWSxHQUFHWixJQUFLO1FBQzFCLE1BQU1lLGtCQUFrQlgsa0JBQWtCLENBQUNKLEVBQUUsR0FBR1I7UUFDaEQsTUFBTXdCLGtCQUFrQlgsa0JBQWtCLENBQUNMLEVBQUUsR0FBR1I7UUFDaERMLGNBQWM7WUFDWkUsUUFBUUEsT0FBT1UsUUFBUSxDQUFDUyxhQUFhTztZQUNyQ3pCO1lBQ0FDLE9BQU9rQjtZQUNQZixLQUFLc0I7WUFDTHhCO1lBQ0FDLFNBQVNpQjtRQUNYO1FBQ0FGLGNBQWNPO1FBQ2ROLGNBQWNPO0lBQ2hCO0lBRUEsSUFBSVAsY0FBY25CLE9BQU9LLE1BQU0sRUFBRTtRQUMvQlIsY0FBYztZQUNaRSxRQUFRLEVBQUU7WUFDVkM7WUFDQUMsT0FBT2tCO1lBQ1BqQjtZQUNBQyxTQUFTaUI7UUFDWDtJQUNGO0lBRUEsT0FBT3BCO0FBQ1QsRUFDQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3V0aWxzL2FycmF5LXV0aWxzLmpzP2ZjNzciXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcGFkQXJyYXlDaHVuayhvcHRpb25zKSB7XG4gIGNvbnN0IHtcbiAgICBzb3VyY2UsXG4gICAgdGFyZ2V0LFxuICAgIHN0YXJ0ID0gMCxcbiAgICBzaXplLFxuICAgIGdldERhdGFcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGVuZCA9IG9wdGlvbnMuZW5kIHx8IHRhcmdldC5sZW5ndGg7XG4gIGNvbnN0IHNvdXJjZUxlbmd0aCA9IHNvdXJjZS5sZW5ndGg7XG4gIGNvbnN0IHRhcmdldExlbmd0aCA9IGVuZCAtIHN0YXJ0O1xuXG4gIGlmIChzb3VyY2VMZW5ndGggPiB0YXJnZXRMZW5ndGgpIHtcbiAgICB0YXJnZXQuc2V0KHNvdXJjZS5zdWJhcnJheSgwLCB0YXJnZXRMZW5ndGgpLCBzdGFydCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdGFyZ2V0LnNldChzb3VyY2UsIHN0YXJ0KTtcblxuICBpZiAoIWdldERhdGEpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBsZXQgaSA9IHNvdXJjZUxlbmd0aDtcblxuICB3aGlsZSAoaSA8IHRhcmdldExlbmd0aCkge1xuICAgIGNvbnN0IGRhdHVtID0gZ2V0RGF0YShpLCBzb3VyY2UpO1xuXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBzaXplOyBqKyspIHtcbiAgICAgIHRhcmdldFtzdGFydCArIGldID0gZGF0dW1bal0gfHwgMDtcbiAgICAgIGkrKztcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhZEFycmF5KHtcbiAgc291cmNlLFxuICB0YXJnZXQsXG4gIHNpemUsXG4gIGdldERhdGEsXG4gIHNvdXJjZVN0YXJ0SW5kaWNlcyxcbiAgdGFyZ2V0U3RhcnRJbmRpY2VzXG59KSB7XG4gIGlmICghQXJyYXkuaXNBcnJheSh0YXJnZXRTdGFydEluZGljZXMpKSB7XG4gICAgcGFkQXJyYXlDaHVuayh7XG4gICAgICBzb3VyY2UsXG4gICAgICB0YXJnZXQsXG4gICAgICBzaXplLFxuICAgICAgZ2V0RGF0YVxuICAgIH0pO1xuICAgIHJldHVybiB0YXJnZXQ7XG4gIH1cblxuICBsZXQgc291cmNlSW5kZXggPSAwO1xuICBsZXQgdGFyZ2V0SW5kZXggPSAwO1xuXG4gIGNvbnN0IGdldENodW5rRGF0YSA9IGdldERhdGEgJiYgKChpLCBjaHVuaykgPT4gZ2V0RGF0YShpICsgdGFyZ2V0SW5kZXgsIGNodW5rKSk7XG5cbiAgY29uc3QgbiA9IE1hdGgubWluKHNvdXJjZVN0YXJ0SW5kaWNlcy5sZW5ndGgsIHRhcmdldFN0YXJ0SW5kaWNlcy5sZW5ndGgpO1xuXG4gIGZvciAobGV0IGkgPSAxOyBpIDwgbjsgaSsrKSB7XG4gICAgY29uc3QgbmV4dFNvdXJjZUluZGV4ID0gc291cmNlU3RhcnRJbmRpY2VzW2ldICogc2l6ZTtcbiAgICBjb25zdCBuZXh0VGFyZ2V0SW5kZXggPSB0YXJnZXRTdGFydEluZGljZXNbaV0gKiBzaXplO1xuICAgIHBhZEFycmF5Q2h1bmsoe1xuICAgICAgc291cmNlOiBzb3VyY2Uuc3ViYXJyYXkoc291cmNlSW5kZXgsIG5leHRTb3VyY2VJbmRleCksXG4gICAgICB0YXJnZXQsXG4gICAgICBzdGFydDogdGFyZ2V0SW5kZXgsXG4gICAgICBlbmQ6IG5leHRUYXJnZXRJbmRleCxcbiAgICAgIHNpemUsXG4gICAgICBnZXREYXRhOiBnZXRDaHVua0RhdGFcbiAgICB9KTtcbiAgICBzb3VyY2VJbmRleCA9IG5leHRTb3VyY2VJbmRleDtcbiAgICB0YXJnZXRJbmRleCA9IG5leHRUYXJnZXRJbmRleDtcbiAgfVxuXG4gIGlmICh0YXJnZXRJbmRleCA8IHRhcmdldC5sZW5ndGgpIHtcbiAgICBwYWRBcnJheUNodW5rKHtcbiAgICAgIHNvdXJjZTogW10sXG4gICAgICB0YXJnZXQsXG4gICAgICBzdGFydDogdGFyZ2V0SW5kZXgsXG4gICAgICBzaXplLFxuICAgICAgZ2V0RGF0YTogZ2V0Q2h1bmtEYXRhXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyYXktdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbInBhZEFycmF5Q2h1bmsiLCJvcHRpb25zIiwic291cmNlIiwidGFyZ2V0Iiwic3RhcnQiLCJzaXplIiwiZ2V0RGF0YSIsImVuZCIsImxlbmd0aCIsInNvdXJjZUxlbmd0aCIsInRhcmdldExlbmd0aCIsInNldCIsInN1YmFycmF5IiwiaSIsImRhdHVtIiwiaiIsInBhZEFycmF5Iiwic291cmNlU3RhcnRJbmRpY2VzIiwidGFyZ2V0U3RhcnRJbmRpY2VzIiwiQXJyYXkiLCJpc0FycmF5Iiwic291cmNlSW5kZXgiLCJ0YXJnZXRJbmRleCIsImdldENodW5rRGF0YSIsImNodW5rIiwibiIsIk1hdGgiLCJtaW4iLCJuZXh0U291cmNlSW5kZXgiLCJuZXh0VGFyZ2V0SW5kZXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/array-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js":
/*!*************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/assert.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ assert)\n/* harmony export */ });\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || \"deck.gl: assertion failed.\");\n    }\n} //# sourceMappingURL=assert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9hc3NlcnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLFNBQVNBLE9BQU9DLFNBQVMsRUFBRUMsT0FBTztJQUMvQyxJQUFJLENBQUNELFdBQVc7UUFDZCxNQUFNLElBQUlFLE1BQU1ELFdBQVc7SUFDN0I7QUFDRixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vdXRpbHMvYXNzZXJ0LmpzP2Y1ZWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlIHx8ICdkZWNrLmdsOiBhc3NlcnRpb24gZmFpbGVkLicpO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3NlcnQuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/count.js":
/*!************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/count.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   count: () => (/* binding */ count)\n/* harmony export */ });\nconst ERR_NOT_OBJECT = \"count(): argument not an object\";\nconst ERR_NOT_CONTAINER = \"count(): argument not a container\";\nfunction count(container) {\n    if (!isObject(container)) {\n        throw new Error(ERR_NOT_OBJECT);\n    }\n    if (typeof container.count === \"function\") {\n        return container.count();\n    }\n    if (Number.isFinite(container.size)) {\n        return container.size;\n    }\n    if (Number.isFinite(container.length)) {\n        return container.length;\n    }\n    if (isPlainObject(container)) {\n        return Object.keys(container).length;\n    }\n    throw new Error(ERR_NOT_CONTAINER);\n}\nfunction isPlainObject(value) {\n    return value !== null && typeof value === \"object\" && value.constructor === Object;\n}\nfunction isObject(value) {\n    return value !== null && typeof value === \"object\";\n} //# sourceMappingURL=count.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9jb3VudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsaUJBQWlCO0FBQ3ZCLE1BQU1DLG9CQUFvQjtBQUNuQixTQUFTQyxNQUFNQyxTQUFTO0lBQzdCLElBQUksQ0FBQ0MsU0FBU0QsWUFBWTtRQUN4QixNQUFNLElBQUlFLE1BQU1MO0lBQ2xCO0lBRUEsSUFBSSxPQUFPRyxVQUFVRCxLQUFLLEtBQUssWUFBWTtRQUN6QyxPQUFPQyxVQUFVRCxLQUFLO0lBQ3hCO0lBRUEsSUFBSUksT0FBT0MsUUFBUSxDQUFDSixVQUFVSyxJQUFJLEdBQUc7UUFDbkMsT0FBT0wsVUFBVUssSUFBSTtJQUN2QjtJQUVBLElBQUlGLE9BQU9DLFFBQVEsQ0FBQ0osVUFBVU0sTUFBTSxHQUFHO1FBQ3JDLE9BQU9OLFVBQVVNLE1BQU07SUFDekI7SUFFQSxJQUFJQyxjQUFjUCxZQUFZO1FBQzVCLE9BQU9RLE9BQU9DLElBQUksQ0FBQ1QsV0FBV00sTUFBTTtJQUN0QztJQUVBLE1BQU0sSUFBSUosTUFBTUo7QUFDbEI7QUFFQSxTQUFTUyxjQUFjRyxLQUFLO0lBQzFCLE9BQU9BLFVBQVUsUUFBUSxPQUFPQSxVQUFVLFlBQVlBLE1BQU1DLFdBQVcsS0FBS0g7QUFDOUU7QUFFQSxTQUFTUCxTQUFTUyxLQUFLO0lBQ3JCLE9BQU9BLFVBQVUsUUFBUSxPQUFPQSxVQUFVO0FBQzVDLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9jb3VudC5qcz84OGEyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEVSUl9OT1RfT0JKRUNUID0gJ2NvdW50KCk6IGFyZ3VtZW50IG5vdCBhbiBvYmplY3QnO1xuY29uc3QgRVJSX05PVF9DT05UQUlORVIgPSAnY291bnQoKTogYXJndW1lbnQgbm90IGEgY29udGFpbmVyJztcbmV4cG9ydCBmdW5jdGlvbiBjb3VudChjb250YWluZXIpIHtcbiAgaWYgKCFpc09iamVjdChjb250YWluZXIpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKEVSUl9OT1RfT0JKRUNUKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgY29udGFpbmVyLmNvdW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGNvbnRhaW5lci5jb3VudCgpO1xuICB9XG5cbiAgaWYgKE51bWJlci5pc0Zpbml0ZShjb250YWluZXIuc2l6ZSkpIHtcbiAgICByZXR1cm4gY29udGFpbmVyLnNpemU7XG4gIH1cblxuICBpZiAoTnVtYmVyLmlzRmluaXRlKGNvbnRhaW5lci5sZW5ndGgpKSB7XG4gICAgcmV0dXJuIGNvbnRhaW5lci5sZW5ndGg7XG4gIH1cblxuICBpZiAoaXNQbGFpbk9iamVjdChjb250YWluZXIpKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGNvbnRhaW5lcikubGVuZ3RoO1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKEVSUl9OT1RfQ09OVEFJTkVSKTtcbn1cblxuZnVuY3Rpb24gaXNQbGFpbk9iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufVxuXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvdW50LmpzLm1hcCJdLCJuYW1lcyI6WyJFUlJfTk9UX09CSkVDVCIsIkVSUl9OT1RfQ09OVEFJTkVSIiwiY291bnQiLCJjb250YWluZXIiLCJpc09iamVjdCIsIkVycm9yIiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJzaXplIiwibGVuZ3RoIiwiaXNQbGFpbk9iamVjdCIsIk9iamVjdCIsImtleXMiLCJ2YWx1ZSIsImNvbnN0cnVjdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/count.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/deep-equal.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/deep-equal.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepEqual: () => (/* binding */ deepEqual)\n/* harmony export */ });\nfunction deepEqual(a, b, depth) {\n    if (a === b) {\n        return true;\n    }\n    if (!depth || !a || !b) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) {\n            return false;\n        }\n        for(let i = 0; i < a.length; i++){\n            if (!deepEqual(a[i], b[i], depth - 1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (Array.isArray(b)) {\n        return false;\n    }\n    if (typeof a === \"object\" && typeof b === \"object\") {\n        const aKeys = Object.keys(a);\n        const bKeys = Object.keys(b);\n        if (aKeys.length !== bKeys.length) {\n            return false;\n        }\n        for (const key of aKeys){\n            if (!b.hasOwnProperty(key)) {\n                return false;\n            }\n            if (!deepEqual(a[key], b[key], depth - 1)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n} //# sourceMappingURL=deep-equal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9kZWVwLWVxdWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxVQUFVQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsS0FBSztJQUNuQyxJQUFJRixNQUFNQyxHQUFHO1FBQ1gsT0FBTztJQUNUO0lBRUEsSUFBSSxDQUFDQyxTQUFTLENBQUNGLEtBQUssQ0FBQ0MsR0FBRztRQUN0QixPQUFPO0lBQ1Q7SUFFQSxJQUFJRSxNQUFNQyxPQUFPLENBQUNKLElBQUk7UUFDcEIsSUFBSSxDQUFDRyxNQUFNQyxPQUFPLENBQUNILE1BQU1ELEVBQUVLLE1BQU0sS0FBS0osRUFBRUksTUFBTSxFQUFFO1lBQzlDLE9BQU87UUFDVDtRQUVBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJTixFQUFFSyxNQUFNLEVBQUVDLElBQUs7WUFDakMsSUFBSSxDQUFDUCxVQUFVQyxDQUFDLENBQUNNLEVBQUUsRUFBRUwsQ0FBQyxDQUFDSyxFQUFFLEVBQUVKLFFBQVEsSUFBSTtnQkFDckMsT0FBTztZQUNUO1FBQ0Y7UUFFQSxPQUFPO0lBQ1Q7SUFFQSxJQUFJQyxNQUFNQyxPQUFPLENBQUNILElBQUk7UUFDcEIsT0FBTztJQUNUO0lBRUEsSUFBSSxPQUFPRCxNQUFNLFlBQVksT0FBT0MsTUFBTSxVQUFVO1FBQ2xELE1BQU1NLFFBQVFDLE9BQU9DLElBQUksQ0FBQ1Q7UUFDMUIsTUFBTVUsUUFBUUYsT0FBT0MsSUFBSSxDQUFDUjtRQUUxQixJQUFJTSxNQUFNRixNQUFNLEtBQUtLLE1BQU1MLE1BQU0sRUFBRTtZQUNqQyxPQUFPO1FBQ1Q7UUFFQSxLQUFLLE1BQU1NLE9BQU9KLE1BQU87WUFDdkIsSUFBSSxDQUFDTixFQUFFVyxjQUFjLENBQUNELE1BQU07Z0JBQzFCLE9BQU87WUFDVDtZQUVBLElBQUksQ0FBQ1osVUFBVUMsQ0FBQyxDQUFDVyxJQUFJLEVBQUVWLENBQUMsQ0FBQ1UsSUFBSSxFQUFFVCxRQUFRLElBQUk7Z0JBQ3pDLE9BQU87WUFDVDtRQUNGO1FBRUEsT0FBTztJQUNUO0lBRUEsT0FBTztBQUNULEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9kZWVwLWVxdWFsLmpzPzE4MjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGRlZXBFcXVhbChhLCBiLCBkZXB0aCkge1xuICBpZiAoYSA9PT0gYikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKCFkZXB0aCB8fCAhYSB8fCAhYikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGIpIHx8IGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKCFkZWVwRXF1YWwoYVtpXSwgYltpXSwgZGVwdGggLSAxKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheShiKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIGIgPT09ICdvYmplY3QnKSB7XG4gICAgY29uc3QgYUtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICBjb25zdCBiS2V5cyA9IE9iamVjdC5rZXlzKGIpO1xuXG4gICAgaWYgKGFLZXlzLmxlbmd0aCAhPT0gYktleXMubGVuZ3RoKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBrZXkgb2YgYUtleXMpIHtcbiAgICAgIGlmICghYi5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFkZWVwRXF1YWwoYVtrZXldLCBiW2tleV0sIGRlcHRoIC0gMSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVlcC1lcXVhbC5qcy5tYXAiXSwibmFtZXMiOlsiZGVlcEVxdWFsIiwiYSIsImIiLCJkZXB0aCIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsImkiLCJhS2V5cyIsIk9iamVjdCIsImtleXMiLCJiS2V5cyIsImtleSIsImhhc093blByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/deep-equal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/flatten.js":
/*!**************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/flatten.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fillArray: () => (/* binding */ fillArray),\n/* harmony export */   flatten: () => (/* binding */ flatten)\n/* harmony export */ });\nfunction flatten(array, filter = ()=>true) {\n    if (!Array.isArray(array)) {\n        return filter(array) ? [\n            array\n        ] : [];\n    }\n    return flattenArray(array, filter, []);\n}\nfunction flattenArray(array, filter, result) {\n    let index = -1;\n    while(++index < array.length){\n        const value = array[index];\n        if (Array.isArray(value)) {\n            flattenArray(value, filter, result);\n        } else if (filter(value)) {\n            result.push(value);\n        }\n    }\n    return result;\n}\nfunction fillArray({ target, source, start = 0, count = 1 }) {\n    const length = source.length;\n    const total = count * length;\n    let copied = 0;\n    for(let i = start; copied < length; copied++){\n        target[i++] = source[copied];\n    }\n    while(copied < total){\n        if (copied < total - copied) {\n            target.copyWithin(start + copied, start, start + copied);\n            copied *= 2;\n        } else {\n            target.copyWithin(start + copied, start, start + total - copied);\n            copied = total;\n        }\n    }\n    return target;\n} //# sourceMappingURL=flatten.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9mbGF0dGVuLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0EsUUFBUUMsS0FBSyxFQUFFQyxTQUFTLElBQU0sSUFBSTtJQUNoRCxJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0gsUUFBUTtRQUN6QixPQUFPQyxPQUFPRCxTQUFTO1lBQUNBO1NBQU0sR0FBRyxFQUFFO0lBQ3JDO0lBRUEsT0FBT0ksYUFBYUosT0FBT0MsUUFBUSxFQUFFO0FBQ3ZDO0FBRUEsU0FBU0csYUFBYUosS0FBSyxFQUFFQyxNQUFNLEVBQUVJLE1BQU07SUFDekMsSUFBSUMsUUFBUSxDQUFDO0lBRWIsTUFBTyxFQUFFQSxRQUFRTixNQUFNTyxNQUFNLENBQUU7UUFDN0IsTUFBTUMsUUFBUVIsS0FBSyxDQUFDTSxNQUFNO1FBRTFCLElBQUlKLE1BQU1DLE9BQU8sQ0FBQ0ssUUFBUTtZQUN4QkosYUFBYUksT0FBT1AsUUFBUUk7UUFDOUIsT0FBTyxJQUFJSixPQUFPTyxRQUFRO1lBQ3hCSCxPQUFPSSxJQUFJLENBQUNEO1FBQ2Q7SUFDRjtJQUVBLE9BQU9IO0FBQ1Q7QUFFTyxTQUFTSyxVQUFVLEVBQ3hCQyxNQUFNLEVBQ05DLE1BQU0sRUFDTkMsUUFBUSxDQUFDLEVBQ1RDLFFBQVEsQ0FBQyxFQUNWO0lBQ0MsTUFBTVAsU0FBU0ssT0FBT0wsTUFBTTtJQUM1QixNQUFNUSxRQUFRRCxRQUFRUDtJQUN0QixJQUFJUyxTQUFTO0lBRWIsSUFBSyxJQUFJQyxJQUFJSixPQUFPRyxTQUFTVCxRQUFRUyxTQUFVO1FBQzdDTCxNQUFNLENBQUNNLElBQUksR0FBR0wsTUFBTSxDQUFDSSxPQUFPO0lBQzlCO0lBRUEsTUFBT0EsU0FBU0QsTUFBTztRQUNyQixJQUFJQyxTQUFTRCxRQUFRQyxRQUFRO1lBQzNCTCxPQUFPTyxVQUFVLENBQUNMLFFBQVFHLFFBQVFILE9BQU9BLFFBQVFHO1lBQ2pEQSxVQUFVO1FBQ1osT0FBTztZQUNMTCxPQUFPTyxVQUFVLENBQUNMLFFBQVFHLFFBQVFILE9BQU9BLFFBQVFFLFFBQVFDO1lBQ3pEQSxTQUFTRDtRQUNYO0lBQ0Y7SUFFQSxPQUFPSjtBQUNULEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9mbGF0dGVuLmpzP2MxZTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGZsYXR0ZW4oYXJyYXksIGZpbHRlciA9ICgpID0+IHRydWUpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KGFycmF5KSkge1xuICAgIHJldHVybiBmaWx0ZXIoYXJyYXkpID8gW2FycmF5XSA6IFtdO1xuICB9XG5cbiAgcmV0dXJuIGZsYXR0ZW5BcnJheShhcnJheSwgZmlsdGVyLCBbXSk7XG59XG5cbmZ1bmN0aW9uIGZsYXR0ZW5BcnJheShhcnJheSwgZmlsdGVyLCByZXN1bHQpIHtcbiAgbGV0IGluZGV4ID0gLTE7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBhcnJheS5sZW5ndGgpIHtcbiAgICBjb25zdCB2YWx1ZSA9IGFycmF5W2luZGV4XTtcblxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgZmxhdHRlbkFycmF5KHZhbHVlLCBmaWx0ZXIsIHJlc3VsdCk7XG4gICAgfSBlbHNlIGlmIChmaWx0ZXIodmFsdWUpKSB7XG4gICAgICByZXN1bHQucHVzaCh2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbGxBcnJheSh7XG4gIHRhcmdldCxcbiAgc291cmNlLFxuICBzdGFydCA9IDAsXG4gIGNvdW50ID0gMVxufSkge1xuICBjb25zdCBsZW5ndGggPSBzb3VyY2UubGVuZ3RoO1xuICBjb25zdCB0b3RhbCA9IGNvdW50ICogbGVuZ3RoO1xuICBsZXQgY29waWVkID0gMDtcblxuICBmb3IgKGxldCBpID0gc3RhcnQ7IGNvcGllZCA8IGxlbmd0aDsgY29waWVkKyspIHtcbiAgICB0YXJnZXRbaSsrXSA9IHNvdXJjZVtjb3BpZWRdO1xuICB9XG5cbiAgd2hpbGUgKGNvcGllZCA8IHRvdGFsKSB7XG4gICAgaWYgKGNvcGllZCA8IHRvdGFsIC0gY29waWVkKSB7XG4gICAgICB0YXJnZXQuY29weVdpdGhpbihzdGFydCArIGNvcGllZCwgc3RhcnQsIHN0YXJ0ICsgY29waWVkKTtcbiAgICAgIGNvcGllZCAqPSAyO1xuICAgIH0gZWxzZSB7XG4gICAgICB0YXJnZXQuY29weVdpdGhpbihzdGFydCArIGNvcGllZCwgc3RhcnQsIHN0YXJ0ICsgdG90YWwgLSBjb3BpZWQpO1xuICAgICAgY29waWVkID0gdG90YWw7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZsYXR0ZW4uanMubWFwIl0sIm5hbWVzIjpbImZsYXR0ZW4iLCJhcnJheSIsImZpbHRlciIsIkFycmF5IiwiaXNBcnJheSIsImZsYXR0ZW5BcnJheSIsInJlc3VsdCIsImluZGV4IiwibGVuZ3RoIiwidmFsdWUiLCJwdXNoIiwiZmlsbEFycmF5IiwidGFyZ2V0Iiwic291cmNlIiwic3RhcnQiLCJjb3VudCIsInRvdGFsIiwiY29waWVkIiwiaSIsImNvcHlXaXRoaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/flatten.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createIterable: () => (/* binding */ createIterable),\n/* harmony export */   getAccessorFromBuffer: () => (/* binding */ getAccessorFromBuffer),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\nconst EMPTY_ARRAY = [];\nconst placeholderArray = [];\nfunction createIterable(data, startRow = 0, endRow = Infinity) {\n    let iterable = EMPTY_ARRAY;\n    const objectInfo = {\n        index: -1,\n        data,\n        target: []\n    };\n    if (!data) {\n        iterable = EMPTY_ARRAY;\n    } else if (typeof data[Symbol.iterator] === \"function\") {\n        iterable = data;\n    } else if (data.length > 0) {\n        placeholderArray.length = data.length;\n        iterable = placeholderArray;\n    }\n    if (startRow > 0 || Number.isFinite(endRow)) {\n        iterable = (Array.isArray(iterable) ? iterable : Array.from(iterable)).slice(startRow, endRow);\n        objectInfo.index = startRow - 1;\n    }\n    return {\n        iterable,\n        objectInfo\n    };\n}\nfunction isAsyncIterable(data) {\n    return data && data[Symbol.asyncIterator];\n}\nfunction getAccessorFromBuffer(typedArray, options) {\n    const { size, stride, offset, startIndices, nested } = options;\n    const bytesPerElement = typedArray.BYTES_PER_ELEMENT;\n    const elementStride = stride ? stride / bytesPerElement : size;\n    const elementOffset = offset ? offset / bytesPerElement : 0;\n    const vertexCount = Math.floor((typedArray.length - elementOffset) / elementStride);\n    return (_, { index, target })=>{\n        if (!startIndices) {\n            const sourceIndex = index * elementStride + elementOffset;\n            for(let j = 0; j < size; j++){\n                target[j] = typedArray[sourceIndex + j];\n            }\n            return target;\n        }\n        const startIndex = startIndices[index];\n        const endIndex = startIndices[index + 1] || vertexCount;\n        let result;\n        if (nested) {\n            result = new Array(endIndex - startIndex);\n            for(let i = startIndex; i < endIndex; i++){\n                const sourceIndex = i * elementStride + elementOffset;\n                target = new Array(size);\n                for(let j = 0; j < size; j++){\n                    target[j] = typedArray[sourceIndex + j];\n                }\n                result[i - startIndex] = target;\n            }\n        } else if (elementStride === size) {\n            result = typedArray.subarray(startIndex * size + elementOffset, endIndex * size + elementOffset);\n        } else {\n            result = new typedArray.constructor((endIndex - startIndex) * size);\n            let targetIndex = 0;\n            for(let i = startIndex; i < endIndex; i++){\n                const sourceIndex = i * elementStride + elementOffset;\n                for(let j = 0; j < size; j++){\n                    result[targetIndex++] = typedArray[sourceIndex + j];\n                }\n            }\n        }\n        return result;\n    };\n} //# sourceMappingURL=iterable-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9pdGVyYWJsZS11dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxNQUFNQSxjQUFjLEVBQUU7QUFDdEIsTUFBTUMsbUJBQW1CLEVBQUU7QUFDcEIsU0FBU0MsZUFBZUMsSUFBSSxFQUFFQyxXQUFXLENBQUMsRUFBRUMsU0FBU0MsUUFBUTtJQUNsRSxJQUFJQyxXQUFXUDtJQUNmLE1BQU1RLGFBQWE7UUFDakJDLE9BQU8sQ0FBQztRQUNSTjtRQUNBTyxRQUFRLEVBQUU7SUFDWjtJQUVBLElBQUksQ0FBQ1AsTUFBTTtRQUNUSSxXQUFXUDtJQUNiLE9BQU8sSUFBSSxPQUFPRyxJQUFJLENBQUNRLE9BQU9DLFFBQVEsQ0FBQyxLQUFLLFlBQVk7UUFDdERMLFdBQVdKO0lBQ2IsT0FBTyxJQUFJQSxLQUFLVSxNQUFNLEdBQUcsR0FBRztRQUMxQlosaUJBQWlCWSxNQUFNLEdBQUdWLEtBQUtVLE1BQU07UUFDckNOLFdBQVdOO0lBQ2I7SUFFQSxJQUFJRyxXQUFXLEtBQUtVLE9BQU9DLFFBQVEsQ0FBQ1YsU0FBUztRQUMzQ0UsV0FBVyxDQUFDUyxNQUFNQyxPQUFPLENBQUNWLFlBQVlBLFdBQVdTLE1BQU1FLElBQUksQ0FBQ1gsU0FBUSxFQUFHWSxLQUFLLENBQUNmLFVBQVVDO1FBQ3ZGRyxXQUFXQyxLQUFLLEdBQUdMLFdBQVc7SUFDaEM7SUFFQSxPQUFPO1FBQ0xHO1FBQ0FDO0lBQ0Y7QUFDRjtBQUNPLFNBQVNZLGdCQUFnQmpCLElBQUk7SUFDbEMsT0FBT0EsUUFBUUEsSUFBSSxDQUFDUSxPQUFPVSxhQUFhLENBQUM7QUFDM0M7QUFDTyxTQUFTQyxzQkFBc0JDLFVBQVUsRUFBRUMsT0FBTztJQUN2RCxNQUFNLEVBQ0pDLElBQUksRUFDSkMsTUFBTSxFQUNOQyxNQUFNLEVBQ05DLFlBQVksRUFDWkMsTUFBTSxFQUNQLEdBQUdMO0lBQ0osTUFBTU0sa0JBQWtCUCxXQUFXUSxpQkFBaUI7SUFDcEQsTUFBTUMsZ0JBQWdCTixTQUFTQSxTQUFTSSxrQkFBa0JMO0lBQzFELE1BQU1RLGdCQUFnQk4sU0FBU0EsU0FBU0csa0JBQWtCO0lBQzFELE1BQU1JLGNBQWNDLEtBQUtDLEtBQUssQ0FBQyxDQUFDYixXQUFXVixNQUFNLEdBQUdvQixhQUFZLElBQUtEO0lBQ3JFLE9BQU8sQ0FBQ0ssR0FBRyxFQUNUNUIsS0FBSyxFQUNMQyxNQUFNLEVBQ1A7UUFDQyxJQUFJLENBQUNrQixjQUFjO1lBQ2pCLE1BQU1VLGNBQWM3QixRQUFRdUIsZ0JBQWdCQztZQUU1QyxJQUFLLElBQUlNLElBQUksR0FBR0EsSUFBSWQsTUFBTWMsSUFBSztnQkFDN0I3QixNQUFNLENBQUM2QixFQUFFLEdBQUdoQixVQUFVLENBQUNlLGNBQWNDLEVBQUU7WUFDekM7WUFFQSxPQUFPN0I7UUFDVDtRQUVBLE1BQU04QixhQUFhWixZQUFZLENBQUNuQixNQUFNO1FBQ3RDLE1BQU1nQyxXQUFXYixZQUFZLENBQUNuQixRQUFRLEVBQUUsSUFBSXlCO1FBQzVDLElBQUlRO1FBRUosSUFBSWIsUUFBUTtZQUNWYSxTQUFTLElBQUkxQixNQUFNeUIsV0FBV0Q7WUFFOUIsSUFBSyxJQUFJRyxJQUFJSCxZQUFZRyxJQUFJRixVQUFVRSxJQUFLO2dCQUMxQyxNQUFNTCxjQUFjSyxJQUFJWCxnQkFBZ0JDO2dCQUN4Q3ZCLFNBQVMsSUFBSU0sTUFBTVM7Z0JBRW5CLElBQUssSUFBSWMsSUFBSSxHQUFHQSxJQUFJZCxNQUFNYyxJQUFLO29CQUM3QjdCLE1BQU0sQ0FBQzZCLEVBQUUsR0FBR2hCLFVBQVUsQ0FBQ2UsY0FBY0MsRUFBRTtnQkFDekM7Z0JBRUFHLE1BQU0sQ0FBQ0MsSUFBSUgsV0FBVyxHQUFHOUI7WUFDM0I7UUFDRixPQUFPLElBQUlzQixrQkFBa0JQLE1BQU07WUFDakNpQixTQUFTbkIsV0FBV3FCLFFBQVEsQ0FBQ0osYUFBYWYsT0FBT1EsZUFBZVEsV0FBV2hCLE9BQU9RO1FBQ3BGLE9BQU87WUFDTFMsU0FBUyxJQUFJbkIsV0FBV3NCLFdBQVcsQ0FBQyxDQUFDSixXQUFXRCxVQUFTLElBQUtmO1lBQzlELElBQUlxQixjQUFjO1lBRWxCLElBQUssSUFBSUgsSUFBSUgsWUFBWUcsSUFBSUYsVUFBVUUsSUFBSztnQkFDMUMsTUFBTUwsY0FBY0ssSUFBSVgsZ0JBQWdCQztnQkFFeEMsSUFBSyxJQUFJTSxJQUFJLEdBQUdBLElBQUlkLE1BQU1jLElBQUs7b0JBQzdCRyxNQUFNLENBQUNJLGNBQWMsR0FBR3ZCLFVBQVUsQ0FBQ2UsY0FBY0MsRUFBRTtnQkFDckQ7WUFDRjtRQUNGO1FBRUEsT0FBT0c7SUFDVDtBQUNGLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9pdGVyYWJsZS11dGlscy5qcz8xZjlmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEVNUFRZX0FSUkFZID0gW107XG5jb25zdCBwbGFjZWhvbGRlckFycmF5ID0gW107XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSXRlcmFibGUoZGF0YSwgc3RhcnRSb3cgPSAwLCBlbmRSb3cgPSBJbmZpbml0eSkge1xuICBsZXQgaXRlcmFibGUgPSBFTVBUWV9BUlJBWTtcbiAgY29uc3Qgb2JqZWN0SW5mbyA9IHtcbiAgICBpbmRleDogLTEsXG4gICAgZGF0YSxcbiAgICB0YXJnZXQ6IFtdXG4gIH07XG5cbiAgaWYgKCFkYXRhKSB7XG4gICAgaXRlcmFibGUgPSBFTVBUWV9BUlJBWTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZGF0YVtTeW1ib2wuaXRlcmF0b3JdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaXRlcmFibGUgPSBkYXRhO1xuICB9IGVsc2UgaWYgKGRhdGEubGVuZ3RoID4gMCkge1xuICAgIHBsYWNlaG9sZGVyQXJyYXkubGVuZ3RoID0gZGF0YS5sZW5ndGg7XG4gICAgaXRlcmFibGUgPSBwbGFjZWhvbGRlckFycmF5O1xuICB9XG5cbiAgaWYgKHN0YXJ0Um93ID4gMCB8fCBOdW1iZXIuaXNGaW5pdGUoZW5kUm93KSkge1xuICAgIGl0ZXJhYmxlID0gKEFycmF5LmlzQXJyYXkoaXRlcmFibGUpID8gaXRlcmFibGUgOiBBcnJheS5mcm9tKGl0ZXJhYmxlKSkuc2xpY2Uoc3RhcnRSb3csIGVuZFJvdyk7XG4gICAgb2JqZWN0SW5mby5pbmRleCA9IHN0YXJ0Um93IC0gMTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaXRlcmFibGUsXG4gICAgb2JqZWN0SW5mb1xuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQXN5bmNJdGVyYWJsZShkYXRhKSB7XG4gIHJldHVybiBkYXRhICYmIGRhdGFbU3ltYm9sLmFzeW5jSXRlcmF0b3JdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEFjY2Vzc29yRnJvbUJ1ZmZlcih0eXBlZEFycmF5LCBvcHRpb25zKSB7XG4gIGNvbnN0IHtcbiAgICBzaXplLFxuICAgIHN0cmlkZSxcbiAgICBvZmZzZXQsXG4gICAgc3RhcnRJbmRpY2VzLFxuICAgIG5lc3RlZFxuICB9ID0gb3B0aW9ucztcbiAgY29uc3QgYnl0ZXNQZXJFbGVtZW50ID0gdHlwZWRBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtcbiAgY29uc3QgZWxlbWVudFN0cmlkZSA9IHN0cmlkZSA/IHN0cmlkZSAvIGJ5dGVzUGVyRWxlbWVudCA6IHNpemU7XG4gIGNvbnN0IGVsZW1lbnRPZmZzZXQgPSBvZmZzZXQgPyBvZmZzZXQgLyBieXRlc1BlckVsZW1lbnQgOiAwO1xuICBjb25zdCB2ZXJ0ZXhDb3VudCA9IE1hdGguZmxvb3IoKHR5cGVkQXJyYXkubGVuZ3RoIC0gZWxlbWVudE9mZnNldCkgLyBlbGVtZW50U3RyaWRlKTtcbiAgcmV0dXJuIChfLCB7XG4gICAgaW5kZXgsXG4gICAgdGFyZ2V0XG4gIH0pID0+IHtcbiAgICBpZiAoIXN0YXJ0SW5kaWNlcykge1xuICAgICAgY29uc3Qgc291cmNlSW5kZXggPSBpbmRleCAqIGVsZW1lbnRTdHJpZGUgKyBlbGVtZW50T2Zmc2V0O1xuXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNpemU7IGorKykge1xuICAgICAgICB0YXJnZXRbal0gPSB0eXBlZEFycmF5W3NvdXJjZUluZGV4ICsgal07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfVxuXG4gICAgY29uc3Qgc3RhcnRJbmRleCA9IHN0YXJ0SW5kaWNlc1tpbmRleF07XG4gICAgY29uc3QgZW5kSW5kZXggPSBzdGFydEluZGljZXNbaW5kZXggKyAxXSB8fCB2ZXJ0ZXhDb3VudDtcbiAgICBsZXQgcmVzdWx0O1xuXG4gICAgaWYgKG5lc3RlZCkge1xuICAgICAgcmVzdWx0ID0gbmV3IEFycmF5KGVuZEluZGV4IC0gc3RhcnRJbmRleCk7XG5cbiAgICAgIGZvciAobGV0IGkgPSBzdGFydEluZGV4OyBpIDwgZW5kSW5kZXg7IGkrKykge1xuICAgICAgICBjb25zdCBzb3VyY2VJbmRleCA9IGkgKiBlbGVtZW50U3RyaWRlICsgZWxlbWVudE9mZnNldDtcbiAgICAgICAgdGFyZ2V0ID0gbmV3IEFycmF5KHNpemUpO1xuXG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2l6ZTsgaisrKSB7XG4gICAgICAgICAgdGFyZ2V0W2pdID0gdHlwZWRBcnJheVtzb3VyY2VJbmRleCArIGpdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0W2kgLSBzdGFydEluZGV4XSA9IHRhcmdldDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGVsZW1lbnRTdHJpZGUgPT09IHNpemUpIHtcbiAgICAgIHJlc3VsdCA9IHR5cGVkQXJyYXkuc3ViYXJyYXkoc3RhcnRJbmRleCAqIHNpemUgKyBlbGVtZW50T2Zmc2V0LCBlbmRJbmRleCAqIHNpemUgKyBlbGVtZW50T2Zmc2V0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0ID0gbmV3IHR5cGVkQXJyYXkuY29uc3RydWN0b3IoKGVuZEluZGV4IC0gc3RhcnRJbmRleCkgKiBzaXplKTtcbiAgICAgIGxldCB0YXJnZXRJbmRleCA9IDA7XG5cbiAgICAgIGZvciAobGV0IGkgPSBzdGFydEluZGV4OyBpIDwgZW5kSW5kZXg7IGkrKykge1xuICAgICAgICBjb25zdCBzb3VyY2VJbmRleCA9IGkgKiBlbGVtZW50U3RyaWRlICsgZWxlbWVudE9mZnNldDtcblxuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNpemU7IGorKykge1xuICAgICAgICAgIHJlc3VsdFt0YXJnZXRJbmRleCsrXSA9IHR5cGVkQXJyYXlbc291cmNlSW5kZXggKyBqXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pdGVyYWJsZS11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiRU1QVFlfQVJSQVkiLCJwbGFjZWhvbGRlckFycmF5IiwiY3JlYXRlSXRlcmFibGUiLCJkYXRhIiwic3RhcnRSb3ciLCJlbmRSb3ciLCJJbmZpbml0eSIsIml0ZXJhYmxlIiwib2JqZWN0SW5mbyIsImluZGV4IiwidGFyZ2V0IiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJsZW5ndGgiLCJOdW1iZXIiLCJpc0Zpbml0ZSIsIkFycmF5IiwiaXNBcnJheSIsImZyb20iLCJzbGljZSIsImlzQXN5bmNJdGVyYWJsZSIsImFzeW5jSXRlcmF0b3IiLCJnZXRBY2Nlc3NvckZyb21CdWZmZXIiLCJ0eXBlZEFycmF5Iiwib3B0aW9ucyIsInNpemUiLCJzdHJpZGUiLCJvZmZzZXQiLCJzdGFydEluZGljZXMiLCJuZXN0ZWQiLCJieXRlc1BlckVsZW1lbnQiLCJCWVRFU19QRVJfRUxFTUVOVCIsImVsZW1lbnRTdHJpZGUiLCJlbGVtZW50T2Zmc2V0IiwidmVydGV4Q291bnQiLCJNYXRoIiwiZmxvb3IiLCJfIiwic291cmNlSW5kZXgiLCJqIiwic3RhcnRJbmRleCIsImVuZEluZGV4IiwicmVzdWx0IiwiaSIsInN1YmFycmF5IiwiY29uc3RydWN0b3IiLCJ0YXJnZXRJbmRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/json-loader.js":
/*!******************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/json-loader.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction isJSON(text) {\n    const firstChar = text[0];\n    const lastChar = text[text.length - 1];\n    return firstChar === \"{\" && lastChar === \"}\" || firstChar === \"[\" && lastChar === \"]\";\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    id: \"JSON\",\n    name: \"JSON\",\n    module: \"\",\n    version: \"\",\n    options: {},\n    extensions: [\n        \"json\",\n        \"geojson\"\n    ],\n    mimeTypes: [\n        \"application/json\",\n        \"application/geo+json\"\n    ],\n    testText: isJSON,\n    parseTextSync: JSON.parse\n}); //# sourceMappingURL=json-loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9qc29uLWxvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsU0FBU0EsT0FBT0MsSUFBSTtJQUNsQixNQUFNQyxZQUFZRCxJQUFJLENBQUMsRUFBRTtJQUN6QixNQUFNRSxXQUFXRixJQUFJLENBQUNBLEtBQUtHLE1BQU0sR0FBRyxFQUFFO0lBQ3RDLE9BQU9GLGNBQWMsT0FBT0MsYUFBYSxPQUFPRCxjQUFjLE9BQU9DLGFBQWE7QUFDcEY7QUFFQSxpRUFBZTtJQUNiRSxJQUFJO0lBQ0pDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxTQUFTO0lBQ1RDLFNBQVMsQ0FBQztJQUNWQyxZQUFZO1FBQUM7UUFBUTtLQUFVO0lBQy9CQyxXQUFXO1FBQUM7UUFBb0I7S0FBdUI7SUFDdkRDLFVBQVVaO0lBQ1ZhLGVBQWVDLEtBQUtDLEtBQUs7QUFDM0IsQ0FBQyxFQUFDLENBQ0YsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9qc29uLWxvYWRlci5qcz9hMjJjIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzSlNPTih0ZXh0KSB7XG4gIGNvbnN0IGZpcnN0Q2hhciA9IHRleHRbMF07XG4gIGNvbnN0IGxhc3RDaGFyID0gdGV4dFt0ZXh0Lmxlbmd0aCAtIDFdO1xuICByZXR1cm4gZmlyc3RDaGFyID09PSAneycgJiYgbGFzdENoYXIgPT09ICd9JyB8fCBmaXJzdENoYXIgPT09ICdbJyAmJiBsYXN0Q2hhciA9PT0gJ10nO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGlkOiAnSlNPTicsXG4gIG5hbWU6ICdKU09OJyxcbiAgbW9kdWxlOiAnJyxcbiAgdmVyc2lvbjogJycsXG4gIG9wdGlvbnM6IHt9LFxuICBleHRlbnNpb25zOiBbJ2pzb24nLCAnZ2VvanNvbiddLFxuICBtaW1lVHlwZXM6IFsnYXBwbGljYXRpb24vanNvbicsICdhcHBsaWNhdGlvbi9nZW8ranNvbiddLFxuICB0ZXN0VGV4dDogaXNKU09OLFxuICBwYXJzZVRleHRTeW5jOiBKU09OLnBhcnNlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9anNvbi1sb2FkZXIuanMubWFwIl0sIm5hbWVzIjpbImlzSlNPTiIsInRleHQiLCJmaXJzdENoYXIiLCJsYXN0Q2hhciIsImxlbmd0aCIsImlkIiwibmFtZSIsIm1vZHVsZSIsInZlcnNpb24iLCJvcHRpb25zIiwiZXh0ZW5zaW9ucyIsIm1pbWVUeXBlcyIsInRlc3RUZXh0IiwicGFyc2VUZXh0U3luYyIsIkpTT04iLCJwYXJzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/json-loader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js":
/*!**********************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/log.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _probe_gl_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @probe.gl/log */ \"(ssr)/./node_modules/@probe.gl/log/dist/esm/log.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new _probe_gl_log__WEBPACK_IMPORTED_MODULE_0__.Log({\n    id: \"deck\"\n})); //# sourceMappingURL=log.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFDcEMsaUVBQWUsSUFBSUEsOENBQUdBLENBQUM7SUFDckJDLElBQUk7QUFDTixFQUFFLEVBQUMsQ0FDSCwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3V0aWxzL2xvZy5qcz9jYjI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExvZyB9IGZyb20gJ0Bwcm9iZS5nbC9sb2cnO1xuZXhwb3J0IGRlZmF1bHQgbmV3IExvZyh7XG4gIGlkOiAnZGVjaydcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6WyJMb2ciLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/math-utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/math-utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMat4: () => (/* binding */ createMat4),\n/* harmony export */   fp64LowPart: () => (/* binding */ fp64LowPart),\n/* harmony export */   getCameraPosition: () => (/* binding */ getCameraPosition),\n/* harmony export */   getFrustumPlanes: () => (/* binding */ getFrustumPlanes),\n/* harmony export */   mergeBounds: () => (/* binding */ mergeBounds),\n/* harmony export */   mod: () => (/* binding */ mod),\n/* harmony export */   toDoublePrecisionArray: () => (/* binding */ toDoublePrecisionArray)\n/* harmony export */ });\n/* harmony import */ var _typed_array_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typed-array-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/vector3.js\");\n\n\nfunction createMat4() {\n    return [\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n    ];\n}\nfunction mod(value, divisor) {\n    const modulus = value % divisor;\n    return modulus < 0 ? divisor + modulus : modulus;\n}\nfunction getCameraPosition(viewMatrixInverse) {\n    return [\n        viewMatrixInverse[12],\n        viewMatrixInverse[13],\n        viewMatrixInverse[14]\n    ];\n}\nfunction getFrustumPlanes(viewProjectionMatrix) {\n    return {\n        left: getFrustumPlane(viewProjectionMatrix[3] + viewProjectionMatrix[0], viewProjectionMatrix[7] + viewProjectionMatrix[4], viewProjectionMatrix[11] + viewProjectionMatrix[8], viewProjectionMatrix[15] + viewProjectionMatrix[12]),\n        right: getFrustumPlane(viewProjectionMatrix[3] - viewProjectionMatrix[0], viewProjectionMatrix[7] - viewProjectionMatrix[4], viewProjectionMatrix[11] - viewProjectionMatrix[8], viewProjectionMatrix[15] - viewProjectionMatrix[12]),\n        bottom: getFrustumPlane(viewProjectionMatrix[3] + viewProjectionMatrix[1], viewProjectionMatrix[7] + viewProjectionMatrix[5], viewProjectionMatrix[11] + viewProjectionMatrix[9], viewProjectionMatrix[15] + viewProjectionMatrix[13]),\n        top: getFrustumPlane(viewProjectionMatrix[3] - viewProjectionMatrix[1], viewProjectionMatrix[7] - viewProjectionMatrix[5], viewProjectionMatrix[11] - viewProjectionMatrix[9], viewProjectionMatrix[15] - viewProjectionMatrix[13]),\n        near: getFrustumPlane(viewProjectionMatrix[3] + viewProjectionMatrix[2], viewProjectionMatrix[7] + viewProjectionMatrix[6], viewProjectionMatrix[11] + viewProjectionMatrix[10], viewProjectionMatrix[15] + viewProjectionMatrix[14]),\n        far: getFrustumPlane(viewProjectionMatrix[3] - viewProjectionMatrix[2], viewProjectionMatrix[7] - viewProjectionMatrix[6], viewProjectionMatrix[11] - viewProjectionMatrix[10], viewProjectionMatrix[15] - viewProjectionMatrix[14])\n    };\n}\nconst scratchVector = new _math_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nfunction getFrustumPlane(a, b, c, d) {\n    scratchVector.set(a, b, c);\n    const L = scratchVector.len();\n    return {\n        distance: d / L,\n        normal: new _math_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"](-a / L, -b / L, -c / L)\n    };\n}\nfunction fp64LowPart(x) {\n    return x - Math.fround(x);\n}\nlet scratchArray;\nfunction toDoublePrecisionArray(typedArray, options) {\n    const { size = 1, startIndex = 0 } = options;\n    const endIndex = options.endIndex !== undefined ? options.endIndex : typedArray.length;\n    const count = (endIndex - startIndex) / size;\n    scratchArray = _typed_array_manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"].allocate(scratchArray, count, {\n        type: Float32Array,\n        size: size * 2\n    });\n    let sourceIndex = startIndex;\n    let targetIndex = 0;\n    while(sourceIndex < endIndex){\n        for(let j = 0; j < size; j++){\n            const value = typedArray[sourceIndex++];\n            scratchArray[targetIndex + j] = value;\n            scratchArray[targetIndex + j + size] = fp64LowPart(value);\n        }\n        targetIndex += size * 2;\n    }\n    return scratchArray.subarray(0, count * size * 2);\n}\nfunction mergeBounds(boundsList) {\n    let mergedBounds = null;\n    let isMerged = false;\n    for (const bounds of boundsList){\n        if (!bounds) continue;\n        if (!mergedBounds) {\n            mergedBounds = bounds;\n        } else {\n            if (!isMerged) {\n                mergedBounds = [\n                    [\n                        mergedBounds[0][0],\n                        mergedBounds[0][1]\n                    ],\n                    [\n                        mergedBounds[1][0],\n                        mergedBounds[1][1]\n                    ]\n                ];\n                isMerged = true;\n            }\n            mergedBounds[0][0] = Math.min(mergedBounds[0][0], bounds[0][0]);\n            mergedBounds[0][1] = Math.min(mergedBounds[0][1], bounds[0][1]);\n            mergedBounds[1][0] = Math.max(mergedBounds[1][0], bounds[1][0]);\n            mergedBounds[1][1] = Math.max(mergedBounds[1][1], bounds[1][1]);\n        }\n    }\n    return mergedBounds;\n} //# sourceMappingURL=math-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/math-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/memoize.js":
/*!**************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/memoize.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ memoize)\n/* harmony export */ });\nfunction isEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (Array.isArray(a)) {\n        const len = a.length;\n        if (!b || b.length !== len) {\n            return false;\n        }\n        for(let i = 0; i < len; i++){\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction memoize(compute) {\n    let cachedArgs = {};\n    let cachedResult;\n    return (args)=>{\n        for(const key in args){\n            if (!isEqual(args[key], cachedArgs[key])) {\n                cachedResult = compute(args);\n                cachedArgs = args;\n                break;\n            }\n        }\n        return cachedResult;\n    };\n} //# sourceMappingURL=memoize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9tZW1vaXplLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxTQUFTQSxRQUFRQyxDQUFDLEVBQUVDLENBQUM7SUFDbkIsSUFBSUQsTUFBTUMsR0FBRztRQUNYLE9BQU87SUFDVDtJQUVBLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ0gsSUFBSTtRQUNwQixNQUFNSSxNQUFNSixFQUFFSyxNQUFNO1FBRXBCLElBQUksQ0FBQ0osS0FBS0EsRUFBRUksTUFBTSxLQUFLRCxLQUFLO1lBQzFCLE9BQU87UUFDVDtRQUVBLElBQUssSUFBSUUsSUFBSSxHQUFHQSxJQUFJRixLQUFLRSxJQUFLO1lBQzVCLElBQUlOLENBQUMsQ0FBQ00sRUFBRSxLQUFLTCxDQUFDLENBQUNLLEVBQUUsRUFBRTtnQkFDakIsT0FBTztZQUNUO1FBQ0Y7UUFFQSxPQUFPO0lBQ1Q7SUFFQSxPQUFPO0FBQ1Q7QUFFZSxTQUFTQyxRQUFRQyxPQUFPO0lBQ3JDLElBQUlDLGFBQWEsQ0FBQztJQUNsQixJQUFJQztJQUNKLE9BQU9DLENBQUFBO1FBQ0wsSUFBSyxNQUFNQyxPQUFPRCxLQUFNO1lBQ3RCLElBQUksQ0FBQ1osUUFBUVksSUFBSSxDQUFDQyxJQUFJLEVBQUVILFVBQVUsQ0FBQ0csSUFBSSxHQUFHO2dCQUN4Q0YsZUFBZUYsUUFBUUc7Z0JBQ3ZCRixhQUFhRTtnQkFDYjtZQUNGO1FBQ0Y7UUFFQSxPQUFPRDtJQUNUO0FBQ0YsRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3V0aWxzL21lbW9pemUuanM/Njk2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc0VxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgY29uc3QgbGVuID0gYS5sZW5ndGg7XG5cbiAgICBpZiAoIWIgfHwgYi5sZW5ndGggIT09IGxlbikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVtb2l6ZShjb21wdXRlKSB7XG4gIGxldCBjYWNoZWRBcmdzID0ge307XG4gIGxldCBjYWNoZWRSZXN1bHQ7XG4gIHJldHVybiBhcmdzID0+IHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBhcmdzKSB7XG4gICAgICBpZiAoIWlzRXF1YWwoYXJnc1trZXldLCBjYWNoZWRBcmdzW2tleV0pKSB7XG4gICAgICAgIGNhY2hlZFJlc3VsdCA9IGNvbXB1dGUoYXJncyk7XG4gICAgICAgIGNhY2hlZEFyZ3MgPSBhcmdzO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY2FjaGVkUmVzdWx0O1xuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVtb2l6ZS5qcy5tYXAiXSwibmFtZXMiOlsiaXNFcXVhbCIsImEiLCJiIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuIiwibGVuZ3RoIiwiaSIsIm1lbW9pemUiLCJjb21wdXRlIiwiY2FjaGVkQXJncyIsImNhY2hlZFJlc3VsdCIsImFyZ3MiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/memoize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/positions.js":
/*!****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/positions.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPosition: () => (/* binding */ getPosition),\n/* harmony export */   parsePosition: () => (/* binding */ parsePosition)\n/* harmony export */ });\nconst PERCENT_OR_PIXELS_REGEX = /([0-9]+\\.?[0-9]*)(%|px)/;\nfunction parsePosition(value) {\n    switch(typeof value){\n        case \"number\":\n            return {\n                position: value,\n                relative: false\n            };\n        case \"string\":\n            const match = PERCENT_OR_PIXELS_REGEX.exec(value);\n            if (match && match.length >= 3) {\n                const relative = match[2] === \"%\";\n                const position = parseFloat(match[1]);\n                return {\n                    position: relative ? position / 100 : position,\n                    relative\n                };\n            }\n        default:\n            throw new Error(\"Could not parse position string \".concat(value));\n    }\n}\nfunction getPosition(position, extent) {\n    return position.relative ? Math.round(position.position * extent) : position.position;\n} //# sourceMappingURL=positions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9wb3NpdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSwwQkFBMEI7QUFDekIsU0FBU0MsY0FBY0MsS0FBSztJQUNqQyxPQUFRLE9BQU9BO1FBQ2IsS0FBSztZQUNILE9BQU87Z0JBQ0xDLFVBQVVEO2dCQUNWRSxVQUFVO1lBQ1o7UUFFRixLQUFLO1lBQ0gsTUFBTUMsUUFBUUwsd0JBQXdCTSxJQUFJLENBQUNKO1lBRTNDLElBQUlHLFNBQVNBLE1BQU1FLE1BQU0sSUFBSSxHQUFHO2dCQUM5QixNQUFNSCxXQUFXQyxLQUFLLENBQUMsRUFBRSxLQUFLO2dCQUM5QixNQUFNRixXQUFXSyxXQUFXSCxLQUFLLENBQUMsRUFBRTtnQkFDcEMsT0FBTztvQkFDTEYsVUFBVUMsV0FBV0QsV0FBVyxNQUFNQTtvQkFDdENDO2dCQUNGO1lBQ0Y7UUFFRjtZQUNFLE1BQU0sSUFBSUssTUFBTSxtQ0FBbUNDLE1BQU0sQ0FBQ1I7SUFDOUQ7QUFDRjtBQUNPLFNBQVNTLFlBQVlSLFFBQVEsRUFBRVMsTUFBTTtJQUMxQyxPQUFPVCxTQUFTQyxRQUFRLEdBQUdTLEtBQUtDLEtBQUssQ0FBQ1gsU0FBU0EsUUFBUSxHQUFHUyxVQUFVVCxTQUFTQSxRQUFRO0FBQ3ZGLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9wb3NpdGlvbnMuanM/MmZjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQRVJDRU5UX09SX1BJWEVMU19SRUdFWCA9IC8oWzAtOV0rXFwuP1swLTldKikoJXxweCkvO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUG9zaXRpb24odmFsdWUpIHtcbiAgc3dpdGNoICh0eXBlb2YgdmFsdWUpIHtcbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcG9zaXRpb246IHZhbHVlLFxuICAgICAgICByZWxhdGl2ZTogZmFsc2VcbiAgICAgIH07XG5cbiAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgY29uc3QgbWF0Y2ggPSBQRVJDRU5UX09SX1BJWEVMU19SRUdFWC5leGVjKHZhbHVlKTtcblxuICAgICAgaWYgKG1hdGNoICYmIG1hdGNoLmxlbmd0aCA+PSAzKSB7XG4gICAgICAgIGNvbnN0IHJlbGF0aXZlID0gbWF0Y2hbMl0gPT09ICclJztcbiAgICAgICAgY29uc3QgcG9zaXRpb24gPSBwYXJzZUZsb2F0KG1hdGNoWzFdKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmUgPyBwb3NpdGlvbiAvIDEwMCA6IHBvc2l0aW9uLFxuICAgICAgICAgIHJlbGF0aXZlXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IHBhcnNlIHBvc2l0aW9uIHN0cmluZyBcIi5jb25jYXQodmFsdWUpKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFBvc2l0aW9uKHBvc2l0aW9uLCBleHRlbnQpIHtcbiAgcmV0dXJuIHBvc2l0aW9uLnJlbGF0aXZlID8gTWF0aC5yb3VuZChwb3NpdGlvbi5wb3NpdGlvbiAqIGV4dGVudCkgOiBwb3NpdGlvbi5wb3NpdGlvbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvc2l0aW9ucy5qcy5tYXAiXSwibmFtZXMiOlsiUEVSQ0VOVF9PUl9QSVhFTFNfUkVHRVgiLCJwYXJzZVBvc2l0aW9uIiwidmFsdWUiLCJwb3NpdGlvbiIsInJlbGF0aXZlIiwibWF0Y2giLCJleGVjIiwibGVuZ3RoIiwicGFyc2VGbG9hdCIsIkVycm9yIiwiY29uY2F0IiwiZ2V0UG9zaXRpb24iLCJleHRlbnQiLCJNYXRoIiwicm91bmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/positions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/range.js":
/*!************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/range.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EMPTY: () => (/* binding */ EMPTY),\n/* harmony export */   FULL: () => (/* binding */ FULL),\n/* harmony export */   add: () => (/* binding */ add)\n/* harmony export */ });\nconst EMPTY = [];\nconst FULL = [\n    [\n        0,\n        Infinity\n    ]\n];\nfunction add(rangeList, range) {\n    if (rangeList === FULL) {\n        return rangeList;\n    }\n    if (range[0] < 0) {\n        range[0] = 0;\n    }\n    if (range[0] >= range[1]) {\n        return rangeList;\n    }\n    const newRangeList = [];\n    const len = rangeList.length;\n    let insertPosition = 0;\n    for(let i = 0; i < len; i++){\n        const range0 = rangeList[i];\n        if (range0[1] < range[0]) {\n            newRangeList.push(range0);\n            insertPosition = i + 1;\n        } else if (range0[0] > range[1]) {\n            newRangeList.push(range0);\n        } else {\n            range = [\n                Math.min(range0[0], range[0]),\n                Math.max(range0[1], range[1])\n            ];\n        }\n    }\n    newRangeList.splice(insertPosition, 0, range);\n    return newRangeList;\n} //# sourceMappingURL=range.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9yYW5nZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSxRQUFRLEVBQUUsQ0FBQztBQUNqQixNQUFNQyxPQUFPO0lBQUM7UUFBQztRQUFHQztLQUFTO0NBQUMsQ0FBQztBQUM3QixTQUFTQyxJQUFJQyxTQUFTLEVBQUVDLEtBQUs7SUFDbEMsSUFBSUQsY0FBY0gsTUFBTTtRQUN0QixPQUFPRztJQUNUO0lBRUEsSUFBSUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxHQUFHO1FBQ2hCQSxLQUFLLENBQUMsRUFBRSxHQUFHO0lBQ2I7SUFFQSxJQUFJQSxLQUFLLENBQUMsRUFBRSxJQUFJQSxLQUFLLENBQUMsRUFBRSxFQUFFO1FBQ3hCLE9BQU9EO0lBQ1Q7SUFFQSxNQUFNRSxlQUFlLEVBQUU7SUFDdkIsTUFBTUMsTUFBTUgsVUFBVUksTUFBTTtJQUM1QixJQUFJQyxpQkFBaUI7SUFFckIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILEtBQUtHLElBQUs7UUFDNUIsTUFBTUMsU0FBU1AsU0FBUyxDQUFDTSxFQUFFO1FBRTNCLElBQUlDLE1BQU0sQ0FBQyxFQUFFLEdBQUdOLEtBQUssQ0FBQyxFQUFFLEVBQUU7WUFDeEJDLGFBQWFNLElBQUksQ0FBQ0Q7WUFDbEJGLGlCQUFpQkMsSUFBSTtRQUN2QixPQUFPLElBQUlDLE1BQU0sQ0FBQyxFQUFFLEdBQUdOLEtBQUssQ0FBQyxFQUFFLEVBQUU7WUFDL0JDLGFBQWFNLElBQUksQ0FBQ0Q7UUFDcEIsT0FBTztZQUNMTixRQUFRO2dCQUFDUSxLQUFLQyxHQUFHLENBQUNILE1BQU0sQ0FBQyxFQUFFLEVBQUVOLEtBQUssQ0FBQyxFQUFFO2dCQUFHUSxLQUFLRSxHQUFHLENBQUNKLE1BQU0sQ0FBQyxFQUFFLEVBQUVOLEtBQUssQ0FBQyxFQUFFO2FBQUU7UUFDeEU7SUFDRjtJQUVBQyxhQUFhVSxNQUFNLENBQUNQLGdCQUFnQixHQUFHSjtJQUN2QyxPQUFPQztBQUNULEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9yYW5nZS5qcz85NmE5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBFTVBUWSA9IFtdO1xuZXhwb3J0IGNvbnN0IEZVTEwgPSBbWzAsIEluZmluaXR5XV07XG5leHBvcnQgZnVuY3Rpb24gYWRkKHJhbmdlTGlzdCwgcmFuZ2UpIHtcbiAgaWYgKHJhbmdlTGlzdCA9PT0gRlVMTCkge1xuICAgIHJldHVybiByYW5nZUxpc3Q7XG4gIH1cblxuICBpZiAocmFuZ2VbMF0gPCAwKSB7XG4gICAgcmFuZ2VbMF0gPSAwO1xuICB9XG5cbiAgaWYgKHJhbmdlWzBdID49IHJhbmdlWzFdKSB7XG4gICAgcmV0dXJuIHJhbmdlTGlzdDtcbiAgfVxuXG4gIGNvbnN0IG5ld1JhbmdlTGlzdCA9IFtdO1xuICBjb25zdCBsZW4gPSByYW5nZUxpc3QubGVuZ3RoO1xuICBsZXQgaW5zZXJ0UG9zaXRpb24gPSAwO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBjb25zdCByYW5nZTAgPSByYW5nZUxpc3RbaV07XG5cbiAgICBpZiAocmFuZ2UwWzFdIDwgcmFuZ2VbMF0pIHtcbiAgICAgIG5ld1JhbmdlTGlzdC5wdXNoKHJhbmdlMCk7XG4gICAgICBpbnNlcnRQb3NpdGlvbiA9IGkgKyAxO1xuICAgIH0gZWxzZSBpZiAocmFuZ2UwWzBdID4gcmFuZ2VbMV0pIHtcbiAgICAgIG5ld1JhbmdlTGlzdC5wdXNoKHJhbmdlMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJhbmdlID0gW01hdGgubWluKHJhbmdlMFswXSwgcmFuZ2VbMF0pLCBNYXRoLm1heChyYW5nZTBbMV0sIHJhbmdlWzFdKV07XG4gICAgfVxuICB9XG5cbiAgbmV3UmFuZ2VMaXN0LnNwbGljZShpbnNlcnRQb3NpdGlvbiwgMCwgcmFuZ2UpO1xuICByZXR1cm4gbmV3UmFuZ2VMaXN0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmFuZ2UuanMubWFwIl0sIm5hbWVzIjpbIkVNUFRZIiwiRlVMTCIsIkluZmluaXR5IiwiYWRkIiwicmFuZ2VMaXN0IiwicmFuZ2UiLCJuZXdSYW5nZUxpc3QiLCJsZW4iLCJsZW5ndGgiLCJpbnNlcnRQb3NpdGlvbiIsImkiLCJyYW5nZTAiLCJwdXNoIiwiTWF0aCIsIm1pbiIsIm1heCIsInNwbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/range.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/shader.js":
/*!*************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/shader.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeShaders: () => (/* binding */ mergeShaders)\n/* harmony export */ });\nfunction mergeShaders(target, source) {\n    if (!source) {\n        return target;\n    }\n    const result = {\n        ...target,\n        ...source\n    };\n    if (\"defines\" in source) {\n        result.defines = {\n            ...target.defines,\n            ...source.defines\n        };\n    }\n    if (\"modules\" in source) {\n        result.modules = (target.modules || []).concat(source.modules);\n        if (source.modules.some((module)=>module.name === \"project64\")) {\n            const index = result.modules.findIndex((module)=>module.name === \"project32\");\n            if (index >= 0) {\n                result.modules.splice(index, 1);\n            }\n        }\n    }\n    if (\"inject\" in source) {\n        if (!target.inject) {\n            result.inject = source.inject;\n        } else {\n            const mergedInjection = {\n                ...target.inject\n            };\n            for(const key in source.inject){\n                mergedInjection[key] = (mergedInjection[key] || \"\") + source.inject[key];\n            }\n            result.inject = mergedInjection;\n        }\n    }\n    return result;\n} //# sourceMappingURL=shader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy9zaGFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGFBQWFDLE1BQU0sRUFBRUMsTUFBTTtJQUN6QyxJQUFJLENBQUNBLFFBQVE7UUFDWCxPQUFPRDtJQUNUO0lBRUEsTUFBTUUsU0FBUztRQUFFLEdBQUdGLE1BQU07UUFDeEIsR0FBR0MsTUFBTTtJQUNYO0lBRUEsSUFBSSxhQUFhQSxRQUFRO1FBQ3ZCQyxPQUFPQyxPQUFPLEdBQUc7WUFBRSxHQUFHSCxPQUFPRyxPQUFPO1lBQ2xDLEdBQUdGLE9BQU9FLE9BQU87UUFDbkI7SUFDRjtJQUVBLElBQUksYUFBYUYsUUFBUTtRQUN2QkMsT0FBT0UsT0FBTyxHQUFHLENBQUNKLE9BQU9JLE9BQU8sSUFBSSxFQUFFLEVBQUVDLE1BQU0sQ0FBQ0osT0FBT0csT0FBTztRQUU3RCxJQUFJSCxPQUFPRyxPQUFPLENBQUNFLElBQUksQ0FBQ0MsQ0FBQUEsU0FBVUEsT0FBT0MsSUFBSSxLQUFLLGNBQWM7WUFDOUQsTUFBTUMsUUFBUVAsT0FBT0UsT0FBTyxDQUFDTSxTQUFTLENBQUNILENBQUFBLFNBQVVBLE9BQU9DLElBQUksS0FBSztZQUVqRSxJQUFJQyxTQUFTLEdBQUc7Z0JBQ2RQLE9BQU9FLE9BQU8sQ0FBQ08sTUFBTSxDQUFDRixPQUFPO1lBQy9CO1FBQ0Y7SUFDRjtJQUVBLElBQUksWUFBWVIsUUFBUTtRQUN0QixJQUFJLENBQUNELE9BQU9ZLE1BQU0sRUFBRTtZQUNsQlYsT0FBT1UsTUFBTSxHQUFHWCxPQUFPVyxNQUFNO1FBQy9CLE9BQU87WUFDTCxNQUFNQyxrQkFBa0I7Z0JBQUUsR0FBR2IsT0FBT1ksTUFBTTtZQUMxQztZQUVBLElBQUssTUFBTUUsT0FBT2IsT0FBT1csTUFBTSxDQUFFO2dCQUMvQkMsZUFBZSxDQUFDQyxJQUFJLEdBQUcsQ0FBQ0QsZUFBZSxDQUFDQyxJQUFJLElBQUksRUFBQyxJQUFLYixPQUFPVyxNQUFNLENBQUNFLElBQUk7WUFDMUU7WUFFQVosT0FBT1UsTUFBTSxHQUFHQztRQUNsQjtJQUNGO0lBRUEsT0FBT1g7QUFDVCxFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vdXRpbHMvc2hhZGVyLmpzPzRiYjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIG1lcmdlU2hhZGVycyh0YXJnZXQsIHNvdXJjZSkge1xuICBpZiAoIXNvdXJjZSkge1xuICAgIHJldHVybiB0YXJnZXQ7XG4gIH1cblxuICBjb25zdCByZXN1bHQgPSB7IC4uLnRhcmdldCxcbiAgICAuLi5zb3VyY2VcbiAgfTtcblxuICBpZiAoJ2RlZmluZXMnIGluIHNvdXJjZSkge1xuICAgIHJlc3VsdC5kZWZpbmVzID0geyAuLi50YXJnZXQuZGVmaW5lcyxcbiAgICAgIC4uLnNvdXJjZS5kZWZpbmVzXG4gICAgfTtcbiAgfVxuXG4gIGlmICgnbW9kdWxlcycgaW4gc291cmNlKSB7XG4gICAgcmVzdWx0Lm1vZHVsZXMgPSAodGFyZ2V0Lm1vZHVsZXMgfHwgW10pLmNvbmNhdChzb3VyY2UubW9kdWxlcyk7XG5cbiAgICBpZiAoc291cmNlLm1vZHVsZXMuc29tZShtb2R1bGUgPT4gbW9kdWxlLm5hbWUgPT09ICdwcm9qZWN0NjQnKSkge1xuICAgICAgY29uc3QgaW5kZXggPSByZXN1bHQubW9kdWxlcy5maW5kSW5kZXgobW9kdWxlID0+IG1vZHVsZS5uYW1lID09PSAncHJvamVjdDMyJyk7XG5cbiAgICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICAgIHJlc3VsdC5tb2R1bGVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKCdpbmplY3QnIGluIHNvdXJjZSkge1xuICAgIGlmICghdGFyZ2V0LmluamVjdCkge1xuICAgICAgcmVzdWx0LmluamVjdCA9IHNvdXJjZS5pbmplY3Q7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IG1lcmdlZEluamVjdGlvbiA9IHsgLi4udGFyZ2V0LmluamVjdFxuICAgICAgfTtcblxuICAgICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlLmluamVjdCkge1xuICAgICAgICBtZXJnZWRJbmplY3Rpb25ba2V5XSA9IChtZXJnZWRJbmplY3Rpb25ba2V5XSB8fCAnJykgKyBzb3VyY2UuaW5qZWN0W2tleV07XG4gICAgICB9XG5cbiAgICAgIHJlc3VsdC5pbmplY3QgPSBtZXJnZWRJbmplY3Rpb247XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYWRlci5qcy5tYXAiXSwibmFtZXMiOlsibWVyZ2VTaGFkZXJzIiwidGFyZ2V0Iiwic291cmNlIiwicmVzdWx0IiwiZGVmaW5lcyIsIm1vZHVsZXMiLCJjb25jYXQiLCJzb21lIiwibW9kdWxlIiwibmFtZSIsImluZGV4IiwiZmluZEluZGV4Iiwic3BsaWNlIiwiaW5qZWN0IiwibWVyZ2VkSW5qZWN0aW9uIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/shader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tesselator)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _iterable_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./iterable-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _typed_array_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typed-array-manager */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js\");\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js\");\n/* harmony import */ var _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/webgl */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n\n\n\n\n\nclass Tesselator {\n    constructor(opts){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"opts\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"typedArrayManager\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"indexStarts\", [\n            0\n        ]);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"vertexStarts\", [\n            0\n        ]);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"vertexCount\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"instanceCount\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"attributes\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_attributeDefs\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"data\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"getGeometry\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"geometryBuffer\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"buffers\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"positionSize\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"normalize\", void 0);\n        const { attributes = {} } = opts;\n        this.typedArrayManager = _typed_array_manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n        this.attributes = {};\n        this._attributeDefs = attributes;\n        this.opts = opts;\n        this.updateGeometry(opts);\n    }\n    updateGeometry(opts) {\n        Object.assign(this.opts, opts);\n        const { data, buffers = {}, getGeometry, geometryBuffer, positionFormat, dataChanged, normalize = true } = this.opts;\n        this.data = data;\n        this.getGeometry = getGeometry;\n        this.positionSize = geometryBuffer && geometryBuffer.size || (positionFormat === \"XY\" ? 2 : 3);\n        this.buffers = buffers;\n        this.normalize = normalize;\n        if (geometryBuffer) {\n            (0,_assert__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(data.startIndices);\n            this.getGeometry = this.getGeometryFromBuffer(geometryBuffer);\n            if (!normalize) {\n                buffers.positions = geometryBuffer;\n            }\n        }\n        this.geometryBuffer = buffers.positions;\n        if (Array.isArray(dataChanged)) {\n            for (const dataRange of dataChanged){\n                this._rebuildGeometry(dataRange);\n            }\n        } else {\n            this._rebuildGeometry();\n        }\n    }\n    updatePartialGeometry({ startRow, endRow }) {\n        this._rebuildGeometry({\n            startRow,\n            endRow\n        });\n    }\n    getGeometryFromBuffer(geometryBuffer) {\n        const value = geometryBuffer.value || geometryBuffer;\n        if (!ArrayBuffer.isView(value)) {\n            return null;\n        }\n        return (0,_iterable_utils__WEBPACK_IMPORTED_MODULE_3__.getAccessorFromBuffer)(value, {\n            size: this.positionSize,\n            offset: geometryBuffer.offset,\n            stride: geometryBuffer.stride,\n            startIndices: this.data.startIndices\n        });\n    }\n    _allocate(instanceCount, copy) {\n        const { attributes, buffers, _attributeDefs, typedArrayManager } = this;\n        for(const name in _attributeDefs){\n            if (name in buffers) {\n                typedArrayManager.release(attributes[name]);\n                attributes[name] = null;\n            } else {\n                const def = _attributeDefs[name];\n                def.copy = copy;\n                attributes[name] = typedArrayManager.allocate(attributes[name], instanceCount, def);\n            }\n        }\n    }\n    _forEachGeometry(visitor, startRow, endRow) {\n        const { data, getGeometry } = this;\n        const { iterable, objectInfo } = (0,_iterable_utils__WEBPACK_IMPORTED_MODULE_3__.createIterable)(data, startRow, endRow);\n        for (const object of iterable){\n            objectInfo.index++;\n            const geometry = getGeometry ? getGeometry(object, objectInfo) : null;\n            visitor(geometry, objectInfo.index);\n        }\n    }\n    _rebuildGeometry(dataRange) {\n        if (!this.data) {\n            return;\n        }\n        let { indexStarts, vertexStarts, instanceCount } = this;\n        const { data, geometryBuffer } = this;\n        const { startRow = 0, endRow = Infinity } = dataRange || {};\n        const normalizedData = {};\n        if (!dataRange) {\n            indexStarts = [\n                0\n            ];\n            vertexStarts = [\n                0\n            ];\n        }\n        if (this.normalize || !geometryBuffer) {\n            this._forEachGeometry((geometry, dataIndex)=>{\n                const normalizedGeometry = geometry && this.normalizeGeometry(geometry);\n                normalizedData[dataIndex] = normalizedGeometry;\n                vertexStarts[dataIndex + 1] = vertexStarts[dataIndex] + (normalizedGeometry ? this.getGeometrySize(normalizedGeometry) : 0);\n            }, startRow, endRow);\n            instanceCount = vertexStarts[vertexStarts.length - 1];\n        } else {\n            vertexStarts = data.startIndices;\n            instanceCount = vertexStarts[data.length] || 0;\n            if (ArrayBuffer.isView(geometryBuffer)) {\n                instanceCount = instanceCount || geometryBuffer.length / this.positionSize;\n            } else if (geometryBuffer instanceof _luma_gl_webgl__WEBPACK_IMPORTED_MODULE_4__[\"default\"]) {\n                const byteStride = geometryBuffer.accessor.stride || this.positionSize * 4;\n                instanceCount = instanceCount || geometryBuffer.byteLength / byteStride;\n            } else if (geometryBuffer.buffer) {\n                const byteStride = geometryBuffer.stride || this.positionSize * 4;\n                instanceCount = instanceCount || geometryBuffer.buffer.byteLength / byteStride;\n            } else if (geometryBuffer.value) {\n                const bufferValue = geometryBuffer.value;\n                const elementStride = geometryBuffer.stride / bufferValue.BYTES_PER_ELEMENT || this.positionSize;\n                instanceCount = instanceCount || bufferValue.length / elementStride;\n            }\n        }\n        this._allocate(instanceCount, Boolean(dataRange));\n        this.indexStarts = indexStarts;\n        this.vertexStarts = vertexStarts;\n        this.instanceCount = instanceCount;\n        const context = {};\n        this._forEachGeometry((geometry, dataIndex)=>{\n            const normalizedGeometry = normalizedData[dataIndex] || geometry;\n            context.vertexStart = vertexStarts[dataIndex];\n            context.indexStart = indexStarts[dataIndex];\n            const vertexEnd = dataIndex < vertexStarts.length - 1 ? vertexStarts[dataIndex + 1] : instanceCount;\n            context.geometrySize = vertexEnd - vertexStarts[dataIndex];\n            context.geometryIndex = dataIndex;\n            this.updateGeometryAttributes(normalizedGeometry, context);\n        }, startRow, endRow);\n        this.vertexCount = indexStarts[indexStarts.length - 1];\n    }\n} //# sourceMappingURL=tesselator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy90ZXNzZWxhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF3RTtBQUNDO0FBQ1o7QUFDL0I7QUFDVTtBQUN6QixNQUFNTTtJQUNuQkMsWUFBWUMsSUFBSSxDQUFFO1FBQ2hCUixxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxLQUFLO1FBRW5DQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUscUJBQXFCLEtBQUs7UUFFaERBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxlQUFlO1lBQUM7U0FBRTtRQUV4Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGdCQUFnQjtZQUFDO1NBQUU7UUFFekNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxlQUFlO1FBRXJDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCO1FBRXZDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsY0FBYyxLQUFLO1FBRXpDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsa0JBQWtCLEtBQUs7UUFFN0NBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxRQUFRLEtBQUs7UUFFbkNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxlQUFlLEtBQUs7UUFFMUNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxrQkFBa0IsS0FBSztRQUU3Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFdBQVcsS0FBSztRQUV0Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGdCQUFnQixLQUFLO1FBRTNDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsYUFBYSxLQUFLO1FBRXhDLE1BQU0sRUFDSlMsYUFBYSxDQUFDLENBQUMsRUFDaEIsR0FBR0Q7UUFDSixJQUFJLENBQUNFLGlCQUFpQixHQUFHUCw0REFBd0JBO1FBQ2pELElBQUksQ0FBQ00sVUFBVSxHQUFHLENBQUM7UUFDbkIsSUFBSSxDQUFDRSxjQUFjLEdBQUdGO1FBQ3RCLElBQUksQ0FBQ0QsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0ksY0FBYyxDQUFDSjtJQUN0QjtJQUVBSSxlQUFlSixJQUFJLEVBQUU7UUFDbkJLLE9BQU9DLE1BQU0sQ0FBQyxJQUFJLENBQUNOLElBQUksRUFBRUE7UUFDekIsTUFBTSxFQUNKTyxJQUFJLEVBQ0pDLFVBQVUsQ0FBQyxDQUFDLEVBQ1pDLFdBQVcsRUFDWEMsY0FBYyxFQUNkQyxjQUFjLEVBQ2RDLFdBQVcsRUFDWEMsWUFBWSxJQUFJLEVBQ2pCLEdBQUcsSUFBSSxDQUFDYixJQUFJO1FBQ2IsSUFBSSxDQUFDTyxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDRSxXQUFXLEdBQUdBO1FBQ25CLElBQUksQ0FBQ0ssWUFBWSxHQUFHSixrQkFBa0JBLGVBQWVLLElBQUksSUFBS0osQ0FBQUEsbUJBQW1CLE9BQU8sSUFBSTtRQUM1RixJQUFJLENBQUNILE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNLLFNBQVMsR0FBR0E7UUFFakIsSUFBSUgsZ0JBQWdCO1lBQ2xCZCxtREFBTUEsQ0FBQ1csS0FBS1MsWUFBWTtZQUN4QixJQUFJLENBQUNQLFdBQVcsR0FBRyxJQUFJLENBQUNRLHFCQUFxQixDQUFDUDtZQUU5QyxJQUFJLENBQUNHLFdBQVc7Z0JBQ2RMLFFBQVFVLFNBQVMsR0FBR1I7WUFDdEI7UUFDRjtRQUVBLElBQUksQ0FBQ0EsY0FBYyxHQUFHRixRQUFRVSxTQUFTO1FBRXZDLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ1IsY0FBYztZQUM5QixLQUFLLE1BQU1TLGFBQWFULFlBQWE7Z0JBQ25DLElBQUksQ0FBQ1UsZ0JBQWdCLENBQUNEO1lBQ3hCO1FBQ0YsT0FBTztZQUNMLElBQUksQ0FBQ0MsZ0JBQWdCO1FBQ3ZCO0lBQ0Y7SUFFQUMsc0JBQXNCLEVBQ3BCQyxRQUFRLEVBQ1JDLE1BQU0sRUFDUCxFQUFFO1FBQ0QsSUFBSSxDQUFDSCxnQkFBZ0IsQ0FBQztZQUNwQkU7WUFDQUM7UUFDRjtJQUNGO0lBRUFSLHNCQUFzQlAsY0FBYyxFQUFFO1FBQ3BDLE1BQU1nQixRQUFRaEIsZUFBZWdCLEtBQUssSUFBSWhCO1FBRXRDLElBQUksQ0FBQ2lCLFlBQVlDLE1BQU0sQ0FBQ0YsUUFBUTtZQUM5QixPQUFPO1FBQ1Q7UUFFQSxPQUFPaEMsc0VBQXFCQSxDQUFDZ0MsT0FBTztZQUNsQ1gsTUFBTSxJQUFJLENBQUNELFlBQVk7WUFDdkJlLFFBQVFuQixlQUFlbUIsTUFBTTtZQUM3QkMsUUFBUXBCLGVBQWVvQixNQUFNO1lBQzdCZCxjQUFjLElBQUksQ0FBQ1QsSUFBSSxDQUFDUyxZQUFZO1FBQ3RDO0lBQ0Y7SUFFQWUsVUFBVUMsYUFBYSxFQUFFQyxJQUFJLEVBQUU7UUFDN0IsTUFBTSxFQUNKaEMsVUFBVSxFQUNWTyxPQUFPLEVBQ1BMLGNBQWMsRUFDZEQsaUJBQWlCLEVBQ2xCLEdBQUcsSUFBSTtRQUVSLElBQUssTUFBTWdDLFFBQVEvQixlQUFnQjtZQUNqQyxJQUFJK0IsUUFBUTFCLFNBQVM7Z0JBQ25CTixrQkFBa0JpQyxPQUFPLENBQUNsQyxVQUFVLENBQUNpQyxLQUFLO2dCQUMxQ2pDLFVBQVUsQ0FBQ2lDLEtBQUssR0FBRztZQUNyQixPQUFPO2dCQUNMLE1BQU1FLE1BQU1qQyxjQUFjLENBQUMrQixLQUFLO2dCQUNoQ0UsSUFBSUgsSUFBSSxHQUFHQTtnQkFDWGhDLFVBQVUsQ0FBQ2lDLEtBQUssR0FBR2hDLGtCQUFrQm1DLFFBQVEsQ0FBQ3BDLFVBQVUsQ0FBQ2lDLEtBQUssRUFBRUYsZUFBZUk7WUFDakY7UUFDRjtJQUNGO0lBRUFFLGlCQUFpQkMsT0FBTyxFQUFFZixRQUFRLEVBQUVDLE1BQU0sRUFBRTtRQUMxQyxNQUFNLEVBQ0psQixJQUFJLEVBQ0pFLFdBQVcsRUFDWixHQUFHLElBQUk7UUFDUixNQUFNLEVBQ0orQixRQUFRLEVBQ1JDLFVBQVUsRUFDWCxHQUFHaEQsK0RBQWNBLENBQUNjLE1BQU1pQixVQUFVQztRQUVuQyxLQUFLLE1BQU1pQixVQUFVRixTQUFVO1lBQzdCQyxXQUFXRSxLQUFLO1lBQ2hCLE1BQU1DLFdBQVduQyxjQUFjQSxZQUFZaUMsUUFBUUQsY0FBYztZQUNqRUYsUUFBUUssVUFBVUgsV0FBV0UsS0FBSztRQUNwQztJQUNGO0lBRUFyQixpQkFBaUJELFNBQVMsRUFBRTtRQUMxQixJQUFJLENBQUMsSUFBSSxDQUFDZCxJQUFJLEVBQUU7WUFDZDtRQUNGO1FBRUEsSUFBSSxFQUNGc0MsV0FBVyxFQUNYQyxZQUFZLEVBQ1pkLGFBQWEsRUFDZCxHQUFHLElBQUk7UUFDUixNQUFNLEVBQ0p6QixJQUFJLEVBQ0pHLGNBQWMsRUFDZixHQUFHLElBQUk7UUFDUixNQUFNLEVBQ0pjLFdBQVcsQ0FBQyxFQUNaQyxTQUFTc0IsUUFBUSxFQUNsQixHQUFHMUIsYUFBYSxDQUFDO1FBQ2xCLE1BQU0yQixpQkFBaUIsQ0FBQztRQUV4QixJQUFJLENBQUMzQixXQUFXO1lBQ2R3QixjQUFjO2dCQUFDO2FBQUU7WUFDakJDLGVBQWU7Z0JBQUM7YUFBRTtRQUNwQjtRQUVBLElBQUksSUFBSSxDQUFDakMsU0FBUyxJQUFJLENBQUNILGdCQUFnQjtZQUNyQyxJQUFJLENBQUM0QixnQkFBZ0IsQ0FBQyxDQUFDTSxVQUFVSztnQkFDL0IsTUFBTUMscUJBQXFCTixZQUFZLElBQUksQ0FBQ08saUJBQWlCLENBQUNQO2dCQUM5REksY0FBYyxDQUFDQyxVQUFVLEdBQUdDO2dCQUM1QkosWUFBWSxDQUFDRyxZQUFZLEVBQUUsR0FBR0gsWUFBWSxDQUFDRyxVQUFVLEdBQUlDLENBQUFBLHFCQUFxQixJQUFJLENBQUNFLGVBQWUsQ0FBQ0Ysc0JBQXNCO1lBQzNILEdBQUcxQixVQUFVQztZQUViTyxnQkFBZ0JjLFlBQVksQ0FBQ0EsYUFBYU8sTUFBTSxHQUFHLEVBQUU7UUFDdkQsT0FBTztZQUNMUCxlQUFldkMsS0FBS1MsWUFBWTtZQUNoQ2dCLGdCQUFnQmMsWUFBWSxDQUFDdkMsS0FBSzhDLE1BQU0sQ0FBQyxJQUFJO1lBRTdDLElBQUkxQixZQUFZQyxNQUFNLENBQUNsQixpQkFBaUI7Z0JBQ3RDc0IsZ0JBQWdCQSxpQkFBaUJ0QixlQUFlMkMsTUFBTSxHQUFHLElBQUksQ0FBQ3ZDLFlBQVk7WUFDNUUsT0FBTyxJQUFJSiwwQkFBMEJiLHNEQUFNQSxFQUFFO2dCQUMzQyxNQUFNeUQsYUFBYTVDLGVBQWU2QyxRQUFRLENBQUN6QixNQUFNLElBQUksSUFBSSxDQUFDaEIsWUFBWSxHQUFHO2dCQUN6RWtCLGdCQUFnQkEsaUJBQWlCdEIsZUFBZThDLFVBQVUsR0FBR0Y7WUFDL0QsT0FBTyxJQUFJNUMsZUFBZStDLE1BQU0sRUFBRTtnQkFDaEMsTUFBTUgsYUFBYTVDLGVBQWVvQixNQUFNLElBQUksSUFBSSxDQUFDaEIsWUFBWSxHQUFHO2dCQUNoRWtCLGdCQUFnQkEsaUJBQWlCdEIsZUFBZStDLE1BQU0sQ0FBQ0QsVUFBVSxHQUFHRjtZQUN0RSxPQUFPLElBQUk1QyxlQUFlZ0IsS0FBSyxFQUFFO2dCQUMvQixNQUFNZ0MsY0FBY2hELGVBQWVnQixLQUFLO2dCQUN4QyxNQUFNaUMsZ0JBQWdCakQsZUFBZW9CLE1BQU0sR0FBRzRCLFlBQVlFLGlCQUFpQixJQUFJLElBQUksQ0FBQzlDLFlBQVk7Z0JBQ2hHa0IsZ0JBQWdCQSxpQkFBaUIwQixZQUFZTCxNQUFNLEdBQUdNO1lBQ3hEO1FBQ0Y7UUFFQSxJQUFJLENBQUM1QixTQUFTLENBQUNDLGVBQWU2QixRQUFReEM7UUFFdEMsSUFBSSxDQUFDd0IsV0FBVyxHQUFHQTtRQUNuQixJQUFJLENBQUNDLFlBQVksR0FBR0E7UUFDcEIsSUFBSSxDQUFDZCxhQUFhLEdBQUdBO1FBQ3JCLE1BQU04QixVQUFVLENBQUM7UUFFakIsSUFBSSxDQUFDeEIsZ0JBQWdCLENBQUMsQ0FBQ00sVUFBVUs7WUFDL0IsTUFBTUMscUJBQXFCRixjQUFjLENBQUNDLFVBQVUsSUFBSUw7WUFDeERrQixRQUFRQyxXQUFXLEdBQUdqQixZQUFZLENBQUNHLFVBQVU7WUFDN0NhLFFBQVFFLFVBQVUsR0FBR25CLFdBQVcsQ0FBQ0ksVUFBVTtZQUMzQyxNQUFNZ0IsWUFBWWhCLFlBQVlILGFBQWFPLE1BQU0sR0FBRyxJQUFJUCxZQUFZLENBQUNHLFlBQVksRUFBRSxHQUFHakI7WUFDdEY4QixRQUFRSSxZQUFZLEdBQUdELFlBQVluQixZQUFZLENBQUNHLFVBQVU7WUFDMURhLFFBQVFLLGFBQWEsR0FBR2xCO1lBQ3hCLElBQUksQ0FBQ21CLHdCQUF3QixDQUFDbEIsb0JBQW9CWTtRQUNwRCxHQUFHdEMsVUFBVUM7UUFFYixJQUFJLENBQUM0QyxXQUFXLEdBQUd4QixXQUFXLENBQUNBLFlBQVlRLE1BQU0sR0FBRyxFQUFFO0lBQ3hEO0FBRUYsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3V0aWxzL3Rlc3NlbGF0b3IuanM/YzZkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eVwiO1xuaW1wb3J0IHsgY3JlYXRlSXRlcmFibGUsIGdldEFjY2Vzc29yRnJvbUJ1ZmZlciB9IGZyb20gJy4vaXRlcmFibGUtdXRpbHMnO1xuaW1wb3J0IGRlZmF1bHRUeXBlZEFycmF5TWFuYWdlciBmcm9tICcuL3R5cGVkLWFycmF5LW1hbmFnZXInO1xuaW1wb3J0IGFzc2VydCBmcm9tICcuL2Fzc2VydCc7XG5pbXBvcnQgeyBCdWZmZXIgfSBmcm9tICdAbHVtYS5nbC93ZWJnbCc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXNzZWxhdG9yIHtcbiAgY29uc3RydWN0b3Iob3B0cykge1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm9wdHNcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInR5cGVkQXJyYXlNYW5hZ2VyXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbmRleFN0YXJ0c1wiLCBbMF0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwidmVydGV4U3RhcnRzXCIsIFswXSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJ2ZXJ0ZXhDb3VudFwiLCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImluc3RhbmNlQ291bnRcIiwgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJhdHRyaWJ1dGVzXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfYXR0cmlidXRlRGVmc1wiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiZGF0YVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiZ2V0R2VvbWV0cnlcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImdlb21ldHJ5QnVmZmVyXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJidWZmZXJzXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJwb3NpdGlvblNpemVcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5vcm1hbGl6ZVwiLCB2b2lkIDApO1xuXG4gICAgY29uc3Qge1xuICAgICAgYXR0cmlidXRlcyA9IHt9XG4gICAgfSA9IG9wdHM7XG4gICAgdGhpcy50eXBlZEFycmF5TWFuYWdlciA9IGRlZmF1bHRUeXBlZEFycmF5TWFuYWdlcjtcbiAgICB0aGlzLmF0dHJpYnV0ZXMgPSB7fTtcbiAgICB0aGlzLl9hdHRyaWJ1dGVEZWZzID0gYXR0cmlidXRlcztcbiAgICB0aGlzLm9wdHMgPSBvcHRzO1xuICAgIHRoaXMudXBkYXRlR2VvbWV0cnkob3B0cyk7XG4gIH1cblxuICB1cGRhdGVHZW9tZXRyeShvcHRzKSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLm9wdHMsIG9wdHMpO1xuICAgIGNvbnN0IHtcbiAgICAgIGRhdGEsXG4gICAgICBidWZmZXJzID0ge30sXG4gICAgICBnZXRHZW9tZXRyeSxcbiAgICAgIGdlb21ldHJ5QnVmZmVyLFxuICAgICAgcG9zaXRpb25Gb3JtYXQsXG4gICAgICBkYXRhQ2hhbmdlZCxcbiAgICAgIG5vcm1hbGl6ZSA9IHRydWVcbiAgICB9ID0gdGhpcy5vcHRzO1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgdGhpcy5nZXRHZW9tZXRyeSA9IGdldEdlb21ldHJ5O1xuICAgIHRoaXMucG9zaXRpb25TaXplID0gZ2VvbWV0cnlCdWZmZXIgJiYgZ2VvbWV0cnlCdWZmZXIuc2l6ZSB8fCAocG9zaXRpb25Gb3JtYXQgPT09ICdYWScgPyAyIDogMyk7XG4gICAgdGhpcy5idWZmZXJzID0gYnVmZmVycztcbiAgICB0aGlzLm5vcm1hbGl6ZSA9IG5vcm1hbGl6ZTtcblxuICAgIGlmIChnZW9tZXRyeUJ1ZmZlcikge1xuICAgICAgYXNzZXJ0KGRhdGEuc3RhcnRJbmRpY2VzKTtcbiAgICAgIHRoaXMuZ2V0R2VvbWV0cnkgPSB0aGlzLmdldEdlb21ldHJ5RnJvbUJ1ZmZlcihnZW9tZXRyeUJ1ZmZlcik7XG5cbiAgICAgIGlmICghbm9ybWFsaXplKSB7XG4gICAgICAgIGJ1ZmZlcnMucG9zaXRpb25zID0gZ2VvbWV0cnlCdWZmZXI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5nZW9tZXRyeUJ1ZmZlciA9IGJ1ZmZlcnMucG9zaXRpb25zO1xuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YUNoYW5nZWQpKSB7XG4gICAgICBmb3IgKGNvbnN0IGRhdGFSYW5nZSBvZiBkYXRhQ2hhbmdlZCkge1xuICAgICAgICB0aGlzLl9yZWJ1aWxkR2VvbWV0cnkoZGF0YVJhbmdlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fcmVidWlsZEdlb21ldHJ5KCk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlUGFydGlhbEdlb21ldHJ5KHtcbiAgICBzdGFydFJvdyxcbiAgICBlbmRSb3dcbiAgfSkge1xuICAgIHRoaXMuX3JlYnVpbGRHZW9tZXRyeSh7XG4gICAgICBzdGFydFJvdyxcbiAgICAgIGVuZFJvd1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0R2VvbWV0cnlGcm9tQnVmZmVyKGdlb21ldHJ5QnVmZmVyKSB7XG4gICAgY29uc3QgdmFsdWUgPSBnZW9tZXRyeUJ1ZmZlci52YWx1ZSB8fCBnZW9tZXRyeUJ1ZmZlcjtcblxuICAgIGlmICghQXJyYXlCdWZmZXIuaXNWaWV3KHZhbHVlKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldEFjY2Vzc29yRnJvbUJ1ZmZlcih2YWx1ZSwge1xuICAgICAgc2l6ZTogdGhpcy5wb3NpdGlvblNpemUsXG4gICAgICBvZmZzZXQ6IGdlb21ldHJ5QnVmZmVyLm9mZnNldCxcbiAgICAgIHN0cmlkZTogZ2VvbWV0cnlCdWZmZXIuc3RyaWRlLFxuICAgICAgc3RhcnRJbmRpY2VzOiB0aGlzLmRhdGEuc3RhcnRJbmRpY2VzXG4gICAgfSk7XG4gIH1cblxuICBfYWxsb2NhdGUoaW5zdGFuY2VDb3VudCwgY29weSkge1xuICAgIGNvbnN0IHtcbiAgICAgIGF0dHJpYnV0ZXMsXG4gICAgICBidWZmZXJzLFxuICAgICAgX2F0dHJpYnV0ZURlZnMsXG4gICAgICB0eXBlZEFycmF5TWFuYWdlclxuICAgIH0gPSB0aGlzO1xuXG4gICAgZm9yIChjb25zdCBuYW1lIGluIF9hdHRyaWJ1dGVEZWZzKSB7XG4gICAgICBpZiAobmFtZSBpbiBidWZmZXJzKSB7XG4gICAgICAgIHR5cGVkQXJyYXlNYW5hZ2VyLnJlbGVhc2UoYXR0cmlidXRlc1tuYW1lXSk7XG4gICAgICAgIGF0dHJpYnV0ZXNbbmFtZV0gPSBudWxsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgZGVmID0gX2F0dHJpYnV0ZURlZnNbbmFtZV07XG4gICAgICAgIGRlZi5jb3B5ID0gY29weTtcbiAgICAgICAgYXR0cmlidXRlc1tuYW1lXSA9IHR5cGVkQXJyYXlNYW5hZ2VyLmFsbG9jYXRlKGF0dHJpYnV0ZXNbbmFtZV0sIGluc3RhbmNlQ291bnQsIGRlZik7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgX2ZvckVhY2hHZW9tZXRyeSh2aXNpdG9yLCBzdGFydFJvdywgZW5kUm93KSB7XG4gICAgY29uc3Qge1xuICAgICAgZGF0YSxcbiAgICAgIGdldEdlb21ldHJ5XG4gICAgfSA9IHRoaXM7XG4gICAgY29uc3Qge1xuICAgICAgaXRlcmFibGUsXG4gICAgICBvYmplY3RJbmZvXG4gICAgfSA9IGNyZWF0ZUl0ZXJhYmxlKGRhdGEsIHN0YXJ0Um93LCBlbmRSb3cpO1xuXG4gICAgZm9yIChjb25zdCBvYmplY3Qgb2YgaXRlcmFibGUpIHtcbiAgICAgIG9iamVjdEluZm8uaW5kZXgrKztcbiAgICAgIGNvbnN0IGdlb21ldHJ5ID0gZ2V0R2VvbWV0cnkgPyBnZXRHZW9tZXRyeShvYmplY3QsIG9iamVjdEluZm8pIDogbnVsbDtcbiAgICAgIHZpc2l0b3IoZ2VvbWV0cnksIG9iamVjdEluZm8uaW5kZXgpO1xuICAgIH1cbiAgfVxuXG4gIF9yZWJ1aWxkR2VvbWV0cnkoZGF0YVJhbmdlKSB7XG4gICAgaWYgKCF0aGlzLmRhdGEpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQge1xuICAgICAgaW5kZXhTdGFydHMsXG4gICAgICB2ZXJ0ZXhTdGFydHMsXG4gICAgICBpbnN0YW5jZUNvdW50XG4gICAgfSA9IHRoaXM7XG4gICAgY29uc3Qge1xuICAgICAgZGF0YSxcbiAgICAgIGdlb21ldHJ5QnVmZmVyXG4gICAgfSA9IHRoaXM7XG4gICAgY29uc3Qge1xuICAgICAgc3RhcnRSb3cgPSAwLFxuICAgICAgZW5kUm93ID0gSW5maW5pdHlcbiAgICB9ID0gZGF0YVJhbmdlIHx8IHt9O1xuICAgIGNvbnN0IG5vcm1hbGl6ZWREYXRhID0ge307XG5cbiAgICBpZiAoIWRhdGFSYW5nZSkge1xuICAgICAgaW5kZXhTdGFydHMgPSBbMF07XG4gICAgICB2ZXJ0ZXhTdGFydHMgPSBbMF07XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubm9ybWFsaXplIHx8ICFnZW9tZXRyeUJ1ZmZlcikge1xuICAgICAgdGhpcy5fZm9yRWFjaEdlb21ldHJ5KChnZW9tZXRyeSwgZGF0YUluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRHZW9tZXRyeSA9IGdlb21ldHJ5ICYmIHRoaXMubm9ybWFsaXplR2VvbWV0cnkoZ2VvbWV0cnkpO1xuICAgICAgICBub3JtYWxpemVkRGF0YVtkYXRhSW5kZXhdID0gbm9ybWFsaXplZEdlb21ldHJ5O1xuICAgICAgICB2ZXJ0ZXhTdGFydHNbZGF0YUluZGV4ICsgMV0gPSB2ZXJ0ZXhTdGFydHNbZGF0YUluZGV4XSArIChub3JtYWxpemVkR2VvbWV0cnkgPyB0aGlzLmdldEdlb21ldHJ5U2l6ZShub3JtYWxpemVkR2VvbWV0cnkpIDogMCk7XG4gICAgICB9LCBzdGFydFJvdywgZW5kUm93KTtcblxuICAgICAgaW5zdGFuY2VDb3VudCA9IHZlcnRleFN0YXJ0c1t2ZXJ0ZXhTdGFydHMubGVuZ3RoIC0gMV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHZlcnRleFN0YXJ0cyA9IGRhdGEuc3RhcnRJbmRpY2VzO1xuICAgICAgaW5zdGFuY2VDb3VudCA9IHZlcnRleFN0YXJ0c1tkYXRhLmxlbmd0aF0gfHwgMDtcblxuICAgICAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhnZW9tZXRyeUJ1ZmZlcikpIHtcbiAgICAgICAgaW5zdGFuY2VDb3VudCA9IGluc3RhbmNlQ291bnQgfHwgZ2VvbWV0cnlCdWZmZXIubGVuZ3RoIC8gdGhpcy5wb3NpdGlvblNpemU7XG4gICAgICB9IGVsc2UgaWYgKGdlb21ldHJ5QnVmZmVyIGluc3RhbmNlb2YgQnVmZmVyKSB7XG4gICAgICAgIGNvbnN0IGJ5dGVTdHJpZGUgPSBnZW9tZXRyeUJ1ZmZlci5hY2Nlc3Nvci5zdHJpZGUgfHwgdGhpcy5wb3NpdGlvblNpemUgKiA0O1xuICAgICAgICBpbnN0YW5jZUNvdW50ID0gaW5zdGFuY2VDb3VudCB8fCBnZW9tZXRyeUJ1ZmZlci5ieXRlTGVuZ3RoIC8gYnl0ZVN0cmlkZTtcbiAgICAgIH0gZWxzZSBpZiAoZ2VvbWV0cnlCdWZmZXIuYnVmZmVyKSB7XG4gICAgICAgIGNvbnN0IGJ5dGVTdHJpZGUgPSBnZW9tZXRyeUJ1ZmZlci5zdHJpZGUgfHwgdGhpcy5wb3NpdGlvblNpemUgKiA0O1xuICAgICAgICBpbnN0YW5jZUNvdW50ID0gaW5zdGFuY2VDb3VudCB8fCBnZW9tZXRyeUJ1ZmZlci5idWZmZXIuYnl0ZUxlbmd0aCAvIGJ5dGVTdHJpZGU7XG4gICAgICB9IGVsc2UgaWYgKGdlb21ldHJ5QnVmZmVyLnZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlclZhbHVlID0gZ2VvbWV0cnlCdWZmZXIudmFsdWU7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRTdHJpZGUgPSBnZW9tZXRyeUJ1ZmZlci5zdHJpZGUgLyBidWZmZXJWYWx1ZS5CWVRFU19QRVJfRUxFTUVOVCB8fCB0aGlzLnBvc2l0aW9uU2l6ZTtcbiAgICAgICAgaW5zdGFuY2VDb3VudCA9IGluc3RhbmNlQ291bnQgfHwgYnVmZmVyVmFsdWUubGVuZ3RoIC8gZWxlbWVudFN0cmlkZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLl9hbGxvY2F0ZShpbnN0YW5jZUNvdW50LCBCb29sZWFuKGRhdGFSYW5nZSkpO1xuXG4gICAgdGhpcy5pbmRleFN0YXJ0cyA9IGluZGV4U3RhcnRzO1xuICAgIHRoaXMudmVydGV4U3RhcnRzID0gdmVydGV4U3RhcnRzO1xuICAgIHRoaXMuaW5zdGFuY2VDb3VudCA9IGluc3RhbmNlQ291bnQ7XG4gICAgY29uc3QgY29udGV4dCA9IHt9O1xuXG4gICAgdGhpcy5fZm9yRWFjaEdlb21ldHJ5KChnZW9tZXRyeSwgZGF0YUluZGV4KSA9PiB7XG4gICAgICBjb25zdCBub3JtYWxpemVkR2VvbWV0cnkgPSBub3JtYWxpemVkRGF0YVtkYXRhSW5kZXhdIHx8IGdlb21ldHJ5O1xuICAgICAgY29udGV4dC52ZXJ0ZXhTdGFydCA9IHZlcnRleFN0YXJ0c1tkYXRhSW5kZXhdO1xuICAgICAgY29udGV4dC5pbmRleFN0YXJ0ID0gaW5kZXhTdGFydHNbZGF0YUluZGV4XTtcbiAgICAgIGNvbnN0IHZlcnRleEVuZCA9IGRhdGFJbmRleCA8IHZlcnRleFN0YXJ0cy5sZW5ndGggLSAxID8gdmVydGV4U3RhcnRzW2RhdGFJbmRleCArIDFdIDogaW5zdGFuY2VDb3VudDtcbiAgICAgIGNvbnRleHQuZ2VvbWV0cnlTaXplID0gdmVydGV4RW5kIC0gdmVydGV4U3RhcnRzW2RhdGFJbmRleF07XG4gICAgICBjb250ZXh0Lmdlb21ldHJ5SW5kZXggPSBkYXRhSW5kZXg7XG4gICAgICB0aGlzLnVwZGF0ZUdlb21ldHJ5QXR0cmlidXRlcyhub3JtYWxpemVkR2VvbWV0cnksIGNvbnRleHQpO1xuICAgIH0sIHN0YXJ0Um93LCBlbmRSb3cpO1xuXG4gICAgdGhpcy52ZXJ0ZXhDb3VudCA9IGluZGV4U3RhcnRzW2luZGV4U3RhcnRzLmxlbmd0aCAtIDFdO1xuICB9XG5cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRlc3NlbGF0b3IuanMubWFwIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsImNyZWF0ZUl0ZXJhYmxlIiwiZ2V0QWNjZXNzb3JGcm9tQnVmZmVyIiwiZGVmYXVsdFR5cGVkQXJyYXlNYW5hZ2VyIiwiYXNzZXJ0IiwiQnVmZmVyIiwiVGVzc2VsYXRvciIsImNvbnN0cnVjdG9yIiwib3B0cyIsImF0dHJpYnV0ZXMiLCJ0eXBlZEFycmF5TWFuYWdlciIsIl9hdHRyaWJ1dGVEZWZzIiwidXBkYXRlR2VvbWV0cnkiLCJPYmplY3QiLCJhc3NpZ24iLCJkYXRhIiwiYnVmZmVycyIsImdldEdlb21ldHJ5IiwiZ2VvbWV0cnlCdWZmZXIiLCJwb3NpdGlvbkZvcm1hdCIsImRhdGFDaGFuZ2VkIiwibm9ybWFsaXplIiwicG9zaXRpb25TaXplIiwic2l6ZSIsInN0YXJ0SW5kaWNlcyIsImdldEdlb21ldHJ5RnJvbUJ1ZmZlciIsInBvc2l0aW9ucyIsIkFycmF5IiwiaXNBcnJheSIsImRhdGFSYW5nZSIsIl9yZWJ1aWxkR2VvbWV0cnkiLCJ1cGRhdGVQYXJ0aWFsR2VvbWV0cnkiLCJzdGFydFJvdyIsImVuZFJvdyIsInZhbHVlIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJvZmZzZXQiLCJzdHJpZGUiLCJfYWxsb2NhdGUiLCJpbnN0YW5jZUNvdW50IiwiY29weSIsIm5hbWUiLCJyZWxlYXNlIiwiZGVmIiwiYWxsb2NhdGUiLCJfZm9yRWFjaEdlb21ldHJ5IiwidmlzaXRvciIsIml0ZXJhYmxlIiwib2JqZWN0SW5mbyIsIm9iamVjdCIsImluZGV4IiwiZ2VvbWV0cnkiLCJpbmRleFN0YXJ0cyIsInZlcnRleFN0YXJ0cyIsIkluZmluaXR5Iiwibm9ybWFsaXplZERhdGEiLCJkYXRhSW5kZXgiLCJub3JtYWxpemVkR2VvbWV0cnkiLCJub3JtYWxpemVHZW9tZXRyeSIsImdldEdlb21ldHJ5U2l6ZSIsImxlbmd0aCIsImJ5dGVTdHJpZGUiLCJhY2Nlc3NvciIsImJ5dGVMZW5ndGgiLCJidWZmZXIiLCJidWZmZXJWYWx1ZSIsImVsZW1lbnRTdHJpZGUiLCJCWVRFU19QRVJfRUxFTUVOVCIsIkJvb2xlYW4iLCJjb250ZXh0IiwidmVydGV4U3RhcnQiLCJpbmRleFN0YXJ0IiwidmVydGV4RW5kIiwiZ2VvbWV0cnlTaXplIiwiZ2VvbWV0cnlJbmRleCIsInVwZGF0ZUdlb21ldHJ5QXR0cmlidXRlcyIsInZlcnRleENvdW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/texture.js":
/*!**************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/texture.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTexture: () => (/* binding */ createTexture),\n/* harmony export */   destroyTexture: () => (/* binding */ destroyTexture)\n/* harmony export */ });\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n\nconst DEFAULT_TEXTURE_PARAMETERS = {\n    [10241]: 9987,\n    [10240]: 9729,\n    [10242]: 33071,\n    [10243]: 33071\n};\nconst internalTextures = {};\nfunction createTexture(owner, gl, image, parameters) {\n    if (image instanceof _luma_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        return image;\n    } else if (image.constructor && image.constructor.name !== \"Object\") {\n        image = {\n            data: image\n        };\n    }\n    let specialTextureParameters = null;\n    if (image.compressed) {\n        specialTextureParameters = {\n            [10241]: image.data.length > 1 ? 9985 : 9729\n        };\n    }\n    const texture = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"](gl, {\n        ...image,\n        parameters: {\n            ...DEFAULT_TEXTURE_PARAMETERS,\n            ...specialTextureParameters,\n            ...parameters\n        }\n    });\n    internalTextures[texture.id] = owner;\n    return texture;\n}\nfunction destroyTexture(owner, texture) {\n    if (!texture || !(texture instanceof _luma_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"])) {\n        return;\n    }\n    if (internalTextures[texture.id] === owner) {\n        texture.delete();\n        delete internalTextures[texture.id];\n    }\n} //# sourceMappingURL=texture.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy90ZXh0dXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUMxQyxNQUFNQyw2QkFBNkI7SUFDakMsQ0FBQyxNQUFNLEVBQUU7SUFDVCxDQUFDLE1BQU0sRUFBRTtJQUNULENBQUMsTUFBTSxFQUFFO0lBQ1QsQ0FBQyxNQUFNLEVBQUU7QUFDWDtBQUNBLE1BQU1DLG1CQUFtQixDQUFDO0FBQ25CLFNBQVNDLGNBQWNDLEtBQUssRUFBRUMsRUFBRSxFQUFFQyxLQUFLLEVBQUVDLFVBQVU7SUFDeEQsSUFBSUQsaUJBQWlCTixxREFBU0EsRUFBRTtRQUM5QixPQUFPTTtJQUNULE9BQU8sSUFBSUEsTUFBTUUsV0FBVyxJQUFJRixNQUFNRSxXQUFXLENBQUNDLElBQUksS0FBSyxVQUFVO1FBQ25FSCxRQUFRO1lBQ05JLE1BQU1KO1FBQ1I7SUFDRjtJQUVBLElBQUlLLDJCQUEyQjtJQUUvQixJQUFJTCxNQUFNTSxVQUFVLEVBQUU7UUFDcEJELDJCQUEyQjtZQUN6QixDQUFDLE1BQU0sRUFBRUwsTUFBTUksSUFBSSxDQUFDRyxNQUFNLEdBQUcsSUFBSSxPQUFPO1FBQzFDO0lBQ0Y7SUFFQSxNQUFNQyxVQUFVLElBQUlkLHFEQUFTQSxDQUFDSyxJQUFJO1FBQUUsR0FBR0MsS0FBSztRQUMxQ0MsWUFBWTtZQUFFLEdBQUdOLDBCQUEwQjtZQUN6QyxHQUFHVSx3QkFBd0I7WUFDM0IsR0FBR0osVUFBVTtRQUNmO0lBQ0Y7SUFDQUwsZ0JBQWdCLENBQUNZLFFBQVFDLEVBQUUsQ0FBQyxHQUFHWDtJQUMvQixPQUFPVTtBQUNUO0FBQ08sU0FBU0UsZUFBZVosS0FBSyxFQUFFVSxPQUFPO0lBQzNDLElBQUksQ0FBQ0EsV0FBVyxDQUFFQSxDQUFBQSxtQkFBbUJkLHFEQUFRLEdBQUk7UUFDL0M7SUFDRjtJQUVBLElBQUlFLGdCQUFnQixDQUFDWSxRQUFRQyxFQUFFLENBQUMsS0FBS1gsT0FBTztRQUMxQ1UsUUFBUUcsTUFBTTtRQUNkLE9BQU9mLGdCQUFnQixDQUFDWSxRQUFRQyxFQUFFLENBQUM7SUFDckM7QUFDRixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vdXRpbHMvdGV4dHVyZS5qcz9lNjAwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRleHR1cmUyRCB9IGZyb20gJ0BsdW1hLmdsL2NvcmUnO1xuY29uc3QgREVGQVVMVF9URVhUVVJFX1BBUkFNRVRFUlMgPSB7XG4gIFsxMDI0MV06IDk5ODcsXG4gIFsxMDI0MF06IDk3MjksXG4gIFsxMDI0Ml06IDMzMDcxLFxuICBbMTAyNDNdOiAzMzA3MVxufTtcbmNvbnN0IGludGVybmFsVGV4dHVyZXMgPSB7fTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUZXh0dXJlKG93bmVyLCBnbCwgaW1hZ2UsIHBhcmFtZXRlcnMpIHtcbiAgaWYgKGltYWdlIGluc3RhbmNlb2YgVGV4dHVyZTJEKSB7XG4gICAgcmV0dXJuIGltYWdlO1xuICB9IGVsc2UgaWYgKGltYWdlLmNvbnN0cnVjdG9yICYmIGltYWdlLmNvbnN0cnVjdG9yLm5hbWUgIT09ICdPYmplY3QnKSB7XG4gICAgaW1hZ2UgPSB7XG4gICAgICBkYXRhOiBpbWFnZVxuICAgIH07XG4gIH1cblxuICBsZXQgc3BlY2lhbFRleHR1cmVQYXJhbWV0ZXJzID0gbnVsbDtcblxuICBpZiAoaW1hZ2UuY29tcHJlc3NlZCkge1xuICAgIHNwZWNpYWxUZXh0dXJlUGFyYW1ldGVycyA9IHtcbiAgICAgIFsxMDI0MV06IGltYWdlLmRhdGEubGVuZ3RoID4gMSA/IDk5ODUgOiA5NzI5XG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IHRleHR1cmUgPSBuZXcgVGV4dHVyZTJEKGdsLCB7IC4uLmltYWdlLFxuICAgIHBhcmFtZXRlcnM6IHsgLi4uREVGQVVMVF9URVhUVVJFX1BBUkFNRVRFUlMsXG4gICAgICAuLi5zcGVjaWFsVGV4dHVyZVBhcmFtZXRlcnMsXG4gICAgICAuLi5wYXJhbWV0ZXJzXG4gICAgfVxuICB9KTtcbiAgaW50ZXJuYWxUZXh0dXJlc1t0ZXh0dXJlLmlkXSA9IG93bmVyO1xuICByZXR1cm4gdGV4dHVyZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZXN0cm95VGV4dHVyZShvd25lciwgdGV4dHVyZSkge1xuICBpZiAoIXRleHR1cmUgfHwgISh0ZXh0dXJlIGluc3RhbmNlb2YgVGV4dHVyZTJEKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChpbnRlcm5hbFRleHR1cmVzW3RleHR1cmUuaWRdID09PSBvd25lcikge1xuICAgIHRleHR1cmUuZGVsZXRlKCk7XG4gICAgZGVsZXRlIGludGVybmFsVGV4dHVyZXNbdGV4dHVyZS5pZF07XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRleHR1cmUuanMubWFwIl0sIm5hbWVzIjpbIlRleHR1cmUyRCIsIkRFRkFVTFRfVEVYVFVSRV9QQVJBTUVURVJTIiwiaW50ZXJuYWxUZXh0dXJlcyIsImNyZWF0ZVRleHR1cmUiLCJvd25lciIsImdsIiwiaW1hZ2UiLCJwYXJhbWV0ZXJzIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZGF0YSIsInNwZWNpYWxUZXh0dXJlUGFyYW1ldGVycyIsImNvbXByZXNzZWQiLCJsZW5ndGgiLCJ0ZXh0dXJlIiwiaWQiLCJkZXN0cm95VGV4dHVyZSIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/texture.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypedArrayManager: () => (/* binding */ TypedArrayManager),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nclass TypedArrayManager {\n    constructor(options = {}){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_pool\", []);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"opts\", {\n            overAlloc: 2,\n            poolSize: 100\n        });\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        Object.assign(this.opts, options);\n    }\n    allocate(typedArray, count, { size = 1, type, padding = 0, copy = false, initialize = false, maxCount }) {\n        const Type = type || typedArray && typedArray.constructor || Float32Array;\n        const newSize = count * size + padding;\n        if (ArrayBuffer.isView(typedArray)) {\n            if (newSize <= typedArray.length) {\n                return typedArray;\n            }\n            if (newSize * typedArray.BYTES_PER_ELEMENT <= typedArray.buffer.byteLength) {\n                return new Type(typedArray.buffer, 0, newSize);\n            }\n        }\n        let maxSize = Infinity;\n        if (maxCount) {\n            maxSize = maxCount * size + padding;\n        }\n        const newArray = this._allocate(Type, newSize, initialize, maxSize);\n        if (typedArray && copy) {\n            newArray.set(typedArray);\n        } else if (!initialize) {\n            newArray.fill(0, 0, 4);\n        }\n        this._release(typedArray);\n        return newArray;\n    }\n    release(typedArray) {\n        this._release(typedArray);\n    }\n    _allocate(Type, size, initialize, maxSize) {\n        let sizeToAllocate = Math.max(Math.ceil(size * this.opts.overAlloc), 1);\n        if (sizeToAllocate > maxSize) {\n            sizeToAllocate = maxSize;\n        }\n        const pool = this._pool;\n        const byteLength = Type.BYTES_PER_ELEMENT * sizeToAllocate;\n        const i = pool.findIndex((b)=>b.byteLength >= byteLength);\n        if (i >= 0) {\n            const array = new Type(pool.splice(i, 1)[0], 0, sizeToAllocate);\n            if (initialize) {\n                array.fill(0);\n            }\n            return array;\n        }\n        return new Type(sizeToAllocate);\n    }\n    _release(typedArray) {\n        if (!ArrayBuffer.isView(typedArray)) {\n            return;\n        }\n        const pool = this._pool;\n        const { buffer } = typedArray;\n        const { byteLength } = buffer;\n        const i = pool.findIndex((b)=>b.byteLength >= byteLength);\n        if (i < 0) {\n            pool.push(buffer);\n        } else if (i > 0 || pool.length < this.opts.poolSize) {\n            pool.splice(i, 0, buffer);\n        }\n        if (pool.length > this.opts.poolSize) {\n            pool.shift();\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new TypedArrayManager()); //# sourceMappingURL=typed-array-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS91dGlscy90eXBlZC1hcnJheS1tYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RTtBQUNqRSxNQUFNQztJQUNYQyxZQUFZQyxVQUFVLENBQUMsQ0FBQyxDQUFFO1FBQ3hCSCxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFO1FBRWpDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUM1QkksV0FBVztZQUNYQyxVQUFVO1FBQ1o7UUFFQSxJQUFJLENBQUNDLFVBQVUsQ0FBQ0g7SUFDbEI7SUFFQUcsV0FBV0gsT0FBTyxFQUFFO1FBQ2xCSSxPQUFPQyxNQUFNLENBQUMsSUFBSSxDQUFDQyxJQUFJLEVBQUVOO0lBQzNCO0lBRUFPLFNBQVNDLFVBQVUsRUFBRUMsS0FBSyxFQUFFLEVBQzFCQyxPQUFPLENBQUMsRUFDUkMsSUFBSSxFQUNKQyxVQUFVLENBQUMsRUFDWEMsT0FBTyxLQUFLLEVBQ1pDLGFBQWEsS0FBSyxFQUNsQkMsUUFBUSxFQUNULEVBQUU7UUFDRCxNQUFNQyxPQUFPTCxRQUFRSCxjQUFjQSxXQUFXVCxXQUFXLElBQUlrQjtRQUM3RCxNQUFNQyxVQUFVVCxRQUFRQyxPQUFPRTtRQUUvQixJQUFJTyxZQUFZQyxNQUFNLENBQUNaLGFBQWE7WUFDbEMsSUFBSVUsV0FBV1YsV0FBV2EsTUFBTSxFQUFFO2dCQUNoQyxPQUFPYjtZQUNUO1lBRUEsSUFBSVUsVUFBVVYsV0FBV2MsaUJBQWlCLElBQUlkLFdBQVdlLE1BQU0sQ0FBQ0MsVUFBVSxFQUFFO2dCQUMxRSxPQUFPLElBQUlSLEtBQUtSLFdBQVdlLE1BQU0sRUFBRSxHQUFHTDtZQUN4QztRQUNGO1FBRUEsSUFBSU8sVUFBVUM7UUFFZCxJQUFJWCxVQUFVO1lBQ1pVLFVBQVVWLFdBQVdMLE9BQU9FO1FBQzlCO1FBRUEsTUFBTWUsV0FBVyxJQUFJLENBQUNDLFNBQVMsQ0FBQ1osTUFBTUUsU0FBU0osWUFBWVc7UUFFM0QsSUFBSWpCLGNBQWNLLE1BQU07WUFDdEJjLFNBQVNFLEdBQUcsQ0FBQ3JCO1FBQ2YsT0FBTyxJQUFJLENBQUNNLFlBQVk7WUFDdEJhLFNBQVNHLElBQUksQ0FBQyxHQUFHLEdBQUc7UUFDdEI7UUFFQSxJQUFJLENBQUNDLFFBQVEsQ0FBQ3ZCO1FBRWQsT0FBT21CO0lBQ1Q7SUFFQUssUUFBUXhCLFVBQVUsRUFBRTtRQUNsQixJQUFJLENBQUN1QixRQUFRLENBQUN2QjtJQUNoQjtJQUVBb0IsVUFBVVosSUFBSSxFQUFFTixJQUFJLEVBQUVJLFVBQVUsRUFBRVcsT0FBTyxFQUFFO1FBQ3pDLElBQUlRLGlCQUFpQkMsS0FBS0MsR0FBRyxDQUFDRCxLQUFLRSxJQUFJLENBQUMxQixPQUFPLElBQUksQ0FBQ0osSUFBSSxDQUFDTCxTQUFTLEdBQUc7UUFFckUsSUFBSWdDLGlCQUFpQlIsU0FBUztZQUM1QlEsaUJBQWlCUjtRQUNuQjtRQUVBLE1BQU1ZLE9BQU8sSUFBSSxDQUFDQyxLQUFLO1FBQ3ZCLE1BQU1kLGFBQWFSLEtBQUtNLGlCQUFpQixHQUFHVztRQUM1QyxNQUFNTSxJQUFJRixLQUFLRyxTQUFTLENBQUNDLENBQUFBLElBQUtBLEVBQUVqQixVQUFVLElBQUlBO1FBRTlDLElBQUllLEtBQUssR0FBRztZQUNWLE1BQU1HLFFBQVEsSUFBSTFCLEtBQUtxQixLQUFLTSxNQUFNLENBQUNKLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHTjtZQUVoRCxJQUFJbkIsWUFBWTtnQkFDZDRCLE1BQU1aLElBQUksQ0FBQztZQUNiO1lBRUEsT0FBT1k7UUFDVDtRQUVBLE9BQU8sSUFBSTFCLEtBQUtpQjtJQUNsQjtJQUVBRixTQUFTdkIsVUFBVSxFQUFFO1FBQ25CLElBQUksQ0FBQ1csWUFBWUMsTUFBTSxDQUFDWixhQUFhO1lBQ25DO1FBQ0Y7UUFFQSxNQUFNNkIsT0FBTyxJQUFJLENBQUNDLEtBQUs7UUFDdkIsTUFBTSxFQUNKZixNQUFNLEVBQ1AsR0FBR2Y7UUFDSixNQUFNLEVBQ0pnQixVQUFVLEVBQ1gsR0FBR0Q7UUFDSixNQUFNZ0IsSUFBSUYsS0FBS0csU0FBUyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFakIsVUFBVSxJQUFJQTtRQUU5QyxJQUFJZSxJQUFJLEdBQUc7WUFDVEYsS0FBS08sSUFBSSxDQUFDckI7UUFDWixPQUFPLElBQUlnQixJQUFJLEtBQUtGLEtBQUtoQixNQUFNLEdBQUcsSUFBSSxDQUFDZixJQUFJLENBQUNKLFFBQVEsRUFBRTtZQUNwRG1DLEtBQUtNLE1BQU0sQ0FBQ0osR0FBRyxHQUFHaEI7UUFDcEI7UUFFQSxJQUFJYyxLQUFLaEIsTUFBTSxHQUFHLElBQUksQ0FBQ2YsSUFBSSxDQUFDSixRQUFRLEVBQUU7WUFDcENtQyxLQUFLUSxLQUFLO1FBQ1o7SUFDRjtBQUVGO0FBQ0EsaUVBQWUsSUFBSS9DLG1CQUFtQkEsRUFBQyxDQUN2QywrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9jb3JlL2Rpc3QvZXNtL3V0aWxzL3R5cGVkLWFycmF5LW1hbmFnZXIuanM/NmFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eVwiO1xuZXhwb3J0IGNsYXNzIFR5cGVkQXJyYXlNYW5hZ2VyIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiX3Bvb2xcIiwgW10pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwib3B0c1wiLCB7XG4gICAgICBvdmVyQWxsb2M6IDIsXG4gICAgICBwb29sU2l6ZTogMTAwXG4gICAgfSk7XG5cbiAgICB0aGlzLnNldE9wdGlvbnMob3B0aW9ucyk7XG4gIH1cblxuICBzZXRPcHRpb25zKG9wdGlvbnMpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMub3B0cywgb3B0aW9ucyk7XG4gIH1cblxuICBhbGxvY2F0ZSh0eXBlZEFycmF5LCBjb3VudCwge1xuICAgIHNpemUgPSAxLFxuICAgIHR5cGUsXG4gICAgcGFkZGluZyA9IDAsXG4gICAgY29weSA9IGZhbHNlLFxuICAgIGluaXRpYWxpemUgPSBmYWxzZSxcbiAgICBtYXhDb3VudFxuICB9KSB7XG4gICAgY29uc3QgVHlwZSA9IHR5cGUgfHwgdHlwZWRBcnJheSAmJiB0eXBlZEFycmF5LmNvbnN0cnVjdG9yIHx8IEZsb2F0MzJBcnJheTtcbiAgICBjb25zdCBuZXdTaXplID0gY291bnQgKiBzaXplICsgcGFkZGluZztcblxuICAgIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcodHlwZWRBcnJheSkpIHtcbiAgICAgIGlmIChuZXdTaXplIDw9IHR5cGVkQXJyYXkubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiB0eXBlZEFycmF5O1xuICAgICAgfVxuXG4gICAgICBpZiAobmV3U2l6ZSAqIHR5cGVkQXJyYXkuQllURVNfUEVSX0VMRU1FTlQgPD0gdHlwZWRBcnJheS5idWZmZXIuYnl0ZUxlbmd0aCkge1xuICAgICAgICByZXR1cm4gbmV3IFR5cGUodHlwZWRBcnJheS5idWZmZXIsIDAsIG5ld1NpemUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxldCBtYXhTaXplID0gSW5maW5pdHk7XG5cbiAgICBpZiAobWF4Q291bnQpIHtcbiAgICAgIG1heFNpemUgPSBtYXhDb3VudCAqIHNpemUgKyBwYWRkaW5nO1xuICAgIH1cblxuICAgIGNvbnN0IG5ld0FycmF5ID0gdGhpcy5fYWxsb2NhdGUoVHlwZSwgbmV3U2l6ZSwgaW5pdGlhbGl6ZSwgbWF4U2l6ZSk7XG5cbiAgICBpZiAodHlwZWRBcnJheSAmJiBjb3B5KSB7XG4gICAgICBuZXdBcnJheS5zZXQodHlwZWRBcnJheSk7XG4gICAgfSBlbHNlIGlmICghaW5pdGlhbGl6ZSkge1xuICAgICAgbmV3QXJyYXkuZmlsbCgwLCAwLCA0KTtcbiAgICB9XG5cbiAgICB0aGlzLl9yZWxlYXNlKHR5cGVkQXJyYXkpO1xuXG4gICAgcmV0dXJuIG5ld0FycmF5O1xuICB9XG5cbiAgcmVsZWFzZSh0eXBlZEFycmF5KSB7XG4gICAgdGhpcy5fcmVsZWFzZSh0eXBlZEFycmF5KTtcbiAgfVxuXG4gIF9hbGxvY2F0ZShUeXBlLCBzaXplLCBpbml0aWFsaXplLCBtYXhTaXplKSB7XG4gICAgbGV0IHNpemVUb0FsbG9jYXRlID0gTWF0aC5tYXgoTWF0aC5jZWlsKHNpemUgKiB0aGlzLm9wdHMub3ZlckFsbG9jKSwgMSk7XG5cbiAgICBpZiAoc2l6ZVRvQWxsb2NhdGUgPiBtYXhTaXplKSB7XG4gICAgICBzaXplVG9BbGxvY2F0ZSA9IG1heFNpemU7XG4gICAgfVxuXG4gICAgY29uc3QgcG9vbCA9IHRoaXMuX3Bvb2w7XG4gICAgY29uc3QgYnl0ZUxlbmd0aCA9IFR5cGUuQllURVNfUEVSX0VMRU1FTlQgKiBzaXplVG9BbGxvY2F0ZTtcbiAgICBjb25zdCBpID0gcG9vbC5maW5kSW5kZXgoYiA9PiBiLmJ5dGVMZW5ndGggPj0gYnl0ZUxlbmd0aCk7XG5cbiAgICBpZiAoaSA+PSAwKSB7XG4gICAgICBjb25zdCBhcnJheSA9IG5ldyBUeXBlKHBvb2wuc3BsaWNlKGksIDEpWzBdLCAwLCBzaXplVG9BbGxvY2F0ZSk7XG5cbiAgICAgIGlmIChpbml0aWFsaXplKSB7XG4gICAgICAgIGFycmF5LmZpbGwoMCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhcnJheTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IFR5cGUoc2l6ZVRvQWxsb2NhdGUpO1xuICB9XG5cbiAgX3JlbGVhc2UodHlwZWRBcnJheSkge1xuICAgIGlmICghQXJyYXlCdWZmZXIuaXNWaWV3KHR5cGVkQXJyYXkpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgcG9vbCA9IHRoaXMuX3Bvb2w7XG4gICAgY29uc3Qge1xuICAgICAgYnVmZmVyXG4gICAgfSA9IHR5cGVkQXJyYXk7XG4gICAgY29uc3Qge1xuICAgICAgYnl0ZUxlbmd0aFxuICAgIH0gPSBidWZmZXI7XG4gICAgY29uc3QgaSA9IHBvb2wuZmluZEluZGV4KGIgPT4gYi5ieXRlTGVuZ3RoID49IGJ5dGVMZW5ndGgpO1xuXG4gICAgaWYgKGkgPCAwKSB7XG4gICAgICBwb29sLnB1c2goYnVmZmVyKTtcbiAgICB9IGVsc2UgaWYgKGkgPiAwIHx8IHBvb2wubGVuZ3RoIDwgdGhpcy5vcHRzLnBvb2xTaXplKSB7XG4gICAgICBwb29sLnNwbGljZShpLCAwLCBidWZmZXIpO1xuICAgIH1cblxuICAgIGlmIChwb29sLmxlbmd0aCA+IHRoaXMub3B0cy5wb29sU2l6ZSkge1xuICAgICAgcG9vbC5zaGlmdCgpO1xuICAgIH1cbiAgfVxuXG59XG5leHBvcnQgZGVmYXVsdCBuZXcgVHlwZWRBcnJheU1hbmFnZXIoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVkLWFycmF5LW1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIlR5cGVkQXJyYXlNYW5hZ2VyIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwib3ZlckFsbG9jIiwicG9vbFNpemUiLCJzZXRPcHRpb25zIiwiT2JqZWN0IiwiYXNzaWduIiwib3B0cyIsImFsbG9jYXRlIiwidHlwZWRBcnJheSIsImNvdW50Iiwic2l6ZSIsInR5cGUiLCJwYWRkaW5nIiwiY29weSIsImluaXRpYWxpemUiLCJtYXhDb3VudCIsIlR5cGUiLCJGbG9hdDMyQXJyYXkiLCJuZXdTaXplIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJsZW5ndGgiLCJCWVRFU19QRVJfRUxFTUVOVCIsImJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJtYXhTaXplIiwiSW5maW5pdHkiLCJuZXdBcnJheSIsIl9hbGxvY2F0ZSIsInNldCIsImZpbGwiLCJfcmVsZWFzZSIsInJlbGVhc2UiLCJzaXplVG9BbGxvY2F0ZSIsIk1hdGgiLCJtYXgiLCJjZWlsIiwicG9vbCIsIl9wb29sIiwiaSIsImZpbmRJbmRleCIsImIiLCJhcnJheSIsInNwbGljZSIsInB1c2giLCJzaGlmdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/viewport.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/viewports/viewport.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Viewport)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/log */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _utils_math_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/math-utils */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/math-utils.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/matrix4.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/vector3.js\");\n/* harmony import */ var gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix/mat4 */ \"(ssr)/./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/web-mercator */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/index.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n\n\n\n\n\n\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nconst IDENTITY = (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_2__.createMat4)();\nconst ZERO_VECTOR = [\n    0,\n    0,\n    0\n];\nconst DEFAULT_DISTANCE_SCALES = {\n    unitsPerMeter: [\n        1,\n        1,\n        1\n    ],\n    metersPerUnit: [\n        1,\n        1,\n        1\n    ]\n};\nfunction createProjectionMatrix({ width, height, orthographic, fovyRadians, focalDistance, padding, near, far }) {\n    const aspect = width / height;\n    const matrix = orthographic ? new _math_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"]().orthographic({\n        fovy: fovyRadians,\n        aspect,\n        focalDistance,\n        near,\n        far\n    }) : new _math_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"]().perspective({\n        fovy: fovyRadians,\n        aspect,\n        near,\n        far\n    });\n    if (padding) {\n        const { left = 0, right = 0, top = 0, bottom = 0 } = padding;\n        const offsetX = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.clamp)((left + width - right) / 2, 0, width) - width / 2;\n        const offsetY = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.clamp)((top + height - bottom) / 2, 0, height) - height / 2;\n        matrix[8] -= offsetX * 2 / width;\n        matrix[9] += offsetY * 2 / height;\n    }\n    return matrix;\n}\nclass Viewport {\n    constructor(opts = {}){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"x\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"y\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"width\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"height\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"padding\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isGeospatial\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"zoom\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"focalDistance\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"position\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"modelMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"distanceScales\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"scale\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"center\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"cameraPosition\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"projectionMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewMatrixUncentered\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewMatrixInverse\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewProjectionMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pixelProjectionMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pixelUnprojectionMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"resolution\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_frustumPlanes\", {});\n        this.id = opts.id || this.constructor.displayName || \"viewport\";\n        this.x = opts.x || 0;\n        this.y = opts.y || 0;\n        this.width = opts.width || 1;\n        this.height = opts.height || 1;\n        this.zoom = opts.zoom || 0;\n        this.padding = opts.padding;\n        this.distanceScales = opts.distanceScales || DEFAULT_DISTANCE_SCALES;\n        this.focalDistance = opts.focalDistance || 1;\n        this.position = opts.position || ZERO_VECTOR;\n        this.modelMatrix = opts.modelMatrix || null;\n        const { longitude, latitude } = opts;\n        this.isGeospatial = Number.isFinite(latitude) && Number.isFinite(longitude);\n        this._initProps(opts);\n        this._initMatrices(opts);\n        this.equals = this.equals.bind(this);\n        this.project = this.project.bind(this);\n        this.unproject = this.unproject.bind(this);\n        this.projectPosition = this.projectPosition.bind(this);\n        this.unprojectPosition = this.unprojectPosition.bind(this);\n        this.projectFlat = this.projectFlat.bind(this);\n        this.unprojectFlat = this.unprojectFlat.bind(this);\n    }\n    get subViewports() {\n        return null;\n    }\n    get metersPerPixel() {\n        return this.distanceScales.metersPerUnit[2] / this.scale;\n    }\n    get projectionMode() {\n        if (this.isGeospatial) {\n            return this.zoom < 12 ? _lib_constants__WEBPACK_IMPORTED_MODULE_5__.PROJECTION_MODE.WEB_MERCATOR : _lib_constants__WEBPACK_IMPORTED_MODULE_5__.PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET;\n        }\n        return _lib_constants__WEBPACK_IMPORTED_MODULE_5__.PROJECTION_MODE.IDENTITY;\n    }\n    equals(viewport) {\n        if (!(viewport instanceof Viewport)) {\n            return false;\n        }\n        if (this === viewport) {\n            return true;\n        }\n        return viewport.width === this.width && viewport.height === this.height && viewport.scale === this.scale && (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.equals)(viewport.projectionMatrix, this.projectionMatrix) && (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.equals)(viewport.viewMatrix, this.viewMatrix);\n    }\n    project(xyz, { topLeft = true } = {}) {\n        const worldPosition = this.projectPosition(xyz);\n        const coord = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.worldToPixels)(worldPosition, this.pixelProjectionMatrix);\n        const [x, y] = coord;\n        const y2 = topLeft ? y : this.height - y;\n        return xyz.length === 2 ? [\n            x,\n            y2\n        ] : [\n            x,\n            y2,\n            coord[2]\n        ];\n    }\n    unproject(xyz, { topLeft = true, targetZ } = {}) {\n        const [x, y, z] = xyz;\n        const y2 = topLeft ? y : this.height - y;\n        const targetZWorld = targetZ && targetZ * this.distanceScales.unitsPerMeter[2];\n        const coord = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.pixelsToWorld)([\n            x,\n            y2,\n            z\n        ], this.pixelUnprojectionMatrix, targetZWorld);\n        const [X, Y, Z] = this.unprojectPosition(coord);\n        if (Number.isFinite(z)) {\n            return [\n                X,\n                Y,\n                Z\n            ];\n        }\n        return Number.isFinite(targetZ) ? [\n            X,\n            Y,\n            targetZ\n        ] : [\n            X,\n            Y\n        ];\n    }\n    projectPosition(xyz) {\n        const [X, Y] = this.projectFlat(xyz);\n        const Z = (xyz[2] || 0) * this.distanceScales.unitsPerMeter[2];\n        return [\n            X,\n            Y,\n            Z\n        ];\n    }\n    unprojectPosition(xyz) {\n        const [X, Y] = this.unprojectFlat(xyz);\n        const Z = (xyz[2] || 0) * this.distanceScales.metersPerUnit[2];\n        return [\n            X,\n            Y,\n            Z\n        ];\n    }\n    projectFlat(xyz) {\n        if (this.isGeospatial) {\n            const result = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.lngLatToWorld)(xyz);\n            result[1] = (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_4__.clamp)(result[1], -318, 830);\n            return result;\n        }\n        return xyz;\n    }\n    unprojectFlat(xyz) {\n        if (this.isGeospatial) {\n            return (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.worldToLngLat)(xyz);\n        }\n        return xyz;\n    }\n    getBounds(options = {}) {\n        const unprojectOption = {\n            targetZ: options.z || 0\n        };\n        const topLeft = this.unproject([\n            0,\n            0\n        ], unprojectOption);\n        const topRight = this.unproject([\n            this.width,\n            0\n        ], unprojectOption);\n        const bottomLeft = this.unproject([\n            0,\n            this.height\n        ], unprojectOption);\n        const bottomRight = this.unproject([\n            this.width,\n            this.height\n        ], unprojectOption);\n        return [\n            Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n            Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n            Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n            Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n        ];\n    }\n    getDistanceScales(coordinateOrigin) {\n        if (coordinateOrigin) {\n            return (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.getDistanceScales)({\n                longitude: coordinateOrigin[0],\n                latitude: coordinateOrigin[1],\n                highPrecision: true\n            });\n        }\n        return this.distanceScales;\n    }\n    containsPixel({ x, y, width = 1, height = 1 }) {\n        return x < this.x + this.width && this.x < x + width && y < this.y + this.height && this.y < y + height;\n    }\n    getFrustumPlanes() {\n        if (this._frustumPlanes.near) {\n            return this._frustumPlanes;\n        }\n        Object.assign(this._frustumPlanes, (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_2__.getFrustumPlanes)(this.viewProjectionMatrix));\n        return this._frustumPlanes;\n    }\n    panByPosition(coords, pixel) {\n        return null;\n    }\n    _initProps(opts) {\n        const longitude = opts.longitude;\n        const latitude = opts.latitude;\n        if (this.isGeospatial) {\n            if (!Number.isFinite(opts.zoom)) {\n                this.zoom = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.getMeterZoom)({\n                    latitude\n                }) + Math.log2(this.focalDistance);\n            }\n            this.distanceScales = opts.distanceScales || (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.getDistanceScales)({\n                latitude,\n                longitude\n            });\n        }\n        const scale = Math.pow(2, this.zoom);\n        this.scale = scale;\n        const { position, modelMatrix } = opts;\n        let meterOffset = ZERO_VECTOR;\n        if (position) {\n            meterOffset = modelMatrix ? new _math_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](modelMatrix).transformAsVector(position, []) : position;\n        }\n        if (this.isGeospatial) {\n            const center = this.projectPosition([\n                longitude,\n                latitude,\n                0\n            ]);\n            this.center = new _math_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"](meterOffset).scale(this.distanceScales.unitsPerMeter).add(center);\n        } else {\n            this.center = this.projectPosition(meterOffset);\n        }\n    }\n    _initMatrices(opts) {\n        const { viewMatrix = IDENTITY, projectionMatrix = null, orthographic = false, fovyRadians, fovy = 75, near = 0.1, far = 1000, padding = null, focalDistance = 1 } = opts;\n        this.viewMatrixUncentered = viewMatrix;\n        this.viewMatrix = new _math_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"]().multiplyRight(viewMatrix).translate(new _math_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this.center).negate());\n        this.projectionMatrix = projectionMatrix || createProjectionMatrix({\n            width: this.width,\n            height: this.height,\n            orthographic,\n            fovyRadians: fovyRadians || fovy * DEGREES_TO_RADIANS,\n            focalDistance,\n            padding,\n            near,\n            far\n        });\n        const vpm = (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_2__.createMat4)();\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_7__.multiply(vpm, vpm, this.projectionMatrix);\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_7__.multiply(vpm, vpm, this.viewMatrix);\n        this.viewProjectionMatrix = vpm;\n        this.viewMatrixInverse = gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_7__.invert([], this.viewMatrix) || this.viewMatrix;\n        this.cameraPosition = (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_2__.getCameraPosition)(this.viewMatrixInverse);\n        const viewportMatrix = (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_2__.createMat4)();\n        const pixelProjectionMatrix = (0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_2__.createMat4)();\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_7__.scale(viewportMatrix, viewportMatrix, [\n            this.width / 2,\n            -this.height / 2,\n            1\n        ]);\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_7__.translate(viewportMatrix, viewportMatrix, [\n            1,\n            -1,\n            0\n        ]);\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_7__.multiply(pixelProjectionMatrix, viewportMatrix, this.viewProjectionMatrix);\n        this.pixelProjectionMatrix = pixelProjectionMatrix;\n        this.pixelUnprojectionMatrix = gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_7__.invert((0,_utils_math_utils__WEBPACK_IMPORTED_MODULE_2__.createMat4)(), this.pixelProjectionMatrix);\n        if (!this.pixelUnprojectionMatrix) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_8__[\"default\"].warn(\"Pixel project matrix not invertible\")();\n        }\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Viewport, \"displayName\", \"Viewport\"); //# sourceMappingURL=viewport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/viewport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/web-mercator-viewport.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/viewports/web-mercator-viewport.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebMercatorViewport)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _viewport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./viewport */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/viewport.js\");\n/* harmony import */ var _math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/web-mercator */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/index.js\");\n/* harmony import */ var gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix/vec2 */ \"(ssr)/./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/matrix4.js\");\n\n\n\n\n\nclass WebMercatorViewport extends _viewport__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    constructor(opts = {}){\n        const { latitude = 0, longitude = 0, zoom = 0, pitch = 0, bearing = 0, nearZMultiplier = 0.1, farZMultiplier = 1.01, nearZ, farZ, orthographic = false, projectionMatrix, repeat = false, worldOffset = 0, position, padding, legacyMeterSizes = false } = opts;\n        let { width, height, altitude = 1.5 } = opts;\n        const scale = Math.pow(2, zoom);\n        width = width || 1;\n        height = height || 1;\n        let fovy;\n        let projectionParameters = null;\n        if (projectionMatrix) {\n            altitude = projectionMatrix[5] / 2;\n            fovy = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.altitudeToFovy)(altitude);\n        } else {\n            if (opts.fovy) {\n                fovy = opts.fovy;\n                altitude = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.fovyToAltitude)(fovy);\n            } else {\n                fovy = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.altitudeToFovy)(altitude);\n            }\n            let offset;\n            if (padding) {\n                const { top = 0, bottom = 0 } = padding;\n                offset = [\n                    0,\n                    (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_3__.clamp)((top + height - bottom) / 2, 0, height) - height / 2\n                ];\n            }\n            projectionParameters = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.getProjectionParameters)({\n                width,\n                height,\n                scale,\n                center: position && [\n                    0,\n                    0,\n                    position[2] * (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.unitsPerMeter)(latitude)\n                ],\n                offset,\n                pitch,\n                fovy,\n                nearZMultiplier,\n                farZMultiplier\n            });\n            if (Number.isFinite(nearZ)) {\n                projectionParameters.near = nearZ;\n            }\n            if (Number.isFinite(farZ)) {\n                projectionParameters.far = farZ;\n            }\n        }\n        let viewMatrixUncentered = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.getViewMatrix)({\n            height,\n            pitch,\n            bearing,\n            scale,\n            altitude\n        });\n        if (worldOffset) {\n            const viewOffset = new _math_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"]().translate([\n                512 * worldOffset,\n                0,\n                0\n            ]);\n            viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n        }\n        super({\n            ...opts,\n            width,\n            height,\n            viewMatrix: viewMatrixUncentered,\n            longitude,\n            latitude,\n            zoom,\n            ...projectionParameters,\n            fovy,\n            focalDistance: altitude\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"longitude\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"latitude\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pitch\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"bearing\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"altitude\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"fovy\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"orthographic\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_subViewports\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_pseudoMeters\", void 0);\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.zoom = zoom;\n        this.pitch = pitch;\n        this.bearing = bearing;\n        this.altitude = altitude;\n        this.fovy = fovy;\n        this.orthographic = orthographic;\n        this._subViewports = repeat ? [] : null;\n        this._pseudoMeters = legacyMeterSizes;\n        Object.freeze(this);\n    }\n    get subViewports() {\n        if (this._subViewports && !this._subViewports.length) {\n            const bounds = this.getBounds();\n            const minOffset = Math.floor((bounds[0] + 180) / 360);\n            const maxOffset = Math.ceil((bounds[2] - 180) / 360);\n            for(let x = minOffset; x <= maxOffset; x++){\n                const offsetViewport = x ? new WebMercatorViewport({\n                    ...this,\n                    worldOffset: x\n                }) : this;\n                this._subViewports.push(offsetViewport);\n            }\n        }\n        return this._subViewports;\n    }\n    projectPosition(xyz) {\n        if (this._pseudoMeters) {\n            return super.projectPosition(xyz);\n        }\n        const [X, Y] = this.projectFlat(xyz);\n        const Z = (xyz[2] || 0) * (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.unitsPerMeter)(xyz[1]);\n        return [\n            X,\n            Y,\n            Z\n        ];\n    }\n    unprojectPosition(xyz) {\n        if (this._pseudoMeters) {\n            return super.unprojectPosition(xyz);\n        }\n        const [X, Y] = this.unprojectFlat(xyz);\n        const Z = (xyz[2] || 0) / (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.unitsPerMeter)(Y);\n        return [\n            X,\n            Y,\n            Z\n        ];\n    }\n    addMetersToLngLat(lngLatZ, xyz) {\n        return (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.addMetersToLngLat)(lngLatZ, xyz);\n    }\n    panByPosition(coords, pixel) {\n        const fromLocation = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.pixelsToWorld)(pixel, this.pixelUnprojectionMatrix);\n        const toLocation = this.projectFlat(coords);\n        const translate = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_5__.add([], toLocation, gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_5__.negate([], fromLocation));\n        const newCenter = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_5__.add([], this.center, translate);\n        const [longitude, latitude] = this.unprojectFlat(newCenter);\n        return {\n            longitude,\n            latitude\n        };\n    }\n    getBounds(options = {}) {\n        const corners = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.getBounds)(this, options.z || 0);\n        return [\n            Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n            Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]),\n            Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n            Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])\n        ];\n    }\n    fitBounds(bounds, options = {}) {\n        const { width, height } = this;\n        const { longitude, latitude, zoom } = (0,_math_gl_web_mercator__WEBPACK_IMPORTED_MODULE_1__.fitBounds)({\n            width,\n            height,\n            bounds,\n            ...options\n        });\n        return new WebMercatorViewport({\n            width,\n            height,\n            longitude,\n            latitude,\n            zoom\n        });\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(WebMercatorViewport, \"displayName\", \"WebMercatorViewport\"); //# sourceMappingURL=web-mercator-viewport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS92aWV3cG9ydHMvd2ViLW1lcmNhdG9yLXZpZXdwb3J0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0U7QUFDdEM7QUFDb0o7QUFDL0k7QUFDUTtBQUNoQyxNQUFNYyw0QkFBNEJiLGlEQUFRQTtJQUN2RGMsWUFBWUMsT0FBTyxDQUFDLENBQUMsQ0FBRTtRQUNyQixNQUFNLEVBQ0pDLFdBQVcsQ0FBQyxFQUNaQyxZQUFZLENBQUMsRUFDYkMsT0FBTyxDQUFDLEVBQ1JDLFFBQVEsQ0FBQyxFQUNUQyxVQUFVLENBQUMsRUFDWEMsa0JBQWtCLEdBQUcsRUFDckJDLGlCQUFpQixJQUFJLEVBQ3JCQyxLQUFLLEVBQ0xDLElBQUksRUFDSkMsZUFBZSxLQUFLLEVBQ3BCQyxnQkFBZ0IsRUFDaEJDLFNBQVMsS0FBSyxFQUNkQyxjQUFjLENBQUMsRUFDZkMsUUFBUSxFQUNSQyxPQUFPLEVBQ1BDLG1CQUFtQixLQUFLLEVBQ3pCLEdBQUdoQjtRQUNKLElBQUksRUFDRmlCLEtBQUssRUFDTEMsTUFBTSxFQUNOQyxXQUFXLEdBQUcsRUFDZixHQUFHbkI7UUFDSixNQUFNb0IsUUFBUUMsS0FBS0MsR0FBRyxDQUFDLEdBQUduQjtRQUMxQmMsUUFBUUEsU0FBUztRQUNqQkMsU0FBU0EsVUFBVTtRQUNuQixJQUFJSztRQUNKLElBQUlDLHVCQUF1QjtRQUUzQixJQUFJYixrQkFBa0I7WUFDcEJRLFdBQVdSLGdCQUFnQixDQUFDLEVBQUUsR0FBRztZQUNqQ1ksT0FBT2hDLHFFQUFjQSxDQUFDNEI7UUFDeEIsT0FBTztZQUNMLElBQUluQixLQUFLdUIsSUFBSSxFQUFFO2dCQUNiQSxPQUFPdkIsS0FBS3VCLElBQUk7Z0JBQ2hCSixXQUFXM0IscUVBQWNBLENBQUMrQjtZQUM1QixPQUFPO2dCQUNMQSxPQUFPaEMscUVBQWNBLENBQUM0QjtZQUN4QjtZQUVBLElBQUlNO1lBRUosSUFBSVYsU0FBUztnQkFDWCxNQUFNLEVBQ0pXLE1BQU0sQ0FBQyxFQUNQQyxTQUFTLENBQUMsRUFDWCxHQUFHWjtnQkFDSlUsU0FBUztvQkFBQztvQkFBRzVCLG9EQUFLQSxDQUFDLENBQUM2QixNQUFNUixTQUFTUyxNQUFLLElBQUssR0FBRyxHQUFHVCxVQUFVQSxTQUFTO2lCQUFFO1lBQzFFO1lBRUFNLHVCQUF1QmxDLDhFQUF1QkEsQ0FBQztnQkFDN0MyQjtnQkFDQUM7Z0JBQ0FFO2dCQUNBUSxRQUFRZCxZQUFZO29CQUFDO29CQUFHO29CQUFHQSxRQUFRLENBQUMsRUFBRSxHQUFHekIsb0VBQWFBLENBQUNZO2lCQUFVO2dCQUNqRXdCO2dCQUNBckI7Z0JBQ0FtQjtnQkFDQWpCO2dCQUNBQztZQUNGO1lBRUEsSUFBSXNCLE9BQU9DLFFBQVEsQ0FBQ3RCLFFBQVE7Z0JBQzFCZ0IscUJBQXFCTyxJQUFJLEdBQUd2QjtZQUM5QjtZQUVBLElBQUlxQixPQUFPQyxRQUFRLENBQUNyQixPQUFPO2dCQUN6QmUscUJBQXFCUSxHQUFHLEdBQUd2QjtZQUM3QjtRQUNGO1FBRUEsSUFBSXdCLHVCQUF1QjlDLG9FQUFhQSxDQUFDO1lBQ3ZDK0I7WUFDQWQ7WUFDQUM7WUFDQWU7WUFDQUQ7UUFDRjtRQUVBLElBQUlOLGFBQWE7WUFDZixNQUFNcUIsYUFBYSxJQUFJdEMscURBQU9BLEdBQUd1QyxTQUFTLENBQUM7Z0JBQUMsTUFBTXRCO2dCQUFhO2dCQUFHO2FBQUU7WUFDcEVvQix1QkFBdUJDLFdBQVdFLFlBQVksQ0FBQ0g7UUFDakQ7UUFFQSxLQUFLLENBQUM7WUFBRSxHQUFHakMsSUFBSTtZQUNiaUI7WUFDQUM7WUFDQW1CLFlBQVlKO1lBQ1ovQjtZQUNBRDtZQUNBRTtZQUNBLEdBQUdxQixvQkFBb0I7WUFDdkJEO1lBQ0FlLGVBQWVuQjtRQUNqQjtRQUVBbkMscUZBQWVBLENBQUMsSUFBSSxFQUFFLGFBQWEsS0FBSztRQUV4Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFlBQVksS0FBSztRQUV2Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFNBQVMsS0FBSztRQUVwQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFdBQVcsS0FBSztRQUV0Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFlBQVksS0FBSztRQUV2Q0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFFBQVEsS0FBSztRQUVuQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGdCQUFnQixLQUFLO1FBRTNDQSxxRkFBZUEsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCLEtBQUs7UUFFNUNBLHFGQUFlQSxDQUFDLElBQUksRUFBRSxpQkFBaUIsS0FBSztRQUU1QyxJQUFJLENBQUNpQixRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNDLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNDLEtBQUssR0FBR0E7UUFDYixJQUFJLENBQUNDLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNjLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDSSxJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDYixZQUFZLEdBQUdBO1FBQ3BCLElBQUksQ0FBQzZCLGFBQWEsR0FBRzNCLFNBQVMsRUFBRSxHQUFHO1FBQ25DLElBQUksQ0FBQzRCLGFBQWEsR0FBR3hCO1FBQ3JCeUIsT0FBT0MsTUFBTSxDQUFDLElBQUk7SUFDcEI7SUFFQSxJQUFJQyxlQUFlO1FBQ2pCLElBQUksSUFBSSxDQUFDSixhQUFhLElBQUksQ0FBQyxJQUFJLENBQUNBLGFBQWEsQ0FBQ0ssTUFBTSxFQUFFO1lBQ3BELE1BQU1DLFNBQVMsSUFBSSxDQUFDbkQsU0FBUztZQUM3QixNQUFNb0QsWUFBWXpCLEtBQUswQixLQUFLLENBQUMsQ0FBQ0YsTUFBTSxDQUFDLEVBQUUsR0FBRyxHQUFFLElBQUs7WUFDakQsTUFBTUcsWUFBWTNCLEtBQUs0QixJQUFJLENBQUMsQ0FBQ0osTUFBTSxDQUFDLEVBQUUsR0FBRyxHQUFFLElBQUs7WUFFaEQsSUFBSyxJQUFJSyxJQUFJSixXQUFXSSxLQUFLRixXQUFXRSxJQUFLO2dCQUMzQyxNQUFNQyxpQkFBaUJELElBQUksSUFBSXBELG9CQUFvQjtvQkFBRSxHQUFHLElBQUk7b0JBQzFEZSxhQUFhcUM7Z0JBQ2YsS0FBSyxJQUFJO2dCQUVULElBQUksQ0FBQ1gsYUFBYSxDQUFDYSxJQUFJLENBQUNEO1lBQzFCO1FBQ0Y7UUFFQSxPQUFPLElBQUksQ0FBQ1osYUFBYTtJQUMzQjtJQUVBYyxnQkFBZ0JDLEdBQUcsRUFBRTtRQUNuQixJQUFJLElBQUksQ0FBQ2QsYUFBYSxFQUFFO1lBQ3RCLE9BQU8sS0FBSyxDQUFDYSxnQkFBZ0JDO1FBQy9CO1FBRUEsTUFBTSxDQUFDQyxHQUFHQyxFQUFFLEdBQUcsSUFBSSxDQUFDQyxXQUFXLENBQUNIO1FBQ2hDLE1BQU1JLElBQUksQ0FBQ0osR0FBRyxDQUFDLEVBQUUsSUFBSSxLQUFLakUsb0VBQWFBLENBQUNpRSxHQUFHLENBQUMsRUFBRTtRQUM5QyxPQUFPO1lBQUNDO1lBQUdDO1lBQUdFO1NBQUU7SUFDbEI7SUFFQUMsa0JBQWtCTCxHQUFHLEVBQUU7UUFDckIsSUFBSSxJQUFJLENBQUNkLGFBQWEsRUFBRTtZQUN0QixPQUFPLEtBQUssQ0FBQ21CLGtCQUFrQkw7UUFDakM7UUFFQSxNQUFNLENBQUNDLEdBQUdDLEVBQUUsR0FBRyxJQUFJLENBQUNJLGFBQWEsQ0FBQ047UUFDbEMsTUFBTUksSUFBSSxDQUFDSixHQUFHLENBQUMsRUFBRSxJQUFJLEtBQUtqRSxvRUFBYUEsQ0FBQ21FO1FBQ3hDLE9BQU87WUFBQ0Q7WUFBR0M7WUFBR0U7U0FBRTtJQUNsQjtJQUVBdEUsa0JBQWtCeUUsT0FBTyxFQUFFUCxHQUFHLEVBQUU7UUFDOUIsT0FBT2xFLHdFQUFpQkEsQ0FBQ3lFLFNBQVNQO0lBQ3BDO0lBRUFRLGNBQWNDLE1BQU0sRUFBRUMsS0FBSyxFQUFFO1FBQzNCLE1BQU1DLGVBQWUvRSxvRUFBYUEsQ0FBQzhFLE9BQU8sSUFBSSxDQUFDRSx1QkFBdUI7UUFDdEUsTUFBTUMsYUFBYSxJQUFJLENBQUNWLFdBQVcsQ0FBQ007UUFDcEMsTUFBTTVCLFlBQVl4QywrQ0FBUSxDQUFDLEVBQUUsRUFBRXdFLFlBQVl4RSxrREFBVyxDQUFDLEVBQUUsRUFBRXNFO1FBQzNELE1BQU1LLFlBQVkzRSwrQ0FBUSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUNpQyxNQUFNLEVBQUVPO1FBQzVDLE1BQU0sQ0FBQ2pDLFdBQVdELFNBQVMsR0FBRyxJQUFJLENBQUMyRCxhQUFhLENBQUNVO1FBQ2pELE9BQU87WUFDTHBFO1lBQ0FEO1FBQ0Y7SUFDRjtJQUVBUCxVQUFVNkUsVUFBVSxDQUFDLENBQUMsRUFBRTtRQUN0QixNQUFNQyxVQUFVOUUsZ0VBQVNBLENBQUMsSUFBSSxFQUFFNkUsUUFBUUUsQ0FBQyxJQUFJO1FBQzdDLE9BQU87WUFBQ3BELEtBQUtxRCxHQUFHLENBQUNGLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFQSxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRUEsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUVBLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRTtZQUFHbkQsS0FBS3FELEdBQUcsQ0FBQ0YsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUVBLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFQSxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRUEsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQUduRCxLQUFLc0QsR0FBRyxDQUFDSCxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRUEsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUVBLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFQSxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUU7WUFBR25ELEtBQUtzRCxHQUFHLENBQUNILE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFQSxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRUEsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUVBLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFBRTtTQUFFO0lBQ2pTO0lBRUEvRSxVQUFVb0QsTUFBTSxFQUFFMEIsVUFBVSxDQUFDLENBQUMsRUFBRTtRQUM5QixNQUFNLEVBQ0p0RCxLQUFLLEVBQ0xDLE1BQU0sRUFDUCxHQUFHLElBQUk7UUFDUixNQUFNLEVBQ0poQixTQUFTLEVBQ1RELFFBQVEsRUFDUkUsSUFBSSxFQUNMLEdBQUdWLGdFQUFTQSxDQUFDO1lBQ1p3QjtZQUNBQztZQUNBMkI7WUFDQSxHQUFHMEIsT0FBTztRQUNaO1FBQ0EsT0FBTyxJQUFJekUsb0JBQW9CO1lBQzdCbUI7WUFDQUM7WUFDQWhCO1lBQ0FEO1lBQ0FFO1FBQ0Y7SUFDRjtBQUVGO0FBRUFuQixxRkFBZUEsQ0FBQ2MscUJBQXFCLGVBQWUsd0JBQ3BELGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vdmlld3BvcnRzL3dlYi1tZXJjYXRvci12aWV3cG9ydC5qcz9hZGZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgVmlld3BvcnQgZnJvbSAnLi92aWV3cG9ydCc7XG5pbXBvcnQgeyBwaXhlbHNUb1dvcmxkLCBnZXRWaWV3TWF0cml4LCBhZGRNZXRlcnNUb0xuZ0xhdCwgdW5pdHNQZXJNZXRlciwgZ2V0UHJvamVjdGlvblBhcmFtZXRlcnMsIGFsdGl0dWRlVG9Gb3Z5LCBmb3Z5VG9BbHRpdHVkZSwgZml0Qm91bmRzLCBnZXRCb3VuZHMgfSBmcm9tICdAbWF0aC5nbC93ZWItbWVyY2F0b3InO1xuaW1wb3J0ICogYXMgdmVjMiBmcm9tICdnbC1tYXRyaXgvdmVjMic7XG5pbXBvcnQgeyBNYXRyaXg0LCBjbGFtcCB9IGZyb20gJ0BtYXRoLmdsL2NvcmUnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2ViTWVyY2F0b3JWaWV3cG9ydCBleHRlbmRzIFZpZXdwb3J0IHtcbiAgY29uc3RydWN0b3Iob3B0cyA9IHt9KSB7XG4gICAgY29uc3Qge1xuICAgICAgbGF0aXR1ZGUgPSAwLFxuICAgICAgbG9uZ2l0dWRlID0gMCxcbiAgICAgIHpvb20gPSAwLFxuICAgICAgcGl0Y2ggPSAwLFxuICAgICAgYmVhcmluZyA9IDAsXG4gICAgICBuZWFyWk11bHRpcGxpZXIgPSAwLjEsXG4gICAgICBmYXJaTXVsdGlwbGllciA9IDEuMDEsXG4gICAgICBuZWFyWixcbiAgICAgIGZhclosXG4gICAgICBvcnRob2dyYXBoaWMgPSBmYWxzZSxcbiAgICAgIHByb2plY3Rpb25NYXRyaXgsXG4gICAgICByZXBlYXQgPSBmYWxzZSxcbiAgICAgIHdvcmxkT2Zmc2V0ID0gMCxcbiAgICAgIHBvc2l0aW9uLFxuICAgICAgcGFkZGluZyxcbiAgICAgIGxlZ2FjeU1ldGVyU2l6ZXMgPSBmYWxzZVxuICAgIH0gPSBvcHRzO1xuICAgIGxldCB7XG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIGFsdGl0dWRlID0gMS41XG4gICAgfSA9IG9wdHM7XG4gICAgY29uc3Qgc2NhbGUgPSBNYXRoLnBvdygyLCB6b29tKTtcbiAgICB3aWR0aCA9IHdpZHRoIHx8IDE7XG4gICAgaGVpZ2h0ID0gaGVpZ2h0IHx8IDE7XG4gICAgbGV0IGZvdnk7XG4gICAgbGV0IHByb2plY3Rpb25QYXJhbWV0ZXJzID0gbnVsbDtcblxuICAgIGlmIChwcm9qZWN0aW9uTWF0cml4KSB7XG4gICAgICBhbHRpdHVkZSA9IHByb2plY3Rpb25NYXRyaXhbNV0gLyAyO1xuICAgICAgZm92eSA9IGFsdGl0dWRlVG9Gb3Z5KGFsdGl0dWRlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKG9wdHMuZm92eSkge1xuICAgICAgICBmb3Z5ID0gb3B0cy5mb3Z5O1xuICAgICAgICBhbHRpdHVkZSA9IGZvdnlUb0FsdGl0dWRlKGZvdnkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm92eSA9IGFsdGl0dWRlVG9Gb3Z5KGFsdGl0dWRlKTtcbiAgICAgIH1cblxuICAgICAgbGV0IG9mZnNldDtcblxuICAgICAgaWYgKHBhZGRpbmcpIHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgIHRvcCA9IDAsXG4gICAgICAgICAgYm90dG9tID0gMFxuICAgICAgICB9ID0gcGFkZGluZztcbiAgICAgICAgb2Zmc2V0ID0gWzAsIGNsYW1wKCh0b3AgKyBoZWlnaHQgLSBib3R0b20pIC8gMiwgMCwgaGVpZ2h0KSAtIGhlaWdodCAvIDJdO1xuICAgICAgfVxuXG4gICAgICBwcm9qZWN0aW9uUGFyYW1ldGVycyA9IGdldFByb2plY3Rpb25QYXJhbWV0ZXJzKHtcbiAgICAgICAgd2lkdGgsXG4gICAgICAgIGhlaWdodCxcbiAgICAgICAgc2NhbGUsXG4gICAgICAgIGNlbnRlcjogcG9zaXRpb24gJiYgWzAsIDAsIHBvc2l0aW9uWzJdICogdW5pdHNQZXJNZXRlcihsYXRpdHVkZSldLFxuICAgICAgICBvZmZzZXQsXG4gICAgICAgIHBpdGNoLFxuICAgICAgICBmb3Z5LFxuICAgICAgICBuZWFyWk11bHRpcGxpZXIsXG4gICAgICAgIGZhclpNdWx0aXBsaWVyXG4gICAgICB9KTtcblxuICAgICAgaWYgKE51bWJlci5pc0Zpbml0ZShuZWFyWikpIHtcbiAgICAgICAgcHJvamVjdGlvblBhcmFtZXRlcnMubmVhciA9IG5lYXJaO1xuICAgICAgfVxuXG4gICAgICBpZiAoTnVtYmVyLmlzRmluaXRlKGZhclopKSB7XG4gICAgICAgIHByb2plY3Rpb25QYXJhbWV0ZXJzLmZhciA9IGZhclo7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHZpZXdNYXRyaXhVbmNlbnRlcmVkID0gZ2V0Vmlld01hdHJpeCh7XG4gICAgICBoZWlnaHQsXG4gICAgICBwaXRjaCxcbiAgICAgIGJlYXJpbmcsXG4gICAgICBzY2FsZSxcbiAgICAgIGFsdGl0dWRlXG4gICAgfSk7XG5cbiAgICBpZiAod29ybGRPZmZzZXQpIHtcbiAgICAgIGNvbnN0IHZpZXdPZmZzZXQgPSBuZXcgTWF0cml4NCgpLnRyYW5zbGF0ZShbNTEyICogd29ybGRPZmZzZXQsIDAsIDBdKTtcbiAgICAgIHZpZXdNYXRyaXhVbmNlbnRlcmVkID0gdmlld09mZnNldC5tdWx0aXBseUxlZnQodmlld01hdHJpeFVuY2VudGVyZWQpO1xuICAgIH1cblxuICAgIHN1cGVyKHsgLi4ub3B0cyxcbiAgICAgIHdpZHRoLFxuICAgICAgaGVpZ2h0LFxuICAgICAgdmlld01hdHJpeDogdmlld01hdHJpeFVuY2VudGVyZWQsXG4gICAgICBsb25naXR1ZGUsXG4gICAgICBsYXRpdHVkZSxcbiAgICAgIHpvb20sXG4gICAgICAuLi5wcm9qZWN0aW9uUGFyYW1ldGVycyxcbiAgICAgIGZvdnksXG4gICAgICBmb2NhbERpc3RhbmNlOiBhbHRpdHVkZVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwibG9uZ2l0dWRlXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJsYXRpdHVkZVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwicGl0Y2hcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImJlYXJpbmdcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFsdGl0dWRlXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJmb3Z5XCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJvcnRob2dyYXBoaWNcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9zdWJWaWV3cG9ydHNcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9wc2V1ZG9NZXRlcnNcIiwgdm9pZCAwKTtcblxuICAgIHRoaXMubGF0aXR1ZGUgPSBsYXRpdHVkZTtcbiAgICB0aGlzLmxvbmdpdHVkZSA9IGxvbmdpdHVkZTtcbiAgICB0aGlzLnpvb20gPSB6b29tO1xuICAgIHRoaXMucGl0Y2ggPSBwaXRjaDtcbiAgICB0aGlzLmJlYXJpbmcgPSBiZWFyaW5nO1xuICAgIHRoaXMuYWx0aXR1ZGUgPSBhbHRpdHVkZTtcbiAgICB0aGlzLmZvdnkgPSBmb3Z5O1xuICAgIHRoaXMub3J0aG9ncmFwaGljID0gb3J0aG9ncmFwaGljO1xuICAgIHRoaXMuX3N1YlZpZXdwb3J0cyA9IHJlcGVhdCA/IFtdIDogbnVsbDtcbiAgICB0aGlzLl9wc2V1ZG9NZXRlcnMgPSBsZWdhY3lNZXRlclNpemVzO1xuICAgIE9iamVjdC5mcmVlemUodGhpcyk7XG4gIH1cblxuICBnZXQgc3ViVmlld3BvcnRzKCkge1xuICAgIGlmICh0aGlzLl9zdWJWaWV3cG9ydHMgJiYgIXRoaXMuX3N1YlZpZXdwb3J0cy5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IGJvdW5kcyA9IHRoaXMuZ2V0Qm91bmRzKCk7XG4gICAgICBjb25zdCBtaW5PZmZzZXQgPSBNYXRoLmZsb29yKChib3VuZHNbMF0gKyAxODApIC8gMzYwKTtcbiAgICAgIGNvbnN0IG1heE9mZnNldCA9IE1hdGguY2VpbCgoYm91bmRzWzJdIC0gMTgwKSAvIDM2MCk7XG5cbiAgICAgIGZvciAobGV0IHggPSBtaW5PZmZzZXQ7IHggPD0gbWF4T2Zmc2V0OyB4KyspIHtcbiAgICAgICAgY29uc3Qgb2Zmc2V0Vmlld3BvcnQgPSB4ID8gbmV3IFdlYk1lcmNhdG9yVmlld3BvcnQoeyAuLi50aGlzLFxuICAgICAgICAgIHdvcmxkT2Zmc2V0OiB4XG4gICAgICAgIH0pIDogdGhpcztcblxuICAgICAgICB0aGlzLl9zdWJWaWV3cG9ydHMucHVzaChvZmZzZXRWaWV3cG9ydCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3N1YlZpZXdwb3J0cztcbiAgfVxuXG4gIHByb2plY3RQb3NpdGlvbih4eXopIHtcbiAgICBpZiAodGhpcy5fcHNldWRvTWV0ZXJzKSB7XG4gICAgICByZXR1cm4gc3VwZXIucHJvamVjdFBvc2l0aW9uKHh5eik7XG4gICAgfVxuXG4gICAgY29uc3QgW1gsIFldID0gdGhpcy5wcm9qZWN0RmxhdCh4eXopO1xuICAgIGNvbnN0IFogPSAoeHl6WzJdIHx8IDApICogdW5pdHNQZXJNZXRlcih4eXpbMV0pO1xuICAgIHJldHVybiBbWCwgWSwgWl07XG4gIH1cblxuICB1bnByb2plY3RQb3NpdGlvbih4eXopIHtcbiAgICBpZiAodGhpcy5fcHNldWRvTWV0ZXJzKSB7XG4gICAgICByZXR1cm4gc3VwZXIudW5wcm9qZWN0UG9zaXRpb24oeHl6KTtcbiAgICB9XG5cbiAgICBjb25zdCBbWCwgWV0gPSB0aGlzLnVucHJvamVjdEZsYXQoeHl6KTtcbiAgICBjb25zdCBaID0gKHh5elsyXSB8fCAwKSAvIHVuaXRzUGVyTWV0ZXIoWSk7XG4gICAgcmV0dXJuIFtYLCBZLCBaXTtcbiAgfVxuXG4gIGFkZE1ldGVyc1RvTG5nTGF0KGxuZ0xhdFosIHh5eikge1xuICAgIHJldHVybiBhZGRNZXRlcnNUb0xuZ0xhdChsbmdMYXRaLCB4eXopO1xuICB9XG5cbiAgcGFuQnlQb3NpdGlvbihjb29yZHMsIHBpeGVsKSB7XG4gICAgY29uc3QgZnJvbUxvY2F0aW9uID0gcGl4ZWxzVG9Xb3JsZChwaXhlbCwgdGhpcy5waXhlbFVucHJvamVjdGlvbk1hdHJpeCk7XG4gICAgY29uc3QgdG9Mb2NhdGlvbiA9IHRoaXMucHJvamVjdEZsYXQoY29vcmRzKTtcbiAgICBjb25zdCB0cmFuc2xhdGUgPSB2ZWMyLmFkZChbXSwgdG9Mb2NhdGlvbiwgdmVjMi5uZWdhdGUoW10sIGZyb21Mb2NhdGlvbikpO1xuICAgIGNvbnN0IG5ld0NlbnRlciA9IHZlYzIuYWRkKFtdLCB0aGlzLmNlbnRlciwgdHJhbnNsYXRlKTtcbiAgICBjb25zdCBbbG9uZ2l0dWRlLCBsYXRpdHVkZV0gPSB0aGlzLnVucHJvamVjdEZsYXQobmV3Q2VudGVyKTtcbiAgICByZXR1cm4ge1xuICAgICAgbG9uZ2l0dWRlLFxuICAgICAgbGF0aXR1ZGVcbiAgICB9O1xuICB9XG5cbiAgZ2V0Qm91bmRzKG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IGNvcm5lcnMgPSBnZXRCb3VuZHModGhpcywgb3B0aW9ucy56IHx8IDApO1xuICAgIHJldHVybiBbTWF0aC5taW4oY29ybmVyc1swXVswXSwgY29ybmVyc1sxXVswXSwgY29ybmVyc1syXVswXSwgY29ybmVyc1szXVswXSksIE1hdGgubWluKGNvcm5lcnNbMF1bMV0sIGNvcm5lcnNbMV1bMV0sIGNvcm5lcnNbMl1bMV0sIGNvcm5lcnNbM11bMV0pLCBNYXRoLm1heChjb3JuZXJzWzBdWzBdLCBjb3JuZXJzWzFdWzBdLCBjb3JuZXJzWzJdWzBdLCBjb3JuZXJzWzNdWzBdKSwgTWF0aC5tYXgoY29ybmVyc1swXVsxXSwgY29ybmVyc1sxXVsxXSwgY29ybmVyc1syXVsxXSwgY29ybmVyc1szXVsxXSldO1xuICB9XG5cbiAgZml0Qm91bmRzKGJvdW5kcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3Qge1xuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHRcbiAgICB9ID0gdGhpcztcbiAgICBjb25zdCB7XG4gICAgICBsb25naXR1ZGUsXG4gICAgICBsYXRpdHVkZSxcbiAgICAgIHpvb21cbiAgICB9ID0gZml0Qm91bmRzKHtcbiAgICAgIHdpZHRoLFxuICAgICAgaGVpZ2h0LFxuICAgICAgYm91bmRzLFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH0pO1xuICAgIHJldHVybiBuZXcgV2ViTWVyY2F0b3JWaWV3cG9ydCh7XG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIGxvbmdpdHVkZSxcbiAgICAgIGxhdGl0dWRlLFxuICAgICAgem9vbVxuICAgIH0pO1xuICB9XG5cbn1cblxuX2RlZmluZVByb3BlcnR5KFdlYk1lcmNhdG9yVmlld3BvcnQsIFwiZGlzcGxheU5hbWVcIiwgJ1dlYk1lcmNhdG9yVmlld3BvcnQnKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdlYi1tZXJjYXRvci12aWV3cG9ydC5qcy5tYXAiXSwibmFtZXMiOlsiX2RlZmluZVByb3BlcnR5IiwiVmlld3BvcnQiLCJwaXhlbHNUb1dvcmxkIiwiZ2V0Vmlld01hdHJpeCIsImFkZE1ldGVyc1RvTG5nTGF0IiwidW5pdHNQZXJNZXRlciIsImdldFByb2plY3Rpb25QYXJhbWV0ZXJzIiwiYWx0aXR1ZGVUb0ZvdnkiLCJmb3Z5VG9BbHRpdHVkZSIsImZpdEJvdW5kcyIsImdldEJvdW5kcyIsInZlYzIiLCJNYXRyaXg0IiwiY2xhbXAiLCJXZWJNZXJjYXRvclZpZXdwb3J0IiwiY29uc3RydWN0b3IiLCJvcHRzIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJ6b29tIiwicGl0Y2giLCJiZWFyaW5nIiwibmVhclpNdWx0aXBsaWVyIiwiZmFyWk11bHRpcGxpZXIiLCJuZWFyWiIsImZhcloiLCJvcnRob2dyYXBoaWMiLCJwcm9qZWN0aW9uTWF0cml4IiwicmVwZWF0Iiwid29ybGRPZmZzZXQiLCJwb3NpdGlvbiIsInBhZGRpbmciLCJsZWdhY3lNZXRlclNpemVzIiwid2lkdGgiLCJoZWlnaHQiLCJhbHRpdHVkZSIsInNjYWxlIiwiTWF0aCIsInBvdyIsImZvdnkiLCJwcm9qZWN0aW9uUGFyYW1ldGVycyIsIm9mZnNldCIsInRvcCIsImJvdHRvbSIsImNlbnRlciIsIk51bWJlciIsImlzRmluaXRlIiwibmVhciIsImZhciIsInZpZXdNYXRyaXhVbmNlbnRlcmVkIiwidmlld09mZnNldCIsInRyYW5zbGF0ZSIsIm11bHRpcGx5TGVmdCIsInZpZXdNYXRyaXgiLCJmb2NhbERpc3RhbmNlIiwiX3N1YlZpZXdwb3J0cyIsIl9wc2V1ZG9NZXRlcnMiLCJPYmplY3QiLCJmcmVlemUiLCJzdWJWaWV3cG9ydHMiLCJsZW5ndGgiLCJib3VuZHMiLCJtaW5PZmZzZXQiLCJmbG9vciIsIm1heE9mZnNldCIsImNlaWwiLCJ4Iiwib2Zmc2V0Vmlld3BvcnQiLCJwdXNoIiwicHJvamVjdFBvc2l0aW9uIiwieHl6IiwiWCIsIlkiLCJwcm9qZWN0RmxhdCIsIloiLCJ1bnByb2plY3RQb3NpdGlvbiIsInVucHJvamVjdEZsYXQiLCJsbmdMYXRaIiwicGFuQnlQb3NpdGlvbiIsImNvb3JkcyIsInBpeGVsIiwiZnJvbUxvY2F0aW9uIiwicGl4ZWxVbnByb2plY3Rpb25NYXRyaXgiLCJ0b0xvY2F0aW9uIiwiYWRkIiwibmVnYXRlIiwibmV3Q2VudGVyIiwib3B0aW9ucyIsImNvcm5lcnMiLCJ6IiwibWluIiwibWF4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/web-mercator-viewport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/views/map-view.js":
/*!***************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/views/map-view.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MapView)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/views/view.js\");\n/* harmony import */ var _viewports_web_mercator_viewport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../viewports/web-mercator-viewport */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/web-mercator-viewport.js\");\n/* harmony import */ var _controllers_map_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../controllers/map-controller */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/controllers/map-controller.js\");\n\n\n\n\nclass MapView extends _view__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    get ViewportType() {\n        return _viewports_web_mercator_viewport__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    }\n    get ControllerType() {\n        return _controllers_map_controller__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(MapView, \"displayName\", \"MapView\"); //# sourceMappingURL=map-view.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvY29yZS9kaXN0L2VzbS92aWV3cy9tYXAtdmlldy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3RTtBQUM5QztBQUMyQztBQUNYO0FBQzNDLE1BQU1JLGdCQUFnQkgsNkNBQUlBO0lBQ3ZDLElBQUlJLGVBQWU7UUFDakIsT0FBT0gsd0VBQW1CQTtJQUM1QjtJQUVBLElBQUlJLGlCQUFpQjtRQUNuQixPQUFPSCxtRUFBYUE7SUFDdEI7QUFFRjtBQUVBSCxxRkFBZUEsQ0FBQ0ksU0FBUyxlQUFlLFlBQ3hDLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2NvcmUvZGlzdC9lc20vdmlld3MvbWFwLXZpZXcuanM/MTA5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eVwiO1xuaW1wb3J0IFZpZXcgZnJvbSAnLi92aWV3JztcbmltcG9ydCBXZWJNZXJjYXRvclZpZXdwb3J0IGZyb20gJy4uL3ZpZXdwb3J0cy93ZWItbWVyY2F0b3Itdmlld3BvcnQnO1xuaW1wb3J0IE1hcENvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvbWFwLWNvbnRyb2xsZXInO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFwVmlldyBleHRlbmRzIFZpZXcge1xuICBnZXQgVmlld3BvcnRUeXBlKCkge1xuICAgIHJldHVybiBXZWJNZXJjYXRvclZpZXdwb3J0O1xuICB9XG5cbiAgZ2V0IENvbnRyb2xsZXJUeXBlKCkge1xuICAgIHJldHVybiBNYXBDb250cm9sbGVyO1xuICB9XG5cbn1cblxuX2RlZmluZVByb3BlcnR5KE1hcFZpZXcsIFwiZGlzcGxheU5hbWVcIiwgJ01hcFZpZXcnKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1hcC12aWV3LmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJWaWV3IiwiV2ViTWVyY2F0b3JWaWV3cG9ydCIsIk1hcENvbnRyb2xsZXIiLCJNYXBWaWV3IiwiVmlld3BvcnRUeXBlIiwiQ29udHJvbGxlclR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/views/map-view.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/core/dist/esm/views/view.js":
/*!***********************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/views/view.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ View)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _viewports_viewport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../viewports/viewport */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/viewports/viewport.js\");\n/* harmony import */ var _utils_positions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/positions */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/positions.js\");\n/* harmony import */ var _utils_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/deep-equal */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/deep-equal.js\");\n/* harmony import */ var _utils_assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/assert */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/assert.js\");\n\n\n\n\n\nclass View {\n    constructor(props){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"id\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewportInstance\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_x\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_y\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_width\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_height\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_padding\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"props\", void 0);\n        const { id, x = 0, y = 0, width = \"100%\", height = \"100%\", padding = null, viewportInstance } = props || {};\n        (0,_utils_assert__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(!viewportInstance || viewportInstance instanceof _viewports_viewport__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n        this.viewportInstance = viewportInstance;\n        this.id = id || this.constructor.displayName || \"view\";\n        this.props = {\n            ...props,\n            id: this.id\n        };\n        this._x = (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.parsePosition)(x);\n        this._y = (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.parsePosition)(y);\n        this._width = (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.parsePosition)(width);\n        this._height = (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.parsePosition)(height);\n        this._padding = padding && {\n            left: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.parsePosition)(padding.left || 0),\n            right: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.parsePosition)(padding.right || 0),\n            top: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.parsePosition)(padding.top || 0),\n            bottom: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.parsePosition)(padding.bottom || 0)\n        };\n        this.equals = this.equals.bind(this);\n        Object.seal(this);\n    }\n    equals(view) {\n        if (this === view) {\n            return true;\n        }\n        if (this.viewportInstance) {\n            return view.viewportInstance ? this.viewportInstance.equals(view.viewportInstance) : false;\n        }\n        return this.ViewportType === view.ViewportType && (0,_utils_deep_equal__WEBPACK_IMPORTED_MODULE_4__.deepEqual)(this.props, view.props, 2);\n    }\n    makeViewport({ width, height, viewState }) {\n        if (this.viewportInstance) {\n            return this.viewportInstance;\n        }\n        viewState = this.filterViewState(viewState);\n        const viewportDimensions = this.getDimensions({\n            width,\n            height\n        });\n        if (!viewportDimensions.height || !viewportDimensions.width) {\n            return null;\n        }\n        return new this.ViewportType({\n            ...viewState,\n            ...this.props,\n            ...viewportDimensions\n        });\n    }\n    getViewStateId() {\n        const { viewState } = this.props;\n        if (typeof viewState === \"string\") {\n            return viewState;\n        }\n        return (viewState === null || viewState === void 0 ? void 0 : viewState.id) || this.id;\n    }\n    filterViewState(viewState) {\n        if (this.props.viewState && typeof this.props.viewState === \"object\") {\n            if (!this.props.viewState.id) {\n                return this.props.viewState;\n            }\n            const newViewState = {\n                ...viewState\n            };\n            for(const key in this.props.viewState){\n                if (key !== \"id\") {\n                    newViewState[key] = this.props.viewState[key];\n                }\n            }\n            return newViewState;\n        }\n        return viewState;\n    }\n    getDimensions({ width, height }) {\n        const dimensions = {\n            x: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.getPosition)(this._x, width),\n            y: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.getPosition)(this._y, height),\n            width: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.getPosition)(this._width, width),\n            height: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.getPosition)(this._height, height)\n        };\n        if (this._padding) {\n            dimensions.padding = {\n                left: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.getPosition)(this._padding.left, width),\n                top: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.getPosition)(this._padding.top, height),\n                right: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.getPosition)(this._padding.right, width),\n                bottom: (0,_utils_positions__WEBPACK_IMPORTED_MODULE_3__.getPosition)(this._padding.bottom, height)\n            };\n        }\n        return dimensions;\n    }\n    get controller() {\n        const opts = this.props.controller;\n        if (!opts) {\n            return null;\n        }\n        if (opts === true) {\n            return {\n                type: this.ControllerType\n            };\n        }\n        if (typeof opts === \"function\") {\n            return {\n                type: opts\n            };\n        }\n        return {\n            type: this.ControllerType,\n            ...opts\n        };\n    }\n} //# sourceMappingURL=view.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/core/dist/esm/views/view.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/geo-layers/dist/esm/trips-layer/trips-layer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/geo-layers/dist/esm/trips-layer/trips-layer.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TripsLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_layers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/layers */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js\");\n\n\nconst defaultProps = {\n    fadeTrail: true,\n    trailLength: {\n        type: \"number\",\n        value: 120,\n        min: 0\n    },\n    currentTime: {\n        type: \"number\",\n        value: 0,\n        min: 0\n    },\n    getTimestamps: {\n        type: \"accessor\",\n        value: (d)=>d.timestamps\n    }\n};\nclass TripsLayer extends _deck_gl_layers__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    getShaders() {\n        const shaders = super.getShaders();\n        shaders.inject = {\n            \"vs:#decl\": \"uniform float trailLength;\\nattribute float instanceTimestamps;\\nattribute float instanceNextTimestamps;\\nvarying float vTime;\\n\",\n            \"vs:#main-end\": \"vTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\\n\",\n            \"fs:#decl\": \"uniform bool fadeTrail;\\nuniform float trailLength;\\nuniform float currentTime;\\nvarying float vTime;\\n\",\n            \"fs:#main-start\": \"if(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\\n  discard;\\n}\\n\",\n            \"fs:DECKGL_FILTER_COLOR\": \"if(fadeTrail) {\\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\\n}\\n\"\n        };\n        return shaders;\n    }\n    initializeState() {\n        super.initializeState();\n        const attributeManager = this.getAttributeManager();\n        attributeManager.addInstanced({\n            timestamps: {\n                size: 1,\n                accessor: \"getTimestamps\",\n                shaderAttributes: {\n                    instanceTimestamps: {\n                        vertexOffset: 0\n                    },\n                    instanceNextTimestamps: {\n                        vertexOffset: 1\n                    }\n                }\n            }\n        });\n    }\n    draw(params) {\n        const { fadeTrail, trailLength, currentTime } = this.props;\n        params.uniforms = {\n            ...params.uniforms,\n            fadeTrail,\n            trailLength,\n            currentTime\n        };\n        super.draw(params);\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(TripsLayer, \"layerName\", \"TripsLayer\");\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(TripsLayer, \"defaultProps\", defaultProps); //# sourceMappingURL=trips-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvZ2VvLWxheWVycy9kaXN0L2VzbS90cmlwcy1sYXllci90cmlwcy1sYXllci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0U7QUFDNUI7QUFDNUMsTUFBTUUsZUFBZTtJQUNuQkMsV0FBVztJQUNYQyxhQUFhO1FBQ1hDLE1BQU07UUFDTkMsT0FBTztRQUNQQyxLQUFLO0lBQ1A7SUFDQUMsYUFBYTtRQUNYSCxNQUFNO1FBQ05DLE9BQU87UUFDUEMsS0FBSztJQUNQO0lBQ0FFLGVBQWU7UUFDYkosTUFBTTtRQUNOQyxPQUFPSSxDQUFBQSxJQUFLQSxFQUFFQyxVQUFVO0lBQzFCO0FBQ0Y7QUFDZSxNQUFNQyxtQkFBbUJYLHVEQUFTQTtJQUMvQ1ksYUFBYTtRQUNYLE1BQU1DLFVBQVUsS0FBSyxDQUFDRDtRQUN0QkMsUUFBUUMsTUFBTSxHQUFHO1lBQ2YsWUFBWTtZQUNaLGdCQUFnQjtZQUNoQixZQUFZO1lBQ1osa0JBQWtCO1lBQ2xCLDBCQUEwQjtRQUM1QjtRQUNBLE9BQU9EO0lBQ1Q7SUFFQUUsa0JBQWtCO1FBQ2hCLEtBQUssQ0FBQ0E7UUFDTixNQUFNQyxtQkFBbUIsSUFBSSxDQUFDQyxtQkFBbUI7UUFDakRELGlCQUFpQkUsWUFBWSxDQUFDO1lBQzVCUixZQUFZO2dCQUNWUyxNQUFNO2dCQUNOQyxVQUFVO2dCQUNWQyxrQkFBa0I7b0JBQ2hCQyxvQkFBb0I7d0JBQ2xCQyxjQUFjO29CQUNoQjtvQkFDQUMsd0JBQXdCO3dCQUN0QkQsY0FBYztvQkFDaEI7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7SUFFQUUsS0FBS0MsTUFBTSxFQUFFO1FBQ1gsTUFBTSxFQUNKeEIsU0FBUyxFQUNUQyxXQUFXLEVBQ1hJLFdBQVcsRUFDWixHQUFHLElBQUksQ0FBQ29CLEtBQUs7UUFDZEQsT0FBT0UsUUFBUSxHQUFHO1lBQUUsR0FBR0YsT0FBT0UsUUFBUTtZQUNwQzFCO1lBQ0FDO1lBQ0FJO1FBQ0Y7UUFDQSxLQUFLLENBQUNrQixLQUFLQztJQUNiO0FBRUY7QUFFQTNCLHFGQUFlQSxDQUFDWSxZQUFZLGFBQWE7QUFFekNaLHFGQUFlQSxDQUFDWSxZQUFZLGdCQUFnQlYsZUFDNUMsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvZ2VvLWxheWVycy9kaXN0L2VzbS90cmlwcy1sYXllci90cmlwcy1sYXllci5qcz85YjljIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgeyBQYXRoTGF5ZXIgfSBmcm9tICdAZGVjay5nbC9sYXllcnMnO1xuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICBmYWRlVHJhaWw6IHRydWUsXG4gIHRyYWlsTGVuZ3RoOiB7XG4gICAgdHlwZTogJ251bWJlcicsXG4gICAgdmFsdWU6IDEyMCxcbiAgICBtaW46IDBcbiAgfSxcbiAgY3VycmVudFRpbWU6IHtcbiAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICB2YWx1ZTogMCxcbiAgICBtaW46IDBcbiAgfSxcbiAgZ2V0VGltZXN0YW1wczoge1xuICAgIHR5cGU6ICdhY2Nlc3NvcicsXG4gICAgdmFsdWU6IGQgPT4gZC50aW1lc3RhbXBzXG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUcmlwc0xheWVyIGV4dGVuZHMgUGF0aExheWVyIHtcbiAgZ2V0U2hhZGVycygpIHtcbiAgICBjb25zdCBzaGFkZXJzID0gc3VwZXIuZ2V0U2hhZGVycygpO1xuICAgIHNoYWRlcnMuaW5qZWN0ID0ge1xuICAgICAgJ3ZzOiNkZWNsJzogXCJ1bmlmb3JtIGZsb2F0IHRyYWlsTGVuZ3RoO1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZVRpbWVzdGFtcHM7XFxuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlTmV4dFRpbWVzdGFtcHM7XFxudmFyeWluZyBmbG9hdCB2VGltZTtcXG5cIixcbiAgICAgICd2czojbWFpbi1lbmQnOiBcInZUaW1lID0gaW5zdGFuY2VUaW1lc3RhbXBzICsgKGluc3RhbmNlTmV4dFRpbWVzdGFtcHMgLSBpbnN0YW5jZVRpbWVzdGFtcHMpICogdlBhdGhQb3NpdGlvbi55IC8gdlBhdGhMZW5ndGg7XFxuXCIsXG4gICAgICAnZnM6I2RlY2wnOiBcInVuaWZvcm0gYm9vbCBmYWRlVHJhaWw7XFxudW5pZm9ybSBmbG9hdCB0cmFpbExlbmd0aDtcXG51bmlmb3JtIGZsb2F0IGN1cnJlbnRUaW1lO1xcbnZhcnlpbmcgZmxvYXQgdlRpbWU7XFxuXCIsXG4gICAgICAnZnM6I21haW4tc3RhcnQnOiBcImlmKHZUaW1lID4gY3VycmVudFRpbWUgfHwgKGZhZGVUcmFpbCAmJiAodlRpbWUgPCBjdXJyZW50VGltZSAtIHRyYWlsTGVuZ3RoKSkpIHtcXG4gIGRpc2NhcmQ7XFxufVxcblwiLFxuICAgICAgJ2ZzOkRFQ0tHTF9GSUxURVJfQ09MT1InOiBcImlmKGZhZGVUcmFpbCkge1xcbiAgY29sb3IuYSAqPSAxLjAgLSAoY3VycmVudFRpbWUgLSB2VGltZSkgLyB0cmFpbExlbmd0aDtcXG59XFxuXCJcbiAgICB9O1xuICAgIHJldHVybiBzaGFkZXJzO1xuICB9XG5cbiAgaW5pdGlhbGl6ZVN0YXRlKCkge1xuICAgIHN1cGVyLmluaXRpYWxpemVTdGF0ZSgpO1xuICAgIGNvbnN0IGF0dHJpYnV0ZU1hbmFnZXIgPSB0aGlzLmdldEF0dHJpYnV0ZU1hbmFnZXIoKTtcbiAgICBhdHRyaWJ1dGVNYW5hZ2VyLmFkZEluc3RhbmNlZCh7XG4gICAgICB0aW1lc3RhbXBzOiB7XG4gICAgICAgIHNpemU6IDEsXG4gICAgICAgIGFjY2Vzc29yOiAnZ2V0VGltZXN0YW1wcycsXG4gICAgICAgIHNoYWRlckF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICBpbnN0YW5jZVRpbWVzdGFtcHM6IHtcbiAgICAgICAgICAgIHZlcnRleE9mZnNldDogMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgaW5zdGFuY2VOZXh0VGltZXN0YW1wczoge1xuICAgICAgICAgICAgdmVydGV4T2Zmc2V0OiAxXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBkcmF3KHBhcmFtcykge1xuICAgIGNvbnN0IHtcbiAgICAgIGZhZGVUcmFpbCxcbiAgICAgIHRyYWlsTGVuZ3RoLFxuICAgICAgY3VycmVudFRpbWVcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBwYXJhbXMudW5pZm9ybXMgPSB7IC4uLnBhcmFtcy51bmlmb3JtcyxcbiAgICAgIGZhZGVUcmFpbCxcbiAgICAgIHRyYWlsTGVuZ3RoLFxuICAgICAgY3VycmVudFRpbWVcbiAgICB9O1xuICAgIHN1cGVyLmRyYXcocGFyYW1zKTtcbiAgfVxuXG59XG5cbl9kZWZpbmVQcm9wZXJ0eShUcmlwc0xheWVyLCBcImxheWVyTmFtZVwiLCAnVHJpcHNMYXllcicpO1xuXG5fZGVmaW5lUHJvcGVydHkoVHJpcHNMYXllciwgXCJkZWZhdWx0UHJvcHNcIiwgZGVmYXVsdFByb3BzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyaXBzLWxheWVyLmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJQYXRoTGF5ZXIiLCJkZWZhdWx0UHJvcHMiLCJmYWRlVHJhaWwiLCJ0cmFpbExlbmd0aCIsInR5cGUiLCJ2YWx1ZSIsIm1pbiIsImN1cnJlbnRUaW1lIiwiZ2V0VGltZXN0YW1wcyIsImQiLCJ0aW1lc3RhbXBzIiwiVHJpcHNMYXllciIsImdldFNoYWRlcnMiLCJzaGFkZXJzIiwiaW5qZWN0IiwiaW5pdGlhbGl6ZVN0YXRlIiwiYXR0cmlidXRlTWFuYWdlciIsImdldEF0dHJpYnV0ZU1hbmFnZXIiLCJhZGRJbnN0YW5jZWQiLCJzaXplIiwiYWNjZXNzb3IiLCJzaGFkZXJBdHRyaWJ1dGVzIiwiaW5zdGFuY2VUaW1lc3RhbXBzIiwidmVydGV4T2Zmc2V0IiwiaW5zdGFuY2VOZXh0VGltZXN0YW1wcyIsImRyYXciLCJwYXJhbXMiLCJwcm9wcyIsInVuaWZvcm1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/geo-layers/dist/esm/trips-layer/trips-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   binaryToFeatureForAccesor: () => (/* binding */ binaryToFeatureForAccesor),\n/* harmony export */   calculatePickingColors: () => (/* binding */ calculatePickingColors)\n/* harmony export */ });\nfunction binaryToFeatureForAccesor(data, index) {\n    if (!data) {\n        return null;\n    }\n    const featureIndex = \"startIndices\" in data ? data.startIndices[index] : index;\n    const geometryIndex = data.featureIds.value[featureIndex];\n    if (featureIndex !== -1) {\n        return getPropertiesForIndex(data, geometryIndex, featureIndex);\n    }\n    return null;\n}\nfunction getPropertiesForIndex(data, propertiesIndex, numericPropsIndex) {\n    const feature = {\n        properties: {\n            ...data.properties[propertiesIndex]\n        }\n    };\n    for(const prop in data.numericProps){\n        feature.properties[prop] = data.numericProps[prop].value[numericPropsIndex];\n    }\n    return feature;\n}\nfunction calculatePickingColors(geojsonBinary, encodePickingColor) {\n    const pickingColors = {\n        points: null,\n        lines: null,\n        polygons: null\n    };\n    for(const key in pickingColors){\n        const featureIds = geojsonBinary[key].globalFeatureIds.value;\n        pickingColors[key] = new Uint8ClampedArray(featureIds.length * 3);\n        const pickingColor = [];\n        for(let i = 0; i < featureIds.length; i++){\n            encodePickingColor(featureIds[i], pickingColor);\n            pickingColors[key][i * 3 + 0] = pickingColor[0];\n            pickingColors[key][i * 3 + 1] = pickingColor[1];\n            pickingColors[key][i * 3 + 2] = pickingColor[2];\n        }\n    }\n    return pickingColors;\n} //# sourceMappingURL=geojson-binary.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2dlb2pzb24tbGF5ZXIvZ2VvanNvbi1iaW5hcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTQSwwQkFBMEJDLElBQUksRUFBRUMsS0FBSztJQUNuRCxJQUFJLENBQUNELE1BQU07UUFDVCxPQUFPO0lBQ1Q7SUFFQSxNQUFNRSxlQUFlLGtCQUFrQkYsT0FBT0EsS0FBS0csWUFBWSxDQUFDRixNQUFNLEdBQUdBO0lBQ3pFLE1BQU1HLGdCQUFnQkosS0FBS0ssVUFBVSxDQUFDQyxLQUFLLENBQUNKLGFBQWE7SUFFekQsSUFBSUEsaUJBQWlCLENBQUMsR0FBRztRQUN2QixPQUFPSyxzQkFBc0JQLE1BQU1JLGVBQWVGO0lBQ3BEO0lBRUEsT0FBTztBQUNUO0FBRUEsU0FBU0ssc0JBQXNCUCxJQUFJLEVBQUVRLGVBQWUsRUFBRUMsaUJBQWlCO0lBQ3JFLE1BQU1DLFVBQVU7UUFDZEMsWUFBWTtZQUFFLEdBQUdYLEtBQUtXLFVBQVUsQ0FBQ0gsZ0JBQWdCO1FBQ2pEO0lBQ0Y7SUFFQSxJQUFLLE1BQU1JLFFBQVFaLEtBQUthLFlBQVksQ0FBRTtRQUNwQ0gsUUFBUUMsVUFBVSxDQUFDQyxLQUFLLEdBQUdaLEtBQUthLFlBQVksQ0FBQ0QsS0FBSyxDQUFDTixLQUFLLENBQUNHLGtCQUFrQjtJQUM3RTtJQUVBLE9BQU9DO0FBQ1Q7QUFFTyxTQUFTSSx1QkFBdUJDLGFBQWEsRUFBRUMsa0JBQWtCO0lBQ3RFLE1BQU1DLGdCQUFnQjtRQUNwQkMsUUFBUTtRQUNSQyxPQUFPO1FBQ1BDLFVBQVU7SUFDWjtJQUVBLElBQUssTUFBTUMsT0FBT0osY0FBZTtRQUMvQixNQUFNWixhQUFhVSxhQUFhLENBQUNNLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNoQixLQUFLO1FBQzVEVyxhQUFhLENBQUNJLElBQUksR0FBRyxJQUFJRSxrQkFBa0JsQixXQUFXbUIsTUFBTSxHQUFHO1FBQy9ELE1BQU1DLGVBQWUsRUFBRTtRQUV2QixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSXJCLFdBQVdtQixNQUFNLEVBQUVFLElBQUs7WUFDMUNWLG1CQUFtQlgsVUFBVSxDQUFDcUIsRUFBRSxFQUFFRDtZQUNsQ1IsYUFBYSxDQUFDSSxJQUFJLENBQUNLLElBQUksSUFBSSxFQUFFLEdBQUdELFlBQVksQ0FBQyxFQUFFO1lBQy9DUixhQUFhLENBQUNJLElBQUksQ0FBQ0ssSUFBSSxJQUFJLEVBQUUsR0FBR0QsWUFBWSxDQUFDLEVBQUU7WUFDL0NSLGFBQWEsQ0FBQ0ksSUFBSSxDQUFDSyxJQUFJLElBQUksRUFBRSxHQUFHRCxZQUFZLENBQUMsRUFBRTtRQUNqRDtJQUNGO0lBRUEsT0FBT1I7QUFDVCxFQUNBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9nZW9qc29uLWxheWVyL2dlb2pzb24tYmluYXJ5LmpzPzBmY2YiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGJpbmFyeVRvRmVhdHVyZUZvckFjY2Vzb3IoZGF0YSwgaW5kZXgpIHtcbiAgaWYgKCFkYXRhKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBmZWF0dXJlSW5kZXggPSAnc3RhcnRJbmRpY2VzJyBpbiBkYXRhID8gZGF0YS5zdGFydEluZGljZXNbaW5kZXhdIDogaW5kZXg7XG4gIGNvbnN0IGdlb21ldHJ5SW5kZXggPSBkYXRhLmZlYXR1cmVJZHMudmFsdWVbZmVhdHVyZUluZGV4XTtcblxuICBpZiAoZmVhdHVyZUluZGV4ICE9PSAtMSkge1xuICAgIHJldHVybiBnZXRQcm9wZXJ0aWVzRm9ySW5kZXgoZGF0YSwgZ2VvbWV0cnlJbmRleCwgZmVhdHVyZUluZGV4KTtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBnZXRQcm9wZXJ0aWVzRm9ySW5kZXgoZGF0YSwgcHJvcGVydGllc0luZGV4LCBudW1lcmljUHJvcHNJbmRleCkge1xuICBjb25zdCBmZWF0dXJlID0ge1xuICAgIHByb3BlcnRpZXM6IHsgLi4uZGF0YS5wcm9wZXJ0aWVzW3Byb3BlcnRpZXNJbmRleF1cbiAgICB9XG4gIH07XG5cbiAgZm9yIChjb25zdCBwcm9wIGluIGRhdGEubnVtZXJpY1Byb3BzKSB7XG4gICAgZmVhdHVyZS5wcm9wZXJ0aWVzW3Byb3BdID0gZGF0YS5udW1lcmljUHJvcHNbcHJvcF0udmFsdWVbbnVtZXJpY1Byb3BzSW5kZXhdO1xuICB9XG5cbiAgcmV0dXJuIGZlYXR1cmU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVQaWNraW5nQ29sb3JzKGdlb2pzb25CaW5hcnksIGVuY29kZVBpY2tpbmdDb2xvcikge1xuICBjb25zdCBwaWNraW5nQ29sb3JzID0ge1xuICAgIHBvaW50czogbnVsbCxcbiAgICBsaW5lczogbnVsbCxcbiAgICBwb2x5Z29uczogbnVsbFxuICB9O1xuXG4gIGZvciAoY29uc3Qga2V5IGluIHBpY2tpbmdDb2xvcnMpIHtcbiAgICBjb25zdCBmZWF0dXJlSWRzID0gZ2VvanNvbkJpbmFyeVtrZXldLmdsb2JhbEZlYXR1cmVJZHMudmFsdWU7XG4gICAgcGlja2luZ0NvbG9yc1trZXldID0gbmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGZlYXR1cmVJZHMubGVuZ3RoICogMyk7XG4gICAgY29uc3QgcGlja2luZ0NvbG9yID0gW107XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZlYXR1cmVJZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGVuY29kZVBpY2tpbmdDb2xvcihmZWF0dXJlSWRzW2ldLCBwaWNraW5nQ29sb3IpO1xuICAgICAgcGlja2luZ0NvbG9yc1trZXldW2kgKiAzICsgMF0gPSBwaWNraW5nQ29sb3JbMF07XG4gICAgICBwaWNraW5nQ29sb3JzW2tleV1baSAqIDMgKyAxXSA9IHBpY2tpbmdDb2xvclsxXTtcbiAgICAgIHBpY2tpbmdDb2xvcnNba2V5XVtpICogMyArIDJdID0gcGlja2luZ0NvbG9yWzJdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwaWNraW5nQ29sb3JzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2VvanNvbi1iaW5hcnkuanMubWFwIl0sIm5hbWVzIjpbImJpbmFyeVRvRmVhdHVyZUZvckFjY2Vzb3IiLCJkYXRhIiwiaW5kZXgiLCJmZWF0dXJlSW5kZXgiLCJzdGFydEluZGljZXMiLCJnZW9tZXRyeUluZGV4IiwiZmVhdHVyZUlkcyIsInZhbHVlIiwiZ2V0UHJvcGVydGllc0ZvckluZGV4IiwicHJvcGVydGllc0luZGV4IiwibnVtZXJpY1Byb3BzSW5kZXgiLCJmZWF0dXJlIiwicHJvcGVydGllcyIsInByb3AiLCJudW1lcmljUHJvcHMiLCJjYWxjdWxhdGVQaWNraW5nQ29sb3JzIiwiZ2VvanNvbkJpbmFyeSIsImVuY29kZVBpY2tpbmdDb2xvciIsInBpY2tpbmdDb2xvcnMiLCJwb2ludHMiLCJsaW5lcyIsInBvbHlnb25zIiwia2V5IiwiZ2xvYmFsRmVhdHVyZUlkcyIsIlVpbnQ4Q2xhbXBlZEFycmF5IiwibGVuZ3RoIiwicGlja2luZ0NvbG9yIiwiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLayerPropsFromBinary: () => (/* binding */ createLayerPropsFromBinary),\n/* harmony export */   createLayerPropsFromFeatures: () => (/* binding */ createLayerPropsFromFeatures)\n/* harmony export */ });\n/* harmony import */ var _geojson_binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geojson-binary */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js\");\n\nfunction createEmptyLayerProps() {\n    return {\n        points: {},\n        lines: {},\n        polygons: {},\n        polygonsOutline: {}\n    };\n}\nfunction getCoordinates(f) {\n    return f.geometry.coordinates;\n}\nfunction createLayerPropsFromFeatures(features, featuresDiff) {\n    const layerProps = createEmptyLayerProps();\n    const { pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures } = features;\n    layerProps.points.data = pointFeatures;\n    layerProps.points._dataDiff = featuresDiff.pointFeatures && (()=>featuresDiff.pointFeatures);\n    layerProps.points.getPosition = getCoordinates;\n    layerProps.lines.data = lineFeatures;\n    layerProps.lines._dataDiff = featuresDiff.lineFeatures && (()=>featuresDiff.lineFeatures);\n    layerProps.lines.getPath = getCoordinates;\n    layerProps.polygons.data = polygonFeatures;\n    layerProps.polygons._dataDiff = featuresDiff.polygonFeatures && (()=>featuresDiff.polygonFeatures);\n    layerProps.polygons.getPolygon = getCoordinates;\n    layerProps.polygonsOutline.data = polygonOutlineFeatures;\n    layerProps.polygonsOutline._dataDiff = featuresDiff.polygonOutlineFeatures && (()=>featuresDiff.polygonOutlineFeatures);\n    layerProps.polygonsOutline.getPath = getCoordinates;\n    return layerProps;\n}\nfunction createLayerPropsFromBinary(geojsonBinary, encodePickingColor) {\n    const layerProps = createEmptyLayerProps();\n    const { points, lines, polygons } = geojsonBinary;\n    const customPickingColors = (0,_geojson_binary__WEBPACK_IMPORTED_MODULE_0__.calculatePickingColors)(geojsonBinary, encodePickingColor);\n    layerProps.points.data = {\n        length: points.positions.value.length / points.positions.size,\n        attributes: {\n            ...points.attributes,\n            getPosition: points.positions,\n            instancePickingColors: {\n                size: 3,\n                value: customPickingColors.points\n            }\n        },\n        properties: points.properties,\n        numericProps: points.numericProps,\n        featureIds: points.featureIds\n    };\n    layerProps.lines.data = {\n        length: lines.pathIndices.value.length - 1,\n        startIndices: lines.pathIndices.value,\n        attributes: {\n            ...lines.attributes,\n            getPath: lines.positions,\n            instancePickingColors: {\n                size: 3,\n                value: customPickingColors.lines\n            }\n        },\n        properties: lines.properties,\n        numericProps: lines.numericProps,\n        featureIds: lines.featureIds\n    };\n    layerProps.lines._pathType = \"open\";\n    layerProps.polygons.data = {\n        length: polygons.polygonIndices.value.length - 1,\n        startIndices: polygons.polygonIndices.value,\n        attributes: {\n            ...polygons.attributes,\n            getPolygon: polygons.positions,\n            pickingColors: {\n                size: 3,\n                value: customPickingColors.polygons\n            }\n        },\n        properties: polygons.properties,\n        numericProps: polygons.numericProps,\n        featureIds: polygons.featureIds\n    };\n    layerProps.polygons._normalize = false;\n    if (polygons.triangles) {\n        layerProps.polygons.data.attributes.indices = polygons.triangles.value;\n    }\n    layerProps.polygonsOutline.data = {\n        length: polygons.primitivePolygonIndices.value.length - 1,\n        startIndices: polygons.primitivePolygonIndices.value,\n        attributes: {\n            ...polygons.attributes,\n            getPath: polygons.positions,\n            instancePickingColors: {\n                size: 3,\n                value: customPickingColors.polygons\n            }\n        },\n        properties: polygons.properties,\n        numericProps: polygons.numericProps,\n        featureIds: polygons.featureIds\n    };\n    layerProps.polygonsOutline._pathType = \"open\";\n    return layerProps;\n} //# sourceMappingURL=geojson-layer-props.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GeoJsonLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/utils.js\");\n/* harmony import */ var _geojson_binary__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./geojson-binary */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js\");\n/* harmony import */ var _sub_layer_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sub-layer-map */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js\");\n/* harmony import */ var _geojson__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./geojson */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js\");\n/* harmony import */ var _geojson_layer_props__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geojson-layer-props */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js\");\n\n\n\n\n\n\n\nconst FEATURE_TYPES = [\n    \"points\",\n    \"linestrings\",\n    \"polygons\"\n];\nconst defaultProps = {\n    ...(0,_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.getDefaultProps)(_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.POINT_LAYER.circle),\n    ...(0,_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.getDefaultProps)(_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.POINT_LAYER.icon),\n    ...(0,_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.getDefaultProps)(_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.POINT_LAYER.text),\n    ...(0,_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.getDefaultProps)(_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.LINE_LAYER),\n    ...(0,_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.getDefaultProps)(_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.POLYGON_LAYER),\n    stroked: true,\n    filled: true,\n    extruded: false,\n    wireframe: false,\n    _full3d: false,\n    iconAtlas: {\n        type: \"object\",\n        value: null\n    },\n    iconMapping: {\n        type: \"object\",\n        value: {}\n    },\n    getIcon: {\n        type: \"accessor\",\n        value: (f)=>f.properties.icon\n    },\n    getText: {\n        type: \"accessor\",\n        value: (f)=>f.properties.text\n    },\n    pointType: \"circle\",\n    getRadius: {\n        deprecatedFor: \"getPointRadius\"\n    }\n};\nclass GeoJsonLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    initializeState() {\n        this.state = {\n            layerProps: {},\n            features: {}\n        };\n    }\n    updateState({ props, changeFlags }) {\n        if (!changeFlags.dataChanged) {\n            return;\n        }\n        const { data } = this.props;\n        const binary = data && \"points\" in data && \"polygons\" in data && \"lines\" in data;\n        this.setState({\n            binary\n        });\n        if (binary) {\n            this._updateStateBinary({\n                props,\n                changeFlags\n            });\n        } else {\n            this._updateStateJSON({\n                props,\n                changeFlags\n            });\n        }\n    }\n    _updateStateBinary({ props, changeFlags }) {\n        const layerProps = (0,_geojson_layer_props__WEBPACK_IMPORTED_MODULE_3__.createLayerPropsFromBinary)(props.data, this.encodePickingColor);\n        this.setState({\n            layerProps\n        });\n    }\n    _updateStateJSON({ props, changeFlags }) {\n        const features = (0,_geojson__WEBPACK_IMPORTED_MODULE_4__.getGeojsonFeatures)(props.data);\n        const wrapFeature = this.getSubLayerRow.bind(this);\n        let newFeatures = {};\n        const featuresDiff = {};\n        if (Array.isArray(changeFlags.dataChanged)) {\n            const oldFeatures = this.state.features;\n            for(const key in oldFeatures){\n                newFeatures[key] = oldFeatures[key].slice();\n                featuresDiff[key] = [];\n            }\n            for (const dataRange of changeFlags.dataChanged){\n                const partialFeatures = (0,_geojson__WEBPACK_IMPORTED_MODULE_4__.separateGeojsonFeatures)(features, wrapFeature, dataRange);\n                for(const key in oldFeatures){\n                    featuresDiff[key].push((0,_utils__WEBPACK_IMPORTED_MODULE_5__.replaceInRange)({\n                        data: newFeatures[key],\n                        getIndex: (f)=>f.__source.index,\n                        dataRange,\n                        replace: partialFeatures[key]\n                    }));\n                }\n            }\n        } else {\n            newFeatures = (0,_geojson__WEBPACK_IMPORTED_MODULE_4__.separateGeojsonFeatures)(features, wrapFeature);\n        }\n        const layerProps = (0,_geojson_layer_props__WEBPACK_IMPORTED_MODULE_3__.createLayerPropsFromFeatures)(newFeatures, featuresDiff);\n        this.setState({\n            features: newFeatures,\n            featuresDiff,\n            layerProps\n        });\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const { index, sourceLayer } = info;\n        info.featureType = FEATURE_TYPES.find((ft)=>sourceLayer.id.startsWith(\"\".concat(this.id, \"-\").concat(ft, \"-\")));\n        if (index >= 0 && sourceLayer.id.startsWith(\"\".concat(this.id, \"-points-text\")) && this.state.binary) {\n            info.index = this.props.data.points.globalFeatureIds.value[index];\n        }\n        return info;\n    }\n    _updateAutoHighlight(info) {\n        const pointLayerIdPrefix = \"\".concat(this.id, \"-points-\");\n        const sourceIsPoints = info.featureType === \"points\";\n        for (const layer of this.getSubLayers()){\n            if (layer.id.startsWith(pointLayerIdPrefix) === sourceIsPoints) {\n                layer.updateAutoHighlight(info);\n            }\n        }\n    }\n    _renderPolygonLayer() {\n        const { extruded, wireframe } = this.props;\n        const { layerProps } = this.state;\n        const id = \"polygons-fill\";\n        const PolygonFillLayer = this.shouldRenderSubLayer(id, layerProps.polygons.data) && this.getSubLayerClass(id, _sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.POLYGON_LAYER.type);\n        if (PolygonFillLayer) {\n            const forwardedProps = (0,_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.forwardProps)(this, _sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.POLYGON_LAYER.props);\n            const useLineColor = extruded && wireframe;\n            if (!useLineColor) {\n                delete forwardedProps.getLineColor;\n            }\n            forwardedProps.updateTriggers.lineColors = useLineColor;\n            return new PolygonFillLayer(forwardedProps, this.getSubLayerProps({\n                id,\n                updateTriggers: forwardedProps.updateTriggers\n            }), layerProps.polygons);\n        }\n        return null;\n    }\n    _renderLineLayers() {\n        const { extruded, stroked } = this.props;\n        const { layerProps } = this.state;\n        const polygonStrokeLayerId = \"polygons-stroke\";\n        const lineStringsLayerId = \"linestrings\";\n        const PolygonStrokeLayer = !extruded && stroked && this.shouldRenderSubLayer(polygonStrokeLayerId, layerProps.polygonsOutline.data) && this.getSubLayerClass(polygonStrokeLayerId, _sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.LINE_LAYER.type);\n        const LineStringsLayer = this.shouldRenderSubLayer(lineStringsLayerId, layerProps.lines.data) && this.getSubLayerClass(lineStringsLayerId, _sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.LINE_LAYER.type);\n        if (PolygonStrokeLayer || LineStringsLayer) {\n            const forwardedProps = (0,_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.forwardProps)(this, _sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.LINE_LAYER.props);\n            return [\n                PolygonStrokeLayer && new PolygonStrokeLayer(forwardedProps, this.getSubLayerProps({\n                    id: polygonStrokeLayerId,\n                    updateTriggers: forwardedProps.updateTriggers\n                }), layerProps.polygonsOutline),\n                LineStringsLayer && new LineStringsLayer(forwardedProps, this.getSubLayerProps({\n                    id: lineStringsLayerId,\n                    updateTriggers: forwardedProps.updateTriggers\n                }), layerProps.lines)\n            ];\n        }\n        return null;\n    }\n    _renderPointLayers() {\n        const { pointType } = this.props;\n        const { layerProps, binary } = this.state;\n        let { highlightedObjectIndex } = this.props;\n        if (!binary && Number.isFinite(highlightedObjectIndex)) {\n            highlightedObjectIndex = layerProps.points.data.findIndex((d)=>d.__source.index === highlightedObjectIndex);\n        }\n        const types = new Set(pointType.split(\"+\"));\n        const pointLayers = [];\n        for (const type of types){\n            const id = \"points-\".concat(type);\n            const PointLayerMapping = _sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.POINT_LAYER[type];\n            const PointsLayer = PointLayerMapping && this.shouldRenderSubLayer(id, layerProps.points.data) && this.getSubLayerClass(id, PointLayerMapping.type);\n            if (PointsLayer) {\n                const forwardedProps = (0,_sub_layer_map__WEBPACK_IMPORTED_MODULE_1__.forwardProps)(this, PointLayerMapping.props);\n                let pointsLayerProps = layerProps.points;\n                if (type === \"text\" && binary) {\n                    const { instancePickingColors, ...rest } = pointsLayerProps.data.attributes;\n                    pointsLayerProps = {\n                        ...pointsLayerProps,\n                        data: {\n                            ...pointsLayerProps.data,\n                            attributes: rest\n                        }\n                    };\n                }\n                pointLayers.push(new PointsLayer(forwardedProps, this.getSubLayerProps({\n                    id,\n                    updateTriggers: forwardedProps.updateTriggers,\n                    highlightedObjectIndex\n                }), pointsLayerProps));\n            }\n        }\n        return pointLayers;\n    }\n    renderLayers() {\n        const { extruded } = this.props;\n        const polygonFillLayer = this._renderPolygonLayer();\n        const lineLayers = this._renderLineLayers();\n        const pointLayers = this._renderPointLayers();\n        return [\n            !extruded && polygonFillLayer,\n            lineLayers,\n            pointLayers,\n            extruded && polygonFillLayer\n        ];\n    }\n    getSubLayerAccessor(accessor) {\n        const { binary } = this.state;\n        if (!binary || typeof accessor !== \"function\") {\n            return super.getSubLayerAccessor(accessor);\n        }\n        return (object, info)=>{\n            const { data, index } = info;\n            const feature = (0,_geojson_binary__WEBPACK_IMPORTED_MODULE_6__.binaryToFeatureForAccesor)(data, index);\n            return accessor(feature, info);\n        };\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(GeoJsonLayer, \"layerName\", \"GeoJsonLayer\");\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(GeoJsonLayer, \"defaultProps\", defaultProps); //# sourceMappingURL=geojson-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2dlb2pzb24tbGF5ZXIvZ2VvanNvbi1sYXllci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3RTtBQUN6QjtBQUNMO0FBQ21CO0FBQzJDO0FBQ2hDO0FBQ3lCO0FBQ2pHLE1BQU1hLGdCQUFnQjtJQUFDO0lBQVU7SUFBZTtDQUFXO0FBQzNELE1BQU1DLGVBQWU7SUFBRSxHQUFHUCwrREFBZUEsQ0FBQ0gsdURBQVdBLENBQUNXLE1BQU0sQ0FBQztJQUMzRCxHQUFHUiwrREFBZUEsQ0FBQ0gsdURBQVdBLENBQUNZLElBQUksQ0FBQztJQUNwQyxHQUFHVCwrREFBZUEsQ0FBQ0gsdURBQVdBLENBQUNhLElBQUksQ0FBQztJQUNwQyxHQUFHViwrREFBZUEsQ0FBQ0Ysc0RBQVVBLENBQUM7SUFDOUIsR0FBR0UsK0RBQWVBLENBQUNELHlEQUFhQSxDQUFDO0lBQ2pDWSxTQUFTO0lBQ1RDLFFBQVE7SUFDUkMsVUFBVTtJQUNWQyxXQUFXO0lBQ1hDLFNBQVM7SUFDVEMsV0FBVztRQUNUQyxNQUFNO1FBQ05DLE9BQU87SUFDVDtJQUNBQyxhQUFhO1FBQ1hGLE1BQU07UUFDTkMsT0FBTyxDQUFDO0lBQ1Y7SUFDQUUsU0FBUztRQUNQSCxNQUFNO1FBQ05DLE9BQU9HLENBQUFBLElBQUtBLEVBQUVDLFVBQVUsQ0FBQ2IsSUFBSTtJQUMvQjtJQUNBYyxTQUFTO1FBQ1BOLE1BQU07UUFDTkMsT0FBT0csQ0FBQUEsSUFBS0EsRUFBRUMsVUFBVSxDQUFDWixJQUFJO0lBQy9CO0lBQ0FjLFdBQVc7SUFDWEMsV0FBVztRQUNUQyxlQUFlO0lBQ2pCO0FBQ0Y7QUFDZSxNQUFNQyxxQkFBcUJqQyxxREFBY0E7SUFDdERrQyxrQkFBa0I7UUFDaEIsSUFBSSxDQUFDQyxLQUFLLEdBQUc7WUFDWEMsWUFBWSxDQUFDO1lBQ2JDLFVBQVUsQ0FBQztRQUNiO0lBQ0Y7SUFFQUMsWUFBWSxFQUNWQyxLQUFLLEVBQ0xDLFdBQVcsRUFDWixFQUFFO1FBQ0QsSUFBSSxDQUFDQSxZQUFZQyxXQUFXLEVBQUU7WUFDNUI7UUFDRjtRQUVBLE1BQU0sRUFDSkMsSUFBSSxFQUNMLEdBQUcsSUFBSSxDQUFDSCxLQUFLO1FBQ2QsTUFBTUksU0FBU0QsUUFBUSxZQUFZQSxRQUFRLGNBQWNBLFFBQVEsV0FBV0E7UUFDNUUsSUFBSSxDQUFDRSxRQUFRLENBQUM7WUFDWkQ7UUFDRjtRQUVBLElBQUlBLFFBQVE7WUFDVixJQUFJLENBQUNFLGtCQUFrQixDQUFDO2dCQUN0Qk47Z0JBQ0FDO1lBQ0Y7UUFDRixPQUFPO1lBQ0wsSUFBSSxDQUFDTSxnQkFBZ0IsQ0FBQztnQkFDcEJQO2dCQUNBQztZQUNGO1FBQ0Y7SUFDRjtJQUVBSyxtQkFBbUIsRUFDakJOLEtBQUssRUFDTEMsV0FBVyxFQUNaLEVBQUU7UUFDRCxNQUFNSixhQUFhekIsZ0ZBQTBCQSxDQUFDNEIsTUFBTUcsSUFBSSxFQUFFLElBQUksQ0FBQ0ssa0JBQWtCO1FBQ2pGLElBQUksQ0FBQ0gsUUFBUSxDQUFDO1lBQ1pSO1FBQ0Y7SUFDRjtJQUVBVSxpQkFBaUIsRUFDZlAsS0FBSyxFQUNMQyxXQUFXLEVBQ1osRUFBRTtRQUNELE1BQU1ILFdBQVc3Qiw0REFBa0JBLENBQUMrQixNQUFNRyxJQUFJO1FBQzlDLE1BQU1NLGNBQWMsSUFBSSxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQyxJQUFJO1FBQ2pELElBQUlDLGNBQWMsQ0FBQztRQUNuQixNQUFNQyxlQUFlLENBQUM7UUFFdEIsSUFBSUMsTUFBTUMsT0FBTyxDQUFDZCxZQUFZQyxXQUFXLEdBQUc7WUFDMUMsTUFBTWMsY0FBYyxJQUFJLENBQUNwQixLQUFLLENBQUNFLFFBQVE7WUFFdkMsSUFBSyxNQUFNbUIsT0FBT0QsWUFBYTtnQkFDN0JKLFdBQVcsQ0FBQ0ssSUFBSSxHQUFHRCxXQUFXLENBQUNDLElBQUksQ0FBQ0MsS0FBSztnQkFDekNMLFlBQVksQ0FBQ0ksSUFBSSxHQUFHLEVBQUU7WUFDeEI7WUFFQSxLQUFLLE1BQU1FLGFBQWFsQixZQUFZQyxXQUFXLENBQUU7Z0JBQy9DLE1BQU1rQixrQkFBa0JsRCxpRUFBdUJBLENBQUM0QixVQUFVVyxhQUFhVTtnQkFFdkUsSUFBSyxNQUFNRixPQUFPRCxZQUFhO29CQUM3QkgsWUFBWSxDQUFDSSxJQUFJLENBQUNJLElBQUksQ0FBQzNELHNEQUFjQSxDQUFDO3dCQUNwQ3lDLE1BQU1TLFdBQVcsQ0FBQ0ssSUFBSTt3QkFDdEJLLFVBQVVsQyxDQUFBQSxJQUFLQSxFQUFFbUMsUUFBUSxDQUFDQyxLQUFLO3dCQUMvQkw7d0JBQ0FNLFNBQVNMLGVBQWUsQ0FBQ0gsSUFBSTtvQkFDL0I7Z0JBQ0Y7WUFDRjtRQUNGLE9BQU87WUFDTEwsY0FBYzFDLGlFQUF1QkEsQ0FBQzRCLFVBQVVXO1FBQ2xEO1FBRUEsTUFBTVosYUFBYTFCLGtGQUE0QkEsQ0FBQ3lDLGFBQWFDO1FBQzdELElBQUksQ0FBQ1IsUUFBUSxDQUFDO1lBQ1pQLFVBQVVjO1lBQ1ZDO1lBQ0FoQjtRQUNGO0lBQ0Y7SUFFQTZCLGVBQWVDLE1BQU0sRUFBRTtRQUNyQixNQUFNQyxPQUFPLEtBQUssQ0FBQ0YsZUFBZUM7UUFDbEMsTUFBTSxFQUNKSCxLQUFLLEVBQ0xLLFdBQVcsRUFDWixHQUFHRDtRQUNKQSxLQUFLRSxXQUFXLEdBQUd6RCxjQUFjMEQsSUFBSSxDQUFDQyxDQUFBQSxLQUFNSCxZQUFZSSxFQUFFLENBQUNDLFVBQVUsQ0FBQyxHQUFHQyxNQUFNLENBQUMsSUFBSSxDQUFDRixFQUFFLEVBQUUsS0FBS0UsTUFBTSxDQUFDSCxJQUFJO1FBRXpHLElBQUlSLFNBQVMsS0FBS0ssWUFBWUksRUFBRSxDQUFDQyxVQUFVLENBQUMsR0FBR0MsTUFBTSxDQUFDLElBQUksQ0FBQ0YsRUFBRSxFQUFFLG9CQUFvQixJQUFJLENBQUNyQyxLQUFLLENBQUNRLE1BQU0sRUFBRTtZQUNwR3dCLEtBQUtKLEtBQUssR0FBRyxJQUFJLENBQUN4QixLQUFLLENBQUNHLElBQUksQ0FBQ2lDLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUNwRCxLQUFLLENBQUN1QyxNQUFNO1FBQ25FO1FBRUEsT0FBT0k7SUFDVDtJQUVBVSxxQkFBcUJWLElBQUksRUFBRTtRQUN6QixNQUFNVyxxQkFBcUIsR0FBR0osTUFBTSxDQUFDLElBQUksQ0FBQ0YsRUFBRSxFQUFFO1FBQzlDLE1BQU1PLGlCQUFpQlosS0FBS0UsV0FBVyxLQUFLO1FBRTVDLEtBQUssTUFBTVcsU0FBUyxJQUFJLENBQUNDLFlBQVksR0FBSTtZQUN2QyxJQUFJRCxNQUFNUixFQUFFLENBQUNDLFVBQVUsQ0FBQ0ssd0JBQXdCQyxnQkFBZ0I7Z0JBQzlEQyxNQUFNRSxtQkFBbUIsQ0FBQ2Y7WUFDNUI7UUFDRjtJQUNGO0lBRUFnQixzQkFBc0I7UUFDcEIsTUFBTSxFQUNKaEUsUUFBUSxFQUNSQyxTQUFTLEVBQ1YsR0FBRyxJQUFJLENBQUNtQixLQUFLO1FBQ2QsTUFBTSxFQUNKSCxVQUFVLEVBQ1gsR0FBRyxJQUFJLENBQUNELEtBQUs7UUFDZCxNQUFNcUMsS0FBSztRQUNYLE1BQU1ZLG1CQUFtQixJQUFJLENBQUNDLG9CQUFvQixDQUFDYixJQUFJcEMsV0FBV2tELFFBQVEsQ0FBQzVDLElBQUksS0FBSyxJQUFJLENBQUM2QyxnQkFBZ0IsQ0FBQ2YsSUFBSW5FLHlEQUFhQSxDQUFDa0IsSUFBSTtRQUVoSSxJQUFJNkQsa0JBQWtCO1lBQ3BCLE1BQU1JLGlCQUFpQmpGLDREQUFZQSxDQUFDLElBQUksRUFBRUYseURBQWFBLENBQUNrQyxLQUFLO1lBQzdELE1BQU1rRCxlQUFldEUsWUFBWUM7WUFFakMsSUFBSSxDQUFDcUUsY0FBYztnQkFDakIsT0FBT0QsZUFBZUUsWUFBWTtZQUNwQztZQUVBRixlQUFlRyxjQUFjLENBQUNDLFVBQVUsR0FBR0g7WUFDM0MsT0FBTyxJQUFJTCxpQkFBaUJJLGdCQUFnQixJQUFJLENBQUNLLGdCQUFnQixDQUFDO2dCQUNoRXJCO2dCQUNBbUIsZ0JBQWdCSCxlQUFlRyxjQUFjO1lBQy9DLElBQUl2RCxXQUFXa0QsUUFBUTtRQUN6QjtRQUVBLE9BQU87SUFDVDtJQUVBUSxvQkFBb0I7UUFDbEIsTUFBTSxFQUNKM0UsUUFBUSxFQUNSRixPQUFPLEVBQ1IsR0FBRyxJQUFJLENBQUNzQixLQUFLO1FBQ2QsTUFBTSxFQUNKSCxVQUFVLEVBQ1gsR0FBRyxJQUFJLENBQUNELEtBQUs7UUFDZCxNQUFNNEQsdUJBQXVCO1FBQzdCLE1BQU1DLHFCQUFxQjtRQUMzQixNQUFNQyxxQkFBcUIsQ0FBQzlFLFlBQVlGLFdBQVcsSUFBSSxDQUFDb0Usb0JBQW9CLENBQUNVLHNCQUFzQjNELFdBQVc4RCxlQUFlLENBQUN4RCxJQUFJLEtBQUssSUFBSSxDQUFDNkMsZ0JBQWdCLENBQUNRLHNCQUFzQjNGLHNEQUFVQSxDQUFDbUIsSUFBSTtRQUNsTSxNQUFNNEUsbUJBQW1CLElBQUksQ0FBQ2Qsb0JBQW9CLENBQUNXLG9CQUFvQjVELFdBQVdnRSxLQUFLLENBQUMxRCxJQUFJLEtBQUssSUFBSSxDQUFDNkMsZ0JBQWdCLENBQUNTLG9CQUFvQjVGLHNEQUFVQSxDQUFDbUIsSUFBSTtRQUUxSixJQUFJMEUsc0JBQXNCRSxrQkFBa0I7WUFDMUMsTUFBTVgsaUJBQWlCakYsNERBQVlBLENBQUMsSUFBSSxFQUFFSCxzREFBVUEsQ0FBQ21DLEtBQUs7WUFDMUQsT0FBTztnQkFBQzBELHNCQUFzQixJQUFJQSxtQkFBbUJULGdCQUFnQixJQUFJLENBQUNLLGdCQUFnQixDQUFDO29CQUN6RnJCLElBQUl1QjtvQkFDSkosZ0JBQWdCSCxlQUFlRyxjQUFjO2dCQUMvQyxJQUFJdkQsV0FBVzhELGVBQWU7Z0JBQUdDLG9CQUFvQixJQUFJQSxpQkFBaUJYLGdCQUFnQixJQUFJLENBQUNLLGdCQUFnQixDQUFDO29CQUM5R3JCLElBQUl3QjtvQkFDSkwsZ0JBQWdCSCxlQUFlRyxjQUFjO2dCQUMvQyxJQUFJdkQsV0FBV2dFLEtBQUs7YUFBRTtRQUN4QjtRQUVBLE9BQU87SUFDVDtJQUVBQyxxQkFBcUI7UUFDbkIsTUFBTSxFQUNKdkUsU0FBUyxFQUNWLEdBQUcsSUFBSSxDQUFDUyxLQUFLO1FBQ2QsTUFBTSxFQUNKSCxVQUFVLEVBQ1ZPLE1BQU0sRUFDUCxHQUFHLElBQUksQ0FBQ1IsS0FBSztRQUNkLElBQUksRUFDRm1FLHNCQUFzQixFQUN2QixHQUFHLElBQUksQ0FBQy9ELEtBQUs7UUFFZCxJQUFJLENBQUNJLFVBQVU0RCxPQUFPQyxRQUFRLENBQUNGLHlCQUF5QjtZQUN0REEseUJBQXlCbEUsV0FBV3VDLE1BQU0sQ0FBQ2pDLElBQUksQ0FBQytELFNBQVMsQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRTVDLFFBQVEsQ0FBQ0MsS0FBSyxLQUFLdUM7UUFDdEY7UUFFQSxNQUFNSyxRQUFRLElBQUlDLElBQUk5RSxVQUFVK0UsS0FBSyxDQUFDO1FBQ3RDLE1BQU1DLGNBQWMsRUFBRTtRQUV0QixLQUFLLE1BQU12RixRQUFRb0YsTUFBTztZQUN4QixNQUFNbkMsS0FBSyxVQUFVRSxNQUFNLENBQUNuRDtZQUM1QixNQUFNd0Ysb0JBQW9CNUcsdURBQVcsQ0FBQ29CLEtBQUs7WUFDM0MsTUFBTXlGLGNBQWNELHFCQUFxQixJQUFJLENBQUMxQixvQkFBb0IsQ0FBQ2IsSUFBSXBDLFdBQVd1QyxNQUFNLENBQUNqQyxJQUFJLEtBQUssSUFBSSxDQUFDNkMsZ0JBQWdCLENBQUNmLElBQUl1QyxrQkFBa0J4RixJQUFJO1lBRWxKLElBQUl5RixhQUFhO2dCQUNmLE1BQU14QixpQkFBaUJqRiw0REFBWUEsQ0FBQyxJQUFJLEVBQUV3RyxrQkFBa0J4RSxLQUFLO2dCQUNqRSxJQUFJMEUsbUJBQW1CN0UsV0FBV3VDLE1BQU07Z0JBRXhDLElBQUlwRCxTQUFTLFVBQVVvQixRQUFRO29CQUM3QixNQUFNLEVBQ0p1RSxxQkFBcUIsRUFDckIsR0FBR0MsTUFDSixHQUFHRixpQkFBaUJ2RSxJQUFJLENBQUMwRSxVQUFVO29CQUNwQ0gsbUJBQW1CO3dCQUFFLEdBQUdBLGdCQUFnQjt3QkFDdEN2RSxNQUFNOzRCQUFFLEdBQUd1RSxpQkFBaUJ2RSxJQUFJOzRCQUM5QjBFLFlBQVlEO3dCQUNkO29CQUNGO2dCQUNGO2dCQUVBTCxZQUFZbEQsSUFBSSxDQUFDLElBQUlvRCxZQUFZeEIsZ0JBQWdCLElBQUksQ0FBQ0ssZ0JBQWdCLENBQUM7b0JBQ3JFckI7b0JBQ0FtQixnQkFBZ0JILGVBQWVHLGNBQWM7b0JBQzdDVztnQkFDRixJQUFJVztZQUNOO1FBQ0Y7UUFFQSxPQUFPSDtJQUNUO0lBRUFPLGVBQWU7UUFDYixNQUFNLEVBQ0psRyxRQUFRLEVBQ1QsR0FBRyxJQUFJLENBQUNvQixLQUFLO1FBRWQsTUFBTStFLG1CQUFtQixJQUFJLENBQUNuQyxtQkFBbUI7UUFFakQsTUFBTW9DLGFBQWEsSUFBSSxDQUFDekIsaUJBQWlCO1FBRXpDLE1BQU1nQixjQUFjLElBQUksQ0FBQ1Qsa0JBQWtCO1FBRTNDLE9BQU87WUFBQyxDQUFDbEYsWUFBWW1HO1lBQWtCQztZQUFZVDtZQUFhM0YsWUFBWW1HO1NBQWlCO0lBQy9GO0lBRUFFLG9CQUFvQkMsUUFBUSxFQUFFO1FBQzVCLE1BQU0sRUFDSjlFLE1BQU0sRUFDUCxHQUFHLElBQUksQ0FBQ1IsS0FBSztRQUVkLElBQUksQ0FBQ1EsVUFBVSxPQUFPOEUsYUFBYSxZQUFZO1lBQzdDLE9BQU8sS0FBSyxDQUFDRCxvQkFBb0JDO1FBQ25DO1FBRUEsT0FBTyxDQUFDQyxRQUFRdkQ7WUFDZCxNQUFNLEVBQ0p6QixJQUFJLEVBQ0pxQixLQUFLLEVBQ04sR0FBR0k7WUFDSixNQUFNd0QsVUFBVXpILDBFQUF5QkEsQ0FBQ3dDLE1BQU1xQjtZQUNoRCxPQUFPMEQsU0FBU0UsU0FBU3hEO1FBQzNCO0lBQ0Y7QUFFRjtBQUVBcEUscUZBQWVBLENBQUNrQyxjQUFjLGFBQWE7QUFFM0NsQyxxRkFBZUEsQ0FBQ2tDLGNBQWMsZ0JBQWdCcEIsZUFDOUMseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2dlb2pzb24tbGF5ZXIvZ2VvanNvbi1sYXllci5qcz80NjUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgeyBDb21wb3NpdGVMYXllciB9IGZyb20gJ0BkZWNrLmdsL2NvcmUnO1xuaW1wb3J0IHsgcmVwbGFjZUluUmFuZ2UgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgeyBiaW5hcnlUb0ZlYXR1cmVGb3JBY2Nlc29yIH0gZnJvbSAnLi9nZW9qc29uLWJpbmFyeSc7XG5pbXBvcnQgeyBQT0lOVF9MQVlFUiwgTElORV9MQVlFUiwgUE9MWUdPTl9MQVlFUiwgZ2V0RGVmYXVsdFByb3BzLCBmb3J3YXJkUHJvcHMgfSBmcm9tICcuL3N1Yi1sYXllci1tYXAnO1xuaW1wb3J0IHsgZ2V0R2VvanNvbkZlYXR1cmVzLCBzZXBhcmF0ZUdlb2pzb25GZWF0dXJlcyB9IGZyb20gJy4vZ2VvanNvbic7XG5pbXBvcnQgeyBjcmVhdGVMYXllclByb3BzRnJvbUZlYXR1cmVzLCBjcmVhdGVMYXllclByb3BzRnJvbUJpbmFyeSB9IGZyb20gJy4vZ2VvanNvbi1sYXllci1wcm9wcyc7XG5jb25zdCBGRUFUVVJFX1RZUEVTID0gWydwb2ludHMnLCAnbGluZXN0cmluZ3MnLCAncG9seWdvbnMnXTtcbmNvbnN0IGRlZmF1bHRQcm9wcyA9IHsgLi4uZ2V0RGVmYXVsdFByb3BzKFBPSU5UX0xBWUVSLmNpcmNsZSksXG4gIC4uLmdldERlZmF1bHRQcm9wcyhQT0lOVF9MQVlFUi5pY29uKSxcbiAgLi4uZ2V0RGVmYXVsdFByb3BzKFBPSU5UX0xBWUVSLnRleHQpLFxuICAuLi5nZXREZWZhdWx0UHJvcHMoTElORV9MQVlFUiksXG4gIC4uLmdldERlZmF1bHRQcm9wcyhQT0xZR09OX0xBWUVSKSxcbiAgc3Ryb2tlZDogdHJ1ZSxcbiAgZmlsbGVkOiB0cnVlLFxuICBleHRydWRlZDogZmFsc2UsXG4gIHdpcmVmcmFtZTogZmFsc2UsXG4gIF9mdWxsM2Q6IGZhbHNlLFxuICBpY29uQXRsYXM6IHtcbiAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICB2YWx1ZTogbnVsbFxuICB9LFxuICBpY29uTWFwcGluZzoge1xuICAgIHR5cGU6ICdvYmplY3QnLFxuICAgIHZhbHVlOiB7fVxuICB9LFxuICBnZXRJY29uOiB7XG4gICAgdHlwZTogJ2FjY2Vzc29yJyxcbiAgICB2YWx1ZTogZiA9PiBmLnByb3BlcnRpZXMuaWNvblxuICB9LFxuICBnZXRUZXh0OiB7XG4gICAgdHlwZTogJ2FjY2Vzc29yJyxcbiAgICB2YWx1ZTogZiA9PiBmLnByb3BlcnRpZXMudGV4dFxuICB9LFxuICBwb2ludFR5cGU6ICdjaXJjbGUnLFxuICBnZXRSYWRpdXM6IHtcbiAgICBkZXByZWNhdGVkRm9yOiAnZ2V0UG9pbnRSYWRpdXMnXG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHZW9Kc29uTGF5ZXIgZXh0ZW5kcyBDb21wb3NpdGVMYXllciB7XG4gIGluaXRpYWxpemVTdGF0ZSgpIHtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbGF5ZXJQcm9wczoge30sXG4gICAgICBmZWF0dXJlczoge31cbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlU3RhdGUoe1xuICAgIHByb3BzLFxuICAgIGNoYW5nZUZsYWdzXG4gIH0pIHtcbiAgICBpZiAoIWNoYW5nZUZsYWdzLmRhdGFDaGFuZ2VkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgZGF0YVxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGJpbmFyeSA9IGRhdGEgJiYgJ3BvaW50cycgaW4gZGF0YSAmJiAncG9seWdvbnMnIGluIGRhdGEgJiYgJ2xpbmVzJyBpbiBkYXRhO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgYmluYXJ5XG4gICAgfSk7XG5cbiAgICBpZiAoYmluYXJ5KSB7XG4gICAgICB0aGlzLl91cGRhdGVTdGF0ZUJpbmFyeSh7XG4gICAgICAgIHByb3BzLFxuICAgICAgICBjaGFuZ2VGbGFnc1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3VwZGF0ZVN0YXRlSlNPTih7XG4gICAgICAgIHByb3BzLFxuICAgICAgICBjaGFuZ2VGbGFnc1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZVN0YXRlQmluYXJ5KHtcbiAgICBwcm9wcyxcbiAgICBjaGFuZ2VGbGFnc1xuICB9KSB7XG4gICAgY29uc3QgbGF5ZXJQcm9wcyA9IGNyZWF0ZUxheWVyUHJvcHNGcm9tQmluYXJ5KHByb3BzLmRhdGEsIHRoaXMuZW5jb2RlUGlja2luZ0NvbG9yKTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIGxheWVyUHJvcHNcbiAgICB9KTtcbiAgfVxuXG4gIF91cGRhdGVTdGF0ZUpTT04oe1xuICAgIHByb3BzLFxuICAgIGNoYW5nZUZsYWdzXG4gIH0pIHtcbiAgICBjb25zdCBmZWF0dXJlcyA9IGdldEdlb2pzb25GZWF0dXJlcyhwcm9wcy5kYXRhKTtcbiAgICBjb25zdCB3cmFwRmVhdHVyZSA9IHRoaXMuZ2V0U3ViTGF5ZXJSb3cuYmluZCh0aGlzKTtcbiAgICBsZXQgbmV3RmVhdHVyZXMgPSB7fTtcbiAgICBjb25zdCBmZWF0dXJlc0RpZmYgPSB7fTtcblxuICAgIGlmIChBcnJheS5pc0FycmF5KGNoYW5nZUZsYWdzLmRhdGFDaGFuZ2VkKSkge1xuICAgICAgY29uc3Qgb2xkRmVhdHVyZXMgPSB0aGlzLnN0YXRlLmZlYXR1cmVzO1xuXG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiBvbGRGZWF0dXJlcykge1xuICAgICAgICBuZXdGZWF0dXJlc1trZXldID0gb2xkRmVhdHVyZXNba2V5XS5zbGljZSgpO1xuICAgICAgICBmZWF0dXJlc0RpZmZba2V5XSA9IFtdO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGNvbnN0IGRhdGFSYW5nZSBvZiBjaGFuZ2VGbGFncy5kYXRhQ2hhbmdlZCkge1xuICAgICAgICBjb25zdCBwYXJ0aWFsRmVhdHVyZXMgPSBzZXBhcmF0ZUdlb2pzb25GZWF0dXJlcyhmZWF0dXJlcywgd3JhcEZlYXR1cmUsIGRhdGFSYW5nZSk7XG5cbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gb2xkRmVhdHVyZXMpIHtcbiAgICAgICAgICBmZWF0dXJlc0RpZmZba2V5XS5wdXNoKHJlcGxhY2VJblJhbmdlKHtcbiAgICAgICAgICAgIGRhdGE6IG5ld0ZlYXR1cmVzW2tleV0sXG4gICAgICAgICAgICBnZXRJbmRleDogZiA9PiBmLl9fc291cmNlLmluZGV4LFxuICAgICAgICAgICAgZGF0YVJhbmdlLFxuICAgICAgICAgICAgcmVwbGFjZTogcGFydGlhbEZlYXR1cmVzW2tleV1cbiAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbmV3RmVhdHVyZXMgPSBzZXBhcmF0ZUdlb2pzb25GZWF0dXJlcyhmZWF0dXJlcywgd3JhcEZlYXR1cmUpO1xuICAgIH1cblxuICAgIGNvbnN0IGxheWVyUHJvcHMgPSBjcmVhdGVMYXllclByb3BzRnJvbUZlYXR1cmVzKG5ld0ZlYXR1cmVzLCBmZWF0dXJlc0RpZmYpO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZmVhdHVyZXM6IG5ld0ZlYXR1cmVzLFxuICAgICAgZmVhdHVyZXNEaWZmLFxuICAgICAgbGF5ZXJQcm9wc1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0UGlja2luZ0luZm8ocGFyYW1zKSB7XG4gICAgY29uc3QgaW5mbyA9IHN1cGVyLmdldFBpY2tpbmdJbmZvKHBhcmFtcyk7XG4gICAgY29uc3Qge1xuICAgICAgaW5kZXgsXG4gICAgICBzb3VyY2VMYXllclxuICAgIH0gPSBpbmZvO1xuICAgIGluZm8uZmVhdHVyZVR5cGUgPSBGRUFUVVJFX1RZUEVTLmZpbmQoZnQgPT4gc291cmNlTGF5ZXIuaWQuc3RhcnRzV2l0aChcIlwiLmNvbmNhdCh0aGlzLmlkLCBcIi1cIikuY29uY2F0KGZ0LCBcIi1cIikpKTtcblxuICAgIGlmIChpbmRleCA+PSAwICYmIHNvdXJjZUxheWVyLmlkLnN0YXJ0c1dpdGgoXCJcIi5jb25jYXQodGhpcy5pZCwgXCItcG9pbnRzLXRleHRcIikpICYmIHRoaXMuc3RhdGUuYmluYXJ5KSB7XG4gICAgICBpbmZvLmluZGV4ID0gdGhpcy5wcm9wcy5kYXRhLnBvaW50cy5nbG9iYWxGZWF0dXJlSWRzLnZhbHVlW2luZGV4XTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5mbztcbiAgfVxuXG4gIF91cGRhdGVBdXRvSGlnaGxpZ2h0KGluZm8pIHtcbiAgICBjb25zdCBwb2ludExheWVySWRQcmVmaXggPSBcIlwiLmNvbmNhdCh0aGlzLmlkLCBcIi1wb2ludHMtXCIpO1xuICAgIGNvbnN0IHNvdXJjZUlzUG9pbnRzID0gaW5mby5mZWF0dXJlVHlwZSA9PT0gJ3BvaW50cyc7XG5cbiAgICBmb3IgKGNvbnN0IGxheWVyIG9mIHRoaXMuZ2V0U3ViTGF5ZXJzKCkpIHtcbiAgICAgIGlmIChsYXllci5pZC5zdGFydHNXaXRoKHBvaW50TGF5ZXJJZFByZWZpeCkgPT09IHNvdXJjZUlzUG9pbnRzKSB7XG4gICAgICAgIGxheWVyLnVwZGF0ZUF1dG9IaWdobGlnaHQoaW5mbyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgX3JlbmRlclBvbHlnb25MYXllcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBleHRydWRlZCxcbiAgICAgIHdpcmVmcmFtZVxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHtcbiAgICAgIGxheWVyUHJvcHNcbiAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBpZCA9ICdwb2x5Z29ucy1maWxsJztcbiAgICBjb25zdCBQb2x5Z29uRmlsbExheWVyID0gdGhpcy5zaG91bGRSZW5kZXJTdWJMYXllcihpZCwgbGF5ZXJQcm9wcy5wb2x5Z29ucy5kYXRhKSAmJiB0aGlzLmdldFN1YkxheWVyQ2xhc3MoaWQsIFBPTFlHT05fTEFZRVIudHlwZSk7XG5cbiAgICBpZiAoUG9seWdvbkZpbGxMYXllcikge1xuICAgICAgY29uc3QgZm9yd2FyZGVkUHJvcHMgPSBmb3J3YXJkUHJvcHModGhpcywgUE9MWUdPTl9MQVlFUi5wcm9wcyk7XG4gICAgICBjb25zdCB1c2VMaW5lQ29sb3IgPSBleHRydWRlZCAmJiB3aXJlZnJhbWU7XG5cbiAgICAgIGlmICghdXNlTGluZUNvbG9yKSB7XG4gICAgICAgIGRlbGV0ZSBmb3J3YXJkZWRQcm9wcy5nZXRMaW5lQ29sb3I7XG4gICAgICB9XG5cbiAgICAgIGZvcndhcmRlZFByb3BzLnVwZGF0ZVRyaWdnZXJzLmxpbmVDb2xvcnMgPSB1c2VMaW5lQ29sb3I7XG4gICAgICByZXR1cm4gbmV3IFBvbHlnb25GaWxsTGF5ZXIoZm9yd2FyZGVkUHJvcHMsIHRoaXMuZ2V0U3ViTGF5ZXJQcm9wcyh7XG4gICAgICAgIGlkLFxuICAgICAgICB1cGRhdGVUcmlnZ2VyczogZm9yd2FyZGVkUHJvcHMudXBkYXRlVHJpZ2dlcnNcbiAgICAgIH0pLCBsYXllclByb3BzLnBvbHlnb25zKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIF9yZW5kZXJMaW5lTGF5ZXJzKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGV4dHJ1ZGVkLFxuICAgICAgc3Ryb2tlZFxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHtcbiAgICAgIGxheWVyUHJvcHNcbiAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCBwb2x5Z29uU3Ryb2tlTGF5ZXJJZCA9ICdwb2x5Z29ucy1zdHJva2UnO1xuICAgIGNvbnN0IGxpbmVTdHJpbmdzTGF5ZXJJZCA9ICdsaW5lc3RyaW5ncyc7XG4gICAgY29uc3QgUG9seWdvblN0cm9rZUxheWVyID0gIWV4dHJ1ZGVkICYmIHN0cm9rZWQgJiYgdGhpcy5zaG91bGRSZW5kZXJTdWJMYXllcihwb2x5Z29uU3Ryb2tlTGF5ZXJJZCwgbGF5ZXJQcm9wcy5wb2x5Z29uc091dGxpbmUuZGF0YSkgJiYgdGhpcy5nZXRTdWJMYXllckNsYXNzKHBvbHlnb25TdHJva2VMYXllcklkLCBMSU5FX0xBWUVSLnR5cGUpO1xuICAgIGNvbnN0IExpbmVTdHJpbmdzTGF5ZXIgPSB0aGlzLnNob3VsZFJlbmRlclN1YkxheWVyKGxpbmVTdHJpbmdzTGF5ZXJJZCwgbGF5ZXJQcm9wcy5saW5lcy5kYXRhKSAmJiB0aGlzLmdldFN1YkxheWVyQ2xhc3MobGluZVN0cmluZ3NMYXllcklkLCBMSU5FX0xBWUVSLnR5cGUpO1xuXG4gICAgaWYgKFBvbHlnb25TdHJva2VMYXllciB8fCBMaW5lU3RyaW5nc0xheWVyKSB7XG4gICAgICBjb25zdCBmb3J3YXJkZWRQcm9wcyA9IGZvcndhcmRQcm9wcyh0aGlzLCBMSU5FX0xBWUVSLnByb3BzKTtcbiAgICAgIHJldHVybiBbUG9seWdvblN0cm9rZUxheWVyICYmIG5ldyBQb2x5Z29uU3Ryb2tlTGF5ZXIoZm9yd2FyZGVkUHJvcHMsIHRoaXMuZ2V0U3ViTGF5ZXJQcm9wcyh7XG4gICAgICAgIGlkOiBwb2x5Z29uU3Ryb2tlTGF5ZXJJZCxcbiAgICAgICAgdXBkYXRlVHJpZ2dlcnM6IGZvcndhcmRlZFByb3BzLnVwZGF0ZVRyaWdnZXJzXG4gICAgICB9KSwgbGF5ZXJQcm9wcy5wb2x5Z29uc091dGxpbmUpLCBMaW5lU3RyaW5nc0xheWVyICYmIG5ldyBMaW5lU3RyaW5nc0xheWVyKGZvcndhcmRlZFByb3BzLCB0aGlzLmdldFN1YkxheWVyUHJvcHMoe1xuICAgICAgICBpZDogbGluZVN0cmluZ3NMYXllcklkLFxuICAgICAgICB1cGRhdGVUcmlnZ2VyczogZm9yd2FyZGVkUHJvcHMudXBkYXRlVHJpZ2dlcnNcbiAgICAgIH0pLCBsYXllclByb3BzLmxpbmVzKV07XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBfcmVuZGVyUG9pbnRMYXllcnMoKSB7XG4gICAgY29uc3Qge1xuICAgICAgcG9pbnRUeXBlXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3Qge1xuICAgICAgbGF5ZXJQcm9wcyxcbiAgICAgIGJpbmFyeVxuICAgIH0gPSB0aGlzLnN0YXRlO1xuICAgIGxldCB7XG4gICAgICBoaWdobGlnaHRlZE9iamVjdEluZGV4XG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAoIWJpbmFyeSAmJiBOdW1iZXIuaXNGaW5pdGUoaGlnaGxpZ2h0ZWRPYmplY3RJbmRleCkpIHtcbiAgICAgIGhpZ2hsaWdodGVkT2JqZWN0SW5kZXggPSBsYXllclByb3BzLnBvaW50cy5kYXRhLmZpbmRJbmRleChkID0+IGQuX19zb3VyY2UuaW5kZXggPT09IGhpZ2hsaWdodGVkT2JqZWN0SW5kZXgpO1xuICAgIH1cblxuICAgIGNvbnN0IHR5cGVzID0gbmV3IFNldChwb2ludFR5cGUuc3BsaXQoJysnKSk7XG4gICAgY29uc3QgcG9pbnRMYXllcnMgPSBbXTtcblxuICAgIGZvciAoY29uc3QgdHlwZSBvZiB0eXBlcykge1xuICAgICAgY29uc3QgaWQgPSBcInBvaW50cy1cIi5jb25jYXQodHlwZSk7XG4gICAgICBjb25zdCBQb2ludExheWVyTWFwcGluZyA9IFBPSU5UX0xBWUVSW3R5cGVdO1xuICAgICAgY29uc3QgUG9pbnRzTGF5ZXIgPSBQb2ludExheWVyTWFwcGluZyAmJiB0aGlzLnNob3VsZFJlbmRlclN1YkxheWVyKGlkLCBsYXllclByb3BzLnBvaW50cy5kYXRhKSAmJiB0aGlzLmdldFN1YkxheWVyQ2xhc3MoaWQsIFBvaW50TGF5ZXJNYXBwaW5nLnR5cGUpO1xuXG4gICAgICBpZiAoUG9pbnRzTGF5ZXIpIHtcbiAgICAgICAgY29uc3QgZm9yd2FyZGVkUHJvcHMgPSBmb3J3YXJkUHJvcHModGhpcywgUG9pbnRMYXllck1hcHBpbmcucHJvcHMpO1xuICAgICAgICBsZXQgcG9pbnRzTGF5ZXJQcm9wcyA9IGxheWVyUHJvcHMucG9pbnRzO1xuXG4gICAgICAgIGlmICh0eXBlID09PSAndGV4dCcgJiYgYmluYXJ5KSB7XG4gICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgaW5zdGFuY2VQaWNraW5nQ29sb3JzLFxuICAgICAgICAgICAgLi4ucmVzdFxuICAgICAgICAgIH0gPSBwb2ludHNMYXllclByb3BzLmRhdGEuYXR0cmlidXRlcztcbiAgICAgICAgICBwb2ludHNMYXllclByb3BzID0geyAuLi5wb2ludHNMYXllclByb3BzLFxuICAgICAgICAgICAgZGF0YTogeyAuLi5wb2ludHNMYXllclByb3BzLmRhdGEsXG4gICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHJlc3RcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgcG9pbnRMYXllcnMucHVzaChuZXcgUG9pbnRzTGF5ZXIoZm9yd2FyZGVkUHJvcHMsIHRoaXMuZ2V0U3ViTGF5ZXJQcm9wcyh7XG4gICAgICAgICAgaWQsXG4gICAgICAgICAgdXBkYXRlVHJpZ2dlcnM6IGZvcndhcmRlZFByb3BzLnVwZGF0ZVRyaWdnZXJzLFxuICAgICAgICAgIGhpZ2hsaWdodGVkT2JqZWN0SW5kZXhcbiAgICAgICAgfSksIHBvaW50c0xheWVyUHJvcHMpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcG9pbnRMYXllcnM7XG4gIH1cblxuICByZW5kZXJMYXllcnMoKSB7XG4gICAgY29uc3Qge1xuICAgICAgZXh0cnVkZWRcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IHBvbHlnb25GaWxsTGF5ZXIgPSB0aGlzLl9yZW5kZXJQb2x5Z29uTGF5ZXIoKTtcblxuICAgIGNvbnN0IGxpbmVMYXllcnMgPSB0aGlzLl9yZW5kZXJMaW5lTGF5ZXJzKCk7XG5cbiAgICBjb25zdCBwb2ludExheWVycyA9IHRoaXMuX3JlbmRlclBvaW50TGF5ZXJzKCk7XG5cbiAgICByZXR1cm4gWyFleHRydWRlZCAmJiBwb2x5Z29uRmlsbExheWVyLCBsaW5lTGF5ZXJzLCBwb2ludExheWVycywgZXh0cnVkZWQgJiYgcG9seWdvbkZpbGxMYXllcl07XG4gIH1cblxuICBnZXRTdWJMYXllckFjY2Vzc29yKGFjY2Vzc29yKSB7XG4gICAgY29uc3Qge1xuICAgICAgYmluYXJ5XG4gICAgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICBpZiAoIWJpbmFyeSB8fCB0eXBlb2YgYWNjZXNzb3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiBzdXBlci5nZXRTdWJMYXllckFjY2Vzc29yKGFjY2Vzc29yKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKG9iamVjdCwgaW5mbykgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBkYXRhLFxuICAgICAgICBpbmRleFxuICAgICAgfSA9IGluZm87XG4gICAgICBjb25zdCBmZWF0dXJlID0gYmluYXJ5VG9GZWF0dXJlRm9yQWNjZXNvcihkYXRhLCBpbmRleCk7XG4gICAgICByZXR1cm4gYWNjZXNzb3IoZmVhdHVyZSwgaW5mbyk7XG4gICAgfTtcbiAgfVxuXG59XG5cbl9kZWZpbmVQcm9wZXJ0eShHZW9Kc29uTGF5ZXIsIFwibGF5ZXJOYW1lXCIsICdHZW9Kc29uTGF5ZXInKTtcblxuX2RlZmluZVByb3BlcnR5KEdlb0pzb25MYXllciwgXCJkZWZhdWx0UHJvcHNcIiwgZGVmYXVsdFByb3BzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdlb2pzb24tbGF5ZXIuanMubWFwIl0sIm5hbWVzIjpbIl9kZWZpbmVQcm9wZXJ0eSIsIkNvbXBvc2l0ZUxheWVyIiwicmVwbGFjZUluUmFuZ2UiLCJiaW5hcnlUb0ZlYXR1cmVGb3JBY2Nlc29yIiwiUE9JTlRfTEFZRVIiLCJMSU5FX0xBWUVSIiwiUE9MWUdPTl9MQVlFUiIsImdldERlZmF1bHRQcm9wcyIsImZvcndhcmRQcm9wcyIsImdldEdlb2pzb25GZWF0dXJlcyIsInNlcGFyYXRlR2VvanNvbkZlYXR1cmVzIiwiY3JlYXRlTGF5ZXJQcm9wc0Zyb21GZWF0dXJlcyIsImNyZWF0ZUxheWVyUHJvcHNGcm9tQmluYXJ5IiwiRkVBVFVSRV9UWVBFUyIsImRlZmF1bHRQcm9wcyIsImNpcmNsZSIsImljb24iLCJ0ZXh0Iiwic3Ryb2tlZCIsImZpbGxlZCIsImV4dHJ1ZGVkIiwid2lyZWZyYW1lIiwiX2Z1bGwzZCIsImljb25BdGxhcyIsInR5cGUiLCJ2YWx1ZSIsImljb25NYXBwaW5nIiwiZ2V0SWNvbiIsImYiLCJwcm9wZXJ0aWVzIiwiZ2V0VGV4dCIsInBvaW50VHlwZSIsImdldFJhZGl1cyIsImRlcHJlY2F0ZWRGb3IiLCJHZW9Kc29uTGF5ZXIiLCJpbml0aWFsaXplU3RhdGUiLCJzdGF0ZSIsImxheWVyUHJvcHMiLCJmZWF0dXJlcyIsInVwZGF0ZVN0YXRlIiwicHJvcHMiLCJjaGFuZ2VGbGFncyIsImRhdGFDaGFuZ2VkIiwiZGF0YSIsImJpbmFyeSIsInNldFN0YXRlIiwiX3VwZGF0ZVN0YXRlQmluYXJ5IiwiX3VwZGF0ZVN0YXRlSlNPTiIsImVuY29kZVBpY2tpbmdDb2xvciIsIndyYXBGZWF0dXJlIiwiZ2V0U3ViTGF5ZXJSb3ciLCJiaW5kIiwibmV3RmVhdHVyZXMiLCJmZWF0dXJlc0RpZmYiLCJBcnJheSIsImlzQXJyYXkiLCJvbGRGZWF0dXJlcyIsImtleSIsInNsaWNlIiwiZGF0YVJhbmdlIiwicGFydGlhbEZlYXR1cmVzIiwicHVzaCIsImdldEluZGV4IiwiX19zb3VyY2UiLCJpbmRleCIsInJlcGxhY2UiLCJnZXRQaWNraW5nSW5mbyIsInBhcmFtcyIsImluZm8iLCJzb3VyY2VMYXllciIsImZlYXR1cmVUeXBlIiwiZmluZCIsImZ0IiwiaWQiLCJzdGFydHNXaXRoIiwiY29uY2F0IiwicG9pbnRzIiwiZ2xvYmFsRmVhdHVyZUlkcyIsIl91cGRhdGVBdXRvSGlnaGxpZ2h0IiwicG9pbnRMYXllcklkUHJlZml4Iiwic291cmNlSXNQb2ludHMiLCJsYXllciIsImdldFN1YkxheWVycyIsInVwZGF0ZUF1dG9IaWdobGlnaHQiLCJfcmVuZGVyUG9seWdvbkxheWVyIiwiUG9seWdvbkZpbGxMYXllciIsInNob3VsZFJlbmRlclN1YkxheWVyIiwicG9seWdvbnMiLCJnZXRTdWJMYXllckNsYXNzIiwiZm9yd2FyZGVkUHJvcHMiLCJ1c2VMaW5lQ29sb3IiLCJnZXRMaW5lQ29sb3IiLCJ1cGRhdGVUcmlnZ2VycyIsImxpbmVDb2xvcnMiLCJnZXRTdWJMYXllclByb3BzIiwiX3JlbmRlckxpbmVMYXllcnMiLCJwb2x5Z29uU3Ryb2tlTGF5ZXJJZCIsImxpbmVTdHJpbmdzTGF5ZXJJZCIsIlBvbHlnb25TdHJva2VMYXllciIsInBvbHlnb25zT3V0bGluZSIsIkxpbmVTdHJpbmdzTGF5ZXIiLCJsaW5lcyIsIl9yZW5kZXJQb2ludExheWVycyIsImhpZ2hsaWdodGVkT2JqZWN0SW5kZXgiLCJOdW1iZXIiLCJpc0Zpbml0ZSIsImZpbmRJbmRleCIsImQiLCJ0eXBlcyIsIlNldCIsInNwbGl0IiwicG9pbnRMYXllcnMiLCJQb2ludExheWVyTWFwcGluZyIsIlBvaW50c0xheWVyIiwicG9pbnRzTGF5ZXJQcm9wcyIsImluc3RhbmNlUGlja2luZ0NvbG9ycyIsInJlc3QiLCJhdHRyaWJ1dGVzIiwicmVuZGVyTGF5ZXJzIiwicG9seWdvbkZpbGxMYXllciIsImxpbmVMYXllcnMiLCJnZXRTdWJMYXllckFjY2Vzc29yIiwiYWNjZXNzb3IiLCJvYmplY3QiLCJmZWF0dXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGeojsonFeatures: () => (/* binding */ getGeojsonFeatures),\n/* harmony export */   separateGeojsonFeatures: () => (/* binding */ separateGeojsonFeatures),\n/* harmony export */   validateGeometry: () => (/* binding */ validateGeometry)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\nfunction getGeojsonFeatures(geojson) {\n    if (Array.isArray(geojson)) {\n        return geojson;\n    }\n    _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(geojson.type, \"GeoJSON does not have type\");\n    switch(geojson.type){\n        case \"Feature\":\n            return [\n                geojson\n            ];\n        case \"FeatureCollection\":\n            _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(Array.isArray(geojson.features), \"GeoJSON does not have features array\");\n            return geojson.features;\n        default:\n            return [\n                {\n                    geometry: geojson\n                }\n            ];\n    }\n}\nfunction separateGeojsonFeatures(features, wrapFeature, dataRange = {}) {\n    const separated = {\n        pointFeatures: [],\n        lineFeatures: [],\n        polygonFeatures: [],\n        polygonOutlineFeatures: []\n    };\n    const { startRow = 0, endRow = features.length } = dataRange;\n    for(let featureIndex = startRow; featureIndex < endRow; featureIndex++){\n        const feature = features[featureIndex];\n        const { geometry } = feature;\n        if (!geometry) {\n            continue;\n        }\n        if (geometry.type === \"GeometryCollection\") {\n            _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(Array.isArray(geometry.geometries), \"GeoJSON does not have geometries array\");\n            const { geometries } = geometry;\n            for(let i = 0; i < geometries.length; i++){\n                const subGeometry = geometries[i];\n                separateGeometry(subGeometry, separated, wrapFeature, feature, featureIndex);\n            }\n        } else {\n            separateGeometry(geometry, separated, wrapFeature, feature, featureIndex);\n        }\n    }\n    return separated;\n}\nfunction separateGeometry(geometry, separated, wrapFeature, sourceFeature, sourceFeatureIndex) {\n    const { type, coordinates } = geometry;\n    const { pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures } = separated;\n    if (!validateGeometry(type, coordinates)) {\n        _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn(\"\".concat(type, \" coordinates are malformed\"))();\n        return;\n    }\n    switch(type){\n        case \"Point\":\n            pointFeatures.push(wrapFeature({\n                geometry\n            }, sourceFeature, sourceFeatureIndex));\n            break;\n        case \"MultiPoint\":\n            coordinates.forEach((point)=>{\n                pointFeatures.push(wrapFeature({\n                    geometry: {\n                        type: \"Point\",\n                        coordinates: point\n                    }\n                }, sourceFeature, sourceFeatureIndex));\n            });\n            break;\n        case \"LineString\":\n            lineFeatures.push(wrapFeature({\n                geometry\n            }, sourceFeature, sourceFeatureIndex));\n            break;\n        case \"MultiLineString\":\n            coordinates.forEach((path)=>{\n                lineFeatures.push(wrapFeature({\n                    geometry: {\n                        type: \"LineString\",\n                        coordinates: path\n                    }\n                }, sourceFeature, sourceFeatureIndex));\n            });\n            break;\n        case \"Polygon\":\n            polygonFeatures.push(wrapFeature({\n                geometry\n            }, sourceFeature, sourceFeatureIndex));\n            coordinates.forEach((path)=>{\n                polygonOutlineFeatures.push(wrapFeature({\n                    geometry: {\n                        type: \"LineString\",\n                        coordinates: path\n                    }\n                }, sourceFeature, sourceFeatureIndex));\n            });\n            break;\n        case \"MultiPolygon\":\n            coordinates.forEach((polygon)=>{\n                polygonFeatures.push(wrapFeature({\n                    geometry: {\n                        type: \"Polygon\",\n                        coordinates: polygon\n                    }\n                }, sourceFeature, sourceFeatureIndex));\n                polygon.forEach((path)=>{\n                    polygonOutlineFeatures.push(wrapFeature({\n                        geometry: {\n                            type: \"LineString\",\n                            coordinates: path\n                        }\n                    }, sourceFeature, sourceFeatureIndex));\n                });\n            });\n            break;\n        default:\n    }\n}\nconst COORDINATE_NEST_LEVEL = {\n    Point: 1,\n    MultiPoint: 2,\n    LineString: 2,\n    MultiLineString: 3,\n    Polygon: 3,\n    MultiPolygon: 4\n};\nfunction validateGeometry(type, coordinates) {\n    let nestLevel = COORDINATE_NEST_LEVEL[type];\n    _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(nestLevel, \"Unknown GeoJSON type \".concat(type));\n    while(coordinates && --nestLevel > 0){\n        coordinates = coordinates[0];\n    }\n    return coordinates && Number.isFinite(coordinates[0]);\n} //# sourceMappingURL=geojson.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LINE_LAYER: () => (/* binding */ LINE_LAYER),\n/* harmony export */   POINT_LAYER: () => (/* binding */ POINT_LAYER),\n/* harmony export */   POLYGON_LAYER: () => (/* binding */ POLYGON_LAYER),\n/* harmony export */   forwardProps: () => (/* binding */ forwardProps),\n/* harmony export */   getDefaultProps: () => (/* binding */ getDefaultProps)\n/* harmony export */ });\n/* harmony import */ var _icon_layer_icon_layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../icon-layer/icon-layer */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js\");\n/* harmony import */ var _scatterplot_layer_scatterplot_layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scatterplot-layer/scatterplot-layer */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js\");\n/* harmony import */ var _text_layer_text_layer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../text-layer/text-layer */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js\");\n/* harmony import */ var _path_layer_path_layer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../path-layer/path-layer */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js\");\n/* harmony import */ var _solid_polygon_layer_solid_polygon_layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../solid-polygon-layer/solid-polygon-layer */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js\");\n\n\n\n\n\nconst POINT_LAYER = {\n    circle: {\n        type: _scatterplot_layer_scatterplot_layer__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        props: {\n            filled: \"filled\",\n            stroked: \"stroked\",\n            lineWidthMaxPixels: \"lineWidthMaxPixels\",\n            lineWidthMinPixels: \"lineWidthMinPixels\",\n            lineWidthScale: \"lineWidthScale\",\n            lineWidthUnits: \"lineWidthUnits\",\n            pointRadiusMaxPixels: \"radiusMaxPixels\",\n            pointRadiusMinPixels: \"radiusMinPixels\",\n            pointRadiusScale: \"radiusScale\",\n            pointRadiusUnits: \"radiusUnits\",\n            pointAntialiasing: \"antialiasing\",\n            pointBillboard: \"billboard\",\n            getFillColor: \"getFillColor\",\n            getLineColor: \"getLineColor\",\n            getLineWidth: \"getLineWidth\",\n            getPointRadius: \"getRadius\"\n        }\n    },\n    icon: {\n        type: _icon_layer_icon_layer__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n        props: {\n            iconAtlas: \"iconAtlas\",\n            iconMapping: \"iconMapping\",\n            iconSizeMaxPixels: \"sizeMaxPixels\",\n            iconSizeMinPixels: \"sizeMinPixels\",\n            iconSizeScale: \"sizeScale\",\n            iconSizeUnits: \"sizeUnits\",\n            iconAlphaCutoff: \"alphaCutoff\",\n            iconBillboard: \"billboard\",\n            getIcon: \"getIcon\",\n            getIconAngle: \"getAngle\",\n            getIconColor: \"getColor\",\n            getIconPixelOffset: \"getPixelOffset\",\n            getIconSize: \"getSize\"\n        }\n    },\n    text: {\n        type: _text_layer_text_layer__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        props: {\n            textSizeMaxPixels: \"sizeMaxPixels\",\n            textSizeMinPixels: \"sizeMinPixels\",\n            textSizeScale: \"sizeScale\",\n            textSizeUnits: \"sizeUnits\",\n            textBackground: \"background\",\n            textBackgroundPadding: \"backgroundPadding\",\n            textFontFamily: \"fontFamily\",\n            textFontWeight: \"fontWeight\",\n            textLineHeight: \"lineHeight\",\n            textMaxWidth: \"maxWidth\",\n            textOutlineColor: \"outlineColor\",\n            textOutlineWidth: \"outlineWidth\",\n            textWordBreak: \"wordBreak\",\n            textCharacterSet: \"characterSet\",\n            textBillboard: \"billboard\",\n            textFontSettings: \"fontSettings\",\n            getText: \"getText\",\n            getTextAngle: \"getAngle\",\n            getTextColor: \"getColor\",\n            getTextPixelOffset: \"getPixelOffset\",\n            getTextSize: \"getSize\",\n            getTextAnchor: \"getTextAnchor\",\n            getTextAlignmentBaseline: \"getAlignmentBaseline\",\n            getTextBackgroundColor: \"getBackgroundColor\",\n            getTextBorderColor: \"getBorderColor\",\n            getTextBorderWidth: \"getBorderWidth\"\n        }\n    }\n};\nconst LINE_LAYER = {\n    type: _path_layer_path_layer__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    props: {\n        lineWidthUnits: \"widthUnits\",\n        lineWidthScale: \"widthScale\",\n        lineWidthMinPixels: \"widthMinPixels\",\n        lineWidthMaxPixels: \"widthMaxPixels\",\n        lineJointRounded: \"jointRounded\",\n        lineCapRounded: \"capRounded\",\n        lineMiterLimit: \"miterLimit\",\n        lineBillboard: \"billboard\",\n        getLineColor: \"getColor\",\n        getLineWidth: \"getWidth\"\n    }\n};\nconst POLYGON_LAYER = {\n    type: _solid_polygon_layer_solid_polygon_layer__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    props: {\n        extruded: \"extruded\",\n        filled: \"filled\",\n        wireframe: \"wireframe\",\n        elevationScale: \"elevationScale\",\n        material: \"material\",\n        _full3d: \"_full3d\",\n        getElevation: \"getElevation\",\n        getFillColor: \"getFillColor\",\n        getLineColor: \"getLineColor\"\n    }\n};\nfunction getDefaultProps({ type, props }) {\n    const result = {};\n    for(const key in props){\n        result[key] = type.defaultProps[props[key]];\n    }\n    return result;\n}\nfunction forwardProps(layer, mapping) {\n    const { transitions, updateTriggers } = layer.props;\n    const result = {\n        updateTriggers: {},\n        transitions: transitions && {\n            getPosition: transitions.geometry\n        }\n    };\n    for(const sourceKey in mapping){\n        const targetKey = mapping[sourceKey];\n        let value = layer.props[sourceKey];\n        if (sourceKey.startsWith(\"get\")) {\n            value = layer.getSubLayerAccessor(value);\n            result.updateTriggers[targetKey] = updateTriggers[sourceKey];\n            if (transitions) {\n                result.transitions[targetKey] = transitions[sourceKey];\n            }\n        }\n        result[targetKey] = value;\n    }\n    return result;\n} //# sourceMappingURL=sub-layer-map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float alphaCutoff;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\\n  float a = texColor.a * opacity * vColor.a;\\n\\n  if (a < alphaCutoff) {\\n    discard;\\n  }\\n\\n  gl_FragColor = vec4(color, a);\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\"); //# sourceMappingURL=icon-layer-fragment.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2ljb24tbGF5ZXIvaWNvbi1sYXllci1mcmFnbWVudC5nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSw2bEJBQTZsQixFQUFDLENBQzdtQixvREFBb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vaWNvbi1sYXllci9pY29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanM/OGFjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgaWNvbi1sYXllci1mcmFnbWVudC1zaGFkZXJcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuXFxudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xcbnVuaWZvcm0gc2FtcGxlcjJEIGljb25zVGV4dHVyZTtcXG51bmlmb3JtIGZsb2F0IGFscGhhQ3V0b2ZmO1xcblxcbnZhcnlpbmcgZmxvYXQgdkNvbG9yTW9kZTtcXG52YXJ5aW5nIHZlYzQgdkNvbG9yO1xcbnZhcnlpbmcgdmVjMiB2VGV4dHVyZUNvb3JkcztcXG52YXJ5aW5nIHZlYzIgdXY7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGdlb21ldHJ5LnV2ID0gdXY7XFxuXFxuICB2ZWM0IHRleENvbG9yID0gdGV4dHVyZTJEKGljb25zVGV4dHVyZSwgdlRleHR1cmVDb29yZHMpO1xcbiAgdmVjMyBjb2xvciA9IG1peCh0ZXhDb2xvci5yZ2IsIHZDb2xvci5yZ2IsIHZDb2xvck1vZGUpO1xcbiAgZmxvYXQgYSA9IHRleENvbG9yLmEgKiBvcGFjaXR5ICogdkNvbG9yLmE7XFxuXFxuICBpZiAoYSA8IGFscGhhQ3V0b2ZmKSB7XFxuICAgIGRpc2NhcmQ7XFxuICB9XFxuXFxuICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLCBhKTtcXG4gIERFQ0tHTF9GSUxURVJfQ09MT1IoZ2xfRnJhZ0NvbG9yLCBnZW9tZXRyeSk7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWNvbi1sYXllci1mcmFnbWVudC5nbHNsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME icon-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\nattribute vec4 instanceIconFrames;\\nattribute float instanceColorModes;\\nattribute vec2 instanceOffsets;\\nattribute vec2 instancePixelOffset;\\n\\nuniform float sizeScale;\\nuniform vec2 iconsTextureDim;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform bool billboard;\\nuniform int sizeUnits;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = angle * PI / 180.0;\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n\\n  vec2 iconSize = instanceIconFrames.zw;\\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits), \\n    sizeMinPixels, sizeMaxPixels\\n  );\\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\\n  pixelOffset += instancePixelOffset;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  }\\n\\n  vTextureCoords = mix(\\n    instanceIconFrames.xy,\\n    instanceIconFrames.xy + iconSize,\\n    (positions.xy + 1.0) / 2.0\\n  ) / iconsTextureDim;\\n\\n  vColor = instanceColors;\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n\\n  vColorMode = instanceColorModes;\\n}\\n\"); //# sourceMappingURL=icon-layer-vertex.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2ljb24tbGF5ZXIvaWNvbi1sYXllci12ZXJ0ZXguZ2xzbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsa2dGQUFrZ0YsRUFBQyxDQUNsaEYsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2ljb24tbGF5ZXIvaWNvbi1sYXllci12ZXJ0ZXguZ2xzbC5qcz81OTcwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSBpY29uLWxheWVyLXZlcnRleC1zaGFkZXJcXG5cXG5hdHRyaWJ1dGUgdmVjMiBwb3NpdGlvbnM7XFxuXFxuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VQb3NpdGlvbnM7XFxuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VQb3NpdGlvbnM2NExvdztcXG5hdHRyaWJ1dGUgZmxvYXQgaW5zdGFuY2VTaXplcztcXG5hdHRyaWJ1dGUgZmxvYXQgaW5zdGFuY2VBbmdsZXM7XFxuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VDb2xvcnM7XFxuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VQaWNraW5nQ29sb3JzO1xcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlSWNvbkZyYW1lcztcXG5hdHRyaWJ1dGUgZmxvYXQgaW5zdGFuY2VDb2xvck1vZGVzO1xcbmF0dHJpYnV0ZSB2ZWMyIGluc3RhbmNlT2Zmc2V0cztcXG5hdHRyaWJ1dGUgdmVjMiBpbnN0YW5jZVBpeGVsT2Zmc2V0O1xcblxcbnVuaWZvcm0gZmxvYXQgc2l6ZVNjYWxlO1xcbnVuaWZvcm0gdmVjMiBpY29uc1RleHR1cmVEaW07XFxudW5pZm9ybSBmbG9hdCBzaXplTWluUGl4ZWxzO1xcbnVuaWZvcm0gZmxvYXQgc2l6ZU1heFBpeGVscztcXG51bmlmb3JtIGJvb2wgYmlsbGJvYXJkO1xcbnVuaWZvcm0gaW50IHNpemVVbml0cztcXG5cXG52YXJ5aW5nIGZsb2F0IHZDb2xvck1vZGU7XFxudmFyeWluZyB2ZWM0IHZDb2xvcjtcXG52YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZHM7XFxudmFyeWluZyB2ZWMyIHV2O1xcblxcbnZlYzIgcm90YXRlX2J5X2FuZ2xlKHZlYzIgdmVydGV4LCBmbG9hdCBhbmdsZSkge1xcbiAgZmxvYXQgYW5nbGVfcmFkaWFuID0gYW5nbGUgKiBQSSAvIDE4MC4wO1xcbiAgZmxvYXQgY29zX2FuZ2xlID0gY29zKGFuZ2xlX3JhZGlhbik7XFxuICBmbG9hdCBzaW5fYW5nbGUgPSBzaW4oYW5nbGVfcmFkaWFuKTtcXG4gIG1hdDIgcm90YXRpb25NYXRyaXggPSBtYXQyKGNvc19hbmdsZSwgLXNpbl9hbmdsZSwgc2luX2FuZ2xlLCBjb3NfYW5nbGUpO1xcbiAgcmV0dXJuIHJvdGF0aW9uTWF0cml4ICogdmVydGV4O1xcbn1cXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2VvbWV0cnkud29ybGRQb3NpdGlvbiA9IGluc3RhbmNlUG9zaXRpb25zO1xcbiAgZ2VvbWV0cnkudXYgPSBwb3NpdGlvbnM7XFxuICBnZW9tZXRyeS5waWNraW5nQ29sb3IgPSBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XFxuICB1diA9IHBvc2l0aW9ucztcXG5cXG4gIHZlYzIgaWNvblNpemUgPSBpbnN0YW5jZUljb25GcmFtZXMuenc7XFxuICBmbG9hdCBzaXplUGl4ZWxzID0gY2xhbXAoXFxuICAgIHByb2plY3Rfc2l6ZV90b19waXhlbChpbnN0YW5jZVNpemVzICogc2l6ZVNjYWxlLCBzaXplVW5pdHMpLCBcXG4gICAgc2l6ZU1pblBpeGVscywgc2l6ZU1heFBpeGVsc1xcbiAgKTtcXG4gIGZsb2F0IGluc3RhbmNlU2NhbGUgPSBpY29uU2l6ZS55ID09IDAuMCA/IDAuMCA6IHNpemVQaXhlbHMgLyBpY29uU2l6ZS55O1xcbiAgdmVjMiBwaXhlbE9mZnNldCA9IHBvc2l0aW9ucyAvIDIuMCAqIGljb25TaXplICsgaW5zdGFuY2VPZmZzZXRzO1xcbiAgcGl4ZWxPZmZzZXQgPSByb3RhdGVfYnlfYW5nbGUocGl4ZWxPZmZzZXQsIGluc3RhbmNlQW5nbGVzKSAqIGluc3RhbmNlU2NhbGU7XFxuICBwaXhlbE9mZnNldCArPSBpbnN0YW5jZVBpeGVsT2Zmc2V0O1xcbiAgcGl4ZWxPZmZzZXQueSAqPSAtMS4wO1xcblxcbiAgaWYgKGJpbGxib2FyZCkgIHtcXG4gICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShpbnN0YW5jZVBvc2l0aW9ucywgaW5zdGFuY2VQb3NpdGlvbnM2NExvdywgdmVjMygwLjApLCBnZW9tZXRyeS5wb3NpdGlvbik7XFxuICAgIERFQ0tHTF9GSUxURVJfR0xfUE9TSVRJT04oZ2xfUG9zaXRpb24sIGdlb21ldHJ5KTtcXG4gICAgdmVjMyBvZmZzZXQgPSB2ZWMzKHBpeGVsT2Zmc2V0LCAwLjApO1xcbiAgICBERUNLR0xfRklMVEVSX1NJWkUob2Zmc2V0LCBnZW9tZXRyeSk7XFxuICAgIGdsX1Bvc2l0aW9uLnh5ICs9IHByb2plY3RfcGl4ZWxfc2l6ZV90b19jbGlwc3BhY2Uob2Zmc2V0Lnh5KTtcXG5cXG4gIH0gZWxzZSB7XFxuICAgIHZlYzMgb2Zmc2V0X2NvbW1vbiA9IHZlYzMocHJvamVjdF9waXhlbF9zaXplKHBpeGVsT2Zmc2V0KSwgMC4wKTtcXG4gICAgREVDS0dMX0ZJTFRFUl9TSVpFKG9mZnNldF9jb21tb24sIGdlb21ldHJ5KTtcXG4gICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShpbnN0YW5jZVBvc2l0aW9ucywgaW5zdGFuY2VQb3NpdGlvbnM2NExvdywgb2Zmc2V0X2NvbW1vbiwgZ2VvbWV0cnkucG9zaXRpb24pOyBcXG4gICAgREVDS0dMX0ZJTFRFUl9HTF9QT1NJVElPTihnbF9Qb3NpdGlvbiwgZ2VvbWV0cnkpO1xcbiAgfVxcblxcbiAgdlRleHR1cmVDb29yZHMgPSBtaXgoXFxuICAgIGluc3RhbmNlSWNvbkZyYW1lcy54eSxcXG4gICAgaW5zdGFuY2VJY29uRnJhbWVzLnh5ICsgaWNvblNpemUsXFxuICAgIChwb3NpdGlvbnMueHkgKyAxLjApIC8gMi4wXFxuICApIC8gaWNvbnNUZXh0dXJlRGltO1xcblxcbiAgdkNvbG9yID0gaW5zdGFuY2VDb2xvcnM7XFxuICBERUNLR0xfRklMVEVSX0NPTE9SKHZDb2xvciwgZ2VvbWV0cnkpO1xcblxcbiAgdkNvbG9yTW9kZSA9IGluc3RhbmNlQ29sb3JNb2RlcztcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pY29uLWxheWVyLXZlcnRleC5nbHNsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IconLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _icon_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./icon-layer-vertex.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js\");\n/* harmony import */ var _icon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./icon-layer-fragment.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js\");\n/* harmony import */ var _icon_manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icon-manager */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js\");\n\n\n\n\n\n\nconst DEFAULT_COLOR = [\n    0,\n    0,\n    0,\n    255\n];\nconst defaultProps = {\n    iconAtlas: {\n        type: \"image\",\n        value: null,\n        async: true\n    },\n    iconMapping: {\n        type: \"object\",\n        value: {},\n        async: true\n    },\n    sizeScale: {\n        type: \"number\",\n        value: 1,\n        min: 0\n    },\n    billboard: true,\n    sizeUnits: \"pixels\",\n    sizeMinPixels: {\n        type: \"number\",\n        min: 0,\n        value: 0\n    },\n    sizeMaxPixels: {\n        type: \"number\",\n        min: 0,\n        value: Number.MAX_SAFE_INTEGER\n    },\n    alphaCutoff: {\n        type: \"number\",\n        value: 0.05,\n        min: 0,\n        max: 1\n    },\n    getPosition: {\n        type: \"accessor\",\n        value: (x)=>x.position\n    },\n    getIcon: {\n        type: \"accessor\",\n        value: (x)=>x.icon\n    },\n    getColor: {\n        type: \"accessor\",\n        value: DEFAULT_COLOR\n    },\n    getSize: {\n        type: \"accessor\",\n        value: 1\n    },\n    getAngle: {\n        type: \"accessor\",\n        value: 0\n    },\n    getPixelOffset: {\n        type: \"accessor\",\n        value: [\n            0,\n            0\n        ]\n    },\n    onIconError: {\n        type: \"function\",\n        value: null,\n        optional: true\n    },\n    textureParameters: {\n        type: \"object\",\n        ignore: true\n    }\n};\nclass IconLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n    }\n    getShaders() {\n        return super.getShaders({\n            vs: _icon_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n            fs: _icon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n            modules: [\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n            ]\n        });\n    }\n    initializeState() {\n        this.state = {\n            iconManager: new _icon_manager__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this.context.gl, {\n                onUpdate: this._onUpdate.bind(this),\n                onError: this._onError.bind(this)\n            })\n        };\n        const attributeManager = this.getAttributeManager();\n        attributeManager.addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 5130,\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: \"getPosition\"\n            },\n            instanceSizes: {\n                size: 1,\n                transition: true,\n                accessor: \"getSize\",\n                defaultValue: 1\n            },\n            instanceOffsets: {\n                size: 2,\n                accessor: \"getIcon\",\n                transform: this.getInstanceOffset\n            },\n            instanceIconFrames: {\n                size: 4,\n                accessor: \"getIcon\",\n                transform: this.getInstanceIconFrame\n            },\n            instanceColorModes: {\n                size: 1,\n                type: 5121,\n                accessor: \"getIcon\",\n                transform: this.getInstanceColorMode\n            },\n            instanceColors: {\n                size: this.props.colorFormat.length,\n                type: 5121,\n                normalized: true,\n                transition: true,\n                accessor: \"getColor\",\n                defaultValue: DEFAULT_COLOR\n            },\n            instanceAngles: {\n                size: 1,\n                transition: true,\n                accessor: \"getAngle\"\n            },\n            instancePixelOffset: {\n                size: 2,\n                transition: true,\n                accessor: \"getPixelOffset\"\n            }\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, oldProps, changeFlags } = params;\n        const attributeManager = this.getAttributeManager();\n        const { iconAtlas, iconMapping, data, getIcon, textureParameters } = props;\n        const { iconManager } = this.state;\n        const prePacked = iconAtlas || this.internalState.isAsyncPropLoading(\"iconAtlas\");\n        iconManager.setProps({\n            loadOptions: props.loadOptions,\n            autoPacking: !prePacked,\n            iconAtlas,\n            iconMapping: prePacked ? iconMapping : null,\n            textureParameters\n        });\n        if (prePacked) {\n            if (oldProps.iconMapping !== props.iconMapping) {\n                attributeManager.invalidate(\"getIcon\");\n            }\n        } else if (changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon)) {\n            iconManager.packIcons(data, getIcon);\n        }\n        if (changeFlags.extensionsChanged) {\n            var _this$state$model;\n            const { gl } = this.context;\n            (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n            this.state.model = this._getModel(gl);\n            attributeManager.invalidateAll();\n        }\n    }\n    get isLoaded() {\n        return super.isLoaded && this.state.iconManager.isLoaded;\n    }\n    finalizeState(context) {\n        super.finalizeState(context);\n        this.state.iconManager.finalize();\n    }\n    draw({ uniforms }) {\n        const { sizeScale, sizeMinPixels, sizeMaxPixels, sizeUnits, billboard, alphaCutoff } = this.props;\n        const { iconManager } = this.state;\n        const iconsTexture = iconManager.getTexture();\n        if (iconsTexture) {\n            this.state.model.setUniforms(uniforms).setUniforms({\n                iconsTexture,\n                iconsTextureDim: [\n                    iconsTexture.width,\n                    iconsTexture.height\n                ],\n                sizeUnits: _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__.UNIT[sizeUnits],\n                sizeScale,\n                sizeMinPixels,\n                sizeMaxPixels,\n                billboard,\n                alphaCutoff\n            }).draw();\n        }\n    }\n    _getModel(gl) {\n        const positions = [\n            -1,\n            -1,\n            -1,\n            1,\n            1,\n            1,\n            1,\n            -1\n        ];\n        return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"](gl, {\n            ...this.getShaders(),\n            id: this.props.id,\n            geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n                drawMode: 6,\n                attributes: {\n                    positions: {\n                        size: 2,\n                        value: new Float32Array(positions)\n                    }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n    _onUpdate() {\n        this.setNeedsRedraw();\n    }\n    _onError(evt) {\n        var _this$getCurrentLayer;\n        const onIconError = (_this$getCurrentLayer = this.getCurrentLayer()) === null || _this$getCurrentLayer === void 0 ? void 0 : _this$getCurrentLayer.props.onIconError;\n        if (onIconError) {\n            onIconError(evt);\n        } else {\n            _deck_gl_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"].error(evt.error.message)();\n        }\n    }\n    getInstanceOffset(icon) {\n        const { width, height, anchorX = width / 2, anchorY = height / 2 } = this.state.iconManager.getIconMapping(icon);\n        return [\n            width / 2 - anchorX,\n            height / 2 - anchorY\n        ];\n    }\n    getInstanceColorMode(icon) {\n        const mapping = this.state.iconManager.getIconMapping(icon);\n        return mapping.mask ? 1 : 0;\n    }\n    getInstanceIconFrame(icon) {\n        const { x, y, width, height } = this.state.iconManager.getIconMapping(icon);\n        return [\n            x,\n            y,\n            width,\n            height\n        ];\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(IconLayer, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(IconLayer, \"layerName\", \"IconLayer\"); //# sourceMappingURL=icon-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildMapping: () => (/* binding */ buildMapping),\n/* harmony export */   \"default\": () => (/* binding */ IconManager),\n/* harmony export */   getDiffIcons: () => (/* binding */ getDiffIcons)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js\");\n/* harmony import */ var _loaders_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @loaders.gl/core */ \"(ssr)/./node_modules/@loaders.gl/core/dist/esm/lib/api/load.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n\n\n\n\nconst DEFAULT_CANVAS_WIDTH = 1024;\nconst DEFAULT_BUFFER = 4;\nconst noop = ()=>{};\nconst DEFAULT_TEXTURE_PARAMETERS = {\n    [10241]: 9987,\n    [10240]: 9729,\n    [10242]: 33071,\n    [10243]: 33071\n};\nfunction nextPowOfTwo(number) {\n    return Math.pow(2, Math.ceil(Math.log2(number)));\n}\nfunction resizeImage(ctx, imageData, maxWidth, maxHeight) {\n    const resizeRatio = Math.min(maxWidth / imageData.width, maxHeight / imageData.height);\n    const width = Math.floor(imageData.width * resizeRatio);\n    const height = Math.floor(imageData.height * resizeRatio);\n    if (resizeRatio === 1) {\n        return {\n            data: imageData,\n            width,\n            height\n        };\n    }\n    ctx.canvas.height = height;\n    ctx.canvas.width = width;\n    ctx.clearRect(0, 0, width, height);\n    ctx.drawImage(imageData, 0, 0, imageData.width, imageData.height, 0, 0, width, height);\n    return {\n        data: ctx.canvas,\n        width,\n        height\n    };\n}\nfunction getIconId(icon) {\n    return icon && (icon.id || icon.url);\n}\nfunction resizeTexture(texture, width, height, parameters) {\n    const oldWidth = texture.width;\n    const oldHeight = texture.height;\n    const newTexture = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"](texture.gl, {\n        width,\n        height,\n        parameters\n    });\n    (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_2__.copyToTexture)(texture, newTexture, {\n        targetY: 0,\n        width: oldWidth,\n        height: oldHeight\n    });\n    texture.delete();\n    return newTexture;\n}\nfunction buildRowMapping(mapping, columns, yOffset) {\n    for(let i = 0; i < columns.length; i++){\n        const { icon, xOffset } = columns[i];\n        const id = getIconId(icon);\n        mapping[id] = {\n            ...icon,\n            x: xOffset,\n            y: yOffset\n        };\n    }\n}\nfunction buildMapping({ icons, buffer, mapping = {}, xOffset = 0, yOffset = 0, rowHeight = 0, canvasWidth }) {\n    let columns = [];\n    for(let i = 0; i < icons.length; i++){\n        const icon = icons[i];\n        const id = getIconId(icon);\n        if (!mapping[id]) {\n            const { height, width } = icon;\n            if (xOffset + width + buffer > canvasWidth) {\n                buildRowMapping(mapping, columns, yOffset);\n                xOffset = 0;\n                yOffset = rowHeight + yOffset + buffer;\n                rowHeight = 0;\n                columns = [];\n            }\n            columns.push({\n                icon,\n                xOffset\n            });\n            xOffset = xOffset + width + buffer;\n            rowHeight = Math.max(rowHeight, height);\n        }\n    }\n    if (columns.length > 0) {\n        buildRowMapping(mapping, columns, yOffset);\n    }\n    return {\n        mapping,\n        rowHeight,\n        xOffset,\n        yOffset,\n        canvasWidth,\n        canvasHeight: nextPowOfTwo(rowHeight + yOffset + buffer)\n    };\n}\nfunction getDiffIcons(data, getIcon, cachedIcons) {\n    if (!data || !getIcon) {\n        return null;\n    }\n    cachedIcons = cachedIcons || {};\n    const icons = {};\n    const { iterable, objectInfo } = (0,_deck_gl_core__WEBPACK_IMPORTED_MODULE_3__.createIterable)(data);\n    for (const object of iterable){\n        objectInfo.index++;\n        const icon = getIcon(object, objectInfo);\n        const id = getIconId(icon);\n        if (!icon) {\n            throw new Error(\"Icon is missing.\");\n        }\n        if (!icon.url) {\n            throw new Error(\"Icon url is missing.\");\n        }\n        if (!icons[id] && (!cachedIcons[id] || icon.url !== cachedIcons[id].url)) {\n            icons[id] = {\n                ...icon,\n                source: object,\n                sourceIndex: objectInfo.index\n            };\n        }\n    }\n    return icons;\n}\nclass IconManager {\n    constructor(gl, { onUpdate = noop, onError = noop }){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"gl\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"onUpdate\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"onError\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_loadOptions\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_texture\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_externalTexture\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_mapping\", {});\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_textureParameters\", null);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_pendingCount\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_autoPacking\", false);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_xOffset\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_yOffset\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_rowHeight\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_buffer\", DEFAULT_BUFFER);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_canvasWidth\", DEFAULT_CANVAS_WIDTH);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_canvasHeight\", 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_canvas\", null);\n        this.gl = gl;\n        this.onUpdate = onUpdate;\n        this.onError = onError;\n    }\n    finalize() {\n        var _this$_texture;\n        (_this$_texture = this._texture) === null || _this$_texture === void 0 ? void 0 : _this$_texture.delete();\n    }\n    getTexture() {\n        return this._texture || this._externalTexture;\n    }\n    getIconMapping(icon) {\n        const id = this._autoPacking ? getIconId(icon) : icon;\n        return this._mapping[id] || {};\n    }\n    setProps({ loadOptions, autoPacking, iconAtlas, iconMapping, textureParameters }) {\n        if (loadOptions) {\n            this._loadOptions = loadOptions;\n        }\n        if (autoPacking !== undefined) {\n            this._autoPacking = autoPacking;\n        }\n        if (iconMapping) {\n            this._mapping = iconMapping;\n        }\n        if (iconAtlas) {\n            var _this$_texture2;\n            (_this$_texture2 = this._texture) === null || _this$_texture2 === void 0 ? void 0 : _this$_texture2.delete();\n            this._texture = null;\n            this._externalTexture = iconAtlas;\n        }\n        if (textureParameters) {\n            this._textureParameters = textureParameters;\n        }\n    }\n    get isLoaded() {\n        return this._pendingCount === 0;\n    }\n    packIcons(data, getIcon) {\n        if (!this._autoPacking || typeof document === \"undefined\") {\n            return;\n        }\n        const icons = Object.values(getDiffIcons(data, getIcon, this._mapping) || {});\n        if (icons.length > 0) {\n            const { mapping, xOffset, yOffset, rowHeight, canvasHeight } = buildMapping({\n                icons,\n                buffer: this._buffer,\n                canvasWidth: this._canvasWidth,\n                mapping: this._mapping,\n                rowHeight: this._rowHeight,\n                xOffset: this._xOffset,\n                yOffset: this._yOffset\n            });\n            this._rowHeight = rowHeight;\n            this._mapping = mapping;\n            this._xOffset = xOffset;\n            this._yOffset = yOffset;\n            this._canvasHeight = canvasHeight;\n            if (!this._texture) {\n                this._texture = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.gl, {\n                    width: this._canvasWidth,\n                    height: this._canvasHeight,\n                    parameters: this._textureParameters || DEFAULT_TEXTURE_PARAMETERS\n                });\n            }\n            if (this._texture.height !== this._canvasHeight) {\n                this._texture = resizeTexture(this._texture, this._canvasWidth, this._canvasHeight, this._textureParameters || DEFAULT_TEXTURE_PARAMETERS);\n            }\n            this.onUpdate();\n            this._canvas = this._canvas || document.createElement(\"canvas\");\n            this._loadIcons(icons);\n        }\n    }\n    _loadIcons(icons) {\n        const ctx = this._canvas.getContext(\"2d\", {\n            willReadFrequently: true\n        });\n        for (const icon of icons){\n            this._pendingCount++;\n            (0,_loaders_gl_core__WEBPACK_IMPORTED_MODULE_4__.load)(icon.url, this._loadOptions).then((imageData)=>{\n                const id = getIconId(icon);\n                const iconDef = this._mapping[id];\n                const { x, y, width: maxWidth, height: maxHeight } = iconDef;\n                const { data, width, height } = resizeImage(ctx, imageData, maxWidth, maxHeight);\n                this._texture.setSubImageData({\n                    data,\n                    x: x + (maxWidth - width) / 2,\n                    y: y + (maxHeight - height) / 2,\n                    width,\n                    height\n                });\n                iconDef.width = width;\n                iconDef.height = height;\n                this._texture.generateMipmap();\n                this.onUpdate();\n            }).catch((error)=>{\n                this.onError({\n                    url: icon.url,\n                    source: icon.source,\n                    sourceIndex: icon.sourceIndex,\n                    loadOptions: this._loadOptions,\n                    error\n                });\n            }).finally(()=>{\n                this._pendingCount--;\n            });\n        }\n    }\n} //# sourceMappingURL=icon-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME path-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float miterLimit;\\n\\nvarying vec4 vColor;\\nvarying vec2 vCornerOffset;\\nvarying float vMiterLength;\\nvarying vec2 vPathPosition;\\nvarying float vPathLength;\\nvarying float vJointType;\\n\\nvoid main(void) {\\n  geometry.uv = vPathPosition;\\n\\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\\n      discard;\\n    }\\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = vColor;\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\"); //# sourceMappingURL=path-layer-fragment.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3BhdGgtbGF5ZXIvcGF0aC1sYXllci1mcmFnbWVudC5nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxxb0JBQXFvQixFQUFDLENBQ3JwQixvREFBb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vcGF0aC1sYXllci9wYXRoLWxheWVyLWZyYWdtZW50Lmdsc2wuanM/MmIwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgcGF0aC1sYXllci1mcmFnbWVudC1zaGFkZXJcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuXFxudW5pZm9ybSBmbG9hdCBtaXRlckxpbWl0O1xcblxcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxudmFyeWluZyB2ZWMyIHZDb3JuZXJPZmZzZXQ7XFxudmFyeWluZyBmbG9hdCB2TWl0ZXJMZW5ndGg7XFxudmFyeWluZyB2ZWMyIHZQYXRoUG9zaXRpb247XFxudmFyeWluZyBmbG9hdCB2UGF0aExlbmd0aDtcXG52YXJ5aW5nIGZsb2F0IHZKb2ludFR5cGU7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGdlb21ldHJ5LnV2ID0gdlBhdGhQb3NpdGlvbjtcXG5cXG4gIGlmICh2UGF0aFBvc2l0aW9uLnkgPCAwLjAgfHwgdlBhdGhQb3NpdGlvbi55ID4gdlBhdGhMZW5ndGgpIHtcXG4gICAgaWYgKHZKb2ludFR5cGUgPiAwLjUgJiYgbGVuZ3RoKHZDb3JuZXJPZmZzZXQpID4gMS4wKSB7XFxuICAgICAgZGlzY2FyZDtcXG4gICAgfVxcbiAgICBpZiAodkpvaW50VHlwZSA8IDAuNSAmJiB2TWl0ZXJMZW5ndGggPiBtaXRlckxpbWl0ICsgMS4wKSB7XFxuICAgICAgZGlzY2FyZDtcXG4gICAgfVxcbiAgfVxcbiAgZ2xfRnJhZ0NvbG9yID0gdkNvbG9yO1xcblxcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUihnbF9GcmFnQ29sb3IsIGdlb21ldHJ5KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLWxheWVyLWZyYWdtZW50Lmdsc2wuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-vertex.glsl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-vertex.glsl.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME path-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute float instanceTypes;\\nattribute vec3 instanceStartPositions;\\nattribute vec3 instanceEndPositions;\\nattribute vec3 instanceLeftPositions;\\nattribute vec3 instanceRightPositions;\\nattribute vec3 instanceLeftPositions64Low;\\nattribute vec3 instanceStartPositions64Low;\\nattribute vec3 instanceEndPositions64Low;\\nattribute vec3 instanceRightPositions64Low;\\nattribute float instanceStrokeWidths;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float widthScale;\\nuniform float widthMinPixels;\\nuniform float widthMaxPixels;\\nuniform float jointType;\\nuniform float capType;\\nuniform float miterLimit;\\nuniform bool billboard;\\nuniform int widthUnits;\\n\\nuniform float opacity;\\n\\nvarying vec4 vColor;\\nvarying vec2 vCornerOffset;\\nvarying float vMiterLength;\\nvarying vec2 vPathPosition;\\nvarying float vPathLength;\\nvarying float vJointType;\\n\\nconst float EPSILON = 0.001;\\nconst vec3 ZERO_OFFSET = vec3(0.0);\\n\\nfloat flipIfTrue(bool flag) {\\n  return -(float(flag) * 2. - 1.);\\n}\\nvec3 getLineJoinOffset(\\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\\n  vec2 width\\n) {\\n  bool isEnd = positions.x > 0.0;\\n  float sideOfPath = positions.y;\\n  float isJoint = float(sideOfPath == 0.0);\\n\\n  vec3 deltaA3 = (currPoint - prevPoint);\\n  vec3 deltaB3 = (nextPoint - currPoint);\\n\\n  mat3 rotationMatrix;\\n  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\\n  if (needsRotation) {\\n    deltaA3 = deltaA3 * rotationMatrix;\\n    deltaB3 = deltaB3 * rotationMatrix;\\n  }\\n  vec2 deltaA = deltaA3.xy / width;\\n  vec2 deltaB = deltaB3.xy / width;\\n\\n  float lenA = length(deltaA);\\n  float lenB = length(deltaB);\\n\\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\\n\\n  vec2 perpA = vec2(-dirA.y, dirA.x);\\n  vec2 perpB = vec2(-dirB.y, dirB.x);\\n  vec2 tangent = dirA + dirB;\\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\\n  vec2 dir = isEnd ? dirA : dirB;\\n  vec2 perp = isEnd ? perpA : perpB;\\n  float L = isEnd ? lenA : lenB;\\n  float sinHalfA = abs(dot(miterVec, perp));\\n  float cosHalfA = abs(dot(dirA, miterVec));\\n  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\\n  float cornerPosition = sideOfPath * turnDirection;\\n\\n  float miterSize = 1.0 / max(sinHalfA, EPSILON);\\n  miterSize = mix(\\n    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\\n    miterSize,\\n    step(0.0, cornerPosition)\\n  );\\n\\n  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\\n    * (sideOfPath + isJoint * turnDirection);\\n  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\\n  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\\n  bool isCap = isStartCap || isEndCap;\\n  if (isCap) {\\n    offsetVec = mix(perp * sideOfPath, dir * capType * 4.0 * flipIfTrue(isStartCap), isJoint);\\n    vJointType = capType;\\n  } else {\\n    vJointType = jointType;\\n  }\\n  vPathLength = L;\\n  vCornerOffset = offsetVec;\\n  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);\\n  vMiterLength = isCap ? isJoint : vMiterLength;\\n\\n  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\\n  vPathPosition = vec2(\\n    dot(offsetFromStartOfPath, perp),\\n    dot(offsetFromStartOfPath, dir)\\n  );\\n  geometry.uv = vPathPosition;\\n\\n  float isValid = step(instanceTypes, 3.5);\\n  vec3 offset = vec3(offsetVec * width * isValid, 0.0);\\n\\n  if (needsRotation) {\\n    offset = rotationMatrix * offset;\\n  }\\n  return offset;\\n}\\nvoid clipLine(inout vec4 position, vec4 refPosition) {\\n  if (position.w < EPSILON) {\\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\\n    position = refPosition + (position - refPosition) * r;\\n  }\\n}\\n\\nvoid main() {\\n  geometry.pickingColor = instancePickingColors;\\n\\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\\n\\n  float isEnd = positions.x;\\n\\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\\n  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\\n\\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\\n  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\\n\\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\\n  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\\n\\n  geometry.worldPosition = currPosition;\\n  vec2 widthPixels = vec2(clamp(\\n    project_size_to_pixel(instanceStrokeWidths * widthScale, widthUnits),\\n    widthMinPixels, widthMaxPixels) / 2.0);\\n  vec3 width;\\n\\n  if (billboard) {\\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\\n\\n    clipLine(prevPositionScreen, currPositionScreen);\\n    clipLine(nextPositionScreen, currPositionScreen);\\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\\n\\n    width = vec3(widthPixels, 0.0);\\n    DECKGL_FILTER_SIZE(width, geometry);\\n\\n    vec3 offset = getLineJoinOffset(\\n      prevPositionScreen.xyz / prevPositionScreen.w,\\n      currPositionScreen.xyz / currPositionScreen.w,\\n      nextPositionScreen.xyz / nextPositionScreen.w,\\n      project_pixel_size_to_clipspace(width.xy)\\n    );\\n\\n    DECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\\n    gl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\\n  } else {\\n    prevPosition = project_position(prevPosition, prevPosition64Low);\\n    currPosition = project_position(currPosition, currPosition64Low);\\n    nextPosition = project_position(nextPosition, nextPosition64Low);\\n\\n    width = vec3(project_pixel_size(widthPixels), 0.0);\\n    DECKGL_FILTER_SIZE(width, geometry);\\n\\n    vec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\\n    geometry.position = vec4(currPosition + offset, 1.0);\\n    gl_Position = project_common_position_to_clipspace(geometry.position);\\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  }\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n}\\n\"); //# sourceMappingURL=path-layer-vertex.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-vertex.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PathLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _path_tesselator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./path-tesselator */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-tesselator.js\");\n/* harmony import */ var _path_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-layer-vertex.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-vertex.glsl.js\");\n/* harmony import */ var _path_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./path-layer-fragment.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js\");\n\n\n\n\n\n\nconst DEFAULT_COLOR = [\n    0,\n    0,\n    0,\n    255\n];\nconst defaultProps = {\n    widthUnits: \"meters\",\n    widthScale: {\n        type: \"number\",\n        min: 0,\n        value: 1\n    },\n    widthMinPixels: {\n        type: \"number\",\n        min: 0,\n        value: 0\n    },\n    widthMaxPixels: {\n        type: \"number\",\n        min: 0,\n        value: Number.MAX_SAFE_INTEGER\n    },\n    jointRounded: false,\n    capRounded: false,\n    miterLimit: {\n        type: \"number\",\n        min: 0,\n        value: 4\n    },\n    billboard: false,\n    _pathType: null,\n    getPath: {\n        type: \"accessor\",\n        value: (object)=>object.path\n    },\n    getColor: {\n        type: \"accessor\",\n        value: DEFAULT_COLOR\n    },\n    getWidth: {\n        type: \"accessor\",\n        value: 1\n    },\n    rounded: {\n        deprecatedFor: [\n            \"jointRounded\",\n            \"capRounded\"\n        ]\n    }\n};\nconst ATTRIBUTE_TRANSITION = {\n    enter: (value, chunk)=>{\n        return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n    }\n};\nclass PathLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n    }\n    getShaders() {\n        return super.getShaders({\n            vs: _path_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n            fs: _path_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n            modules: [\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n            ]\n        });\n    }\n    get wrapLongitude() {\n        return false;\n    }\n    initializeState() {\n        const noAlloc = true;\n        const attributeManager = this.getAttributeManager();\n        attributeManager.addInstanced({\n            positions: {\n                size: 3,\n                vertexOffset: 1,\n                type: 5130,\n                fp64: this.use64bitPositions(),\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: \"getPath\",\n                update: this.calculatePositions,\n                noAlloc,\n                shaderAttributes: {\n                    instanceLeftPositions: {\n                        vertexOffset: 0\n                    },\n                    instanceStartPositions: {\n                        vertexOffset: 1\n                    },\n                    instanceEndPositions: {\n                        vertexOffset: 2\n                    },\n                    instanceRightPositions: {\n                        vertexOffset: 3\n                    }\n                }\n            },\n            instanceTypes: {\n                size: 1,\n                type: 5121,\n                update: this.calculateSegmentTypes,\n                noAlloc\n            },\n            instanceStrokeWidths: {\n                size: 1,\n                accessor: \"getWidth\",\n                transition: ATTRIBUTE_TRANSITION,\n                defaultValue: 1\n            },\n            instanceColors: {\n                size: this.props.colorFormat.length,\n                type: 5121,\n                normalized: true,\n                accessor: \"getColor\",\n                transition: ATTRIBUTE_TRANSITION,\n                defaultValue: DEFAULT_COLOR\n            },\n            instancePickingColors: {\n                size: 3,\n                type: 5121,\n                accessor: (object, { index, target: value })=>this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n            }\n        });\n        this.setState({\n            pathTesselator: new _path_tesselator__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n                fp64: this.use64bitPositions()\n            })\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, changeFlags } = params;\n        const attributeManager = this.getAttributeManager();\n        const geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath);\n        if (geometryChanged) {\n            const { pathTesselator } = this.state;\n            const buffers = props.data.attributes || {};\n            pathTesselator.updateGeometry({\n                data: props.data,\n                geometryBuffer: buffers.getPath,\n                buffers,\n                normalize: !props._pathType,\n                loop: props._pathType === \"loop\",\n                getGeometry: props.getPath,\n                positionFormat: props.positionFormat,\n                wrapLongitude: props.wrapLongitude,\n                resolution: this.context.viewport.resolution,\n                dataChanged: changeFlags.dataChanged\n            });\n            this.setState({\n                numInstances: pathTesselator.instanceCount,\n                startIndices: pathTesselator.vertexStarts\n            });\n            if (!changeFlags.dataChanged) {\n                attributeManager.invalidateAll();\n            }\n        }\n        if (changeFlags.extensionsChanged) {\n            var _this$state$model;\n            const { gl } = this.context;\n            (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n            this.state.model = this._getModel(gl);\n            attributeManager.invalidateAll();\n        }\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const { index } = info;\n        const { data } = this.props;\n        if (data[0] && data[0].__source) {\n            info.object = data.find((d)=>d.__source.index === index);\n        }\n        return info;\n    }\n    disablePickingIndex(objectIndex) {\n        const { data } = this.props;\n        if (data[0] && data[0].__source) {\n            for(let i = 0; i < data.length; i++){\n                if (data[i].__source.index === objectIndex) {\n                    this._disablePickingIndex(i);\n                }\n            }\n        } else {\n            super.disablePickingIndex(objectIndex);\n        }\n    }\n    draw({ uniforms }) {\n        const { jointRounded, capRounded, billboard, miterLimit, widthUnits, widthScale, widthMinPixels, widthMaxPixels } = this.props;\n        this.state.model.setUniforms(uniforms).setUniforms({\n            jointType: Number(jointRounded),\n            capType: Number(capRounded),\n            billboard,\n            widthUnits: _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__.UNIT[widthUnits],\n            widthScale,\n            miterLimit,\n            widthMinPixels,\n            widthMaxPixels\n        }).draw();\n    }\n    _getModel(gl) {\n        const SEGMENT_INDICES = [\n            0,\n            1,\n            2,\n            1,\n            4,\n            2,\n            1,\n            3,\n            4,\n            3,\n            5,\n            4\n        ];\n        const SEGMENT_POSITIONS = [\n            0,\n            0,\n            0,\n            -1,\n            0,\n            1,\n            1,\n            -1,\n            1,\n            1,\n            1,\n            0\n        ];\n        return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"](gl, {\n            ...this.getShaders(),\n            id: this.props.id,\n            geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n                drawMode: 4,\n                attributes: {\n                    indices: new Uint16Array(SEGMENT_INDICES),\n                    positions: {\n                        value: new Float32Array(SEGMENT_POSITIONS),\n                        size: 2\n                    }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n    calculatePositions(attribute) {\n        const { pathTesselator } = this.state;\n        attribute.startIndices = pathTesselator.vertexStarts;\n        attribute.value = pathTesselator.get(\"positions\");\n    }\n    calculateSegmentTypes(attribute) {\n        const { pathTesselator } = this.state;\n        attribute.startIndices = pathTesselator.vertexStarts;\n        attribute.value = pathTesselator.get(\"segmentTypes\");\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(PathLayer, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(PathLayer, \"layerName\", \"PathLayer\"); //# sourceMappingURL=path-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-tesselator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path-tesselator.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PathTesselator)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js\");\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path.js\");\n\n\nconst START_CAP = 1;\nconst END_CAP = 2;\nconst INVALID = 4;\nclass PathTesselator extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(opts){\n        super({\n            ...opts,\n            attributes: {\n                positions: {\n                    size: 3,\n                    padding: 18,\n                    initialize: true,\n                    type: opts.fp64 ? Float64Array : Float32Array\n                },\n                segmentTypes: {\n                    size: 1,\n                    type: Uint8ClampedArray\n                }\n            }\n        });\n    }\n    get(attributeName) {\n        return this.attributes[attributeName];\n    }\n    getGeometryFromBuffer(buffer) {\n        if (this.normalize) {\n            return super.getGeometryFromBuffer(buffer);\n        }\n        return null;\n    }\n    normalizeGeometry(path) {\n        if (this.normalize) {\n            return (0,_path__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(path, this.positionSize, this.opts.resolution, this.opts.wrapLongitude);\n        }\n        return path;\n    }\n    getGeometrySize(path) {\n        if (isCut(path)) {\n            let size = 0;\n            for (const subPath of path){\n                size += this.getGeometrySize(subPath);\n            }\n            return size;\n        }\n        const numPoints = this.getPathLength(path);\n        if (numPoints < 2) {\n            return 0;\n        }\n        if (this.isClosed(path)) {\n            return numPoints < 3 ? 0 : numPoints + 2;\n        }\n        return numPoints;\n    }\n    updateGeometryAttributes(path, context) {\n        if (context.geometrySize === 0) {\n            return;\n        }\n        if (path && isCut(path)) {\n            for (const subPath of path){\n                const geometrySize = this.getGeometrySize(subPath);\n                context.geometrySize = geometrySize;\n                this.updateGeometryAttributes(subPath, context);\n                context.vertexStart += geometrySize;\n            }\n        } else {\n            this._updateSegmentTypes(path, context);\n            this._updatePositions(path, context);\n        }\n    }\n    _updateSegmentTypes(path, context) {\n        const segmentTypes = this.attributes.segmentTypes;\n        const isPathClosed = path ? this.isClosed(path) : false;\n        const { vertexStart, geometrySize } = context;\n        segmentTypes.fill(0, vertexStart, vertexStart + geometrySize);\n        if (isPathClosed) {\n            segmentTypes[vertexStart] = INVALID;\n            segmentTypes[vertexStart + geometrySize - 2] = INVALID;\n        } else {\n            segmentTypes[vertexStart] += START_CAP;\n            segmentTypes[vertexStart + geometrySize - 2] += END_CAP;\n        }\n        segmentTypes[vertexStart + geometrySize - 1] = INVALID;\n    }\n    _updatePositions(path, context) {\n        const { positions } = this.attributes;\n        if (!positions || !path) {\n            return;\n        }\n        const { vertexStart, geometrySize } = context;\n        const p = new Array(3);\n        for(let i = vertexStart, ptIndex = 0; ptIndex < geometrySize; i++, ptIndex++){\n            this.getPointOnPath(path, ptIndex, p);\n            positions[i * 3] = p[0];\n            positions[i * 3 + 1] = p[1];\n            positions[i * 3 + 2] = p[2];\n        }\n    }\n    getPathLength(path) {\n        return path.length / this.positionSize;\n    }\n    getPointOnPath(path, index, target = []) {\n        const { positionSize } = this;\n        if (index * positionSize >= path.length) {\n            index += 1 - path.length / positionSize;\n        }\n        const i = index * positionSize;\n        target[0] = path[i];\n        target[1] = path[i + 1];\n        target[2] = positionSize === 3 && path[i + 2] || 0;\n        return target;\n    }\n    isClosed(path) {\n        if (!this.normalize) {\n            return Boolean(this.opts.loop);\n        }\n        const { positionSize } = this;\n        const lastPointIndex = path.length - positionSize;\n        return path[0] === path[lastPointIndex] && path[1] === path[lastPointIndex + 1] && (positionSize === 2 || path[2] === path[lastPointIndex + 2]);\n    }\n}\nfunction isCut(path) {\n    return Array.isArray(path[0]);\n} //# sourceMappingURL=path-tesselator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path-tesselator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path.js":
/*!******************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizePath: () => (/* binding */ normalizePath)\n/* harmony export */ });\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/polygon */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/index.js\");\n\nfunction normalizePath(path, size, gridResolution, wrapLongitude) {\n    let flatPath;\n    if (Array.isArray(path[0])) {\n        const length = path.length * size;\n        flatPath = new Array(length);\n        for(let i = 0; i < path.length; i++){\n            for(let j = 0; j < size; j++){\n                flatPath[i * size + j] = path[i][j] || 0;\n            }\n        }\n    } else {\n        flatPath = path;\n    }\n    if (gridResolution) {\n        return (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__.cutPolylineByGrid)(flatPath, {\n            size,\n            gridResolution\n        });\n    }\n    if (wrapLongitude) {\n        return (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__.cutPolylineByMercatorBounds)(flatPath, {\n            size\n        });\n    }\n    return flatPath;\n} //# sourceMappingURL=path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3BhdGgtbGF5ZXIvcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRjtBQUMzRSxTQUFTRSxjQUFjQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsY0FBYyxFQUFFQyxhQUFhO0lBQ3JFLElBQUlDO0lBRUosSUFBSUMsTUFBTUMsT0FBTyxDQUFDTixJQUFJLENBQUMsRUFBRSxHQUFHO1FBQzFCLE1BQU1PLFNBQVNQLEtBQUtPLE1BQU0sR0FBR047UUFDN0JHLFdBQVcsSUFBSUMsTUFBTUU7UUFFckIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlSLEtBQUtPLE1BQU0sRUFBRUMsSUFBSztZQUNwQyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVIsTUFBTVEsSUFBSztnQkFDN0JMLFFBQVEsQ0FBQ0ksSUFBSVAsT0FBT1EsRUFBRSxHQUFHVCxJQUFJLENBQUNRLEVBQUUsQ0FBQ0MsRUFBRSxJQUFJO1lBQ3pDO1FBQ0Y7SUFDRixPQUFPO1FBQ0xMLFdBQVdKO0lBQ2I7SUFFQSxJQUFJRSxnQkFBZ0I7UUFDbEIsT0FBT0wsbUVBQWlCQSxDQUFDTyxVQUFVO1lBQ2pDSDtZQUNBQztRQUNGO0lBQ0Y7SUFFQSxJQUFJQyxlQUFlO1FBQ2pCLE9BQU9MLDZFQUEyQkEsQ0FBQ00sVUFBVTtZQUMzQ0g7UUFDRjtJQUNGO0lBRUEsT0FBT0c7QUFDVCxFQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9wYXRoLWxheWVyL3BhdGguanM/YTUwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjdXRQb2x5bGluZUJ5R3JpZCwgY3V0UG9seWxpbmVCeU1lcmNhdG9yQm91bmRzIH0gZnJvbSAnQG1hdGguZ2wvcG9seWdvbic7XG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplUGF0aChwYXRoLCBzaXplLCBncmlkUmVzb2x1dGlvbiwgd3JhcExvbmdpdHVkZSkge1xuICBsZXQgZmxhdFBhdGg7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkocGF0aFswXSkpIHtcbiAgICBjb25zdCBsZW5ndGggPSBwYXRoLmxlbmd0aCAqIHNpemU7XG4gICAgZmxhdFBhdGggPSBuZXcgQXJyYXkobGVuZ3RoKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBzaXplOyBqKyspIHtcbiAgICAgICAgZmxhdFBhdGhbaSAqIHNpemUgKyBqXSA9IHBhdGhbaV1bal0gfHwgMDtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZmxhdFBhdGggPSBwYXRoO1xuICB9XG5cbiAgaWYgKGdyaWRSZXNvbHV0aW9uKSB7XG4gICAgcmV0dXJuIGN1dFBvbHlsaW5lQnlHcmlkKGZsYXRQYXRoLCB7XG4gICAgICBzaXplLFxuICAgICAgZ3JpZFJlc29sdXRpb25cbiAgICB9KTtcbiAgfVxuXG4gIGlmICh3cmFwTG9uZ2l0dWRlKSB7XG4gICAgcmV0dXJuIGN1dFBvbHlsaW5lQnlNZXJjYXRvckJvdW5kcyhmbGF0UGF0aCwge1xuICAgICAgc2l6ZVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZsYXRQYXRoO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGF0aC5qcy5tYXAiXSwibmFtZXMiOlsiY3V0UG9seWxpbmVCeUdyaWQiLCJjdXRQb2x5bGluZUJ5TWVyY2F0b3JCb3VuZHMiLCJub3JtYWxpemVQYXRoIiwicGF0aCIsInNpemUiLCJncmlkUmVzb2x1dGlvbiIsIndyYXBMb25naXR1ZGUiLCJmbGF0UGF0aCIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsImkiLCJqIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/path-layer/path.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME scatterplot-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool filled;\\nuniform float stroked;\\nuniform bool antialiasing;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\nvoid main(void) {\\n  geometry.uv = unitPosition;\\n\\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\\n  float inCircle = antialiasing ? \\n    smoothedge(distToCenter, outerRadiusPixels) : \\n    step(distToCenter, outerRadiusPixels);\\n\\n  if (inCircle == 0.0) {\\n    discard;\\n  }\\n\\n  if (stroked > 0.5) {\\n    float isLine = antialiasing ? \\n      smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\\n      step(innerUnitRadius * outerRadiusPixels, distToCenter);\\n\\n    if (filled) {\\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\\n    } else {\\n      if (isLine == 0.0) {\\n        discard;\\n      }\\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\\n    }\\n  } else if (!filled) {\\n    discard;\\n  } else {\\n    gl_FragColor = vFillColor;\\n  }\\n\\n  gl_FragColor.a *= inCircle;\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\"); //# sourceMappingURL=scatterplot-layer-fragment.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NjYXR0ZXJwbG90LWxheWVyL3NjYXR0ZXJwbG90LWxheWVyLWZyYWdtZW50Lmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLDhxQ0FBOHFDLEVBQUMsQ0FDOXJDLDJEQUEyRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9zY2F0dGVycGxvdC1sYXllci9zY2F0dGVycGxvdC1sYXllci1mcmFnbWVudC5nbHNsLmpzP2YxMDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjZGVmaW5lIFNIQURFUl9OQU1FIHNjYXR0ZXJwbG90LWxheWVyLWZyYWdtZW50LXNoYWRlclxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5cXG51bmlmb3JtIGJvb2wgZmlsbGVkO1xcbnVuaWZvcm0gZmxvYXQgc3Ryb2tlZDtcXG51bmlmb3JtIGJvb2wgYW50aWFsaWFzaW5nO1xcblxcbnZhcnlpbmcgdmVjNCB2RmlsbENvbG9yO1xcbnZhcnlpbmcgdmVjNCB2TGluZUNvbG9yO1xcbnZhcnlpbmcgdmVjMiB1bml0UG9zaXRpb247XFxudmFyeWluZyBmbG9hdCBpbm5lclVuaXRSYWRpdXM7XFxudmFyeWluZyBmbG9hdCBvdXRlclJhZGl1c1BpeGVscztcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2VvbWV0cnkudXYgPSB1bml0UG9zaXRpb247XFxuXFxuICBmbG9hdCBkaXN0VG9DZW50ZXIgPSBsZW5ndGgodW5pdFBvc2l0aW9uKSAqIG91dGVyUmFkaXVzUGl4ZWxzO1xcbiAgZmxvYXQgaW5DaXJjbGUgPSBhbnRpYWxpYXNpbmcgPyBcXG4gICAgc21vb3RoZWRnZShkaXN0VG9DZW50ZXIsIG91dGVyUmFkaXVzUGl4ZWxzKSA6IFxcbiAgICBzdGVwKGRpc3RUb0NlbnRlciwgb3V0ZXJSYWRpdXNQaXhlbHMpO1xcblxcbiAgaWYgKGluQ2lyY2xlID09IDAuMCkge1xcbiAgICBkaXNjYXJkO1xcbiAgfVxcblxcbiAgaWYgKHN0cm9rZWQgPiAwLjUpIHtcXG4gICAgZmxvYXQgaXNMaW5lID0gYW50aWFsaWFzaW5nID8gXFxuICAgICAgc21vb3RoZWRnZShpbm5lclVuaXRSYWRpdXMgKiBvdXRlclJhZGl1c1BpeGVscywgZGlzdFRvQ2VudGVyKSA6XFxuICAgICAgc3RlcChpbm5lclVuaXRSYWRpdXMgKiBvdXRlclJhZGl1c1BpeGVscywgZGlzdFRvQ2VudGVyKTtcXG5cXG4gICAgaWYgKGZpbGxlZCkge1xcbiAgICAgIGdsX0ZyYWdDb2xvciA9IG1peCh2RmlsbENvbG9yLCB2TGluZUNvbG9yLCBpc0xpbmUpO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGlmIChpc0xpbmUgPT0gMC4wKSB7XFxuICAgICAgICBkaXNjYXJkO1xcbiAgICAgIH1cXG4gICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZMaW5lQ29sb3IucmdiLCB2TGluZUNvbG9yLmEgKiBpc0xpbmUpO1xcbiAgICB9XFxuICB9IGVsc2UgaWYgKCFmaWxsZWQpIHtcXG4gICAgZGlzY2FyZDtcXG4gIH0gZWxzZSB7XFxuICAgIGdsX0ZyYWdDb2xvciA9IHZGaWxsQ29sb3I7XFxuICB9XFxuXFxuICBnbF9GcmFnQ29sb3IuYSAqPSBpbkNpcmNsZTtcXG4gIERFQ0tHTF9GSUxURVJfQ09MT1IoZ2xfRnJhZ0NvbG9yLCBnZW9tZXRyeSk7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NhdHRlcnBsb3QtbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME scatterplot-layer-vertex-shader\\n\\nattribute vec3 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceRadius;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float radiusScale;\\nuniform float radiusMinPixels;\\nuniform float radiusMaxPixels;\\nuniform float lineWidthScale;\\nuniform float lineWidthMinPixels;\\nuniform float lineWidthMaxPixels;\\nuniform float stroked;\\nuniform bool filled;\\nuniform bool antialiasing;\\nuniform bool billboard;\\nuniform int radiusUnits;\\nuniform int lineWidthUnits;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  outerRadiusPixels = clamp(\\n    project_size_to_pixel(radiusScale * instanceRadius, radiusUnits),\\n    radiusMinPixels, radiusMaxPixels\\n  );\\n  float lineWidthPixels = clamp(\\n    project_size_to_pixel(lineWidthScale * instanceLineWidths, lineWidthUnits),\\n    lineWidthMinPixels, lineWidthMaxPixels\\n  );\\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\\n  float edgePadding = antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\\n  unitPosition = edgePadding * positions.xy;\\n  geometry.uv = unitPosition;\\n  geometry.pickingColor = instancePickingColors;\\n\\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\\n  \\n  if (billboard) {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n    vec3 offset = edgePadding * positions * outerRadiusPixels;\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  }\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\"); //# sourceMappingURL=scatterplot-layer-vertex.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NjYXR0ZXJwbG90LWxheWVyL3NjYXR0ZXJwbG90LWxheWVyLXZlcnRleC5nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSwyL0VBQTIvRSxFQUFDLENBQzNnRix5REFBeUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vc2NhdHRlcnBsb3QtbGF5ZXIvc2NhdHRlcnBsb3QtbGF5ZXItdmVydGV4Lmdsc2wuanM/NDIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgc2NhdHRlcnBsb3QtbGF5ZXItdmVydGV4LXNoYWRlclxcblxcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9ucztcXG5cXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9ucztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9uczY0TG93O1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZVJhZGl1cztcXG5hdHRyaWJ1dGUgZmxvYXQgaW5zdGFuY2VMaW5lV2lkdGhzO1xcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlRmlsbENvbG9ycztcXG5hdHRyaWJ1dGUgdmVjNCBpbnN0YW5jZUxpbmVDb2xvcnM7XFxuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VQaWNraW5nQ29sb3JzO1xcblxcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG51bmlmb3JtIGZsb2F0IHJhZGl1c1NjYWxlO1xcbnVuaWZvcm0gZmxvYXQgcmFkaXVzTWluUGl4ZWxzO1xcbnVuaWZvcm0gZmxvYXQgcmFkaXVzTWF4UGl4ZWxzO1xcbnVuaWZvcm0gZmxvYXQgbGluZVdpZHRoU2NhbGU7XFxudW5pZm9ybSBmbG9hdCBsaW5lV2lkdGhNaW5QaXhlbHM7XFxudW5pZm9ybSBmbG9hdCBsaW5lV2lkdGhNYXhQaXhlbHM7XFxudW5pZm9ybSBmbG9hdCBzdHJva2VkO1xcbnVuaWZvcm0gYm9vbCBmaWxsZWQ7XFxudW5pZm9ybSBib29sIGFudGlhbGlhc2luZztcXG51bmlmb3JtIGJvb2wgYmlsbGJvYXJkO1xcbnVuaWZvcm0gaW50IHJhZGl1c1VuaXRzO1xcbnVuaWZvcm0gaW50IGxpbmVXaWR0aFVuaXRzO1xcblxcbnZhcnlpbmcgdmVjNCB2RmlsbENvbG9yO1xcbnZhcnlpbmcgdmVjNCB2TGluZUNvbG9yO1xcbnZhcnlpbmcgdmVjMiB1bml0UG9zaXRpb247XFxudmFyeWluZyBmbG9hdCBpbm5lclVuaXRSYWRpdXM7XFxudmFyeWluZyBmbG9hdCBvdXRlclJhZGl1c1BpeGVscztcXG5cXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2VvbWV0cnkud29ybGRQb3NpdGlvbiA9IGluc3RhbmNlUG9zaXRpb25zO1xcbiAgb3V0ZXJSYWRpdXNQaXhlbHMgPSBjbGFtcChcXG4gICAgcHJvamVjdF9zaXplX3RvX3BpeGVsKHJhZGl1c1NjYWxlICogaW5zdGFuY2VSYWRpdXMsIHJhZGl1c1VuaXRzKSxcXG4gICAgcmFkaXVzTWluUGl4ZWxzLCByYWRpdXNNYXhQaXhlbHNcXG4gICk7XFxuICBmbG9hdCBsaW5lV2lkdGhQaXhlbHMgPSBjbGFtcChcXG4gICAgcHJvamVjdF9zaXplX3RvX3BpeGVsKGxpbmVXaWR0aFNjYWxlICogaW5zdGFuY2VMaW5lV2lkdGhzLCBsaW5lV2lkdGhVbml0cyksXFxuICAgIGxpbmVXaWR0aE1pblBpeGVscywgbGluZVdpZHRoTWF4UGl4ZWxzXFxuICApO1xcbiAgb3V0ZXJSYWRpdXNQaXhlbHMgKz0gc3Ryb2tlZCAqIGxpbmVXaWR0aFBpeGVscyAvIDIuMDtcXG4gIGZsb2F0IGVkZ2VQYWRkaW5nID0gYW50aWFsaWFzaW5nID8gKG91dGVyUmFkaXVzUGl4ZWxzICsgU01PT1RIX0VER0VfUkFESVVTKSAvIG91dGVyUmFkaXVzUGl4ZWxzIDogMS4wO1xcbiAgdW5pdFBvc2l0aW9uID0gZWRnZVBhZGRpbmcgKiBwb3NpdGlvbnMueHk7XFxuICBnZW9tZXRyeS51diA9IHVuaXRQb3NpdGlvbjtcXG4gIGdlb21ldHJ5LnBpY2tpbmdDb2xvciA9IGluc3RhbmNlUGlja2luZ0NvbG9ycztcXG5cXG4gIGlubmVyVW5pdFJhZGl1cyA9IDEuMCAtIHN0cm9rZWQgKiBsaW5lV2lkdGhQaXhlbHMgLyBvdXRlclJhZGl1c1BpeGVscztcXG4gIFxcbiAgaWYgKGJpbGxib2FyZCkge1xcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGluc3RhbmNlUG9zaXRpb25zLCBpbnN0YW5jZVBvc2l0aW9uczY0TG93LCB2ZWMzKDAuMCksIGdlb21ldHJ5LnBvc2l0aW9uKTtcXG4gICAgREVDS0dMX0ZJTFRFUl9HTF9QT1NJVElPTihnbF9Qb3NpdGlvbiwgZ2VvbWV0cnkpO1xcbiAgICB2ZWMzIG9mZnNldCA9IGVkZ2VQYWRkaW5nICogcG9zaXRpb25zICogb3V0ZXJSYWRpdXNQaXhlbHM7XFxuICAgIERFQ0tHTF9GSUxURVJfU0laRShvZmZzZXQsIGdlb21ldHJ5KTtcXG4gICAgZ2xfUG9zaXRpb24ueHkgKz0gcHJvamVjdF9waXhlbF9zaXplX3RvX2NsaXBzcGFjZShvZmZzZXQueHkpO1xcbiAgfSBlbHNlIHtcXG4gICAgdmVjMyBvZmZzZXQgPSBlZGdlUGFkZGluZyAqIHBvc2l0aW9ucyAqIHByb2plY3RfcGl4ZWxfc2l6ZShvdXRlclJhZGl1c1BpeGVscyk7XFxuICAgIERFQ0tHTF9GSUxURVJfU0laRShvZmZzZXQsIGdlb21ldHJ5KTtcXG4gICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShpbnN0YW5jZVBvc2l0aW9ucywgaW5zdGFuY2VQb3NpdGlvbnM2NExvdywgb2Zmc2V0LCBnZW9tZXRyeS5wb3NpdGlvbik7XFxuICAgIERFQ0tHTF9GSUxURVJfR0xfUE9TSVRJT04oZ2xfUG9zaXRpb24sIGdlb21ldHJ5KTtcXG4gIH1cXG4gIHZGaWxsQ29sb3IgPSB2ZWM0KGluc3RhbmNlRmlsbENvbG9ycy5yZ2IsIGluc3RhbmNlRmlsbENvbG9ycy5hICogb3BhY2l0eSk7XFxuICBERUNLR0xfRklMVEVSX0NPTE9SKHZGaWxsQ29sb3IsIGdlb21ldHJ5KTtcXG4gIHZMaW5lQ29sb3IgPSB2ZWM0KGluc3RhbmNlTGluZUNvbG9ycy5yZ2IsIGluc3RhbmNlTGluZUNvbG9ycy5hICogb3BhY2l0eSk7XFxuICBERUNLR0xfRklMVEVSX0NPTE9SKHZMaW5lQ29sb3IsIGdlb21ldHJ5KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY2F0dGVycGxvdC1sYXllci12ZXJ0ZXguZ2xzbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ScatterplotLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _scatterplot_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scatterplot-layer-vertex.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js\");\n/* harmony import */ var _scatterplot_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scatterplot-layer-fragment.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js\");\n\n\n\n\n\nconst DEFAULT_COLOR = [\n    0,\n    0,\n    0,\n    255\n];\nconst defaultProps = {\n    radiusUnits: \"meters\",\n    radiusScale: {\n        type: \"number\",\n        min: 0,\n        value: 1\n    },\n    radiusMinPixels: {\n        type: \"number\",\n        min: 0,\n        value: 0\n    },\n    radiusMaxPixels: {\n        type: \"number\",\n        min: 0,\n        value: Number.MAX_SAFE_INTEGER\n    },\n    lineWidthUnits: \"meters\",\n    lineWidthScale: {\n        type: \"number\",\n        min: 0,\n        value: 1\n    },\n    lineWidthMinPixels: {\n        type: \"number\",\n        min: 0,\n        value: 0\n    },\n    lineWidthMaxPixels: {\n        type: \"number\",\n        min: 0,\n        value: Number.MAX_SAFE_INTEGER\n    },\n    stroked: false,\n    filled: true,\n    billboard: false,\n    antialiasing: true,\n    getPosition: {\n        type: \"accessor\",\n        value: (x)=>x.position\n    },\n    getRadius: {\n        type: \"accessor\",\n        value: 1\n    },\n    getFillColor: {\n        type: \"accessor\",\n        value: DEFAULT_COLOR\n    },\n    getLineColor: {\n        type: \"accessor\",\n        value: DEFAULT_COLOR\n    },\n    getLineWidth: {\n        type: \"accessor\",\n        value: 1\n    },\n    strokeWidth: {\n        deprecatedFor: \"getLineWidth\"\n    },\n    outline: {\n        deprecatedFor: \"stroked\"\n    },\n    getColor: {\n        deprecatedFor: [\n            \"getFillColor\",\n            \"getLineColor\"\n        ]\n    }\n};\nclass ScatterplotLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    getShaders() {\n        return super.getShaders({\n            vs: _scatterplot_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n            fs: _scatterplot_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n            modules: [\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n            ]\n        });\n    }\n    initializeState() {\n        this.getAttributeManager().addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 5130,\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: \"getPosition\"\n            },\n            instanceRadius: {\n                size: 1,\n                transition: true,\n                accessor: \"getRadius\",\n                defaultValue: 1\n            },\n            instanceFillColors: {\n                size: this.props.colorFormat.length,\n                transition: true,\n                normalized: true,\n                type: 5121,\n                accessor: \"getFillColor\",\n                defaultValue: [\n                    0,\n                    0,\n                    0,\n                    255\n                ]\n            },\n            instanceLineColors: {\n                size: this.props.colorFormat.length,\n                transition: true,\n                normalized: true,\n                type: 5121,\n                accessor: \"getLineColor\",\n                defaultValue: [\n                    0,\n                    0,\n                    0,\n                    255\n                ]\n            },\n            instanceLineWidths: {\n                size: 1,\n                transition: true,\n                accessor: \"getLineWidth\",\n                defaultValue: 1\n            }\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        if (params.changeFlags.extensionsChanged) {\n            var _this$state$model;\n            const { gl } = this.context;\n            (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n            this.state.model = this._getModel(gl);\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { radiusUnits, radiusScale, radiusMinPixels, radiusMaxPixels, stroked, filled, billboard, antialiasing, lineWidthUnits, lineWidthScale, lineWidthMinPixels, lineWidthMaxPixels } = this.props;\n        this.state.model.setUniforms(uniforms).setUniforms({\n            stroked: stroked ? 1 : 0,\n            filled,\n            billboard,\n            antialiasing,\n            radiusUnits: _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__.UNIT[radiusUnits],\n            radiusScale,\n            radiusMinPixels,\n            radiusMaxPixels,\n            lineWidthUnits: _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__.UNIT[lineWidthUnits],\n            lineWidthScale,\n            lineWidthMinPixels,\n            lineWidthMaxPixels\n        }).draw();\n    }\n    _getModel(gl) {\n        const positions = [\n            -1,\n            -1,\n            0,\n            1,\n            -1,\n            0,\n            1,\n            1,\n            0,\n            -1,\n            1,\n            0\n        ];\n        return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"](gl, {\n            ...this.getShaders(),\n            id: this.props.id,\n            geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"]({\n                drawMode: 6,\n                vertexCount: 4,\n                attributes: {\n                    positions: {\n                        size: 3,\n                        value: new Float32Array(positions)\n                    }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ScatterplotLayer, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ScatterplotLayer, \"layerName\", \"ScatterplotLayer\"); //# sourceMappingURL=scatterplot-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon-tesselator.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon-tesselator.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PolygonTesselator)\n/* harmony export */ });\n/* harmony import */ var _polygon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./polygon */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js\");\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/polygon */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/index.js\");\n\n\n\nclass PolygonTesselator extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(opts){\n        const { fp64, IndexType = Uint32Array } = opts;\n        super({\n            ...opts,\n            attributes: {\n                positions: {\n                    size: 3,\n                    type: fp64 ? Float64Array : Float32Array\n                },\n                vertexValid: {\n                    type: Uint8ClampedArray,\n                    size: 1\n                },\n                indices: {\n                    type: IndexType,\n                    size: 1\n                }\n            }\n        });\n    }\n    get(attributeName) {\n        const { attributes } = this;\n        if (attributeName === \"indices\") {\n            return attributes.indices && attributes.indices.subarray(0, this.vertexCount);\n        }\n        return attributes[attributeName];\n    }\n    updateGeometry(opts) {\n        super.updateGeometry(opts);\n        const externalIndices = this.buffers.indices;\n        if (externalIndices) {\n            this.vertexCount = (externalIndices.value || externalIndices).length;\n        } else if (this.data && !this.getGeometry) {\n            throw new Error(\"missing indices buffer\");\n        }\n    }\n    normalizeGeometry(polygon) {\n        if (this.normalize) {\n            const normalizedPolygon = _polygon__WEBPACK_IMPORTED_MODULE_2__.normalize(polygon, this.positionSize);\n            if (this.opts.resolution) {\n                return (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__.cutPolygonByGrid)(_polygon__WEBPACK_IMPORTED_MODULE_2__.getPositions(normalizedPolygon), _polygon__WEBPACK_IMPORTED_MODULE_2__.getHoleIndices(normalizedPolygon), {\n                    size: this.positionSize,\n                    gridResolution: this.opts.resolution,\n                    edgeTypes: true\n                });\n            }\n            if (this.opts.wrapLongitude) {\n                return (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__.cutPolygonByMercatorBounds)(_polygon__WEBPACK_IMPORTED_MODULE_2__.getPositions(normalizedPolygon), _polygon__WEBPACK_IMPORTED_MODULE_2__.getHoleIndices(normalizedPolygon), {\n                    size: this.positionSize,\n                    maxLatitude: 86,\n                    edgeTypes: true\n                });\n            }\n            return normalizedPolygon;\n        }\n        return polygon;\n    }\n    getGeometrySize(polygon) {\n        if (isCut(polygon)) {\n            let size = 0;\n            for (const subPolygon of polygon){\n                size += this.getGeometrySize(subPolygon);\n            }\n            return size;\n        }\n        return _polygon__WEBPACK_IMPORTED_MODULE_2__.getPositions(polygon).length / this.positionSize;\n    }\n    getGeometryFromBuffer(buffer) {\n        if (this.normalize || !this.buffers.indices) {\n            return super.getGeometryFromBuffer(buffer);\n        }\n        return null;\n    }\n    updateGeometryAttributes(polygon, context) {\n        if (polygon && isCut(polygon)) {\n            for (const subPolygon of polygon){\n                const geometrySize = this.getGeometrySize(subPolygon);\n                context.geometrySize = geometrySize;\n                this.updateGeometryAttributes(subPolygon, context);\n                context.vertexStart += geometrySize;\n                context.indexStart = this.indexStarts[context.geometryIndex + 1];\n            }\n        } else {\n            this._updateIndices(polygon, context);\n            this._updatePositions(polygon, context);\n            this._updateVertexValid(polygon, context);\n        }\n    }\n    _updateIndices(polygon, { geometryIndex, vertexStart: offset, indexStart }) {\n        const { attributes, indexStarts, typedArrayManager } = this;\n        let target = attributes.indices;\n        if (!target || !polygon) {\n            return;\n        }\n        let i = indexStart;\n        const indices = _polygon__WEBPACK_IMPORTED_MODULE_2__.getSurfaceIndices(polygon, this.positionSize, this.opts.preproject, this.opts.full3d);\n        target = typedArrayManager.allocate(target, indexStart + indices.length, {\n            copy: true\n        });\n        for(let j = 0; j < indices.length; j++){\n            target[i++] = indices[j] + offset;\n        }\n        indexStarts[geometryIndex + 1] = indexStart + indices.length;\n        attributes.indices = target;\n    }\n    _updatePositions(polygon, { vertexStart, geometrySize }) {\n        const { attributes: { positions }, positionSize } = this;\n        if (!positions || !polygon) {\n            return;\n        }\n        const polygonPositions = _polygon__WEBPACK_IMPORTED_MODULE_2__.getPositions(polygon);\n        for(let i = vertexStart, j = 0; j < geometrySize; i++, j++){\n            const x = polygonPositions[j * positionSize];\n            const y = polygonPositions[j * positionSize + 1];\n            const z = positionSize > 2 ? polygonPositions[j * positionSize + 2] : 0;\n            positions[i * 3] = x;\n            positions[i * 3 + 1] = y;\n            positions[i * 3 + 2] = z;\n        }\n    }\n    _updateVertexValid(polygon, { vertexStart, geometrySize }) {\n        const { positionSize } = this;\n        const vertexValid = this.attributes.vertexValid;\n        const holeIndices = polygon && _polygon__WEBPACK_IMPORTED_MODULE_2__.getHoleIndices(polygon);\n        if (polygon && polygon.edgeTypes) {\n            vertexValid.set(polygon.edgeTypes, vertexStart);\n        } else {\n            vertexValid.fill(1, vertexStart, vertexStart + geometrySize);\n        }\n        if (holeIndices) {\n            for(let j = 0; j < holeIndices.length; j++){\n                vertexValid[vertexStart + holeIndices[j] / positionSize - 1] = 0;\n            }\n        }\n        vertexValid[vertexStart + geometrySize - 1] = 0;\n    }\n}\nfunction isCut(polygon) {\n    return Array.isArray(polygon) && polygon.length > 0 && !Number.isFinite(polygon[0]);\n} //# sourceMappingURL=polygon-tesselator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon-tesselator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHoleIndices: () => (/* binding */ getHoleIndices),\n/* harmony export */   getPositions: () => (/* binding */ getPositions),\n/* harmony export */   getSurfaceIndices: () => (/* binding */ getSurfaceIndices),\n/* harmony export */   normalize: () => (/* binding */ normalize)\n/* harmony export */ });\n/* harmony import */ var earcut__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! earcut */ \"(ssr)/./node_modules/earcut/src/earcut.js\");\n/* harmony import */ var earcut__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(earcut__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/polygon */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/index.js\");\n\n\nconst OUTER_POLYGON_WINDING = _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__.WINDING.CLOCKWISE;\nconst HOLE_POLYGON_WINDING = _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__.WINDING.COUNTER_CLOCKWISE;\nconst windingOptions = {\n    isClosed: true\n};\nfunction validate(polygon) {\n    polygon = polygon && polygon.positions || polygon;\n    if (!Array.isArray(polygon) && !ArrayBuffer.isView(polygon)) {\n        throw new Error(\"invalid polygon\");\n    }\n}\nfunction getPositions(polygon) {\n    return \"positions\" in polygon ? polygon.positions : polygon;\n}\nfunction getHoleIndices(polygon) {\n    return \"holeIndices\" in polygon ? polygon.holeIndices : null;\n}\nfunction isNested(polygon) {\n    return Array.isArray(polygon[0]);\n}\nfunction isSimple(polygon) {\n    return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\nfunction isNestedRingClosed(simplePolygon) {\n    const p0 = simplePolygon[0];\n    const p1 = simplePolygon[simplePolygon.length - 1];\n    return p0[0] === p1[0] && p0[1] === p1[1] && p0[2] === p1[2];\n}\nfunction isFlatRingClosed(positions, size, startIndex, endIndex) {\n    for(let i = 0; i < size; i++){\n        if (positions[startIndex + i] !== positions[endIndex - size + i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction copyNestedRing(target, targetStartIndex, simplePolygon, size, windingDirection) {\n    let targetIndex = targetStartIndex;\n    const len = simplePolygon.length;\n    for(let i = 0; i < len; i++){\n        for(let j = 0; j < size; j++){\n            target[targetIndex++] = simplePolygon[i][j] || 0;\n        }\n    }\n    if (!isNestedRingClosed(simplePolygon)) {\n        for(let j = 0; j < size; j++){\n            target[targetIndex++] = simplePolygon[0][j] || 0;\n        }\n    }\n    windingOptions.start = targetStartIndex;\n    windingOptions.end = targetIndex;\n    windingOptions.size = size;\n    (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__.modifyPolygonWindingDirection)(target, windingDirection, windingOptions);\n    return targetIndex;\n}\nfunction copyFlatRing(target, targetStartIndex, positions, size, srcStartIndex = 0, srcEndIndex, windingDirection) {\n    srcEndIndex = srcEndIndex || positions.length;\n    const srcLength = srcEndIndex - srcStartIndex;\n    if (srcLength <= 0) {\n        return targetStartIndex;\n    }\n    let targetIndex = targetStartIndex;\n    for(let i = 0; i < srcLength; i++){\n        target[targetIndex++] = positions[srcStartIndex + i];\n    }\n    if (!isFlatRingClosed(positions, size, srcStartIndex, srcEndIndex)) {\n        for(let i = 0; i < size; i++){\n            target[targetIndex++] = positions[srcStartIndex + i];\n        }\n    }\n    windingOptions.start = targetStartIndex;\n    windingOptions.end = targetIndex;\n    windingOptions.size = size;\n    (0,_math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__.modifyPolygonWindingDirection)(target, windingDirection, windingOptions);\n    return targetIndex;\n}\nfunction normalize(polygon, positionSize) {\n    validate(polygon);\n    const positions = [];\n    const holeIndices = [];\n    if (\"positions\" in polygon) {\n        const { positions: srcPositions, holeIndices: srcHoleIndices } = polygon;\n        if (srcHoleIndices) {\n            let targetIndex = 0;\n            for(let i = 0; i <= srcHoleIndices.length; i++){\n                targetIndex = copyFlatRing(positions, targetIndex, srcPositions, positionSize, srcHoleIndices[i - 1], srcHoleIndices[i], i === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING);\n                holeIndices.push(targetIndex);\n            }\n            holeIndices.pop();\n            return {\n                positions,\n                holeIndices\n            };\n        }\n        polygon = srcPositions;\n    }\n    if (!isNested(polygon)) {\n        copyFlatRing(positions, 0, polygon, positionSize, 0, positions.length, OUTER_POLYGON_WINDING);\n        return positions;\n    }\n    if (!isSimple(polygon)) {\n        let targetIndex = 0;\n        for (const [polygonIndex, simplePolygon] of polygon.entries()){\n            targetIndex = copyNestedRing(positions, targetIndex, simplePolygon, positionSize, polygonIndex === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING);\n            holeIndices.push(targetIndex);\n        }\n        holeIndices.pop();\n        return {\n            positions,\n            holeIndices\n        };\n    }\n    copyNestedRing(positions, 0, polygon, positionSize, OUTER_POLYGON_WINDING);\n    return positions;\n}\nfunction getPlaneArea(positions, xIndex, yIndex) {\n    const numVerts = positions.length / 3;\n    let area = 0;\n    for(let i = 0; i < numVerts; i++){\n        const j = (i + 1) % numVerts;\n        area += positions[i * 3 + xIndex] * positions[j * 3 + yIndex];\n        area -= positions[j * 3 + xIndex] * positions[i * 3 + yIndex];\n    }\n    return Math.abs(area / 2);\n}\nfunction permutePositions(positions, xIndex, yIndex, zIndex) {\n    const numVerts = positions.length / 3;\n    for(let i = 0; i < numVerts; i++){\n        const o = i * 3;\n        const x = positions[o + 0];\n        const y = positions[o + 1];\n        const z = positions[o + 2];\n        positions[o + xIndex] = x;\n        positions[o + yIndex] = y;\n        positions[o + zIndex] = z;\n    }\n}\nfunction getSurfaceIndices(polygon, positionSize, preproject, full3d) {\n    let holeIndices = getHoleIndices(polygon);\n    if (holeIndices) {\n        holeIndices = holeIndices.map((positionIndex)=>positionIndex / positionSize);\n    }\n    let positions = getPositions(polygon);\n    const is3d = full3d && positionSize === 3;\n    if (preproject) {\n        const n = positions.length;\n        positions = positions.slice();\n        const p = [];\n        for(let i = 0; i < n; i += positionSize){\n            p[0] = positions[i];\n            p[1] = positions[i + 1];\n            if (is3d) {\n                p[2] = positions[i + 2];\n            }\n            const xy = preproject(p);\n            positions[i] = xy[0];\n            positions[i + 1] = xy[1];\n            if (is3d) {\n                positions[i + 2] = xy[2];\n            }\n        }\n    }\n    if (is3d) {\n        const xyArea = getPlaneArea(positions, 0, 1);\n        const xzArea = getPlaneArea(positions, 0, 2);\n        const yzArea = getPlaneArea(positions, 1, 2);\n        if (!xyArea && !xzArea && !yzArea) {\n            return [];\n        }\n        if (xyArea > xzArea && xyArea > yzArea) {} else if (xzArea > yzArea) {\n            if (!preproject) {\n                positions = positions.slice();\n            }\n            permutePositions(positions, 0, 2, 1);\n        } else {\n            if (!preproject) {\n                positions = positions.slice();\n            }\n            permutePositions(positions, 2, 0, 1);\n        }\n    }\n    return earcut__WEBPACK_IMPORTED_MODULE_0___default()(positions, holeIndices, positionSize);\n} //# sourceMappingURL=polygon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME solid-polygon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\"); //# sourceMappingURL=solid-polygon-layer-fragment.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci1mcmFnbWVudC5nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxpTkFBaU4sRUFBQyxDQUNqTyw2REFBNkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanM/NTVmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgc29saWQtcG9seWdvbi1sYXllci1mcmFnbWVudC1zaGFkZXJcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuXFxudmFyeWluZyB2ZWM0IHZDb2xvcjtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2xfRnJhZ0NvbG9yID0gdkNvbG9yO1xcblxcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUihnbF9GcmFnQ29sb3IsIGdlb21ldHJ5KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zb2xpZC1wb2x5Z29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"\\nattribute vec2 vertexPositions;\\nattribute float vertexValid;\\n\\nuniform bool extruded;\\nuniform bool isWireframe;\\nuniform float elevationScale;\\nuniform float opacity;\\n\\nvarying vec4 vColor;\\n\\nstruct PolygonProps {\\n  vec4 fillColors;\\n  vec4 lineColors;\\n  vec3 positions;\\n  vec3 nextPositions;\\n  vec3 pickingColors;\\n  vec3 positions64Low;\\n  vec3 nextPositions64Low;\\n  float elevations;\\n};\\n\\nvec3 project_offset_normal(vec3 vector) {\\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\\n  }\\n  return project_normal(vector);\\n}\\n\\nvoid calculatePosition(PolygonProps props) {\\n#ifdef IS_SIDE_VERTEX\\n  if(vertexValid < 0.5){\\n    gl_Position = vec4(0.);\\n    return;\\n  }\\n#endif\\n\\n  vec3 pos;\\n  vec3 pos64Low;\\n  vec3 normal;\\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\\n\\n  geometry.worldPosition = props.positions;\\n  geometry.worldPositionAlt = props.nextPositions;\\n  geometry.pickingColor = props.pickingColors;\\n\\n#ifdef IS_SIDE_VERTEX\\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\\n  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);\\n#else\\n  pos = props.positions;\\n  pos64Low = props.positions64Low;\\n#endif\\n\\n  if (extruded) {\\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\\n  }\\n  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\\n\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  if (extruded) {\\n  #ifdef IS_SIDE_VERTEX\\n    normal = vec3(\\n      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),\\n      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),\\n      0.0);\\n    normal = project_offset_normal(normal);\\n  #else\\n    normal = project_normal(vec3(0.0, 0.0, 1.0));\\n  #endif\\n    geometry.normal = normal;\\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);\\n    vColor = vec4(lightColor, colors.a * opacity);\\n  } else {\\n    vColor = vec4(colors.rgb, colors.a * opacity);\\n  }\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n}\\n\"); //# sourceMappingURL=solid-polygon-layer-vertex-main.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtbWFpbi5nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSx3eEVBQXd4RSxFQUFDLENBQ3h5RSxnRUFBZ0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1tYWluLmdsc2wuanM/YmZkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIlxcbmF0dHJpYnV0ZSB2ZWMyIHZlcnRleFBvc2l0aW9ucztcXG5hdHRyaWJ1dGUgZmxvYXQgdmVydGV4VmFsaWQ7XFxuXFxudW5pZm9ybSBib29sIGV4dHJ1ZGVkO1xcbnVuaWZvcm0gYm9vbCBpc1dpcmVmcmFtZTtcXG51bmlmb3JtIGZsb2F0IGVsZXZhdGlvblNjYWxlO1xcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG5cXG52YXJ5aW5nIHZlYzQgdkNvbG9yO1xcblxcbnN0cnVjdCBQb2x5Z29uUHJvcHMge1xcbiAgdmVjNCBmaWxsQ29sb3JzO1xcbiAgdmVjNCBsaW5lQ29sb3JzO1xcbiAgdmVjMyBwb3NpdGlvbnM7XFxuICB2ZWMzIG5leHRQb3NpdGlvbnM7XFxuICB2ZWMzIHBpY2tpbmdDb2xvcnM7XFxuICB2ZWMzIHBvc2l0aW9uczY0TG93O1xcbiAgdmVjMyBuZXh0UG9zaXRpb25zNjRMb3c7XFxuICBmbG9hdCBlbGV2YXRpb25zO1xcbn07XFxuXFxudmVjMyBwcm9qZWN0X29mZnNldF9ub3JtYWwodmVjMyB2ZWN0b3IpIHtcXG4gIGlmIChwcm9qZWN0X3VDb29yZGluYXRlU3lzdGVtID09IENPT1JESU5BVEVfU1lTVEVNX0xOR0xBVCB8fFxcbiAgICBwcm9qZWN0X3VDb29yZGluYXRlU3lzdGVtID09IENPT1JESU5BVEVfU1lTVEVNX0xOR0xBVF9PRkZTRVRTKSB7XFxuICAgIHJldHVybiBub3JtYWxpemUodmVjdG9yICogcHJvamVjdF91Q29tbW9uVW5pdHNQZXJXb3JsZFVuaXQpO1xcbiAgfVxcbiAgcmV0dXJuIHByb2plY3Rfbm9ybWFsKHZlY3Rvcik7XFxufVxcblxcbnZvaWQgY2FsY3VsYXRlUG9zaXRpb24oUG9seWdvblByb3BzIHByb3BzKSB7XFxuI2lmZGVmIElTX1NJREVfVkVSVEVYXFxuICBpZih2ZXJ0ZXhWYWxpZCA8IDAuNSl7XFxuICAgIGdsX1Bvc2l0aW9uID0gdmVjNCgwLik7XFxuICAgIHJldHVybjtcXG4gIH1cXG4jZW5kaWZcXG5cXG4gIHZlYzMgcG9zO1xcbiAgdmVjMyBwb3M2NExvdztcXG4gIHZlYzMgbm9ybWFsO1xcbiAgdmVjNCBjb2xvcnMgPSBpc1dpcmVmcmFtZSA/IHByb3BzLmxpbmVDb2xvcnMgOiBwcm9wcy5maWxsQ29sb3JzO1xcblxcbiAgZ2VvbWV0cnkud29ybGRQb3NpdGlvbiA9IHByb3BzLnBvc2l0aW9ucztcXG4gIGdlb21ldHJ5LndvcmxkUG9zaXRpb25BbHQgPSBwcm9wcy5uZXh0UG9zaXRpb25zO1xcbiAgZ2VvbWV0cnkucGlja2luZ0NvbG9yID0gcHJvcHMucGlja2luZ0NvbG9ycztcXG5cXG4jaWZkZWYgSVNfU0lERV9WRVJURVhcXG4gIHBvcyA9IG1peChwcm9wcy5wb3NpdGlvbnMsIHByb3BzLm5leHRQb3NpdGlvbnMsIHZlcnRleFBvc2l0aW9ucy54KTtcXG4gIHBvczY0TG93ID0gbWl4KHByb3BzLnBvc2l0aW9uczY0TG93LCBwcm9wcy5uZXh0UG9zaXRpb25zNjRMb3csIHZlcnRleFBvc2l0aW9ucy54KTtcXG4jZWxzZVxcbiAgcG9zID0gcHJvcHMucG9zaXRpb25zO1xcbiAgcG9zNjRMb3cgPSBwcm9wcy5wb3NpdGlvbnM2NExvdztcXG4jZW5kaWZcXG5cXG4gIGlmIChleHRydWRlZCkge1xcbiAgICBwb3MueiArPSBwcm9wcy5lbGV2YXRpb25zICogdmVydGV4UG9zaXRpb25zLnkgKiBlbGV2YXRpb25TY2FsZTtcXG4gIH1cXG4gIGdsX1Bvc2l0aW9uID0gcHJvamVjdF9wb3NpdGlvbl90b19jbGlwc3BhY2UocG9zLCBwb3M2NExvdywgdmVjMygwLiksIGdlb21ldHJ5LnBvc2l0aW9uKTtcXG5cXG4gIERFQ0tHTF9GSUxURVJfR0xfUE9TSVRJT04oZ2xfUG9zaXRpb24sIGdlb21ldHJ5KTtcXG5cXG4gIGlmIChleHRydWRlZCkge1xcbiAgI2lmZGVmIElTX1NJREVfVkVSVEVYXFxuICAgIG5vcm1hbCA9IHZlYzMoXFxuICAgICAgcHJvcHMucG9zaXRpb25zLnkgLSBwcm9wcy5uZXh0UG9zaXRpb25zLnkgKyAocHJvcHMucG9zaXRpb25zNjRMb3cueSAtIHByb3BzLm5leHRQb3NpdGlvbnM2NExvdy55KSxcXG4gICAgICBwcm9wcy5uZXh0UG9zaXRpb25zLnggLSBwcm9wcy5wb3NpdGlvbnMueCArIChwcm9wcy5uZXh0UG9zaXRpb25zNjRMb3cueCAtIHByb3BzLnBvc2l0aW9uczY0TG93LngpLFxcbiAgICAgIDAuMCk7XFxuICAgIG5vcm1hbCA9IHByb2plY3Rfb2Zmc2V0X25vcm1hbChub3JtYWwpO1xcbiAgI2Vsc2VcXG4gICAgbm9ybWFsID0gcHJvamVjdF9ub3JtYWwodmVjMygwLjAsIDAuMCwgMS4wKSk7XFxuICAjZW5kaWZcXG4gICAgZ2VvbWV0cnkubm9ybWFsID0gbm9ybWFsO1xcbiAgICB2ZWMzIGxpZ2h0Q29sb3IgPSBsaWdodGluZ19nZXRMaWdodENvbG9yKGNvbG9ycy5yZ2IsIHByb2plY3RfdUNhbWVyYVBvc2l0aW9uLCBnZW9tZXRyeS5wb3NpdGlvbi54eXosIG5vcm1hbCk7XFxuICAgIHZDb2xvciA9IHZlYzQobGlnaHRDb2xvciwgY29sb3JzLmEgKiBvcGFjaXR5KTtcXG4gIH0gZWxzZSB7XFxuICAgIHZDb2xvciA9IHZlYzQoY29sb3JzLnJnYiwgY29sb3JzLmEgKiBvcGFjaXR5KTtcXG4gIH1cXG4gIERFQ0tHTF9GSUxURVJfQ09MT1IodkNvbG9yLCBnZW9tZXRyeSk7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtbWFpbi5nbHNsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _solid_polygon_layer_vertex_main_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-main.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME solid-polygon-layer-vertex-shader-side\\n#define IS_SIDE_VERTEX\\n\\n\\nattribute vec3 instancePositions;\\nattribute vec3 nextPositions;\\nattribute vec3 instancePositions64Low;\\nattribute vec3 nextPositions64Low;\\nattribute float instanceElevations;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\n\".concat(_solid_polygon_layer_vertex_main_glsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"], \"\\n\\nvoid main(void) {\\n  PolygonProps props;\\n\\n  #if RING_WINDING_ORDER_CW == 1\\n    props.positions = instancePositions;\\n    props.positions64Low = instancePositions64Low;\\n    props.nextPositions = nextPositions;\\n    props.nextPositions64Low = nextPositions64Low;\\n  #else\\n    props.positions = nextPositions;\\n    props.positions64Low = nextPositions64Low;\\n    props.nextPositions = instancePositions;\\n    props.nextPositions64Low = instancePositions64Low;\\n  #endif\\n  props.elevations = instanceElevations;\\n  props.fillColors = instanceFillColors;\\n  props.lineColors = instanceLineColors;\\n  props.pickingColors = instancePickingColors;\\n\\n  calculatePosition(props);\\n}\\n\")); //# sourceMappingURL=solid-polygon-layer-vertex-side.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtc2lkZS5nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBEO0FBQzFELGlFQUFlLCtYQUErWEMsTUFBTSxDQUFDRCw2RUFBSUEsRUFBRSxnckJBQWdyQixFQUFDLENBQzVrQyxnRUFBZ0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1zaWRlLmdsc2wuanM/OWY1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWFpbiBmcm9tICcuL3NvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LW1haW4uZ2xzbCc7XG5leHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtc2hhZGVyLXNpZGVcXG4jZGVmaW5lIElTX1NJREVfVkVSVEVYXFxuXFxuXFxuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VQb3NpdGlvbnM7XFxuYXR0cmlidXRlIHZlYzMgbmV4dFBvc2l0aW9ucztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9uczY0TG93O1xcbmF0dHJpYnV0ZSB2ZWMzIG5leHRQb3NpdGlvbnM2NExvdztcXG5hdHRyaWJ1dGUgZmxvYXQgaW5zdGFuY2VFbGV2YXRpb25zO1xcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlRmlsbENvbG9ycztcXG5hdHRyaWJ1dGUgdmVjNCBpbnN0YW5jZUxpbmVDb2xvcnM7XFxuYXR0cmlidXRlIHZlYzMgaW5zdGFuY2VQaWNraW5nQ29sb3JzO1xcblxcblwiLmNvbmNhdChtYWluLCBcIlxcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICBQb2x5Z29uUHJvcHMgcHJvcHM7XFxuXFxuICAjaWYgUklOR19XSU5ESU5HX09SREVSX0NXID09IDFcXG4gICAgcHJvcHMucG9zaXRpb25zID0gaW5zdGFuY2VQb3NpdGlvbnM7XFxuICAgIHByb3BzLnBvc2l0aW9uczY0TG93ID0gaW5zdGFuY2VQb3NpdGlvbnM2NExvdztcXG4gICAgcHJvcHMubmV4dFBvc2l0aW9ucyA9IG5leHRQb3NpdGlvbnM7XFxuICAgIHByb3BzLm5leHRQb3NpdGlvbnM2NExvdyA9IG5leHRQb3NpdGlvbnM2NExvdztcXG4gICNlbHNlXFxuICAgIHByb3BzLnBvc2l0aW9ucyA9IG5leHRQb3NpdGlvbnM7XFxuICAgIHByb3BzLnBvc2l0aW9uczY0TG93ID0gbmV4dFBvc2l0aW9uczY0TG93O1xcbiAgICBwcm9wcy5uZXh0UG9zaXRpb25zID0gaW5zdGFuY2VQb3NpdGlvbnM7XFxuICAgIHByb3BzLm5leHRQb3NpdGlvbnM2NExvdyA9IGluc3RhbmNlUG9zaXRpb25zNjRMb3c7XFxuICAjZW5kaWZcXG4gIHByb3BzLmVsZXZhdGlvbnMgPSBpbnN0YW5jZUVsZXZhdGlvbnM7XFxuICBwcm9wcy5maWxsQ29sb3JzID0gaW5zdGFuY2VGaWxsQ29sb3JzO1xcbiAgcHJvcHMubGluZUNvbG9ycyA9IGluc3RhbmNlTGluZUNvbG9ycztcXG4gIHByb3BzLnBpY2tpbmdDb2xvcnMgPSBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XFxuXFxuICBjYWxjdWxhdGVQb3NpdGlvbihwcm9wcyk7XFxufVxcblwiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LXNpZGUuZ2xzbC5qcy5tYXAiXSwibmFtZXMiOlsibWFpbiIsImNvbmNhdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _solid_polygon_layer_vertex_main_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-main.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME solid-polygon-layer-vertex-shader\\n\\nattribute vec3 positions;\\nattribute vec3 positions64Low;\\nattribute float elevations;\\nattribute vec4 fillColors;\\nattribute vec4 lineColors;\\nattribute vec3 pickingColors;\\n\\n\".concat(_solid_polygon_layer_vertex_main_glsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"], \"\\n\\nvoid main(void) {\\n  PolygonProps props;\\n\\n  props.positions = positions;\\n  props.positions64Low = positions64Low;\\n  props.elevations = elevations;\\n  props.fillColors = fillColors;\\n  props.lineColors = lineColors;\\n  props.pickingColors = pickingColors;\\n\\n  calculatePosition(props);\\n}\\n\")); //# sourceMappingURL=solid-polygon-layer-vertex-top.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtdG9wLmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFDMUQsaUVBQWUsNk9BQTZPQyxNQUFNLENBQUNELDZFQUFJQSxFQUFFLDZTQUE2UyxFQUFDLENBQ3ZqQiwrREFBK0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vc29saWQtcG9seWdvbi1sYXllci9zb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC10b3AuZ2xzbC5qcz8yZTA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtYWluIGZyb20gJy4vc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtbWFpbi5nbHNsJztcbmV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSBzb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1zaGFkZXJcXG5cXG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbnM7XFxuYXR0cmlidXRlIHZlYzMgcG9zaXRpb25zNjRMb3c7XFxuYXR0cmlidXRlIGZsb2F0IGVsZXZhdGlvbnM7XFxuYXR0cmlidXRlIHZlYzQgZmlsbENvbG9ycztcXG5hdHRyaWJ1dGUgdmVjNCBsaW5lQ29sb3JzO1xcbmF0dHJpYnV0ZSB2ZWMzIHBpY2tpbmdDb2xvcnM7XFxuXFxuXCIuY29uY2F0KG1haW4sIFwiXFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIFBvbHlnb25Qcm9wcyBwcm9wcztcXG5cXG4gIHByb3BzLnBvc2l0aW9ucyA9IHBvc2l0aW9ucztcXG4gIHByb3BzLnBvc2l0aW9uczY0TG93ID0gcG9zaXRpb25zNjRMb3c7XFxuICBwcm9wcy5lbGV2YXRpb25zID0gZWxldmF0aW9ucztcXG4gIHByb3BzLmZpbGxDb2xvcnMgPSBmaWxsQ29sb3JzO1xcbiAgcHJvcHMubGluZUNvbG9ycyA9IGxpbmVDb2xvcnM7XFxuICBwcm9wcy5waWNraW5nQ29sb3JzID0gcGlja2luZ0NvbG9ycztcXG5cXG4gIGNhbGN1bGF0ZVBvc2l0aW9uKHByb3BzKTtcXG59XFxuXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtdG9wLmdsc2wuanMubWFwIl0sIm5hbWVzIjpbIm1haW4iLCJjb25jYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SolidPolygonLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/features.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _polygon_tesselator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./polygon-tesselator */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon-tesselator.js\");\n/* harmony import */ var _solid_polygon_layer_vertex_top_glsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-top.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js\");\n/* harmony import */ var _solid_polygon_layer_vertex_side_glsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-side.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js\");\n/* harmony import */ var _solid_polygon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./solid-polygon-layer-fragment.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js\");\n\n\n\n\n\n\n\nconst DEFAULT_COLOR = [\n    0,\n    0,\n    0,\n    255\n];\nconst defaultProps = {\n    filled: true,\n    extruded: false,\n    wireframe: false,\n    _normalize: true,\n    _windingOrder: \"CW\",\n    _full3d: false,\n    elevationScale: {\n        type: \"number\",\n        min: 0,\n        value: 1\n    },\n    getPolygon: {\n        type: \"accessor\",\n        value: (f)=>f.polygon\n    },\n    getElevation: {\n        type: \"accessor\",\n        value: 1000\n    },\n    getFillColor: {\n        type: \"accessor\",\n        value: DEFAULT_COLOR\n    },\n    getLineColor: {\n        type: \"accessor\",\n        value: DEFAULT_COLOR\n    },\n    material: true\n};\nconst ATTRIBUTE_TRANSITION = {\n    enter: (value, chunk)=>{\n        return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n    }\n};\nclass SolidPolygonLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n    }\n    getShaders(type) {\n        return super.getShaders({\n            vs: type === \"top\" ? _solid_polygon_layer_vertex_top_glsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"] : _solid_polygon_layer_vertex_side_glsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n            fs: _solid_polygon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n            defines: {\n                RING_WINDING_ORDER_CW: !this.props._normalize && this.props._windingOrder === \"CCW\" ? 0 : 1\n            },\n            modules: [\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__.gouraudLighting,\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n            ]\n        });\n    }\n    get wrapLongitude() {\n        return false;\n    }\n    initializeState() {\n        const { gl, viewport } = this.context;\n        let { coordinateSystem } = this.props;\n        const { _full3d } = this.props;\n        if (viewport.isGeospatial && coordinateSystem === _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__.COORDINATE_SYSTEM.DEFAULT) {\n            coordinateSystem = _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__.COORDINATE_SYSTEM.LNGLAT;\n        }\n        let preproject;\n        if (coordinateSystem === _deck_gl_core__WEBPACK_IMPORTED_MODULE_8__.COORDINATE_SYSTEM.LNGLAT) {\n            if (_full3d) {\n                preproject = viewport.projectPosition.bind(viewport);\n            } else {\n                preproject = viewport.projectFlat.bind(viewport);\n            }\n        }\n        this.setState({\n            numInstances: 0,\n            polygonTesselator: new _polygon_tesselator__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n                preproject,\n                fp64: this.use64bitPositions(),\n                IndexType: !gl || (0,_luma_gl_core__WEBPACK_IMPORTED_MODULE_10__.hasFeatures)(gl, _luma_gl_core__WEBPACK_IMPORTED_MODULE_11__.FEATURES.ELEMENT_INDEX_UINT32) ? Uint32Array : Uint16Array\n            })\n        });\n        const attributeManager = this.getAttributeManager();\n        const noAlloc = true;\n        attributeManager.remove([\n            \"instancePickingColors\"\n        ]);\n        attributeManager.add({\n            indices: {\n                size: 1,\n                isIndexed: true,\n                update: this.calculateIndices,\n                noAlloc\n            },\n            positions: {\n                size: 3,\n                type: 5130,\n                fp64: this.use64bitPositions(),\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: \"getPolygon\",\n                update: this.calculatePositions,\n                noAlloc,\n                shaderAttributes: {\n                    positions: {\n                        vertexOffset: 0,\n                        divisor: 0\n                    },\n                    instancePositions: {\n                        vertexOffset: 0,\n                        divisor: 1\n                    },\n                    nextPositions: {\n                        vertexOffset: 1,\n                        divisor: 1\n                    }\n                }\n            },\n            vertexValid: {\n                size: 1,\n                divisor: 1,\n                type: 5121,\n                update: this.calculateVertexValid,\n                noAlloc\n            },\n            elevations: {\n                size: 1,\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: \"getElevation\",\n                shaderAttributes: {\n                    elevations: {\n                        divisor: 0\n                    },\n                    instanceElevations: {\n                        divisor: 1\n                    }\n                }\n            },\n            fillColors: {\n                size: this.props.colorFormat.length,\n                type: 5121,\n                normalized: true,\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: \"getFillColor\",\n                defaultValue: DEFAULT_COLOR,\n                shaderAttributes: {\n                    fillColors: {\n                        divisor: 0\n                    },\n                    instanceFillColors: {\n                        divisor: 1\n                    }\n                }\n            },\n            lineColors: {\n                size: this.props.colorFormat.length,\n                type: 5121,\n                normalized: true,\n                transition: ATTRIBUTE_TRANSITION,\n                accessor: \"getLineColor\",\n                defaultValue: DEFAULT_COLOR,\n                shaderAttributes: {\n                    lineColors: {\n                        divisor: 0\n                    },\n                    instanceLineColors: {\n                        divisor: 1\n                    }\n                }\n            },\n            pickingColors: {\n                size: 3,\n                type: 5121,\n                accessor: (object, { index, target: value })=>this.encodePickingColor(object && object.__source ? object.__source.index : index, value),\n                shaderAttributes: {\n                    pickingColors: {\n                        divisor: 0\n                    },\n                    instancePickingColors: {\n                        divisor: 1\n                    }\n                }\n            }\n        });\n    }\n    getPickingInfo(params) {\n        const info = super.getPickingInfo(params);\n        const { index } = info;\n        const { data } = this.props;\n        if (data[0] && data[0].__source) {\n            info.object = data.find((d)=>d.__source.index === index);\n        }\n        return info;\n    }\n    disablePickingIndex(objectIndex) {\n        const { data } = this.props;\n        if (data[0] && data[0].__source) {\n            for(let i = 0; i < data.length; i++){\n                if (data[i].__source.index === objectIndex) {\n                    this._disablePickingIndex(i);\n                }\n            }\n        } else {\n            super.disablePickingIndex(objectIndex);\n        }\n    }\n    draw({ uniforms }) {\n        const { extruded, filled, wireframe, elevationScale } = this.props;\n        const { topModel, sideModel, polygonTesselator } = this.state;\n        const renderUniforms = {\n            ...uniforms,\n            extruded: Boolean(extruded),\n            elevationScale\n        };\n        if (sideModel) {\n            sideModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n            sideModel.setUniforms(renderUniforms);\n            if (wireframe) {\n                sideModel.setDrawMode(3);\n                sideModel.setUniforms({\n                    isWireframe: true\n                }).draw();\n            }\n            if (filled) {\n                sideModel.setDrawMode(6);\n                sideModel.setUniforms({\n                    isWireframe: false\n                }).draw();\n            }\n        }\n        if (topModel) {\n            topModel.setVertexCount(polygonTesselator.vertexCount);\n            topModel.setUniforms(renderUniforms).draw();\n        }\n    }\n    updateState(updateParams) {\n        super.updateState(updateParams);\n        this.updateGeometry(updateParams);\n        const { props, oldProps, changeFlags } = updateParams;\n        const attributeManager = this.getAttributeManager();\n        const regenerateModels = changeFlags.extensionsChanged || props.filled !== oldProps.filled || props.extruded !== oldProps.extruded;\n        if (regenerateModels) {\n            var _this$state$models;\n            (_this$state$models = this.state.models) === null || _this$state$models === void 0 ? void 0 : _this$state$models.forEach((model)=>model.delete());\n            this.setState(this._getModels(this.context.gl));\n            attributeManager.invalidateAll();\n        }\n    }\n    updateGeometry({ props, oldProps, changeFlags }) {\n        const geometryConfigChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon);\n        if (geometryConfigChanged) {\n            const { polygonTesselator } = this.state;\n            const buffers = props.data.attributes || {};\n            polygonTesselator.updateGeometry({\n                data: props.data,\n                normalize: props._normalize,\n                geometryBuffer: buffers.getPolygon,\n                buffers,\n                getGeometry: props.getPolygon,\n                positionFormat: props.positionFormat,\n                wrapLongitude: props.wrapLongitude,\n                resolution: this.context.viewport.resolution,\n                fp64: this.use64bitPositions(),\n                dataChanged: changeFlags.dataChanged,\n                full3d: props._full3d\n            });\n            this.setState({\n                numInstances: polygonTesselator.instanceCount,\n                startIndices: polygonTesselator.vertexStarts\n            });\n            if (!changeFlags.dataChanged) {\n                this.getAttributeManager().invalidateAll();\n            }\n        }\n    }\n    _getModels(gl) {\n        const { id, filled, extruded } = this.props;\n        let topModel;\n        let sideModel;\n        if (filled) {\n            const shaders = this.getShaders(\"top\");\n            shaders.defines.NON_INSTANCED_MODEL = 1;\n            topModel = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"](gl, {\n                ...shaders,\n                id: \"\".concat(id, \"-top\"),\n                drawMode: 4,\n                attributes: {\n                    vertexPositions: new Float32Array([\n                        0,\n                        1\n                    ])\n                },\n                uniforms: {\n                    isWireframe: false,\n                    isSideVertex: false\n                },\n                vertexCount: 0,\n                isIndexed: true\n            });\n        }\n        if (extruded) {\n            sideModel = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_12__[\"default\"](gl, {\n                ...this.getShaders(\"side\"),\n                id: \"\".concat(id, \"-side\"),\n                geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_13__[\"default\"]({\n                    drawMode: 1,\n                    vertexCount: 4,\n                    attributes: {\n                        vertexPositions: {\n                            size: 2,\n                            value: new Float32Array([\n                                1,\n                                0,\n                                0,\n                                0,\n                                0,\n                                1,\n                                1,\n                                1\n                            ])\n                        }\n                    }\n                }),\n                instanceCount: 0,\n                isInstanced: 1\n            });\n            sideModel.userData.excludeAttributes = {\n                indices: true\n            };\n        }\n        return {\n            models: [\n                sideModel,\n                topModel\n            ].filter(Boolean),\n            topModel,\n            sideModel\n        };\n    }\n    calculateIndices(attribute) {\n        const { polygonTesselator } = this.state;\n        attribute.startIndices = polygonTesselator.indexStarts;\n        attribute.value = polygonTesselator.get(\"indices\");\n    }\n    calculatePositions(attribute) {\n        const { polygonTesselator } = this.state;\n        attribute.startIndices = polygonTesselator.vertexStarts;\n        attribute.value = polygonTesselator.get(\"positions\");\n    }\n    calculateVertexValid(attribute) {\n        attribute.value = this.state.polygonTesselator.get(\"vertexValid\");\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(SolidPolygonLayer, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(SolidPolygonLayer, \"layerName\", \"SolidPolygonLayer\"); //# sourceMappingURL=solid-polygon-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_FONT_SETTINGS: () => (/* binding */ DEFAULT_FONT_SETTINGS),\n/* harmony export */   \"default\": () => (/* binding */ FontAtlasManager),\n/* harmony export */   setFontAtlasCacheLimit: () => (/* binding */ setFontAtlasCacheLimit)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _mapbox_tiny_sdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mapbox/tiny-sdf */ \"(ssr)/./node_modules/@mapbox/tiny-sdf/index.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js\");\n/* harmony import */ var _lru_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lru-cache */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js\");\n\n\n\n\n\nfunction getDefaultCharacterSet() {\n    const charSet = [];\n    for(let i = 32; i < 128; i++){\n        charSet.push(String.fromCharCode(i));\n    }\n    return charSet;\n}\nconst DEFAULT_FONT_SETTINGS = {\n    fontFamily: \"Monaco, monospace\",\n    fontWeight: \"normal\",\n    characterSet: getDefaultCharacterSet(),\n    fontSize: 64,\n    buffer: 4,\n    sdf: false,\n    cutoff: 0.25,\n    radius: 12,\n    smoothing: 0.1\n};\nconst MAX_CANVAS_WIDTH = 1024;\nconst BASELINE_SCALE = 0.9;\nconst HEIGHT_SCALE = 1.2;\nconst CACHE_LIMIT = 3;\nlet cache = new _lru_cache__WEBPACK_IMPORTED_MODULE_2__[\"default\"](CACHE_LIMIT);\nfunction getNewChars(cacheKey, characterSet) {\n    let newCharSet;\n    if (typeof characterSet === \"string\") {\n        newCharSet = new Set(Array.from(characterSet));\n    } else {\n        newCharSet = new Set(characterSet);\n    }\n    const cachedFontAtlas = cache.get(cacheKey);\n    if (!cachedFontAtlas) {\n        return newCharSet;\n    }\n    for(const char in cachedFontAtlas.mapping){\n        if (newCharSet.has(char)) {\n            newCharSet.delete(char);\n        }\n    }\n    return newCharSet;\n}\nfunction populateAlphaChannel(alphaChannel, imageData) {\n    for(let i = 0; i < alphaChannel.length; i++){\n        imageData.data[4 * i + 3] = alphaChannel[i];\n    }\n}\nfunction setTextStyle(ctx, fontFamily, fontSize, fontWeight) {\n    ctx.font = \"\".concat(fontWeight, \" \").concat(fontSize, \"px \").concat(fontFamily);\n    ctx.fillStyle = \"#000\";\n    ctx.textBaseline = \"alphabetic\";\n    ctx.textAlign = \"left\";\n}\nfunction setFontAtlasCacheLimit(limit) {\n    _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].assert(Number.isFinite(limit) && limit >= CACHE_LIMIT, \"Invalid cache limit\");\n    cache = new _lru_cache__WEBPACK_IMPORTED_MODULE_2__[\"default\"](limit);\n}\nclass FontAtlasManager {\n    constructor(){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"props\", {\n            ...DEFAULT_FONT_SETTINGS\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_key\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_atlas\", void 0);\n    }\n    get texture() {\n        return this._atlas;\n    }\n    get mapping() {\n        return this._atlas && this._atlas.mapping;\n    }\n    get scale() {\n        const { fontSize, buffer } = this.props;\n        return (fontSize * HEIGHT_SCALE + buffer * 2) / fontSize;\n    }\n    setProps(props = {}) {\n        Object.assign(this.props, props);\n        this._key = this._getKey();\n        const charSet = getNewChars(this._key, this.props.characterSet);\n        const cachedFontAtlas = cache.get(this._key);\n        if (cachedFontAtlas && charSet.size === 0) {\n            if (this._atlas !== cachedFontAtlas) {\n                this._atlas = cachedFontAtlas;\n            }\n            return;\n        }\n        const fontAtlas = this._generateFontAtlas(charSet, cachedFontAtlas);\n        this._atlas = fontAtlas;\n        cache.set(this._key, fontAtlas);\n    }\n    _generateFontAtlas(characterSet, cachedFontAtlas) {\n        const { fontFamily, fontWeight, fontSize, buffer, sdf, radius, cutoff } = this.props;\n        let canvas = cachedFontAtlas && cachedFontAtlas.data;\n        if (!canvas) {\n            canvas = document.createElement(\"canvas\");\n            canvas.width = MAX_CANVAS_WIDTH;\n        }\n        const ctx = canvas.getContext(\"2d\", {\n            willReadFrequently: true\n        });\n        setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n        const { mapping, canvasHeight, xOffset, yOffset } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.buildMapping)({\n            getFontWidth: (char)=>ctx.measureText(char).width,\n            fontHeight: fontSize * HEIGHT_SCALE,\n            buffer,\n            characterSet,\n            maxCanvasWidth: MAX_CANVAS_WIDTH,\n            ...cachedFontAtlas && {\n                mapping: cachedFontAtlas.mapping,\n                xOffset: cachedFontAtlas.xOffset,\n                yOffset: cachedFontAtlas.yOffset\n            }\n        });\n        if (canvas.height !== canvasHeight) {\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            canvas.height = canvasHeight;\n            ctx.putImageData(imageData, 0, 0);\n        }\n        setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n        if (sdf) {\n            const tinySDF = new _mapbox_tiny_sdf__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n                fontSize,\n                buffer,\n                radius,\n                cutoff,\n                fontFamily,\n                fontWeight: \"\".concat(fontWeight)\n            });\n            for (const char of characterSet){\n                const { data, width, height, glyphTop } = tinySDF.draw(char);\n                mapping[char].width = width;\n                mapping[char].layoutOffsetY = fontSize * BASELINE_SCALE - glyphTop;\n                const imageData = ctx.createImageData(width, height);\n                populateAlphaChannel(data, imageData);\n                ctx.putImageData(imageData, mapping[char].x, mapping[char].y);\n            }\n        } else {\n            for (const char of characterSet){\n                ctx.fillText(char, mapping[char].x, mapping[char].y + buffer + fontSize * BASELINE_SCALE);\n            }\n        }\n        return {\n            xOffset,\n            yOffset,\n            mapping,\n            data: canvas,\n            width: canvas.width,\n            height: canvas.height\n        };\n    }\n    _getKey() {\n        const { fontFamily, fontWeight, fontSize, buffer, sdf, radius, cutoff } = this.props;\n        if (sdf) {\n            return \"\".concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontSize, \" \").concat(buffer, \" \").concat(radius, \" \").concat(cutoff);\n        }\n        return \"\".concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontSize, \" \").concat(buffer);\n    }\n} //# sourceMappingURL=font-atlas-manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LRUCache)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nclass LRUCache {\n    constructor(limit = 5){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"limit\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_cache\", {});\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"_order\", []);\n        this.limit = limit;\n    }\n    get(key) {\n        const value = this._cache[key];\n        if (value) {\n            this._deleteOrder(key);\n            this._appendOrder(key);\n        }\n        return value;\n    }\n    set(key, value) {\n        if (!this._cache[key]) {\n            if (Object.keys(this._cache).length === this.limit) {\n                this.delete(this._order[0]);\n            }\n            this._cache[key] = value;\n            this._appendOrder(key);\n        } else {\n            this.delete(key);\n            this._cache[key] = value;\n            this._appendOrder(key);\n        }\n    }\n    delete(key) {\n        const value = this._cache[key];\n        if (value) {\n            delete this._cache[key];\n            this._deleteOrder(key);\n        }\n    }\n    _deleteOrder(key) {\n        const index = this._order.indexOf(key);\n        if (index >= 0) {\n            this._order.splice(index, 1);\n        }\n    }\n    _appendOrder(key) {\n        this._order.push(key);\n    }\n} //# sourceMappingURL=lru-cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvbHJ1LWNhY2hlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdFO0FBQ3pELE1BQU1DO0lBQ25CQyxZQUFZQyxRQUFRLENBQUMsQ0FBRTtRQUNyQkgscUZBQWVBLENBQUMsSUFBSSxFQUFFLFNBQVMsS0FBSztRQUVwQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQztRQUVqQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRTtRQUVsQyxJQUFJLENBQUNHLEtBQUssR0FBR0E7SUFDZjtJQUVBQyxJQUFJQyxHQUFHLEVBQUU7UUFDUCxNQUFNQyxRQUFRLElBQUksQ0FBQ0MsTUFBTSxDQUFDRixJQUFJO1FBRTlCLElBQUlDLE9BQU87WUFDVCxJQUFJLENBQUNFLFlBQVksQ0FBQ0g7WUFFbEIsSUFBSSxDQUFDSSxZQUFZLENBQUNKO1FBQ3BCO1FBRUEsT0FBT0M7SUFDVDtJQUVBSSxJQUFJTCxHQUFHLEVBQUVDLEtBQUssRUFBRTtRQUNkLElBQUksQ0FBQyxJQUFJLENBQUNDLE1BQU0sQ0FBQ0YsSUFBSSxFQUFFO1lBQ3JCLElBQUlNLE9BQU9DLElBQUksQ0FBQyxJQUFJLENBQUNMLE1BQU0sRUFBRU0sTUFBTSxLQUFLLElBQUksQ0FBQ1YsS0FBSyxFQUFFO2dCQUNsRCxJQUFJLENBQUNXLE1BQU0sQ0FBQyxJQUFJLENBQUNDLE1BQU0sQ0FBQyxFQUFFO1lBQzVCO1lBRUEsSUFBSSxDQUFDUixNQUFNLENBQUNGLElBQUksR0FBR0M7WUFFbkIsSUFBSSxDQUFDRyxZQUFZLENBQUNKO1FBQ3BCLE9BQU87WUFDTCxJQUFJLENBQUNTLE1BQU0sQ0FBQ1Q7WUFDWixJQUFJLENBQUNFLE1BQU0sQ0FBQ0YsSUFBSSxHQUFHQztZQUVuQixJQUFJLENBQUNHLFlBQVksQ0FBQ0o7UUFDcEI7SUFDRjtJQUVBUyxPQUFPVCxHQUFHLEVBQUU7UUFDVixNQUFNQyxRQUFRLElBQUksQ0FBQ0MsTUFBTSxDQUFDRixJQUFJO1FBRTlCLElBQUlDLE9BQU87WUFDVCxPQUFPLElBQUksQ0FBQ0MsTUFBTSxDQUFDRixJQUFJO1lBRXZCLElBQUksQ0FBQ0csWUFBWSxDQUFDSDtRQUNwQjtJQUNGO0lBRUFHLGFBQWFILEdBQUcsRUFBRTtRQUNoQixNQUFNVyxRQUFRLElBQUksQ0FBQ0QsTUFBTSxDQUFDRSxPQUFPLENBQUNaO1FBRWxDLElBQUlXLFNBQVMsR0FBRztZQUNkLElBQUksQ0FBQ0QsTUFBTSxDQUFDRyxNQUFNLENBQUNGLE9BQU87UUFDNUI7SUFDRjtJQUVBUCxhQUFhSixHQUFHLEVBQUU7UUFDaEIsSUFBSSxDQUFDVSxNQUFNLENBQUNJLElBQUksQ0FBQ2Q7SUFDbkI7QUFFRixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS90ZXh0LWxheWVyL2xydS1jYWNoZS5qcz82YTI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5XCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMUlVDYWNoZSB7XG4gIGNvbnN0cnVjdG9yKGxpbWl0ID0gNSkge1xuICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxpbWl0XCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJfY2FjaGVcIiwge30pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwiX29yZGVyXCIsIFtdKTtcblxuICAgIHRoaXMubGltaXQgPSBsaW1pdDtcbiAgfVxuXG4gIGdldChrZXkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuX2NhY2hlW2tleV07XG5cbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuX2RlbGV0ZU9yZGVyKGtleSk7XG5cbiAgICAgIHRoaXMuX2FwcGVuZE9yZGVyKGtleSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgc2V0KGtleSwgdmFsdWUpIHtcbiAgICBpZiAoIXRoaXMuX2NhY2hlW2tleV0pIHtcbiAgICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLl9jYWNoZSkubGVuZ3RoID09PSB0aGlzLmxpbWl0KSB7XG4gICAgICAgIHRoaXMuZGVsZXRlKHRoaXMuX29yZGVyWzBdKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fY2FjaGVba2V5XSA9IHZhbHVlO1xuXG4gICAgICB0aGlzLl9hcHBlbmRPcmRlcihrZXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRlbGV0ZShrZXkpO1xuICAgICAgdGhpcy5fY2FjaGVba2V5XSA9IHZhbHVlO1xuXG4gICAgICB0aGlzLl9hcHBlbmRPcmRlcihrZXkpO1xuICAgIH1cbiAgfVxuXG4gIGRlbGV0ZShrZXkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuX2NhY2hlW2tleV07XG5cbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIGRlbGV0ZSB0aGlzLl9jYWNoZVtrZXldO1xuXG4gICAgICB0aGlzLl9kZWxldGVPcmRlcihrZXkpO1xuICAgIH1cbiAgfVxuXG4gIF9kZWxldGVPcmRlcihrZXkpIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuX29yZGVyLmluZGV4T2Yoa2V5KTtcblxuICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICB0aGlzLl9vcmRlci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgfVxuXG4gIF9hcHBlbmRPcmRlcihrZXkpIHtcbiAgICB0aGlzLl9vcmRlci5wdXNoKGtleSk7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bHJ1LWNhY2hlLmpzLm1hcCJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJMUlVDYWNoZSIsImNvbnN0cnVjdG9yIiwibGltaXQiLCJnZXQiLCJrZXkiLCJ2YWx1ZSIsIl9jYWNoZSIsIl9kZWxldGVPcmRlciIsIl9hcHBlbmRPcmRlciIsInNldCIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJkZWxldGUiLCJfb3JkZXIiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME multi-icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float gamma;\\nuniform bool sdf;\\nuniform float alphaCutoff;\\nuniform float sdfBuffer;\\nuniform float outlineBuffer;\\nuniform vec4 outlineColor;\\n\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  if (!picking_uActive) {\\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\\n    vec4 color = vColor;\\n    if (sdf) {\\n      float distance = alpha;\\n      alpha = smoothstep(sdfBuffer - gamma, sdfBuffer + gamma, distance);\\n\\n      if (outlineBuffer > 0.0) {\\n        float inFill = alpha;\\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\\n        color = mix(outlineColor, vColor, inFill);\\n        alpha = inBorder;\\n      }\\n    }\\n    float a = alpha * color.a;\\n    \\n    if (a < alphaCutoff) {\\n      discard;\\n    }\\n\\n    gl_FragColor = vec4(color.rgb, a * opacity);\\n  }\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\"); //# sourceMappingURL=multi-icon-layer-fragment.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvbXVsdGktaWNvbi1sYXllci9tdWx0aS1pY29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLDhrQ0FBOGtDLEVBQUMsQ0FDOWxDLDBEQUEwRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS90ZXh0LWxheWVyL211bHRpLWljb24tbGF5ZXIvbXVsdGktaWNvbi1sYXllci1mcmFnbWVudC5nbHNsLmpzPzQxNGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjZGVmaW5lIFNIQURFUl9OQU1FIG11bHRpLWljb24tbGF5ZXItZnJhZ21lbnQtc2hhZGVyXFxuXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcblxcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG51bmlmb3JtIHNhbXBsZXIyRCBpY29uc1RleHR1cmU7XFxudW5pZm9ybSBmbG9hdCBnYW1tYTtcXG51bmlmb3JtIGJvb2wgc2RmO1xcbnVuaWZvcm0gZmxvYXQgYWxwaGFDdXRvZmY7XFxudW5pZm9ybSBmbG9hdCBzZGZCdWZmZXI7XFxudW5pZm9ybSBmbG9hdCBvdXRsaW5lQnVmZmVyO1xcbnVuaWZvcm0gdmVjNCBvdXRsaW5lQ29sb3I7XFxuXFxudmFyeWluZyB2ZWM0IHZDb2xvcjtcXG52YXJ5aW5nIHZlYzIgdlRleHR1cmVDb29yZHM7XFxudmFyeWluZyB2ZWMyIHV2O1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICBnZW9tZXRyeS51diA9IHV2O1xcblxcbiAgaWYgKCFwaWNraW5nX3VBY3RpdmUpIHtcXG4gICAgZmxvYXQgYWxwaGEgPSB0ZXh0dXJlMkQoaWNvbnNUZXh0dXJlLCB2VGV4dHVyZUNvb3JkcykuYTtcXG4gICAgdmVjNCBjb2xvciA9IHZDb2xvcjtcXG4gICAgaWYgKHNkZikge1xcbiAgICAgIGZsb2F0IGRpc3RhbmNlID0gYWxwaGE7XFxuICAgICAgYWxwaGEgPSBzbW9vdGhzdGVwKHNkZkJ1ZmZlciAtIGdhbW1hLCBzZGZCdWZmZXIgKyBnYW1tYSwgZGlzdGFuY2UpO1xcblxcbiAgICAgIGlmIChvdXRsaW5lQnVmZmVyID4gMC4wKSB7XFxuICAgICAgICBmbG9hdCBpbkZpbGwgPSBhbHBoYTtcXG4gICAgICAgIGZsb2F0IGluQm9yZGVyID0gc21vb3Roc3RlcChvdXRsaW5lQnVmZmVyIC0gZ2FtbWEsIG91dGxpbmVCdWZmZXIgKyBnYW1tYSwgZGlzdGFuY2UpO1xcbiAgICAgICAgY29sb3IgPSBtaXgob3V0bGluZUNvbG9yLCB2Q29sb3IsIGluRmlsbCk7XFxuICAgICAgICBhbHBoYSA9IGluQm9yZGVyO1xcbiAgICAgIH1cXG4gICAgfVxcbiAgICBmbG9hdCBhID0gYWxwaGEgKiBjb2xvci5hO1xcbiAgICBcXG4gICAgaWYgKGEgPCBhbHBoYUN1dG9mZikge1xcbiAgICAgIGRpc2NhcmQ7XFxuICAgIH1cXG5cXG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvci5yZ2IsIGEgKiBvcGFjaXR5KTtcXG4gIH1cXG5cXG4gIERFQ0tHTF9GSUxURVJfQ09MT1IoZ2xfRnJhZ0NvbG9yLCBnZW9tZXRyeSk7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXVsdGktaWNvbi1sYXllci1mcmFnbWVudC5nbHNsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MultiIconLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _icon_layer_icon_layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../icon-layer/icon-layer */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js\");\n/* harmony import */ var _multi_icon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multi-icon-layer-fragment.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js\");\n\n\n\n\nconst DEFAULT_BUFFER = 192.0 / 256;\nconst EMPTY_ARRAY = [];\nconst defaultProps = {\n    getIconOffsets: {\n        type: \"accessor\",\n        value: (x)=>x.offsets\n    },\n    alphaCutoff: 0.001,\n    smoothing: 0.1,\n    outlineWidth: 0,\n    outlineColor: {\n        type: \"color\",\n        value: [\n            0,\n            0,\n            0,\n            255\n        ]\n    }\n};\nclass MultiIconLayer extends _icon_layer_icon_layer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n    }\n    getShaders() {\n        return {\n            ...super.getShaders(),\n            fs: _multi_icon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n        };\n    }\n    initializeState() {\n        super.initializeState();\n        const attributeManager = this.getAttributeManager();\n        attributeManager.addInstanced({\n            instanceOffsets: {\n                size: 2,\n                accessor: \"getIconOffsets\"\n            },\n            instancePickingColors: {\n                type: 5121,\n                size: 3,\n                accessor: (object, { index, target: value })=>this.encodePickingColor(index, value)\n            }\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { props, oldProps } = params;\n        let { outlineColor } = props;\n        if (outlineColor !== oldProps.outlineColor) {\n            outlineColor = outlineColor.map((x)=>x / 255);\n            outlineColor[3] = Number.isFinite(outlineColor[3]) ? outlineColor[3] : 1;\n            this.setState({\n                outlineColor\n            });\n        }\n        if (!props.sdf && props.outlineWidth) {\n            _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn(\"\".concat(this.id, \": fontSettings.sdf is required to render outline\"))();\n        }\n    }\n    draw(params) {\n        const { sdf, smoothing, outlineWidth } = this.props;\n        const { outlineColor } = this.state;\n        const outlineBuffer = outlineWidth ? Math.max(smoothing, DEFAULT_BUFFER * (1 - outlineWidth)) : -1;\n        params.uniforms = {\n            ...params.uniforms,\n            sdfBuffer: DEFAULT_BUFFER,\n            outlineBuffer,\n            gamma: smoothing,\n            sdf: Boolean(sdf),\n            outlineColor\n        };\n        super.draw(params);\n        if (sdf && outlineWidth) {\n            const { iconManager } = this.state;\n            const iconsTexture = iconManager.getTexture();\n            if (iconsTexture) {\n                this.state.model.draw({\n                    uniforms: {\n                        outlineBuffer: DEFAULT_BUFFER\n                    }\n                });\n            }\n        }\n    }\n    getInstanceOffset(icons) {\n        return icons ? Array.from(icons).flatMap((icon)=>super.getInstanceOffset(icon)) : EMPTY_ARRAY;\n    }\n    getInstanceColorMode(icons) {\n        return 1;\n    }\n    getInstanceIconFrame(icons) {\n        return icons ? Array.from(icons).flatMap((icon)=>super.getInstanceIconFrame(icon)) : EMPTY_ARRAY;\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(MultiIconLayer, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(MultiIconLayer, \"layerName\", \"MultiIconLayer\"); //# sourceMappingURL=multi-icon-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME text-background-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool stroked;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying float vLineWidth;\\nvarying vec2 uv;\\nvarying vec2 dimensions;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec2 pixelPosition = uv * dimensions;\\n  if (stroked) {\\n    float distToEdge = min(\\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\\n    );\\n    float isBorder = smoothedge(distToEdge, vLineWidth);\\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\\n  } else {\\n    gl_FragColor = vFillColor;\\n  }\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\"); //# sourceMappingURL=text-background-layer-fragment.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyL3RleHQtYmFja2dyb3VuZC1sYXllci1mcmFnbWVudC5nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSw2c0JBQTZzQixFQUFDLENBQzd0QiwrREFBK0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vdGV4dC1sYXllci90ZXh0LWJhY2tncm91bmQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyLWZyYWdtZW50Lmdsc2wuanM/ZGYyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgdGV4dC1iYWNrZ3JvdW5kLWxheWVyLWZyYWdtZW50LXNoYWRlclxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5cXG51bmlmb3JtIGJvb2wgc3Ryb2tlZDtcXG5cXG52YXJ5aW5nIHZlYzQgdkZpbGxDb2xvcjtcXG52YXJ5aW5nIHZlYzQgdkxpbmVDb2xvcjtcXG52YXJ5aW5nIGZsb2F0IHZMaW5lV2lkdGg7XFxudmFyeWluZyB2ZWMyIHV2O1xcbnZhcnlpbmcgdmVjMiBkaW1lbnNpb25zO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICBnZW9tZXRyeS51diA9IHV2O1xcblxcbiAgdmVjMiBwaXhlbFBvc2l0aW9uID0gdXYgKiBkaW1lbnNpb25zO1xcbiAgaWYgKHN0cm9rZWQpIHtcXG4gICAgZmxvYXQgZGlzdFRvRWRnZSA9IG1pbihcXG4gICAgICBtaW4ocGl4ZWxQb3NpdGlvbi54LCBkaW1lbnNpb25zLnggLSBwaXhlbFBvc2l0aW9uLngpLFxcbiAgICAgIG1pbihwaXhlbFBvc2l0aW9uLnksIGRpbWVuc2lvbnMueSAtIHBpeGVsUG9zaXRpb24ueSlcXG4gICAgKTtcXG4gICAgZmxvYXQgaXNCb3JkZXIgPSBzbW9vdGhlZGdlKGRpc3RUb0VkZ2UsIHZMaW5lV2lkdGgpO1xcbiAgICBnbF9GcmFnQ29sb3IgPSBtaXgodkZpbGxDb2xvciwgdkxpbmVDb2xvciwgaXNCb3JkZXIpO1xcbiAgfSBlbHNlIHtcXG4gICAgZ2xfRnJhZ0NvbG9yID0gdkZpbGxDb2xvcjtcXG4gIH1cXG5cXG4gIERFQ0tHTF9GSUxURVJfQ09MT1IoZ2xfRnJhZ0NvbG9yLCBnZW9tZXRyeSk7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGV4dC1iYWNrZ3JvdW5kLWxheWVyLWZyYWdtZW50Lmdsc2wuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"#define SHADER_NAME text-background-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute vec4 instanceRects;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec2 instancePixelOffsets;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform bool billboard;\\nuniform float opacity;\\nuniform float sizeScale;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform vec4 padding;\\nuniform int sizeUnits;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying float vLineWidth;\\nvarying vec2 uv;\\nvarying vec2 dimensions;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = radians(angle);\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n  vLineWidth = instanceLineWidths;\\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale, sizeUnits),\\n    sizeMinPixels, sizeMaxPixels\\n  );\\n\\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\\n\\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\\n  pixelOffset += instancePixelOffsets;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\\n    DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  }\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\"); //# sourceMappingURL=text-background-layer-vertex.glsl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyL3RleHQtYmFja2dyb3VuZC1sYXllci12ZXJ0ZXguZ2xzbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsNGtGQUE0a0YsRUFBQyxDQUM1bEYsNkRBQTZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyL3RleHQtYmFja2dyb3VuZC1sYXllci12ZXJ0ZXguZ2xzbC5qcz9hNGFhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSB0ZXh0LWJhY2tncm91bmQtbGF5ZXItdmVydGV4LXNoYWRlclxcblxcbmF0dHJpYnV0ZSB2ZWMyIHBvc2l0aW9ucztcXG5cXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9ucztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9uczY0TG93O1xcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlUmVjdHM7XFxuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlU2l6ZXM7XFxuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlQW5nbGVzO1xcbmF0dHJpYnV0ZSB2ZWMyIGluc3RhbmNlUGl4ZWxPZmZzZXRzO1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZUxpbmVXaWR0aHM7XFxuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VGaWxsQ29sb3JzO1xcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlTGluZUNvbG9ycztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XFxuXFxudW5pZm9ybSBib29sIGJpbGxib2FyZDtcXG51bmlmb3JtIGZsb2F0IG9wYWNpdHk7XFxudW5pZm9ybSBmbG9hdCBzaXplU2NhbGU7XFxudW5pZm9ybSBmbG9hdCBzaXplTWluUGl4ZWxzO1xcbnVuaWZvcm0gZmxvYXQgc2l6ZU1heFBpeGVscztcXG51bmlmb3JtIHZlYzQgcGFkZGluZztcXG51bmlmb3JtIGludCBzaXplVW5pdHM7XFxuXFxudmFyeWluZyB2ZWM0IHZGaWxsQ29sb3I7XFxudmFyeWluZyB2ZWM0IHZMaW5lQ29sb3I7XFxudmFyeWluZyBmbG9hdCB2TGluZVdpZHRoO1xcbnZhcnlpbmcgdmVjMiB1djtcXG52YXJ5aW5nIHZlYzIgZGltZW5zaW9ucztcXG5cXG52ZWMyIHJvdGF0ZV9ieV9hbmdsZSh2ZWMyIHZlcnRleCwgZmxvYXQgYW5nbGUpIHtcXG4gIGZsb2F0IGFuZ2xlX3JhZGlhbiA9IHJhZGlhbnMoYW5nbGUpO1xcbiAgZmxvYXQgY29zX2FuZ2xlID0gY29zKGFuZ2xlX3JhZGlhbik7XFxuICBmbG9hdCBzaW5fYW5nbGUgPSBzaW4oYW5nbGVfcmFkaWFuKTtcXG4gIG1hdDIgcm90YXRpb25NYXRyaXggPSBtYXQyKGNvc19hbmdsZSwgLXNpbl9hbmdsZSwgc2luX2FuZ2xlLCBjb3NfYW5nbGUpO1xcbiAgcmV0dXJuIHJvdGF0aW9uTWF0cml4ICogdmVydGV4O1xcbn1cXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2VvbWV0cnkud29ybGRQb3NpdGlvbiA9IGluc3RhbmNlUG9zaXRpb25zO1xcbiAgZ2VvbWV0cnkudXYgPSBwb3NpdGlvbnM7XFxuICBnZW9tZXRyeS5waWNraW5nQ29sb3IgPSBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XFxuICB1diA9IHBvc2l0aW9ucztcXG4gIHZMaW5lV2lkdGggPSBpbnN0YW5jZUxpbmVXaWR0aHM7XFxuICBmbG9hdCBzaXplUGl4ZWxzID0gY2xhbXAoXFxuICAgIHByb2plY3Rfc2l6ZV90b19waXhlbChpbnN0YW5jZVNpemVzICogc2l6ZVNjYWxlLCBzaXplVW5pdHMpLFxcbiAgICBzaXplTWluUGl4ZWxzLCBzaXplTWF4UGl4ZWxzXFxuICApO1xcblxcbiAgZGltZW5zaW9ucyA9IGluc3RhbmNlUmVjdHMuencgKiBzaXplUGl4ZWxzICsgcGFkZGluZy54eSArIHBhZGRpbmcuenc7XFxuXFxuICB2ZWMyIHBpeGVsT2Zmc2V0ID0gKHBvc2l0aW9ucyAqIGluc3RhbmNlUmVjdHMuencgKyBpbnN0YW5jZVJlY3RzLnh5KSAqIHNpemVQaXhlbHMgKyBtaXgoLXBhZGRpbmcueHksIHBhZGRpbmcuencsIHBvc2l0aW9ucyk7XFxuICBwaXhlbE9mZnNldCA9IHJvdGF0ZV9ieV9hbmdsZShwaXhlbE9mZnNldCwgaW5zdGFuY2VBbmdsZXMpO1xcbiAgcGl4ZWxPZmZzZXQgKz0gaW5zdGFuY2VQaXhlbE9mZnNldHM7XFxuICBwaXhlbE9mZnNldC55ICo9IC0xLjA7XFxuXFxuICBpZiAoYmlsbGJvYXJkKSAge1xcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGluc3RhbmNlUG9zaXRpb25zLCBpbnN0YW5jZVBvc2l0aW9uczY0TG93LCB2ZWMzKDAuMCksIGdlb21ldHJ5LnBvc2l0aW9uKTtcXG4gICAgREVDS0dMX0ZJTFRFUl9HTF9QT1NJVElPTihnbF9Qb3NpdGlvbiwgZ2VvbWV0cnkpO1xcbiAgICB2ZWMzIG9mZnNldCA9IHZlYzMocGl4ZWxPZmZzZXQsIDAuMCk7XFxuICAgIERFQ0tHTF9GSUxURVJfU0laRShvZmZzZXQsIGdlb21ldHJ5KTtcXG4gICAgZ2xfUG9zaXRpb24ueHkgKz0gcHJvamVjdF9waXhlbF9zaXplX3RvX2NsaXBzcGFjZShvZmZzZXQueHkpO1xcbiAgfSBlbHNlIHtcXG4gICAgdmVjMyBvZmZzZXRfY29tbW9uID0gdmVjMyhwcm9qZWN0X3BpeGVsX3NpemUocGl4ZWxPZmZzZXQpLCAwLjApO1xcbiAgICBERUNLR0xfRklMVEVSX1NJWkUob2Zmc2V0X2NvbW1vbiwgZ2VvbWV0cnkpO1xcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGluc3RhbmNlUG9zaXRpb25zLCBpbnN0YW5jZVBvc2l0aW9uczY0TG93LCBvZmZzZXRfY29tbW9uLCBnZW9tZXRyeS5wb3NpdGlvbik7XFxuICAgIERFQ0tHTF9GSUxURVJfR0xfUE9TSVRJT04oZ2xfUG9zaXRpb24sIGdlb21ldHJ5KTtcXG4gIH1cXG4gIHZGaWxsQ29sb3IgPSB2ZWM0KGluc3RhbmNlRmlsbENvbG9ycy5yZ2IsIGluc3RhbmNlRmlsbENvbG9ycy5hICogb3BhY2l0eSk7XFxuICBERUNLR0xfRklMVEVSX0NPTE9SKHZGaWxsQ29sb3IsIGdlb21ldHJ5KTtcXG4gIHZMaW5lQ29sb3IgPSB2ZWM0KGluc3RhbmNlTGluZUNvbG9ycy5yZ2IsIGluc3RhbmNlTGluZUNvbG9ycy5hICogb3BhY2l0eSk7XFxuICBERUNLR0xfRklMVEVSX0NPTE9SKHZMaW5lQ29sb3IsIGdlb21ldHJ5KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0LWJhY2tncm91bmQtbGF5ZXItdmVydGV4Lmdsc2wuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TextBackgroundLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/core */ \"(ssr)/./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _text_background_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./text-background-layer-vertex.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js\");\n/* harmony import */ var _text_background_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./text-background-layer-fragment.glsl */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js\");\n\n\n\n\n\nconst defaultProps = {\n    billboard: true,\n    sizeScale: 1,\n    sizeUnits: \"pixels\",\n    sizeMinPixels: 0,\n    sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n    padding: {\n        type: \"array\",\n        value: [\n            0,\n            0,\n            0,\n            0\n        ]\n    },\n    getPosition: {\n        type: \"accessor\",\n        value: (x)=>x.position\n    },\n    getSize: {\n        type: \"accessor\",\n        value: 1\n    },\n    getAngle: {\n        type: \"accessor\",\n        value: 0\n    },\n    getPixelOffset: {\n        type: \"accessor\",\n        value: [\n            0,\n            0\n        ]\n    },\n    getBoundingRect: {\n        type: \"accessor\",\n        value: [\n            0,\n            0,\n            0,\n            0\n        ]\n    },\n    getFillColor: {\n        type: \"accessor\",\n        value: [\n            0,\n            0,\n            0,\n            255\n        ]\n    },\n    getLineColor: {\n        type: \"accessor\",\n        value: [\n            0,\n            0,\n            0,\n            255\n        ]\n    },\n    getLineWidth: {\n        type: \"accessor\",\n        value: 1\n    }\n};\nclass TextBackgroundLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n    }\n    getShaders() {\n        return super.getShaders({\n            vs: _text_background_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n            fs: _text_background_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n            modules: [\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n            ]\n        });\n    }\n    initializeState() {\n        this.getAttributeManager().addInstanced({\n            instancePositions: {\n                size: 3,\n                type: 5130,\n                fp64: this.use64bitPositions(),\n                transition: true,\n                accessor: \"getPosition\"\n            },\n            instanceSizes: {\n                size: 1,\n                transition: true,\n                accessor: \"getSize\",\n                defaultValue: 1\n            },\n            instanceAngles: {\n                size: 1,\n                transition: true,\n                accessor: \"getAngle\"\n            },\n            instanceRects: {\n                size: 4,\n                accessor: \"getBoundingRect\"\n            },\n            instancePixelOffsets: {\n                size: 2,\n                transition: true,\n                accessor: \"getPixelOffset\"\n            },\n            instanceFillColors: {\n                size: 4,\n                transition: true,\n                normalized: true,\n                type: 5121,\n                accessor: \"getFillColor\",\n                defaultValue: [\n                    0,\n                    0,\n                    0,\n                    255\n                ]\n            },\n            instanceLineColors: {\n                size: 4,\n                transition: true,\n                normalized: true,\n                type: 5121,\n                accessor: \"getLineColor\",\n                defaultValue: [\n                    0,\n                    0,\n                    0,\n                    255\n                ]\n            },\n            instanceLineWidths: {\n                size: 1,\n                transition: true,\n                accessor: \"getLineWidth\",\n                defaultValue: 1\n            }\n        });\n    }\n    updateState(params) {\n        super.updateState(params);\n        const { changeFlags } = params;\n        if (changeFlags.extensionsChanged) {\n            var _this$state$model;\n            const { gl } = this.context;\n            (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n            this.state.model = this._getModel(gl);\n            this.getAttributeManager().invalidateAll();\n        }\n    }\n    draw({ uniforms }) {\n        const { billboard, sizeScale, sizeUnits, sizeMinPixels, sizeMaxPixels, getLineWidth } = this.props;\n        let { padding } = this.props;\n        if (padding.length < 4) {\n            padding = [\n                padding[0],\n                padding[1],\n                padding[0],\n                padding[1]\n            ];\n        }\n        this.state.model.setUniforms(uniforms).setUniforms({\n            billboard,\n            stroked: Boolean(getLineWidth),\n            padding,\n            sizeUnits: _deck_gl_core__WEBPACK_IMPORTED_MODULE_6__.UNIT[sizeUnits],\n            sizeScale,\n            sizeMinPixels,\n            sizeMaxPixels\n        }).draw();\n    }\n    _getModel(gl) {\n        const positions = [\n            0,\n            0,\n            1,\n            0,\n            1,\n            1,\n            0,\n            1\n        ];\n        return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"](gl, {\n            ...this.getShaders(),\n            id: this.props.id,\n            geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"]({\n                drawMode: 6,\n                vertexCount: 4,\n                attributes: {\n                    positions: {\n                        size: 2,\n                        value: new Float32Array(positions)\n                    }\n                }\n            }),\n            isInstanced: true\n        });\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(TextBackgroundLayer, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(TextBackgroundLayer, \"layerName\", \"TextBackgroundLayer\"); //# sourceMappingURL=text-background-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TextLayer)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _multi_icon_layer_multi_icon_layer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./multi-icon-layer/multi-icon-layer */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js\");\n/* harmony import */ var _font_atlas_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./font-atlas-manager */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js\");\n/* harmony import */ var _text_background_layer_text_background_layer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./text-background-layer/text-background-layer */ \"(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js\");\n\n\n\n\n\n\nconst TEXT_ANCHOR = {\n    start: 1,\n    middle: 0,\n    end: -1\n};\nconst ALIGNMENT_BASELINE = {\n    top: 1,\n    center: 0,\n    bottom: -1\n};\nconst DEFAULT_COLOR = [\n    0,\n    0,\n    0,\n    255\n];\nconst DEFAULT_LINE_HEIGHT = 1.0;\nconst defaultProps = {\n    billboard: true,\n    sizeScale: 1,\n    sizeUnits: \"pixels\",\n    sizeMinPixels: 0,\n    sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n    background: false,\n    getBackgroundColor: {\n        type: \"accessor\",\n        value: [\n            255,\n            255,\n            255,\n            255\n        ]\n    },\n    getBorderColor: {\n        type: \"accessor\",\n        value: DEFAULT_COLOR\n    },\n    getBorderWidth: {\n        type: \"accessor\",\n        value: 0\n    },\n    backgroundPadding: {\n        type: \"array\",\n        value: [\n            0,\n            0,\n            0,\n            0\n        ]\n    },\n    characterSet: {\n        type: \"object\",\n        value: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_FONT_SETTINGS.characterSet\n    },\n    fontFamily: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_FONT_SETTINGS.fontFamily,\n    fontWeight: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_FONT_SETTINGS.fontWeight,\n    lineHeight: DEFAULT_LINE_HEIGHT,\n    outlineWidth: {\n        type: \"number\",\n        value: 0,\n        min: 0\n    },\n    outlineColor: {\n        type: \"color\",\n        value: DEFAULT_COLOR\n    },\n    fontSettings: {\n        type: \"object\",\n        value: {},\n        compare: 1\n    },\n    wordBreak: \"break-word\",\n    maxWidth: {\n        type: \"number\",\n        value: -1\n    },\n    getText: {\n        type: \"accessor\",\n        value: (x)=>x.text\n    },\n    getPosition: {\n        type: \"accessor\",\n        value: (x)=>x.position\n    },\n    getColor: {\n        type: \"accessor\",\n        value: DEFAULT_COLOR\n    },\n    getSize: {\n        type: \"accessor\",\n        value: 32\n    },\n    getAngle: {\n        type: \"accessor\",\n        value: 0\n    },\n    getTextAnchor: {\n        type: \"accessor\",\n        value: \"middle\"\n    },\n    getAlignmentBaseline: {\n        type: \"accessor\",\n        value: \"center\"\n    },\n    getPixelOffset: {\n        type: \"accessor\",\n        value: [\n            0,\n            0\n        ]\n    },\n    backgroundColor: {\n        deprecatedFor: [\n            \"background\",\n            \"getBackgroundColor\"\n        ]\n    }\n};\nclass TextLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    constructor(...args){\n        super(...args);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"state\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"getBoundingRect\", (object, objectInfo)=>{\n            let { size: [width, height] } = this.transformParagraph(object, objectInfo);\n            const { fontSize } = this.state.fontAtlasManager.props;\n            width /= fontSize;\n            height /= fontSize;\n            const { getTextAnchor, getAlignmentBaseline } = this.props;\n            const anchorX = TEXT_ANCHOR[typeof getTextAnchor === \"function\" ? getTextAnchor(object, objectInfo) : getTextAnchor];\n            const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === \"function\" ? getAlignmentBaseline(object, objectInfo) : getAlignmentBaseline];\n            return [\n                (anchorX - 1) * width / 2,\n                (anchorY - 1) * height / 2,\n                width,\n                height\n            ];\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"getIconOffsets\", (object, objectInfo)=>{\n            const { getTextAnchor, getAlignmentBaseline } = this.props;\n            const { x, y, rowWidth, size: [width, height] } = this.transformParagraph(object, objectInfo);\n            const anchorX = TEXT_ANCHOR[typeof getTextAnchor === \"function\" ? getTextAnchor(object, objectInfo) : getTextAnchor];\n            const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === \"function\" ? getAlignmentBaseline(object, objectInfo) : getAlignmentBaseline];\n            const numCharacters = x.length;\n            const offsets = new Array(numCharacters * 2);\n            let index = 0;\n            for(let i = 0; i < numCharacters; i++){\n                const rowOffset = (1 - anchorX) * (width - rowWidth[i]) / 2;\n                offsets[index++] = (anchorX - 1) * width / 2 + rowOffset + x[i];\n                offsets[index++] = (anchorY - 1) * height / 2 + y[i];\n            }\n            return offsets;\n        });\n    }\n    initializeState() {\n        this.state = {\n            styleVersion: 0,\n            fontAtlasManager: new _font_atlas_manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\n        };\n        if (this.props.maxWidth > 0) {\n            _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn(\"v8.9 breaking change: TextLayer maxWidth is now relative to text size\")();\n        }\n    }\n    updateState(params) {\n        const { props, oldProps, changeFlags } = params;\n        const textChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText);\n        if (textChanged) {\n            this._updateText();\n        }\n        const fontChanged = this._updateFontAtlas();\n        const styleChanged = fontChanged || props.lineHeight !== oldProps.lineHeight || props.wordBreak !== oldProps.wordBreak || props.maxWidth !== oldProps.maxWidth;\n        if (styleChanged) {\n            this.setState({\n                styleVersion: this.state.styleVersion + 1\n            });\n        }\n    }\n    getPickingInfo({ info }) {\n        info.object = info.index >= 0 ? this.props.data[info.index] : null;\n        return info;\n    }\n    _updateFontAtlas() {\n        const { fontSettings, fontFamily, fontWeight } = this.props;\n        const { fontAtlasManager, characterSet } = this.state;\n        const fontProps = {\n            ...fontSettings,\n            characterSet,\n            fontFamily,\n            fontWeight\n        };\n        if (!fontAtlasManager.mapping) {\n            fontAtlasManager.setProps(fontProps);\n            return true;\n        }\n        for(const key in fontProps){\n            if (fontProps[key] !== fontAtlasManager.props[key]) {\n                fontAtlasManager.setProps(fontProps);\n                return true;\n            }\n        }\n        return false;\n    }\n    _updateText() {\n        var _attributes;\n        const { data, characterSet } = this.props;\n        const textBuffer = (_attributes = data.attributes) === null || _attributes === void 0 ? void 0 : _attributes.getText;\n        let { getText } = this.props;\n        let startIndices = data.startIndices;\n        let numInstances;\n        const autoCharacterSet = characterSet === \"auto\" && new Set();\n        if (textBuffer && startIndices) {\n            const { texts, characterCount } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getTextFromBuffer)({\n                ...ArrayBuffer.isView(textBuffer) ? {\n                    value: textBuffer\n                } : textBuffer,\n                length: data.length,\n                startIndices,\n                characterSet: autoCharacterSet\n            });\n            numInstances = characterCount;\n            getText = (_, { index })=>texts[index];\n        } else {\n            const { iterable, objectInfo } = (0,_deck_gl_core__WEBPACK_IMPORTED_MODULE_5__.createIterable)(data);\n            startIndices = [\n                0\n            ];\n            numInstances = 0;\n            for (const object of iterable){\n                objectInfo.index++;\n                const text = Array.from(getText(object, objectInfo) || \"\");\n                if (autoCharacterSet) {\n                    text.forEach(autoCharacterSet.add, autoCharacterSet);\n                }\n                numInstances += text.length;\n                startIndices.push(numInstances);\n            }\n        }\n        this.setState({\n            getText,\n            startIndices,\n            numInstances,\n            characterSet: autoCharacterSet || characterSet\n        });\n    }\n    transformParagraph(object, objectInfo) {\n        const { fontAtlasManager } = this.state;\n        const iconMapping = fontAtlasManager.mapping;\n        const getText = this.state.getText;\n        const { wordBreak, lineHeight, maxWidth } = this.props;\n        const paragraph = getText(object, objectInfo) || \"\";\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.transformParagraph)(paragraph, lineHeight, wordBreak, maxWidth * fontAtlasManager.props.fontSize, iconMapping);\n    }\n    renderLayers() {\n        const { startIndices, numInstances, getText, fontAtlasManager: { scale, texture, mapping }, styleVersion } = this.state;\n        const { data, _dataDiff, getPosition, getColor, getSize, getAngle, getPixelOffset, getBackgroundColor, getBorderColor, getBorderWidth, backgroundPadding, background, billboard, fontSettings, outlineWidth, outlineColor, sizeScale, sizeUnits, sizeMinPixels, sizeMaxPixels, transitions, updateTriggers } = this.props;\n        const CharactersLayerClass = this.getSubLayerClass(\"characters\", _multi_icon_layer_multi_icon_layer__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n        const BackgroundLayerClass = this.getSubLayerClass(\"background\", _text_background_layer_text_background_layer__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n        return [\n            background && new BackgroundLayerClass({\n                getFillColor: getBackgroundColor,\n                getLineColor: getBorderColor,\n                getLineWidth: getBorderWidth,\n                padding: backgroundPadding,\n                getPosition,\n                getSize,\n                getAngle,\n                getPixelOffset,\n                billboard,\n                sizeScale,\n                sizeUnits,\n                sizeMinPixels,\n                sizeMaxPixels,\n                transitions: transitions && {\n                    getPosition: transitions.getPosition,\n                    getAngle: transitions.getAngle,\n                    getSize: transitions.getSize,\n                    getFillColor: transitions.getBackgroundColor,\n                    getLineColor: transitions.getBorderColor,\n                    getLineWidth: transitions.getBorderWidth,\n                    getPixelOffset: transitions.getPixelOffset\n                }\n            }, this.getSubLayerProps({\n                id: \"background\",\n                updateTriggers: {\n                    getPosition: updateTriggers.getPosition,\n                    getAngle: updateTriggers.getAngle,\n                    getSize: updateTriggers.getSize,\n                    getFillColor: updateTriggers.getBackgroundColor,\n                    getLineColor: updateTriggers.getBorderColor,\n                    getLineWidth: updateTriggers.getBorderWidth,\n                    getPixelOffset: updateTriggers.getPixelOffset,\n                    getBoundingRect: {\n                        getText: updateTriggers.getText,\n                        getTextAnchor: updateTriggers.getTextAnchor,\n                        getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n                        styleVersion\n                    }\n                }\n            }), {\n                data: data.attributes && data.attributes.background ? {\n                    length: data.length,\n                    attributes: data.attributes.background\n                } : data,\n                _dataDiff,\n                autoHighlight: false,\n                getBoundingRect: this.getBoundingRect\n            }),\n            new CharactersLayerClass({\n                sdf: fontSettings.sdf,\n                smoothing: Number.isFinite(fontSettings.smoothing) ? fontSettings.smoothing : _font_atlas_manager__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_FONT_SETTINGS.smoothing,\n                outlineWidth: outlineWidth / (fontSettings.radius || _font_atlas_manager__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_FONT_SETTINGS.radius),\n                outlineColor,\n                iconAtlas: texture,\n                iconMapping: mapping,\n                getPosition,\n                getColor,\n                getSize,\n                getAngle,\n                getPixelOffset,\n                billboard,\n                sizeScale: sizeScale * scale,\n                sizeUnits,\n                sizeMinPixels: sizeMinPixels * scale,\n                sizeMaxPixels: sizeMaxPixels * scale,\n                transitions: transitions && {\n                    getPosition: transitions.getPosition,\n                    getAngle: transitions.getAngle,\n                    getColor: transitions.getColor,\n                    getSize: transitions.getSize,\n                    getPixelOffset: transitions.getPixelOffset\n                }\n            }, this.getSubLayerProps({\n                id: \"characters\",\n                updateTriggers: {\n                    all: updateTriggers.getText,\n                    getPosition: updateTriggers.getPosition,\n                    getAngle: updateTriggers.getAngle,\n                    getColor: updateTriggers.getColor,\n                    getSize: updateTriggers.getSize,\n                    getPixelOffset: updateTriggers.getPixelOffset,\n                    getIconOffsets: {\n                        getTextAnchor: updateTriggers.getTextAnchor,\n                        getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n                        styleVersion\n                    }\n                }\n            }), {\n                data,\n                _dataDiff,\n                startIndices,\n                numInstances,\n                getIconOffsets: this.getIconOffsets,\n                getIcon: getText\n            })\n        ];\n    }\n    static set fontAtlasCacheLimit(limit) {\n        (0,_font_atlas_manager__WEBPACK_IMPORTED_MODULE_1__.setFontAtlasCacheLimit)(limit);\n    }\n}\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(TextLayer, \"defaultProps\", defaultProps);\n(0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(TextLayer, \"layerName\", \"TextLayer\"); //# sourceMappingURL=text-layer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoWrapping: () => (/* binding */ autoWrapping),\n/* harmony export */   buildMapping: () => (/* binding */ buildMapping),\n/* harmony export */   getTextFromBuffer: () => (/* binding */ getTextFromBuffer),\n/* harmony export */   nextPowOfTwo: () => (/* binding */ nextPowOfTwo),\n/* harmony export */   transformParagraph: () => (/* binding */ transformParagraph)\n/* harmony export */ });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\nconst MISSING_CHAR_WIDTH = 32;\nconst SINGLE_LINE = [];\nfunction nextPowOfTwo(number) {\n    return Math.pow(2, Math.ceil(Math.log2(number)));\n}\nfunction buildMapping({ characterSet, getFontWidth, fontHeight, buffer, maxCanvasWidth, mapping = {}, xOffset = 0, yOffset = 0 }) {\n    let row = 0;\n    let x = xOffset;\n    const rowHeight = fontHeight + buffer * 2;\n    for (const char of characterSet){\n        if (!mapping[char]) {\n            const width = getFontWidth(char);\n            if (x + width + buffer * 2 > maxCanvasWidth) {\n                x = 0;\n                row++;\n            }\n            mapping[char] = {\n                x: x + buffer,\n                y: yOffset + row * rowHeight + buffer,\n                width,\n                height: rowHeight,\n                layoutWidth: width,\n                layoutHeight: fontHeight\n            };\n            x += width + buffer * 2;\n        }\n    }\n    return {\n        mapping,\n        xOffset: x,\n        yOffset: yOffset + row * rowHeight,\n        canvasHeight: nextPowOfTwo(yOffset + (row + 1) * rowHeight)\n    };\n}\nfunction getTextWidth(text, startIndex, endIndex, mapping) {\n    let width = 0;\n    for(let i = startIndex; i < endIndex; i++){\n        var _mapping$character;\n        const character = text[i];\n        width += ((_mapping$character = mapping[character]) === null || _mapping$character === void 0 ? void 0 : _mapping$character.layoutWidth) || 0;\n    }\n    return width;\n}\nfunction breakAll(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n    let rowStartCharIndex = startIndex;\n    let rowOffsetLeft = 0;\n    for(let i = startIndex; i < endIndex; i++){\n        const textWidth = getTextWidth(text, i, i + 1, iconMapping);\n        if (rowOffsetLeft + textWidth > maxWidth) {\n            if (rowStartCharIndex < i) {\n                target.push(i);\n            }\n            rowStartCharIndex = i;\n            rowOffsetLeft = 0;\n        }\n        rowOffsetLeft += textWidth;\n    }\n    return rowOffsetLeft;\n}\nfunction breakWord(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n    let rowStartCharIndex = startIndex;\n    let groupStartCharIndex = startIndex;\n    let groupEndCharIndex = startIndex;\n    let rowOffsetLeft = 0;\n    for(let i = startIndex; i < endIndex; i++){\n        if (text[i] === \" \") {\n            groupEndCharIndex = i + 1;\n        } else if (text[i + 1] === \" \" || i + 1 === endIndex) {\n            groupEndCharIndex = i + 1;\n        }\n        if (groupEndCharIndex > groupStartCharIndex) {\n            let groupWidth = getTextWidth(text, groupStartCharIndex, groupEndCharIndex, iconMapping);\n            if (rowOffsetLeft + groupWidth > maxWidth) {\n                if (rowStartCharIndex < groupStartCharIndex) {\n                    target.push(groupStartCharIndex);\n                    rowStartCharIndex = groupStartCharIndex;\n                    rowOffsetLeft = 0;\n                }\n                if (groupWidth > maxWidth) {\n                    groupWidth = breakAll(text, groupStartCharIndex, groupEndCharIndex, maxWidth, iconMapping, target);\n                    rowStartCharIndex = target[target.length - 1];\n                }\n            }\n            groupStartCharIndex = groupEndCharIndex;\n            rowOffsetLeft += groupWidth;\n        }\n    }\n    return rowOffsetLeft;\n}\nfunction autoWrapping(text, wordBreak, maxWidth, iconMapping, startIndex = 0, endIndex) {\n    if (endIndex === undefined) {\n        endIndex = text.length;\n    }\n    const result = [];\n    if (wordBreak === \"break-all\") {\n        breakAll(text, startIndex, endIndex, maxWidth, iconMapping, result);\n    } else {\n        breakWord(text, startIndex, endIndex, maxWidth, iconMapping, result);\n    }\n    return result;\n}\nfunction transformRow(line, startIndex, endIndex, iconMapping, leftOffsets, rowSize) {\n    let x = 0;\n    let rowHeight = 0;\n    for(let i = startIndex; i < endIndex; i++){\n        const character = line[i];\n        const frame = iconMapping[character];\n        if (frame) {\n            if (!rowHeight) {\n                rowHeight = frame.layoutHeight;\n            }\n            leftOffsets[i] = x + frame.layoutWidth / 2;\n            x += frame.layoutWidth;\n        } else {\n            _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn(\"Missing character: \".concat(character, \" (\").concat(character.codePointAt(0), \")\"))();\n            leftOffsets[i] = x;\n            x += MISSING_CHAR_WIDTH;\n        }\n    }\n    rowSize[0] = x;\n    rowSize[1] = rowHeight;\n}\nfunction transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping) {\n    const characters = Array.from(paragraph);\n    const numCharacters = characters.length;\n    const x = new Array(numCharacters);\n    const y = new Array(numCharacters);\n    const rowWidth = new Array(numCharacters);\n    const autoWrappingEnabled = (wordBreak === \"break-word\" || wordBreak === \"break-all\") && isFinite(maxWidth) && maxWidth > 0;\n    const size = [\n        0,\n        0\n    ];\n    const rowSize = [\n        0,\n        0\n    ];\n    let rowOffsetTop = 0;\n    let lineStartIndex = 0;\n    let lineEndIndex = 0;\n    for(let i = 0; i <= numCharacters; i++){\n        const char = characters[i];\n        if (char === \"\\n\" || i === numCharacters) {\n            lineEndIndex = i;\n        }\n        if (lineEndIndex > lineStartIndex) {\n            const rows = autoWrappingEnabled ? autoWrapping(characters, wordBreak, maxWidth, iconMapping, lineStartIndex, lineEndIndex) : SINGLE_LINE;\n            for(let rowIndex = 0; rowIndex <= rows.length; rowIndex++){\n                const rowStart = rowIndex === 0 ? lineStartIndex : rows[rowIndex - 1];\n                const rowEnd = rowIndex < rows.length ? rows[rowIndex] : lineEndIndex;\n                transformRow(characters, rowStart, rowEnd, iconMapping, x, rowSize);\n                for(let j = rowStart; j < rowEnd; j++){\n                    var _iconMapping$char;\n                    const char = characters[j];\n                    const layoutOffsetY = ((_iconMapping$char = iconMapping[char]) === null || _iconMapping$char === void 0 ? void 0 : _iconMapping$char.layoutOffsetY) || 0;\n                    y[j] = rowOffsetTop + rowSize[1] / 2 + layoutOffsetY;\n                    rowWidth[j] = rowSize[0];\n                }\n                rowOffsetTop = rowOffsetTop + rowSize[1] * lineHeight;\n                size[0] = Math.max(size[0], rowSize[0]);\n            }\n            lineStartIndex = lineEndIndex;\n        }\n        if (char === \"\\n\") {\n            x[lineStartIndex] = 0;\n            y[lineStartIndex] = 0;\n            rowWidth[lineStartIndex] = 0;\n            lineStartIndex++;\n        }\n    }\n    size[1] = rowOffsetTop;\n    return {\n        x,\n        y,\n        rowWidth,\n        size\n    };\n}\nfunction getTextFromBuffer({ value, length, stride, offset, startIndices, characterSet }) {\n    const bytesPerElement = value.BYTES_PER_ELEMENT;\n    const elementStride = stride ? stride / bytesPerElement : 1;\n    const elementOffset = offset ? offset / bytesPerElement : 0;\n    const characterCount = startIndices[length] || Math.ceil((value.length - elementOffset) / elementStride);\n    const autoCharacterSet = characterSet && new Set();\n    const texts = new Array(length);\n    let codes = value;\n    if (elementStride > 1 || elementOffset > 0) {\n        const ArrayType = value.constructor;\n        codes = new ArrayType(characterCount);\n        for(let i = 0; i < characterCount; i++){\n            codes[i] = value[i * elementStride + elementOffset];\n        }\n    }\n    for(let index = 0; index < length; index++){\n        const startIndex = startIndices[index];\n        const endIndex = startIndices[index + 1] || characterCount;\n        const codesAtIndex = codes.subarray(startIndex, endIndex);\n        texts[index] = String.fromCodePoint.apply(null, codesAtIndex);\n        if (autoCharacterSet) {\n            codesAtIndex.forEach(autoCharacterSet.add, autoCharacterSet);\n        }\n    }\n    if (autoCharacterSet) {\n        for (const charCode of autoCharacterSet){\n            characterSet.add(String.fromCodePoint(charCode));\n        }\n    }\n    return {\n        texts,\n        characterCount\n    };\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/layers/dist/esm/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   replaceInRange: () => (/* binding */ replaceInRange)\n/* harmony export */ });\nfunction replaceInRange({ data, getIndex, dataRange, replace }) {\n    const { startRow = 0, endRow = Infinity } = dataRange;\n    const count = data.length;\n    let replaceStart = count;\n    let replaceEnd = count;\n    for(let i = 0; i < count; i++){\n        const row = getIndex(data[i]);\n        if (replaceStart > i && row >= startRow) {\n            replaceStart = i;\n        }\n        if (row >= endRow) {\n            replaceEnd = i;\n            break;\n        }\n    }\n    let index = replaceStart;\n    const dataLengthChanged = replaceEnd - replaceStart !== replace.length;\n    const endChunk = dataLengthChanged ? data.slice(replaceEnd) : undefined;\n    for(let i = 0; i < replace.length; i++){\n        data[index++] = replace[i];\n    }\n    if (endChunk) {\n        for(let i = 0; i < endChunk.length; i++){\n            data[index++] = endChunk[i];\n        }\n        data.length = index;\n    }\n    return {\n        startRow: replaceStart,\n        endRow: replaceStart + replace.length\n    };\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxlQUFlLEVBQzdCQyxJQUFJLEVBQ0pDLFFBQVEsRUFDUkMsU0FBUyxFQUNUQyxPQUFPLEVBQ1I7SUFDQyxNQUFNLEVBQ0pDLFdBQVcsQ0FBQyxFQUNaQyxTQUFTQyxRQUFRLEVBQ2xCLEdBQUdKO0lBQ0osTUFBTUssUUFBUVAsS0FBS1EsTUFBTTtJQUN6QixJQUFJQyxlQUFlRjtJQUNuQixJQUFJRyxhQUFhSDtJQUVqQixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUosT0FBT0ksSUFBSztRQUM5QixNQUFNQyxNQUFNWCxTQUFTRCxJQUFJLENBQUNXLEVBQUU7UUFFNUIsSUFBSUYsZUFBZUUsS0FBS0MsT0FBT1IsVUFBVTtZQUN2Q0ssZUFBZUU7UUFDakI7UUFFQSxJQUFJQyxPQUFPUCxRQUFRO1lBQ2pCSyxhQUFhQztZQUNiO1FBQ0Y7SUFDRjtJQUVBLElBQUlFLFFBQVFKO0lBQ1osTUFBTUssb0JBQW9CSixhQUFhRCxpQkFBaUJOLFFBQVFLLE1BQU07SUFDdEUsTUFBTU8sV0FBV0Qsb0JBQW9CZCxLQUFLZ0IsS0FBSyxDQUFDTixjQUFjTztJQUU5RCxJQUFLLElBQUlOLElBQUksR0FBR0EsSUFBSVIsUUFBUUssTUFBTSxFQUFFRyxJQUFLO1FBQ3ZDWCxJQUFJLENBQUNhLFFBQVEsR0FBR1YsT0FBTyxDQUFDUSxFQUFFO0lBQzVCO0lBRUEsSUFBSUksVUFBVTtRQUNaLElBQUssSUFBSUosSUFBSSxHQUFHQSxJQUFJSSxTQUFTUCxNQUFNLEVBQUVHLElBQUs7WUFDeENYLElBQUksQ0FBQ2EsUUFBUSxHQUFHRSxRQUFRLENBQUNKLEVBQUU7UUFDN0I7UUFFQVgsS0FBS1EsTUFBTSxHQUFHSztJQUNoQjtJQUVBLE9BQU87UUFDTFQsVUFBVUs7UUFDVkosUUFBUUksZUFBZU4sUUFBUUssTUFBTTtJQUN2QztBQUNGLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzLmpzPzI2MWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2VJblJhbmdlKHtcbiAgZGF0YSxcbiAgZ2V0SW5kZXgsXG4gIGRhdGFSYW5nZSxcbiAgcmVwbGFjZVxufSkge1xuICBjb25zdCB7XG4gICAgc3RhcnRSb3cgPSAwLFxuICAgIGVuZFJvdyA9IEluZmluaXR5XG4gIH0gPSBkYXRhUmFuZ2U7XG4gIGNvbnN0IGNvdW50ID0gZGF0YS5sZW5ndGg7XG4gIGxldCByZXBsYWNlU3RhcnQgPSBjb3VudDtcbiAgbGV0IHJlcGxhY2VFbmQgPSBjb3VudDtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICBjb25zdCByb3cgPSBnZXRJbmRleChkYXRhW2ldKTtcblxuICAgIGlmIChyZXBsYWNlU3RhcnQgPiBpICYmIHJvdyA+PSBzdGFydFJvdykge1xuICAgICAgcmVwbGFjZVN0YXJ0ID0gaTtcbiAgICB9XG5cbiAgICBpZiAocm93ID49IGVuZFJvdykge1xuICAgICAgcmVwbGFjZUVuZCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBsZXQgaW5kZXggPSByZXBsYWNlU3RhcnQ7XG4gIGNvbnN0IGRhdGFMZW5ndGhDaGFuZ2VkID0gcmVwbGFjZUVuZCAtIHJlcGxhY2VTdGFydCAhPT0gcmVwbGFjZS5sZW5ndGg7XG4gIGNvbnN0IGVuZENodW5rID0gZGF0YUxlbmd0aENoYW5nZWQgPyBkYXRhLnNsaWNlKHJlcGxhY2VFbmQpIDogdW5kZWZpbmVkO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmVwbGFjZS5sZW5ndGg7IGkrKykge1xuICAgIGRhdGFbaW5kZXgrK10gPSByZXBsYWNlW2ldO1xuICB9XG5cbiAgaWYgKGVuZENodW5rKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbmRDaHVuay5sZW5ndGg7IGkrKykge1xuICAgICAgZGF0YVtpbmRleCsrXSA9IGVuZENodW5rW2ldO1xuICAgIH1cblxuICAgIGRhdGEubGVuZ3RoID0gaW5kZXg7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHN0YXJ0Um93OiByZXBsYWNlU3RhcnQsXG4gICAgZW5kUm93OiByZXBsYWNlU3RhcnQgKyByZXBsYWNlLmxlbmd0aFxuICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbInJlcGxhY2VJblJhbmdlIiwiZGF0YSIsImdldEluZGV4IiwiZGF0YVJhbmdlIiwicmVwbGFjZSIsInN0YXJ0Um93IiwiZW5kUm93IiwiSW5maW5pdHkiLCJjb3VudCIsImxlbmd0aCIsInJlcGxhY2VTdGFydCIsInJlcGxhY2VFbmQiLCJpIiwicm93IiwiaW5kZXgiLCJkYXRhTGVuZ3RoQ2hhbmdlZCIsImVuZENodW5rIiwic2xpY2UiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/layers/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/react/dist/esm/deckgl.js":
/*!********************************************************!*\
  !*** ./node_modules/@deck.gl/react/dist/esm/deckgl.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/deck.js\");\n/* harmony import */ var _utils_use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/use-isomorphic-layout-effect */ \"(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/use-isomorphic-layout-effect.js\");\n/* harmony import */ var _utils_extract_jsx_layers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/extract-jsx-layers */ \"(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/extract-jsx-layers.js\");\n/* harmony import */ var _utils_position_children_under_views__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/position-children-under-views */ \"(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/position-children-under-views.js\");\n/* harmony import */ var _utils_extract_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/extract-styles */ \"(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/extract-styles.js\");\n\n\n\n\n\n\nfunction getRefHandles(thisRef) {\n    return {\n        get deck () {\n            return thisRef.deck;\n        },\n        pickObject: (opts)=>thisRef.deck.pickObject(opts),\n        pickMultipleObjects: (opts)=>thisRef.deck.pickMultipleObjects(opts),\n        pickObjects: (opts)=>thisRef.deck.pickObjects(opts)\n    };\n}\nfunction redrawDeck(thisRef) {\n    if (thisRef.redrawReason) {\n        thisRef.deck._drawLayers(thisRef.redrawReason);\n        thisRef.redrawReason = null;\n    }\n}\nfunction createDeckInstance(thisRef, DeckClass, props) {\n    const deck = new DeckClass({\n        ...props,\n        _customRender: (redrawReason)=>{\n            thisRef.redrawReason = redrawReason;\n            const viewports = deck.getViewports();\n            if (thisRef.lastRenderedViewports !== viewports) {\n                thisRef.forceUpdate();\n            } else {\n                redrawDeck(thisRef);\n            }\n        }\n    });\n    return deck;\n}\nconst DeckGL = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref)=>{\n    const [version, setVersion] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const _thisRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        control: null,\n        version,\n        forceUpdate: ()=>setVersion((v)=>v + 1)\n    });\n    const thisRef = _thisRef.current;\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const jsxProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_utils_extract_jsx_layers__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(props), [\n        props.layers,\n        props.views,\n        props.children\n    ]);\n    let inRender = true;\n    const handleViewStateChange = (params)=>{\n        var _props$onViewStateCha;\n        if (inRender && props.viewState) {\n            thisRef.viewStateUpdateRequested = params;\n            return null;\n        }\n        thisRef.viewStateUpdateRequested = null;\n        return (_props$onViewStateCha = props.onViewStateChange) === null || _props$onViewStateCha === void 0 ? void 0 : _props$onViewStateCha.call(props, params);\n    };\n    const handleInteractionStateChange = (params)=>{\n        if (inRender) {\n            thisRef.interactionStateUpdateRequested = params;\n        } else {\n            var _props$onInteractionS;\n            thisRef.interactionStateUpdateRequested = null;\n            (_props$onInteractionS = props.onInteractionStateChange) === null || _props$onInteractionS === void 0 ? void 0 : _props$onInteractionS.call(props, params);\n        }\n    };\n    const deckProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const forwardProps = {\n            ...props,\n            style: null,\n            width: \"100%\",\n            height: \"100%\",\n            parent: containerRef.current,\n            canvas: canvasRef.current,\n            layers: jsxProps.layers,\n            views: jsxProps.views,\n            onViewStateChange: handleViewStateChange,\n            onInteractionStateChange: handleInteractionStateChange\n        };\n        delete forwardProps._customRender;\n        if (thisRef.deck) {\n            thisRef.deck.setProps(forwardProps);\n        }\n        return forwardProps;\n    }, [\n        props\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const DeckClass = props.Deck || _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n        thisRef.deck = createDeckInstance(thisRef, DeckClass, {\n            ...deckProps,\n            parent: containerRef.current,\n            canvas: canvasRef.current\n        });\n        return ()=>{\n            var _thisRef$deck;\n            return (_thisRef$deck = thisRef.deck) === null || _thisRef$deck === void 0 ? void 0 : _thisRef$deck.finalize();\n        };\n    }, []);\n    (0,_utils_use_isomorphic_layout_effect__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(()=>{\n        redrawDeck(thisRef);\n        const { viewStateUpdateRequested, interactionStateUpdateRequested } = thisRef;\n        if (viewStateUpdateRequested) {\n            handleViewStateChange(viewStateUpdateRequested);\n        }\n        if (interactionStateUpdateRequested) {\n            handleInteractionStateChange(interactionStateUpdateRequested);\n        }\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, ()=>getRefHandles(thisRef), []);\n    const currentViewports = thisRef.deck && thisRef.deck.isInitialized ? thisRef.deck.getViewports() : undefined;\n    const { ContextProvider, width, height, id, style } = props;\n    const { containerStyle, canvasStyle } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_utils_extract_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\n            width,\n            height,\n            style\n        }), [\n        width,\n        height,\n        style\n    ]);\n    if (!thisRef.viewStateUpdateRequested && thisRef.lastRenderedViewports === currentViewports || thisRef.version !== version) {\n        thisRef.lastRenderedViewports = currentViewports;\n        thisRef.version = version;\n        const childrenUnderViews = (0,_utils_position_children_under_views__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n            children: jsxProps.children,\n            deck: thisRef.deck,\n            ContextProvider\n        });\n        const canvas = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"canvas\", {\n            key: \"canvas\",\n            id: id || \"deckgl-overlay\",\n            ref: canvasRef,\n            style: canvasStyle\n        });\n        thisRef.control = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n            id: \"\".concat(id || \"deckgl\", \"-wrapper\"),\n            ref: containerRef,\n            style: containerStyle\n        }, [\n            canvas,\n            childrenUnderViews\n        ]);\n    }\n    inRender = false;\n    return thisRef.control;\n});\nDeckGL.defaultProps = _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"].defaultProps;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DeckGL); //# sourceMappingURL=deckgl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/react/dist/esm/deckgl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/evaluate-children.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@deck.gl/react/dist/esm/utils/evaluate-children.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ evaluateChildren),\n/* harmony export */   isComponent: () => (/* binding */ isComponent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MAP_STYLE = {\n    position: \"absolute\",\n    zIndex: -1\n};\nfunction evaluateChildren(children, childProps) {\n    if (typeof children === \"function\") {\n        return children(childProps);\n    }\n    if (Array.isArray(children)) {\n        return children.map((child)=>evaluateChildren(child, childProps));\n    }\n    if (isComponent(children)) {\n        if (isReactMap(children)) {\n            childProps.style = MAP_STYLE;\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(children, childProps);\n        }\n        if (needsDeckGLViewProps(children)) {\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(children, childProps);\n        }\n    }\n    return children;\n}\nfunction isComponent(child) {\n    return child && typeof child === \"object\" && \"type\" in child || false;\n}\nfunction isReactMap(child) {\n    var _child$props;\n    return (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.mapStyle;\n}\nfunction needsDeckGLViewProps(child) {\n    const componentClass = child.type;\n    return componentClass && componentClass.deckGLViewProps;\n} //# sourceMappingURL=evaluate-children.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvcmVhY3QvZGlzdC9lc20vdXRpbHMvZXZhbHVhdGUtY2hpbGRyZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUNyQyxNQUFNQyxZQUFZO0lBQ2hCQyxVQUFVO0lBQ1ZDLFFBQVEsQ0FBQztBQUNYO0FBQ2UsU0FBU0MsaUJBQWlCQyxRQUFRLEVBQUVDLFVBQVU7SUFDM0QsSUFBSSxPQUFPRCxhQUFhLFlBQVk7UUFDbEMsT0FBT0EsU0FBU0M7SUFDbEI7SUFFQSxJQUFJQyxNQUFNQyxPQUFPLENBQUNILFdBQVc7UUFDM0IsT0FBT0EsU0FBU0ksR0FBRyxDQUFDQyxDQUFBQSxRQUFTTixpQkFBaUJNLE9BQU9KO0lBQ3ZEO0lBRUEsSUFBSUssWUFBWU4sV0FBVztRQUN6QixJQUFJTyxXQUFXUCxXQUFXO1lBQ3hCQyxXQUFXTyxLQUFLLEdBQUdaO1lBQ25CLHFCQUFPRCxtREFBWUEsQ0FBQ0ssVUFBVUM7UUFDaEM7UUFFQSxJQUFJUSxxQkFBcUJULFdBQVc7WUFDbEMscUJBQU9MLG1EQUFZQSxDQUFDSyxVQUFVQztRQUNoQztJQUNGO0lBRUEsT0FBT0Q7QUFDVDtBQUNPLFNBQVNNLFlBQVlELEtBQUs7SUFDL0IsT0FBT0EsU0FBUyxPQUFPQSxVQUFVLFlBQVksVUFBVUEsU0FBUztBQUNsRTtBQUVBLFNBQVNFLFdBQVdGLEtBQUs7SUFDdkIsSUFBSUs7SUFFSixPQUFPLENBQUNBLGVBQWVMLE1BQU1NLEtBQUssTUFBTSxRQUFRRCxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYUUsUUFBUTtBQUMxRztBQUVBLFNBQVNILHFCQUFxQkosS0FBSztJQUNqQyxNQUFNUSxpQkFBaUJSLE1BQU1TLElBQUk7SUFDakMsT0FBT0Qsa0JBQWtCQSxlQUFlRSxlQUFlO0FBQ3pELEVBQ0EsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvcmVhY3QvZGlzdC9lc20vdXRpbHMvZXZhbHVhdGUtY2hpbGRyZW4uanM/NjcyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbG9uZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5jb25zdCBNQVBfU1RZTEUgPSB7XG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB6SW5kZXg6IC0xXG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXZhbHVhdGVDaGlsZHJlbihjaGlsZHJlbiwgY2hpbGRQcm9wcykge1xuICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGNoaWxkcmVuKGNoaWxkUHJvcHMpO1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgcmV0dXJuIGNoaWxkcmVuLm1hcChjaGlsZCA9PiBldmFsdWF0ZUNoaWxkcmVuKGNoaWxkLCBjaGlsZFByb3BzKSk7XG4gIH1cblxuICBpZiAoaXNDb21wb25lbnQoY2hpbGRyZW4pKSB7XG4gICAgaWYgKGlzUmVhY3RNYXAoY2hpbGRyZW4pKSB7XG4gICAgICBjaGlsZFByb3BzLnN0eWxlID0gTUFQX1NUWUxFO1xuICAgICAgcmV0dXJuIGNsb25lRWxlbWVudChjaGlsZHJlbiwgY2hpbGRQcm9wcyk7XG4gICAgfVxuXG4gICAgaWYgKG5lZWRzRGVja0dMVmlld1Byb3BzKGNoaWxkcmVuKSkge1xuICAgICAgcmV0dXJuIGNsb25lRWxlbWVudChjaGlsZHJlbiwgY2hpbGRQcm9wcyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNoaWxkcmVuO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tcG9uZW50KGNoaWxkKSB7XG4gIHJldHVybiBjaGlsZCAmJiB0eXBlb2YgY2hpbGQgPT09ICdvYmplY3QnICYmICd0eXBlJyBpbiBjaGlsZCB8fCBmYWxzZTtcbn1cblxuZnVuY3Rpb24gaXNSZWFjdE1hcChjaGlsZCkge1xuICB2YXIgX2NoaWxkJHByb3BzO1xuXG4gIHJldHVybiAoX2NoaWxkJHByb3BzID0gY2hpbGQucHJvcHMpID09PSBudWxsIHx8IF9jaGlsZCRwcm9wcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2NoaWxkJHByb3BzLm1hcFN0eWxlO1xufVxuXG5mdW5jdGlvbiBuZWVkc0RlY2tHTFZpZXdQcm9wcyhjaGlsZCkge1xuICBjb25zdCBjb21wb25lbnRDbGFzcyA9IGNoaWxkLnR5cGU7XG4gIHJldHVybiBjb21wb25lbnRDbGFzcyAmJiBjb21wb25lbnRDbGFzcy5kZWNrR0xWaWV3UHJvcHM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmFsdWF0ZS1jaGlsZHJlbi5qcy5tYXAiXSwibmFtZXMiOlsiY2xvbmVFbGVtZW50IiwiTUFQX1NUWUxFIiwicG9zaXRpb24iLCJ6SW5kZXgiLCJldmFsdWF0ZUNoaWxkcmVuIiwiY2hpbGRyZW4iLCJjaGlsZFByb3BzIiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwiY2hpbGQiLCJpc0NvbXBvbmVudCIsImlzUmVhY3RNYXAiLCJzdHlsZSIsIm5lZWRzRGVja0dMVmlld1Byb3BzIiwiX2NoaWxkJHByb3BzIiwicHJvcHMiLCJtYXBTdHlsZSIsImNvbXBvbmVudENsYXNzIiwidHlwZSIsImRlY2tHTFZpZXdQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/evaluate-children.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/extract-jsx-layers.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/react/dist/esm/utils/extract-jsx-layers.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ extractJSXLayers)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _inherits_from__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./inherits-from */ \"(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/inherits-from.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/views/view.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _evaluate_children__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./evaluate-children */ \"(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/evaluate-children.js\");\n\n\n\n\n\nfunction wrapInView(node) {\n    if (typeof node === \"function\") {\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, node);\n    }\n    if (Array.isArray(node)) {\n        return node.map(wrapInView);\n    }\n    if ((0,_evaluate_children__WEBPACK_IMPORTED_MODULE_2__.isComponent)(node)) {\n        if (node.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment) {\n            return wrapInView(node.props.children);\n        }\n        if ((0,_inherits_from__WEBPACK_IMPORTED_MODULE_3__.inheritsFrom)(node.type, _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) {\n            return node;\n        }\n    }\n    return node;\n}\nfunction extractJSXLayers({ children, layers = [], views = null }) {\n    const reactChildren = [];\n    const jsxLayers = [];\n    const jsxViews = {};\n    react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(wrapInView(children), (reactElement)=>{\n        if ((0,_evaluate_children__WEBPACK_IMPORTED_MODULE_2__.isComponent)(reactElement)) {\n            const ElementType = reactElement.type;\n            if ((0,_inherits_from__WEBPACK_IMPORTED_MODULE_3__.inheritsFrom)(ElementType, _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"])) {\n                const layer = createLayer(ElementType, reactElement.props);\n                jsxLayers.push(layer);\n            } else {\n                reactChildren.push(reactElement);\n            }\n            if ((0,_inherits_from__WEBPACK_IMPORTED_MODULE_3__.inheritsFrom)(ElementType, _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) && ElementType !== _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] && reactElement.props.id) {\n                const view = new ElementType(reactElement.props);\n                jsxViews[view.id] = view;\n            }\n        } else if (reactElement) {\n            reactChildren.push(reactElement);\n        }\n    });\n    if (Object.keys(jsxViews).length > 0) {\n        if (Array.isArray(views)) {\n            views.forEach((view)=>{\n                jsxViews[view.id] = view;\n            });\n        } else if (views) {\n            jsxViews[views.id] = views;\n        }\n        views = Object.values(jsxViews);\n    }\n    layers = jsxLayers.length > 0 ? [\n        ...jsxLayers,\n        ...layers\n    ] : layers;\n    return {\n        layers,\n        children: reactChildren,\n        views\n    };\n}\nfunction createLayer(LayerType, reactProps) {\n    const props = {};\n    const defaultProps = LayerType.defaultProps || {};\n    for(const key in reactProps){\n        if (defaultProps[key] !== reactProps[key]) {\n            props[key] = reactProps[key];\n        }\n    }\n    return new LayerType(props);\n} //# sourceMappingURL=extract-jsx-layers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvcmVhY3QvZGlzdC9lc20vdXRpbHMvZXh0cmFjdC1qc3gtbGF5ZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBK0I7QUFDTztBQUNTO0FBQ0g7QUFDTTtBQUVsRCxTQUFTTSxXQUFXQyxJQUFJO0lBQ3RCLElBQUksT0FBT0EsU0FBUyxZQUFZO1FBQzlCLHFCQUFPTixvREFBYUEsQ0FBQ0cscURBQUlBLEVBQUUsQ0FBQyxHQUFHRztJQUNqQztJQUVBLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ0YsT0FBTztRQUN2QixPQUFPQSxLQUFLRyxHQUFHLENBQUNKO0lBQ2xCO0lBRUEsSUFBSUQsK0RBQVdBLENBQUNFLE9BQU87UUFDckIsSUFBSUEsS0FBS0ksSUFBSSxLQUFLWCwyQ0FBYyxFQUFFO1lBQ2hDLE9BQU9NLFdBQVdDLEtBQUtNLEtBQUssQ0FBQ0MsUUFBUTtRQUN2QztRQUVBLElBQUlaLDREQUFZQSxDQUFDSyxLQUFLSSxJQUFJLEVBQUVQLHFEQUFJQSxHQUFHO1lBQ2pDLE9BQU9HO1FBQ1Q7SUFDRjtJQUVBLE9BQU9BO0FBQ1Q7QUFFZSxTQUFTUSxpQkFBaUIsRUFDdkNELFFBQVEsRUFDUkUsU0FBUyxFQUFFLEVBQ1hDLFFBQVEsSUFBSSxFQUNiO0lBQ0MsTUFBTUMsZ0JBQWdCLEVBQUU7SUFDeEIsTUFBTUMsWUFBWSxFQUFFO0lBQ3BCLE1BQU1DLFdBQVcsQ0FBQztJQUNsQnBCLDJDQUFjLENBQUNzQixPQUFPLENBQUNoQixXQUFXUSxXQUFXUyxDQUFBQTtRQUMzQyxJQUFJbEIsK0RBQVdBLENBQUNrQixlQUFlO1lBQzdCLE1BQU1DLGNBQWNELGFBQWFaLElBQUk7WUFFckMsSUFBSVQsNERBQVlBLENBQUNzQixhQUFhckIscURBQUtBLEdBQUc7Z0JBQ3BDLE1BQU1zQixRQUFRQyxZQUFZRixhQUFhRCxhQUFhVixLQUFLO2dCQUN6RE0sVUFBVVEsSUFBSSxDQUFDRjtZQUNqQixPQUFPO2dCQUNMUCxjQUFjUyxJQUFJLENBQUNKO1lBQ3JCO1lBRUEsSUFBSXJCLDREQUFZQSxDQUFDc0IsYUFBYXBCLHFEQUFJQSxLQUFLb0IsZ0JBQWdCcEIscURBQUlBLElBQUltQixhQUFhVixLQUFLLENBQUNlLEVBQUUsRUFBRTtnQkFDcEYsTUFBTUMsT0FBTyxJQUFJTCxZQUFZRCxhQUFhVixLQUFLO2dCQUMvQ08sUUFBUSxDQUFDUyxLQUFLRCxFQUFFLENBQUMsR0FBR0M7WUFDdEI7UUFDRixPQUFPLElBQUlOLGNBQWM7WUFDdkJMLGNBQWNTLElBQUksQ0FBQ0o7UUFDckI7SUFDRjtJQUVBLElBQUlPLE9BQU9DLElBQUksQ0FBQ1gsVUFBVVksTUFBTSxHQUFHLEdBQUc7UUFDcEMsSUFBSXhCLE1BQU1DLE9BQU8sQ0FBQ1EsUUFBUTtZQUN4QkEsTUFBTUssT0FBTyxDQUFDTyxDQUFBQTtnQkFDWlQsUUFBUSxDQUFDUyxLQUFLRCxFQUFFLENBQUMsR0FBR0M7WUFDdEI7UUFDRixPQUFPLElBQUlaLE9BQU87WUFDaEJHLFFBQVEsQ0FBQ0gsTUFBTVcsRUFBRSxDQUFDLEdBQUdYO1FBQ3ZCO1FBRUFBLFFBQVFhLE9BQU9HLE1BQU0sQ0FBQ2I7SUFDeEI7SUFFQUosU0FBU0csVUFBVWEsTUFBTSxHQUFHLElBQUk7V0FBSWI7V0FBY0g7S0FBTyxHQUFHQTtJQUM1RCxPQUFPO1FBQ0xBO1FBQ0FGLFVBQVVJO1FBQ1ZEO0lBQ0Y7QUFDRjtBQUVBLFNBQVNTLFlBQVlRLFNBQVMsRUFBRUMsVUFBVTtJQUN4QyxNQUFNdEIsUUFBUSxDQUFDO0lBQ2YsTUFBTXVCLGVBQWVGLFVBQVVFLFlBQVksSUFBSSxDQUFDO0lBRWhELElBQUssTUFBTUMsT0FBT0YsV0FBWTtRQUM1QixJQUFJQyxZQUFZLENBQUNDLElBQUksS0FBS0YsVUFBVSxDQUFDRSxJQUFJLEVBQUU7WUFDekN4QixLQUFLLENBQUN3QixJQUFJLEdBQUdGLFVBQVUsQ0FBQ0UsSUFBSTtRQUM5QjtJQUNGO0lBRUEsT0FBTyxJQUFJSCxVQUFVckI7QUFDdkIsRUFDQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9yZWFjdC9kaXN0L2VzbS91dGlscy9leHRyYWN0LWpzeC1sYXllcnMuanM/OTU2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjcmVhdGVFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaW5oZXJpdHNGcm9tIH0gZnJvbSAnLi9pbmhlcml0cy1mcm9tJztcbmltcG9ydCB7IExheWVyLCBWaWV3IH0gZnJvbSAnQGRlY2suZ2wvY29yZSc7XG5pbXBvcnQgeyBpc0NvbXBvbmVudCB9IGZyb20gJy4vZXZhbHVhdGUtY2hpbGRyZW4nO1xuXG5mdW5jdGlvbiB3cmFwSW5WaWV3KG5vZGUpIHtcbiAgaWYgKHR5cGVvZiBub2RlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoVmlldywge30sIG5vZGUpO1xuICB9XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkobm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZS5tYXAod3JhcEluVmlldyk7XG4gIH1cblxuICBpZiAoaXNDb21wb25lbnQobm9kZSkpIHtcbiAgICBpZiAobm9kZS50eXBlID09PSBSZWFjdC5GcmFnbWVudCkge1xuICAgICAgcmV0dXJuIHdyYXBJblZpZXcobm9kZS5wcm9wcy5jaGlsZHJlbik7XG4gICAgfVxuXG4gICAgaWYgKGluaGVyaXRzRnJvbShub2RlLnR5cGUsIFZpZXcpKSB7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXh0cmFjdEpTWExheWVycyh7XG4gIGNoaWxkcmVuLFxuICBsYXllcnMgPSBbXSxcbiAgdmlld3MgPSBudWxsXG59KSB7XG4gIGNvbnN0IHJlYWN0Q2hpbGRyZW4gPSBbXTtcbiAgY29uc3QganN4TGF5ZXJzID0gW107XG4gIGNvbnN0IGpzeFZpZXdzID0ge307XG4gIFJlYWN0LkNoaWxkcmVuLmZvckVhY2god3JhcEluVmlldyhjaGlsZHJlbiksIHJlYWN0RWxlbWVudCA9PiB7XG4gICAgaWYgKGlzQ29tcG9uZW50KHJlYWN0RWxlbWVudCkpIHtcbiAgICAgIGNvbnN0IEVsZW1lbnRUeXBlID0gcmVhY3RFbGVtZW50LnR5cGU7XG5cbiAgICAgIGlmIChpbmhlcml0c0Zyb20oRWxlbWVudFR5cGUsIExheWVyKSkge1xuICAgICAgICBjb25zdCBsYXllciA9IGNyZWF0ZUxheWVyKEVsZW1lbnRUeXBlLCByZWFjdEVsZW1lbnQucHJvcHMpO1xuICAgICAgICBqc3hMYXllcnMucHVzaChsYXllcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZWFjdENoaWxkcmVuLnB1c2gocmVhY3RFbGVtZW50KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGluaGVyaXRzRnJvbShFbGVtZW50VHlwZSwgVmlldykgJiYgRWxlbWVudFR5cGUgIT09IFZpZXcgJiYgcmVhY3RFbGVtZW50LnByb3BzLmlkKSB7XG4gICAgICAgIGNvbnN0IHZpZXcgPSBuZXcgRWxlbWVudFR5cGUocmVhY3RFbGVtZW50LnByb3BzKTtcbiAgICAgICAganN4Vmlld3Nbdmlldy5pZF0gPSB2aWV3O1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAocmVhY3RFbGVtZW50KSB7XG4gICAgICByZWFjdENoaWxkcmVuLnB1c2gocmVhY3RFbGVtZW50KTtcbiAgICB9XG4gIH0pO1xuXG4gIGlmIChPYmplY3Qua2V5cyhqc3hWaWV3cykubGVuZ3RoID4gMCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZpZXdzKSkge1xuICAgICAgdmlld3MuZm9yRWFjaCh2aWV3ID0+IHtcbiAgICAgICAganN4Vmlld3Nbdmlldy5pZF0gPSB2aWV3O1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh2aWV3cykge1xuICAgICAganN4Vmlld3Nbdmlld3MuaWRdID0gdmlld3M7XG4gICAgfVxuXG4gICAgdmlld3MgPSBPYmplY3QudmFsdWVzKGpzeFZpZXdzKTtcbiAgfVxuXG4gIGxheWVycyA9IGpzeExheWVycy5sZW5ndGggPiAwID8gWy4uLmpzeExheWVycywgLi4ubGF5ZXJzXSA6IGxheWVycztcbiAgcmV0dXJuIHtcbiAgICBsYXllcnMsXG4gICAgY2hpbGRyZW46IHJlYWN0Q2hpbGRyZW4sXG4gICAgdmlld3NcbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGF5ZXIoTGF5ZXJUeXBlLCByZWFjdFByb3BzKSB7XG4gIGNvbnN0IHByb3BzID0ge307XG4gIGNvbnN0IGRlZmF1bHRQcm9wcyA9IExheWVyVHlwZS5kZWZhdWx0UHJvcHMgfHwge307XG5cbiAgZm9yIChjb25zdCBrZXkgaW4gcmVhY3RQcm9wcykge1xuICAgIGlmIChkZWZhdWx0UHJvcHNba2V5XSAhPT0gcmVhY3RQcm9wc1trZXldKSB7XG4gICAgICBwcm9wc1trZXldID0gcmVhY3RQcm9wc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgTGF5ZXJUeXBlKHByb3BzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4dHJhY3QtanN4LWxheWVycy5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVFbGVtZW50IiwiaW5oZXJpdHNGcm9tIiwiTGF5ZXIiLCJWaWV3IiwiaXNDb21wb25lbnQiLCJ3cmFwSW5WaWV3Iiwibm9kZSIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsInR5cGUiLCJGcmFnbWVudCIsInByb3BzIiwiY2hpbGRyZW4iLCJleHRyYWN0SlNYTGF5ZXJzIiwibGF5ZXJzIiwidmlld3MiLCJyZWFjdENoaWxkcmVuIiwianN4TGF5ZXJzIiwianN4Vmlld3MiLCJDaGlsZHJlbiIsImZvckVhY2giLCJyZWFjdEVsZW1lbnQiLCJFbGVtZW50VHlwZSIsImxheWVyIiwiY3JlYXRlTGF5ZXIiLCJwdXNoIiwiaWQiLCJ2aWV3IiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInZhbHVlcyIsIkxheWVyVHlwZSIsInJlYWN0UHJvcHMiLCJkZWZhdWx0UHJvcHMiLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/extract-jsx-layers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/extract-styles.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@deck.gl/react/dist/esm/utils/extract-styles.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ extractStyles)\n/* harmony export */ });\nconst CANVAS_ONLY_STYLES = {\n    mixBlendMode: null\n};\nfunction extractStyles({ width, height, style }) {\n    const containerStyle = {\n        position: \"absolute\",\n        zIndex: 0,\n        left: 0,\n        top: 0,\n        width,\n        height\n    };\n    const canvasStyle = {\n        left: 0,\n        top: 0\n    };\n    if (style) {\n        for(const key in style){\n            if (key in CANVAS_ONLY_STYLES) {\n                canvasStyle[key] = style[key];\n            } else {\n                containerStyle[key] = style[key];\n            }\n        }\n    }\n    return {\n        containerStyle,\n        canvasStyle\n    };\n} //# sourceMappingURL=extract-styles.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvcmVhY3QvZGlzdC9lc20vdXRpbHMvZXh0cmFjdC1zdHlsZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLHFCQUFxQjtJQUN6QkMsY0FBYztBQUNoQjtBQUNlLFNBQVNDLGNBQWMsRUFDcENDLEtBQUssRUFDTEMsTUFBTSxFQUNOQyxLQUFLLEVBQ047SUFDQyxNQUFNQyxpQkFBaUI7UUFDckJDLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLEtBQUs7UUFDTFA7UUFDQUM7SUFDRjtJQUNBLE1BQU1PLGNBQWM7UUFDbEJGLE1BQU07UUFDTkMsS0FBSztJQUNQO0lBRUEsSUFBSUwsT0FBTztRQUNULElBQUssTUFBTU8sT0FBT1AsTUFBTztZQUN2QixJQUFJTyxPQUFPWixvQkFBb0I7Z0JBQzdCVyxXQUFXLENBQUNDLElBQUksR0FBR1AsS0FBSyxDQUFDTyxJQUFJO1lBQy9CLE9BQU87Z0JBQ0xOLGNBQWMsQ0FBQ00sSUFBSSxHQUFHUCxLQUFLLENBQUNPLElBQUk7WUFDbEM7UUFDRjtJQUNGO0lBRUEsT0FBTztRQUNMTjtRQUNBSztJQUNGO0FBQ0YsRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9yZWFjdC9kaXN0L2VzbS91dGlscy9leHRyYWN0LXN0eWxlcy5qcz9kNTJmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IENBTlZBU19PTkxZX1NUWUxFUyA9IHtcbiAgbWl4QmxlbmRNb2RlOiBudWxsXG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXh0cmFjdFN0eWxlcyh7XG4gIHdpZHRoLFxuICBoZWlnaHQsXG4gIHN0eWxlXG59KSB7XG4gIGNvbnN0IGNvbnRhaW5lclN0eWxlID0ge1xuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHpJbmRleDogMCxcbiAgICBsZWZ0OiAwLFxuICAgIHRvcDogMCxcbiAgICB3aWR0aCxcbiAgICBoZWlnaHRcbiAgfTtcbiAgY29uc3QgY2FudmFzU3R5bGUgPSB7XG4gICAgbGVmdDogMCxcbiAgICB0b3A6IDBcbiAgfTtcblxuICBpZiAoc3R5bGUpIHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzdHlsZSkge1xuICAgICAgaWYgKGtleSBpbiBDQU5WQVNfT05MWV9TVFlMRVMpIHtcbiAgICAgICAgY2FudmFzU3R5bGVba2V5XSA9IHN0eWxlW2tleV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb250YWluZXJTdHlsZVtrZXldID0gc3R5bGVba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGNvbnRhaW5lclN0eWxlLFxuICAgIGNhbnZhc1N0eWxlXG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHRyYWN0LXN0eWxlcy5qcy5tYXAiXSwibmFtZXMiOlsiQ0FOVkFTX09OTFlfU1RZTEVTIiwibWl4QmxlbmRNb2RlIiwiZXh0cmFjdFN0eWxlcyIsIndpZHRoIiwiaGVpZ2h0Iiwic3R5bGUiLCJjb250YWluZXJTdHlsZSIsInBvc2l0aW9uIiwiekluZGV4IiwibGVmdCIsInRvcCIsImNhbnZhc1N0eWxlIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/extract-styles.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/inherits-from.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@deck.gl/react/dist/esm/utils/inherits-from.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inheritsFrom: () => (/* binding */ inheritsFrom)\n/* harmony export */ });\nfunction inheritsFrom(Type, ParentType) {\n    while(Type){\n        if (Type === ParentType) {\n            return true;\n        }\n        Type = Object.getPrototypeOf(Type);\n    }\n    return false;\n} //# sourceMappingURL=inherits-from.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvcmVhY3QvZGlzdC9lc20vdXRpbHMvaW5oZXJpdHMtZnJvbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsYUFBYUMsSUFBSSxFQUFFQyxVQUFVO0lBQzNDLE1BQU9ELEtBQU07UUFDWCxJQUFJQSxTQUFTQyxZQUFZO1lBQ3ZCLE9BQU87UUFDVDtRQUVBRCxPQUFPRSxPQUFPQyxjQUFjLENBQUNIO0lBQy9CO0lBRUEsT0FBTztBQUNULEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvcmVhY3QvZGlzdC9lc20vdXRpbHMvaW5oZXJpdHMtZnJvbS5qcz9jZDI3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpbmhlcml0c0Zyb20oVHlwZSwgUGFyZW50VHlwZSkge1xuICB3aGlsZSAoVHlwZSkge1xuICAgIGlmIChUeXBlID09PSBQYXJlbnRUeXBlKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBUeXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKFR5cGUpO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5oZXJpdHMtZnJvbS5qcy5tYXAiXSwibmFtZXMiOlsiaW5oZXJpdHNGcm9tIiwiVHlwZSIsIlBhcmVudFR5cGUiLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/inherits-from.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/position-children-under-views.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@deck.gl/react/dist/esm/utils/position-children-under-views.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ positionChildrenUnderViews)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"(ssr)/./node_modules/@deck.gl/core/dist/esm/views/view.js\");\n/* harmony import */ var _inherits_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inherits-from */ \"(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/inherits-from.js\");\n/* harmony import */ var _evaluate_children__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./evaluate-children */ \"(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/evaluate-children.js\");\n\n\n\n\nfunction positionChildrenUnderViews({ children, deck, ContextProvider }) {\n    const { viewManager } = deck || {};\n    if (!viewManager || !viewManager.views.length) {\n        return [];\n    }\n    const views = {};\n    const defaultViewId = viewManager.views[0].id;\n    for (const child of children){\n        let viewId = defaultViewId;\n        let viewChildren = child;\n        if ((0,_evaluate_children__WEBPACK_IMPORTED_MODULE_1__.isComponent)(child) && (0,_inherits_from__WEBPACK_IMPORTED_MODULE_2__.inheritsFrom)(child.type, _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"])) {\n            viewId = child.props.id || defaultViewId;\n            viewChildren = child.props.children;\n        }\n        const viewport = viewManager.getViewport(viewId);\n        const viewState = viewManager.getViewState(viewId);\n        if (viewport) {\n            viewState.padding = viewport.padding;\n            const { x, y, width, height } = viewport;\n            viewChildren = (0,_evaluate_children__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(viewChildren, {\n                x,\n                y,\n                width,\n                height,\n                viewport,\n                viewState\n            });\n            if (!views[viewId]) {\n                views[viewId] = {\n                    viewport,\n                    children: []\n                };\n            }\n            views[viewId].children.push(viewChildren);\n        }\n    }\n    return Object.keys(views).map((viewId)=>{\n        const { viewport, children: viewChildren } = views[viewId];\n        const { x, y, width, height } = viewport;\n        const style = {\n            position: \"absolute\",\n            left: x,\n            top: y,\n            width,\n            height\n        };\n        const key = \"view-\".concat(viewId);\n        const viewElement = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"div\", {\n            key,\n            id: key,\n            style\n        }, ...viewChildren);\n        if (ContextProvider) {\n            const contextValue = {\n                viewport,\n                container: deck.canvas.offsetParent,\n                eventManager: deck.eventManager,\n                onViewStateChange: (params)=>{\n                    params.viewId = viewId;\n                    deck._onViewStateChange(params);\n                }\n            };\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContextProvider, {\n                key,\n                value: contextValue\n            }, viewElement);\n        }\n        return viewElement;\n    });\n} //# sourceMappingURL=position-children-under-views.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvcmVhY3QvZGlzdC9lc20vdXRpbHMvcG9zaXRpb24tY2hpbGRyZW4tdW5kZXItdmlld3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNDO0FBQ0Q7QUFDVTtBQUNxQjtBQUNyRCxTQUFTSywyQkFBMkIsRUFDakRDLFFBQVEsRUFDUkMsSUFBSSxFQUNKQyxlQUFlLEVBQ2hCO0lBQ0MsTUFBTSxFQUNKQyxXQUFXLEVBQ1osR0FBR0YsUUFBUSxDQUFDO0lBRWIsSUFBSSxDQUFDRSxlQUFlLENBQUNBLFlBQVlDLEtBQUssQ0FBQ0MsTUFBTSxFQUFFO1FBQzdDLE9BQU8sRUFBRTtJQUNYO0lBRUEsTUFBTUQsUUFBUSxDQUFDO0lBQ2YsTUFBTUUsZ0JBQWdCSCxZQUFZQyxLQUFLLENBQUMsRUFBRSxDQUFDRyxFQUFFO0lBRTdDLEtBQUssTUFBTUMsU0FBU1IsU0FBVTtRQUM1QixJQUFJUyxTQUFTSDtRQUNiLElBQUlJLGVBQWVGO1FBRW5CLElBQUlWLCtEQUFXQSxDQUFDVSxVQUFVWiw0REFBWUEsQ0FBQ1ksTUFBTUcsSUFBSSxFQUFFaEIscURBQUlBLEdBQUc7WUFDeERjLFNBQVNELE1BQU1JLEtBQUssQ0FBQ0wsRUFBRSxJQUFJRDtZQUMzQkksZUFBZUYsTUFBTUksS0FBSyxDQUFDWixRQUFRO1FBQ3JDO1FBRUEsTUFBTWEsV0FBV1YsWUFBWVcsV0FBVyxDQUFDTDtRQUN6QyxNQUFNTSxZQUFZWixZQUFZYSxZQUFZLENBQUNQO1FBRTNDLElBQUlJLFVBQVU7WUFDWkUsVUFBVUUsT0FBTyxHQUFHSixTQUFTSSxPQUFPO1lBQ3BDLE1BQU0sRUFDSkMsQ0FBQyxFQUNEQyxDQUFDLEVBQ0RDLEtBQUssRUFDTEMsTUFBTSxFQUNQLEdBQUdSO1lBQ0pILGVBQWViLDhEQUFnQkEsQ0FBQ2EsY0FBYztnQkFDNUNRO2dCQUNBQztnQkFDQUM7Z0JBQ0FDO2dCQUNBUjtnQkFDQUU7WUFDRjtZQUVBLElBQUksQ0FBQ1gsS0FBSyxDQUFDSyxPQUFPLEVBQUU7Z0JBQ2xCTCxLQUFLLENBQUNLLE9BQU8sR0FBRztvQkFDZEk7b0JBQ0FiLFVBQVUsRUFBRTtnQkFDZDtZQUNGO1lBRUFJLEtBQUssQ0FBQ0ssT0FBTyxDQUFDVCxRQUFRLENBQUNzQixJQUFJLENBQUNaO1FBQzlCO0lBQ0Y7SUFFQSxPQUFPYSxPQUFPQyxJQUFJLENBQUNwQixPQUFPcUIsR0FBRyxDQUFDaEIsQ0FBQUE7UUFDNUIsTUFBTSxFQUNKSSxRQUFRLEVBQ1JiLFVBQVVVLFlBQVksRUFDdkIsR0FBR04sS0FBSyxDQUFDSyxPQUFPO1FBQ2pCLE1BQU0sRUFDSlMsQ0FBQyxFQUNEQyxDQUFDLEVBQ0RDLEtBQUssRUFDTEMsTUFBTSxFQUNQLEdBQUdSO1FBQ0osTUFBTWEsUUFBUTtZQUNaQyxVQUFVO1lBQ1ZDLE1BQU1WO1lBQ05XLEtBQUtWO1lBQ0xDO1lBQ0FDO1FBQ0Y7UUFDQSxNQUFNUyxNQUFNLFFBQVFDLE1BQU0sQ0FBQ3RCO1FBQzNCLE1BQU11Qiw0QkFBY3RDLG9EQUFhQSxDQUFDLE9BQU87WUFDdkNvQztZQUNBdkIsSUFBSXVCO1lBQ0pKO1FBQ0YsTUFBTWhCO1FBRU4sSUFBSVIsaUJBQWlCO1lBQ25CLE1BQU0rQixlQUFlO2dCQUNuQnBCO2dCQUNBcUIsV0FBV2pDLEtBQUtrQyxNQUFNLENBQUNDLFlBQVk7Z0JBQ25DQyxjQUFjcEMsS0FBS29DLFlBQVk7Z0JBQy9CQyxtQkFBbUJDLENBQUFBO29CQUNqQkEsT0FBTzlCLE1BQU0sR0FBR0E7b0JBRWhCUixLQUFLdUMsa0JBQWtCLENBQUNEO2dCQUMxQjtZQUNGO1lBQ0EscUJBQU83QyxvREFBYUEsQ0FBQ1EsaUJBQWlCO2dCQUNwQzRCO2dCQUNBVyxPQUFPUjtZQUNULEdBQUdEO1FBQ0w7UUFFQSxPQUFPQTtJQUNUO0FBQ0YsRUFDQSx5REFBeUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9yZWFjdC9kaXN0L2VzbS91dGlscy9wb3NpdGlvbi1jaGlsZHJlbi11bmRlci12aWV3cy5qcz9mNzRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3IH0gZnJvbSAnQGRlY2suZ2wvY29yZSc7XG5pbXBvcnQgeyBpbmhlcml0c0Zyb20gfSBmcm9tICcuL2luaGVyaXRzLWZyb20nO1xuaW1wb3J0IGV2YWx1YXRlQ2hpbGRyZW4sIHsgaXNDb21wb25lbnQgfSBmcm9tICcuL2V2YWx1YXRlLWNoaWxkcmVuJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBvc2l0aW9uQ2hpbGRyZW5VbmRlclZpZXdzKHtcbiAgY2hpbGRyZW4sXG4gIGRlY2ssXG4gIENvbnRleHRQcm92aWRlclxufSkge1xuICBjb25zdCB7XG4gICAgdmlld01hbmFnZXJcbiAgfSA9IGRlY2sgfHwge307XG5cbiAgaWYgKCF2aWV3TWFuYWdlciB8fCAhdmlld01hbmFnZXIudmlld3MubGVuZ3RoKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgY29uc3Qgdmlld3MgPSB7fTtcbiAgY29uc3QgZGVmYXVsdFZpZXdJZCA9IHZpZXdNYW5hZ2VyLnZpZXdzWzBdLmlkO1xuXG4gIGZvciAoY29uc3QgY2hpbGQgb2YgY2hpbGRyZW4pIHtcbiAgICBsZXQgdmlld0lkID0gZGVmYXVsdFZpZXdJZDtcbiAgICBsZXQgdmlld0NoaWxkcmVuID0gY2hpbGQ7XG5cbiAgICBpZiAoaXNDb21wb25lbnQoY2hpbGQpICYmIGluaGVyaXRzRnJvbShjaGlsZC50eXBlLCBWaWV3KSkge1xuICAgICAgdmlld0lkID0gY2hpbGQucHJvcHMuaWQgfHwgZGVmYXVsdFZpZXdJZDtcbiAgICAgIHZpZXdDaGlsZHJlbiA9IGNoaWxkLnByb3BzLmNoaWxkcmVuO1xuICAgIH1cblxuICAgIGNvbnN0IHZpZXdwb3J0ID0gdmlld01hbmFnZXIuZ2V0Vmlld3BvcnQodmlld0lkKTtcbiAgICBjb25zdCB2aWV3U3RhdGUgPSB2aWV3TWFuYWdlci5nZXRWaWV3U3RhdGUodmlld0lkKTtcblxuICAgIGlmICh2aWV3cG9ydCkge1xuICAgICAgdmlld1N0YXRlLnBhZGRpbmcgPSB2aWV3cG9ydC5wYWRkaW5nO1xuICAgICAgY29uc3Qge1xuICAgICAgICB4LFxuICAgICAgICB5LFxuICAgICAgICB3aWR0aCxcbiAgICAgICAgaGVpZ2h0XG4gICAgICB9ID0gdmlld3BvcnQ7XG4gICAgICB2aWV3Q2hpbGRyZW4gPSBldmFsdWF0ZUNoaWxkcmVuKHZpZXdDaGlsZHJlbiwge1xuICAgICAgICB4LFxuICAgICAgICB5LFxuICAgICAgICB3aWR0aCxcbiAgICAgICAgaGVpZ2h0LFxuICAgICAgICB2aWV3cG9ydCxcbiAgICAgICAgdmlld1N0YXRlXG4gICAgICB9KTtcblxuICAgICAgaWYgKCF2aWV3c1t2aWV3SWRdKSB7XG4gICAgICAgIHZpZXdzW3ZpZXdJZF0gPSB7XG4gICAgICAgICAgdmlld3BvcnQsXG4gICAgICAgICAgY2hpbGRyZW46IFtdXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHZpZXdzW3ZpZXdJZF0uY2hpbGRyZW4ucHVzaCh2aWV3Q2hpbGRyZW4pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBPYmplY3Qua2V5cyh2aWV3cykubWFwKHZpZXdJZCA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgdmlld3BvcnQsXG4gICAgICBjaGlsZHJlbjogdmlld0NoaWxkcmVuXG4gICAgfSA9IHZpZXdzW3ZpZXdJZF07XG4gICAgY29uc3Qge1xuICAgICAgeCxcbiAgICAgIHksXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodFxuICAgIH0gPSB2aWV3cG9ydDtcbiAgICBjb25zdCBzdHlsZSA9IHtcbiAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgbGVmdDogeCxcbiAgICAgIHRvcDogeSxcbiAgICAgIHdpZHRoLFxuICAgICAgaGVpZ2h0XG4gICAgfTtcbiAgICBjb25zdCBrZXkgPSBcInZpZXctXCIuY29uY2F0KHZpZXdJZCk7XG4gICAgY29uc3Qgdmlld0VsZW1lbnQgPSBjcmVhdGVFbGVtZW50KCdkaXYnLCB7XG4gICAgICBrZXksXG4gICAgICBpZDoga2V5LFxuICAgICAgc3R5bGVcbiAgICB9LCAuLi52aWV3Q2hpbGRyZW4pO1xuXG4gICAgaWYgKENvbnRleHRQcm92aWRlcikge1xuICAgICAgY29uc3QgY29udGV4dFZhbHVlID0ge1xuICAgICAgICB2aWV3cG9ydCxcbiAgICAgICAgY29udGFpbmVyOiBkZWNrLmNhbnZhcy5vZmZzZXRQYXJlbnQsXG4gICAgICAgIGV2ZW50TWFuYWdlcjogZGVjay5ldmVudE1hbmFnZXIsXG4gICAgICAgIG9uVmlld1N0YXRlQ2hhbmdlOiBwYXJhbXMgPT4ge1xuICAgICAgICAgIHBhcmFtcy52aWV3SWQgPSB2aWV3SWQ7XG5cbiAgICAgICAgICBkZWNrLl9vblZpZXdTdGF0ZUNoYW5nZShwYXJhbXMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoQ29udGV4dFByb3ZpZGVyLCB7XG4gICAgICAgIGtleSxcbiAgICAgICAgdmFsdWU6IGNvbnRleHRWYWx1ZVxuICAgICAgfSwgdmlld0VsZW1lbnQpO1xuICAgIH1cblxuICAgIHJldHVybiB2aWV3RWxlbWVudDtcbiAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb3NpdGlvbi1jaGlsZHJlbi11bmRlci12aWV3cy5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlRWxlbWVudCIsIlZpZXciLCJpbmhlcml0c0Zyb20iLCJldmFsdWF0ZUNoaWxkcmVuIiwiaXNDb21wb25lbnQiLCJwb3NpdGlvbkNoaWxkcmVuVW5kZXJWaWV3cyIsImNoaWxkcmVuIiwiZGVjayIsIkNvbnRleHRQcm92aWRlciIsInZpZXdNYW5hZ2VyIiwidmlld3MiLCJsZW5ndGgiLCJkZWZhdWx0Vmlld0lkIiwiaWQiLCJjaGlsZCIsInZpZXdJZCIsInZpZXdDaGlsZHJlbiIsInR5cGUiLCJwcm9wcyIsInZpZXdwb3J0IiwiZ2V0Vmlld3BvcnQiLCJ2aWV3U3RhdGUiLCJnZXRWaWV3U3RhdGUiLCJwYWRkaW5nIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsInB1c2giLCJPYmplY3QiLCJrZXlzIiwibWFwIiwic3R5bGUiLCJwb3NpdGlvbiIsImxlZnQiLCJ0b3AiLCJrZXkiLCJjb25jYXQiLCJ2aWV3RWxlbWVudCIsImNvbnRleHRWYWx1ZSIsImNvbnRhaW5lciIsImNhbnZhcyIsIm9mZnNldFBhcmVudCIsImV2ZW50TWFuYWdlciIsIm9uVmlld1N0YXRlQ2hhbmdlIiwicGFyYW1zIiwiX29uVmlld1N0YXRlQ2hhbmdlIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/position-children-under-views.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/use-isomorphic-layout-effect.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/react/dist/esm/utils/use-isomorphic-layout-effect.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst useIsomorphicLayoutEffect =  false ? 0 : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useIsomorphicLayoutEffect); //# sourceMappingURL=use-isomorphic-layout-effect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvcmVhY3QvZGlzdC9lc20vdXRpbHMvdXNlLWlzb21vcnBoaWMtbGF5b3V0LWVmZmVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUQ7QUFDbkQsTUFBTUUsNEJBQTRCLE1BQWtCLEdBQWNELENBQWVBLEdBQUdELDRDQUFTQTtBQUM3RixpRUFBZUUseUJBQXlCQSxFQUFDLENBQ3pDLHdEQUF3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL3JlYWN0L2Rpc3QvZXNtL3V0aWxzL3VzZS1pc29tb3JwaGljLWxheW91dC1lZmZlY3QuanM/NmEzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmNvbnN0IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdDtcbmV4cG9ydCBkZWZhdWx0IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2UtaXNvbW9ycGhpYy1sYXlvdXQtZWZmZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@deck.gl/react/dist/esm/utils/use-isomorphic-layout-effect.js\n");

/***/ })

};
;