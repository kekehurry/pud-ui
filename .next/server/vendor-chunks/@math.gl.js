"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@math.gl";
exports.ids = ["vendor-chunks/@math.gl"];
exports.modules = {

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/math-array.js":
/*!************************************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/classes/base/math-array.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MathArray)\n/* harmony export */ });\n/* harmony import */ var _lib_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/common */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n    return ExtendableBuiltin;\n}\n\nclass MathArray extends _extendableBuiltin(Array) {\n    clone() {\n        return new this.constructor().copy(this);\n    }\n    fromArray(array, offset = 0) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] = array[i + offset];\n        }\n        return this.check();\n    }\n    toArray(targetArray = [], offset = 0) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            targetArray[offset + i] = this[i];\n        }\n        return targetArray;\n    }\n    from(arrayOrObject) {\n        return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n    }\n    to(arrayOrObject) {\n        if (arrayOrObject === this) {\n            return this;\n        }\n        return (0,_lib_common__WEBPACK_IMPORTED_MODULE_0__.isArray)(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n    }\n    toTarget(target) {\n        return target ? this.to(target) : this;\n    }\n    toFloat32Array() {\n        return new Float32Array(this);\n    }\n    toString() {\n        return this.formatString(_lib_common__WEBPACK_IMPORTED_MODULE_0__.config);\n    }\n    formatString(opts) {\n        let string = \"\";\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            string += (i > 0 ? \", \" : \"\") + (0,_lib_common__WEBPACK_IMPORTED_MODULE_0__.formatValue)(this[i], opts);\n        }\n        return \"\".concat(opts.printTypes ? this.constructor.name : \"\", \"[\").concat(string, \"]\");\n    }\n    equals(array) {\n        if (!array || this.length !== array.length) {\n            return false;\n        }\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            if (!(0,_lib_common__WEBPACK_IMPORTED_MODULE_0__.equals)(this[i], array[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exactEquals(array) {\n        if (!array || this.length !== array.length) {\n            return false;\n        }\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            if (this[i] !== array[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    negate() {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] = -this[i];\n        }\n        return this.check();\n    }\n    lerp(a, b, t) {\n        if (t === undefined) {\n            return this.lerp(this, a, b);\n        }\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            const ai = a[i];\n            this[i] = ai + t * (b[i] - ai);\n        }\n        return this.check();\n    }\n    min(vector) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] = Math.min(vector[i], this[i]);\n        }\n        return this.check();\n    }\n    max(vector) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] = Math.max(vector[i], this[i]);\n        }\n        return this.check();\n    }\n    clamp(minVector, maxVector) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n        }\n        return this.check();\n    }\n    add(...vectors) {\n        for (const vector of vectors){\n            for(let i = 0; i < this.ELEMENTS; ++i){\n                this[i] += vector[i];\n            }\n        }\n        return this.check();\n    }\n    subtract(...vectors) {\n        for (const vector of vectors){\n            for(let i = 0; i < this.ELEMENTS; ++i){\n                this[i] -= vector[i];\n            }\n        }\n        return this.check();\n    }\n    scale(scale) {\n        if (typeof scale === \"number\") {\n            for(let i = 0; i < this.ELEMENTS; ++i){\n                this[i] *= scale;\n            }\n        } else {\n            for(let i = 0; i < this.ELEMENTS && i < scale.length; ++i){\n                this[i] *= scale[i];\n            }\n        }\n        return this.check();\n    }\n    multiplyByScalar(scalar) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] *= scalar;\n        }\n        return this.check();\n    }\n    check() {\n        if (_lib_common__WEBPACK_IMPORTED_MODULE_0__.config.debug && !this.validate()) {\n            throw new Error(\"math.gl: \".concat(this.constructor.name, \" some fields set to invalid numbers'\"));\n        }\n        return this;\n    }\n    validate() {\n        let valid = this.length === this.ELEMENTS;\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            valid = valid && Number.isFinite(this[i]);\n        }\n        return valid;\n    }\n    sub(a) {\n        return this.subtract(a);\n    }\n    setScalar(a) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] = a;\n        }\n        return this.check();\n    }\n    addScalar(a) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] += a;\n        }\n        return this.check();\n    }\n    subScalar(a) {\n        return this.addScalar(-a);\n    }\n    multiplyScalar(scalar) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] *= scalar;\n        }\n        return this.check();\n    }\n    divideScalar(a) {\n        return this.multiplyByScalar(1 / a);\n    }\n    clampScalar(min, max) {\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            this[i] = Math.min(Math.max(this[i], min), max);\n        }\n        return this.check();\n    }\n    get elements() {\n        return this;\n    }\n} //# sourceMappingURL=math-array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/math-array.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/matrix.js":
/*!********************************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/classes/base/matrix.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Matrix)\n/* harmony export */ });\n/* harmony import */ var _math_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math-array */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/math-array.js\");\n/* harmony import */ var _lib_validators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/validators */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/validators.js\");\n/* harmony import */ var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/common */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n\n\n\nclass Matrix extends _math_array__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    toString() {\n        let string = \"[\";\n        if (_lib_common__WEBPACK_IMPORTED_MODULE_1__.config.printRowMajor) {\n            string += \"row-major:\";\n            for(let row = 0; row < this.RANK; ++row){\n                for(let col = 0; col < this.RANK; ++col){\n                    string += \" \".concat(this[col * this.RANK + row]);\n                }\n            }\n        } else {\n            string += \"column-major:\";\n            for(let i = 0; i < this.ELEMENTS; ++i){\n                string += \" \".concat(this[i]);\n            }\n        }\n        string += \"]\";\n        return string;\n    }\n    getElementIndex(row, col) {\n        return col * this.RANK + row;\n    }\n    getElement(row, col) {\n        return this[col * this.RANK + row];\n    }\n    setElement(row, col, value) {\n        this[col * this.RANK + row] = (0,_lib_validators__WEBPACK_IMPORTED_MODULE_2__.checkNumber)(value);\n        return this;\n    }\n    getColumn(columnIndex, result = new Array(this.RANK).fill(-0)) {\n        const firstIndex = columnIndex * this.RANK;\n        for(let i = 0; i < this.RANK; ++i){\n            result[i] = this[firstIndex + i];\n        }\n        return result;\n    }\n    setColumn(columnIndex, columnVector) {\n        const firstIndex = columnIndex * this.RANK;\n        for(let i = 0; i < this.RANK; ++i){\n            this[firstIndex + i] = columnVector[i];\n        }\n        return this;\n    }\n} //# sourceMappingURL=matrix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvY29yZS9kaXN0L2VzbS9jbGFzc2VzL2Jhc2UvbWF0cml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDYztBQUNUO0FBQzNCLE1BQU1HLGVBQWVILG1EQUFTQTtJQUMzQ0ksV0FBVztRQUNULElBQUlDLFNBQVM7UUFFYixJQUFJSCwrQ0FBTUEsQ0FBQ0ksYUFBYSxFQUFFO1lBQ3hCRCxVQUFVO1lBRVYsSUFBSyxJQUFJRSxNQUFNLEdBQUdBLE1BQU0sSUFBSSxDQUFDQyxJQUFJLEVBQUUsRUFBRUQsSUFBSztnQkFDeEMsSUFBSyxJQUFJRSxNQUFNLEdBQUdBLE1BQU0sSUFBSSxDQUFDRCxJQUFJLEVBQUUsRUFBRUMsSUFBSztvQkFDeENKLFVBQVUsSUFBSUssTUFBTSxDQUFDLElBQUksQ0FBQ0QsTUFBTSxJQUFJLENBQUNELElBQUksR0FBR0QsSUFBSTtnQkFDbEQ7WUFDRjtRQUNGLE9BQU87WUFDTEYsVUFBVTtZQUVWLElBQUssSUFBSU0sSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ0MsUUFBUSxFQUFFLEVBQUVELEVBQUc7Z0JBQ3RDTixVQUFVLElBQUlLLE1BQU0sQ0FBQyxJQUFJLENBQUNDLEVBQUU7WUFDOUI7UUFDRjtRQUVBTixVQUFVO1FBQ1YsT0FBT0E7SUFDVDtJQUVBUSxnQkFBZ0JOLEdBQUcsRUFBRUUsR0FBRyxFQUFFO1FBQ3hCLE9BQU9BLE1BQU0sSUFBSSxDQUFDRCxJQUFJLEdBQUdEO0lBQzNCO0lBRUFPLFdBQVdQLEdBQUcsRUFBRUUsR0FBRyxFQUFFO1FBQ25CLE9BQU8sSUFBSSxDQUFDQSxNQUFNLElBQUksQ0FBQ0QsSUFBSSxHQUFHRCxJQUFJO0lBQ3BDO0lBRUFRLFdBQVdSLEdBQUcsRUFBRUUsR0FBRyxFQUFFTyxLQUFLLEVBQUU7UUFDMUIsSUFBSSxDQUFDUCxNQUFNLElBQUksQ0FBQ0QsSUFBSSxHQUFHRCxJQUFJLEdBQUdOLDREQUFXQSxDQUFDZTtRQUMxQyxPQUFPLElBQUk7SUFDYjtJQUVBQyxVQUFVQyxXQUFXLEVBQUVDLFNBQVMsSUFBSUMsTUFBTSxJQUFJLENBQUNaLElBQUksRUFBRWEsSUFBSSxDQUFDLENBQUMsRUFBRSxFQUFFO1FBQzdELE1BQU1DLGFBQWFKLGNBQWMsSUFBSSxDQUFDVixJQUFJO1FBRTFDLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ0gsSUFBSSxFQUFFLEVBQUVHLEVBQUc7WUFDbENRLE1BQU0sQ0FBQ1IsRUFBRSxHQUFHLElBQUksQ0FBQ1csYUFBYVgsRUFBRTtRQUNsQztRQUVBLE9BQU9RO0lBQ1Q7SUFFQUksVUFBVUwsV0FBVyxFQUFFTSxZQUFZLEVBQUU7UUFDbkMsTUFBTUYsYUFBYUosY0FBYyxJQUFJLENBQUNWLElBQUk7UUFFMUMsSUFBSyxJQUFJRyxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDSCxJQUFJLEVBQUUsRUFBRUcsRUFBRztZQUNsQyxJQUFJLENBQUNXLGFBQWFYLEVBQUUsR0FBR2EsWUFBWSxDQUFDYixFQUFFO1FBQ3hDO1FBRUEsT0FBTyxJQUFJO0lBQ2I7QUFFRixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL2NvcmUvZGlzdC9lc20vY2xhc3Nlcy9iYXNlL21hdHJpeC5qcz8yYmU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNYXRoQXJyYXkgZnJvbSAnLi9tYXRoLWFycmF5JztcbmltcG9ydCB7IGNoZWNrTnVtYmVyIH0gZnJvbSAnLi4vLi4vbGliL3ZhbGlkYXRvcnMnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vLi4vbGliL2NvbW1vbic7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYXRyaXggZXh0ZW5kcyBNYXRoQXJyYXkge1xuICB0b1N0cmluZygpIHtcbiAgICBsZXQgc3RyaW5nID0gJ1snO1xuXG4gICAgaWYgKGNvbmZpZy5wcmludFJvd01ham9yKSB7XG4gICAgICBzdHJpbmcgKz0gJ3Jvdy1tYWpvcjonO1xuXG4gICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCB0aGlzLlJBTks7ICsrcm93KSB7XG4gICAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IHRoaXMuUkFOSzsgKytjb2wpIHtcbiAgICAgICAgICBzdHJpbmcgKz0gXCIgXCIuY29uY2F0KHRoaXNbY29sICogdGhpcy5SQU5LICsgcm93XSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc3RyaW5nICs9ICdjb2x1bW4tbWFqb3I6JztcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkVMRU1FTlRTOyArK2kpIHtcbiAgICAgICAgc3RyaW5nICs9IFwiIFwiLmNvbmNhdCh0aGlzW2ldKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBzdHJpbmcgKz0gJ10nO1xuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cblxuICBnZXRFbGVtZW50SW5kZXgocm93LCBjb2wpIHtcbiAgICByZXR1cm4gY29sICogdGhpcy5SQU5LICsgcm93O1xuICB9XG5cbiAgZ2V0RWxlbWVudChyb3csIGNvbCkge1xuICAgIHJldHVybiB0aGlzW2NvbCAqIHRoaXMuUkFOSyArIHJvd107XG4gIH1cblxuICBzZXRFbGVtZW50KHJvdywgY29sLCB2YWx1ZSkge1xuICAgIHRoaXNbY29sICogdGhpcy5SQU5LICsgcm93XSA9IGNoZWNrTnVtYmVyKHZhbHVlKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGdldENvbHVtbihjb2x1bW5JbmRleCwgcmVzdWx0ID0gbmV3IEFycmF5KHRoaXMuUkFOSykuZmlsbCgtMCkpIHtcbiAgICBjb25zdCBmaXJzdEluZGV4ID0gY29sdW1uSW5kZXggKiB0aGlzLlJBTks7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuUkFOSzsgKytpKSB7XG4gICAgICByZXN1bHRbaV0gPSB0aGlzW2ZpcnN0SW5kZXggKyBpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgc2V0Q29sdW1uKGNvbHVtbkluZGV4LCBjb2x1bW5WZWN0b3IpIHtcbiAgICBjb25zdCBmaXJzdEluZGV4ID0gY29sdW1uSW5kZXggKiB0aGlzLlJBTks7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuUkFOSzsgKytpKSB7XG4gICAgICB0aGlzW2ZpcnN0SW5kZXggKyBpXSA9IGNvbHVtblZlY3RvcltpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXRyaXguanMubWFwIl0sIm5hbWVzIjpbIk1hdGhBcnJheSIsImNoZWNrTnVtYmVyIiwiY29uZmlnIiwiTWF0cml4IiwidG9TdHJpbmciLCJzdHJpbmciLCJwcmludFJvd01ham9yIiwicm93IiwiUkFOSyIsImNvbCIsImNvbmNhdCIsImkiLCJFTEVNRU5UUyIsImdldEVsZW1lbnRJbmRleCIsImdldEVsZW1lbnQiLCJzZXRFbGVtZW50IiwidmFsdWUiLCJnZXRDb2x1bW4iLCJjb2x1bW5JbmRleCIsInJlc3VsdCIsIkFycmF5IiwiZmlsbCIsImZpcnN0SW5kZXgiLCJzZXRDb2x1bW4iLCJjb2x1bW5WZWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/matrix.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/vector.js":
/*!********************************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/classes/base/vector.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Vector)\n/* harmony export */ });\n/* harmony import */ var _math_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math-array */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/math-array.js\");\n/* harmony import */ var _lib_validators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/validators */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/validators.js\");\n/* harmony import */ var _lib_assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/assert */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/assert.js\");\n\n\n\nclass Vector extends _math_array__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    get x() {\n        return this[0];\n    }\n    set x(value) {\n        this[0] = (0,_lib_validators__WEBPACK_IMPORTED_MODULE_1__.checkNumber)(value);\n    }\n    get y() {\n        return this[1];\n    }\n    set y(value) {\n        this[1] = (0,_lib_validators__WEBPACK_IMPORTED_MODULE_1__.checkNumber)(value);\n    }\n    len() {\n        return Math.sqrt(this.lengthSquared());\n    }\n    magnitude() {\n        return this.len();\n    }\n    lengthSquared() {\n        let length = 0;\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            length += this[i] * this[i];\n        }\n        return length;\n    }\n    magnitudeSquared() {\n        return this.lengthSquared();\n    }\n    distance(mathArray) {\n        return Math.sqrt(this.distanceSquared(mathArray));\n    }\n    distanceSquared(mathArray) {\n        let length = 0;\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            const dist = this[i] - mathArray[i];\n            length += dist * dist;\n        }\n        return (0,_lib_validators__WEBPACK_IMPORTED_MODULE_1__.checkNumber)(length);\n    }\n    dot(mathArray) {\n        let product = 0;\n        for(let i = 0; i < this.ELEMENTS; ++i){\n            product += this[i] * mathArray[i];\n        }\n        return (0,_lib_validators__WEBPACK_IMPORTED_MODULE_1__.checkNumber)(product);\n    }\n    normalize() {\n        const length = this.magnitude();\n        if (length !== 0) {\n            for(let i = 0; i < this.ELEMENTS; ++i){\n                this[i] /= length;\n            }\n        }\n        return this.check();\n    }\n    multiply(...vectors) {\n        for (const vector of vectors){\n            for(let i = 0; i < this.ELEMENTS; ++i){\n                this[i] *= vector[i];\n            }\n        }\n        return this.check();\n    }\n    divide(...vectors) {\n        for (const vector of vectors){\n            for(let i = 0; i < this.ELEMENTS; ++i){\n                this[i] /= vector[i];\n            }\n        }\n        return this.check();\n    }\n    lengthSq() {\n        return this.lengthSquared();\n    }\n    distanceTo(vector) {\n        return this.distance(vector);\n    }\n    distanceToSquared(vector) {\n        return this.distanceSquared(vector);\n    }\n    getComponent(i) {\n        (0,_lib_assert__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(i >= 0 && i < this.ELEMENTS, \"index is out of range\");\n        return (0,_lib_validators__WEBPACK_IMPORTED_MODULE_1__.checkNumber)(this[i]);\n    }\n    setComponent(i, value) {\n        (0,_lib_assert__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(i >= 0 && i < this.ELEMENTS, \"index is out of range\");\n        this[i] = value;\n        return this.check();\n    }\n    addVectors(a, b) {\n        return this.copy(a).add(b);\n    }\n    subVectors(a, b) {\n        return this.copy(a).subtract(b);\n    }\n    multiplyVectors(a, b) {\n        return this.copy(a).multiply(b);\n    }\n    addScaledVector(a, b) {\n        return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n} //# sourceMappingURL=vector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvY29yZS9kaXN0L2VzbS9jbGFzc2VzL2Jhc2UvdmVjdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUM7QUFDYztBQUNiO0FBQ3ZCLE1BQU1HLGVBQWVILG1EQUFTQTtJQUMzQyxJQUFJSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsRUFBRTtJQUNoQjtJQUVBLElBQUlBLEVBQUVDLEtBQUssRUFBRTtRQUNYLElBQUksQ0FBQyxFQUFFLEdBQUdKLDREQUFXQSxDQUFDSTtJQUN4QjtJQUVBLElBQUlDLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxFQUFFO0lBQ2hCO0lBRUEsSUFBSUEsRUFBRUQsS0FBSyxFQUFFO1FBQ1gsSUFBSSxDQUFDLEVBQUUsR0FBR0osNERBQVdBLENBQUNJO0lBQ3hCO0lBRUFFLE1BQU07UUFDSixPQUFPQyxLQUFLQyxJQUFJLENBQUMsSUFBSSxDQUFDQyxhQUFhO0lBQ3JDO0lBRUFDLFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQ0osR0FBRztJQUNqQjtJQUVBRyxnQkFBZ0I7UUFDZCxJQUFJRSxTQUFTO1FBRWIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDQyxRQUFRLEVBQUUsRUFBRUQsRUFBRztZQUN0Q0QsVUFBVSxJQUFJLENBQUNDLEVBQUUsR0FBRyxJQUFJLENBQUNBLEVBQUU7UUFDN0I7UUFFQSxPQUFPRDtJQUNUO0lBRUFHLG1CQUFtQjtRQUNqQixPQUFPLElBQUksQ0FBQ0wsYUFBYTtJQUMzQjtJQUVBTSxTQUFTQyxTQUFTLEVBQUU7UUFDbEIsT0FBT1QsS0FBS0MsSUFBSSxDQUFDLElBQUksQ0FBQ1MsZUFBZSxDQUFDRDtJQUN4QztJQUVBQyxnQkFBZ0JELFNBQVMsRUFBRTtRQUN6QixJQUFJTCxTQUFTO1FBRWIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDQyxRQUFRLEVBQUUsRUFBRUQsRUFBRztZQUN0QyxNQUFNTSxPQUFPLElBQUksQ0FBQ04sRUFBRSxHQUFHSSxTQUFTLENBQUNKLEVBQUU7WUFDbkNELFVBQVVPLE9BQU9BO1FBQ25CO1FBRUEsT0FBT2xCLDREQUFXQSxDQUFDVztJQUNyQjtJQUVBUSxJQUFJSCxTQUFTLEVBQUU7UUFDYixJQUFJSSxVQUFVO1FBRWQsSUFBSyxJQUFJUixJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDQyxRQUFRLEVBQUUsRUFBRUQsRUFBRztZQUN0Q1EsV0FBVyxJQUFJLENBQUNSLEVBQUUsR0FBR0ksU0FBUyxDQUFDSixFQUFFO1FBQ25DO1FBRUEsT0FBT1osNERBQVdBLENBQUNvQjtJQUNyQjtJQUVBQyxZQUFZO1FBQ1YsTUFBTVYsU0FBUyxJQUFJLENBQUNELFNBQVM7UUFFN0IsSUFBSUMsV0FBVyxHQUFHO1lBQ2hCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ0MsUUFBUSxFQUFFLEVBQUVELEVBQUc7Z0JBQ3RDLElBQUksQ0FBQ0EsRUFBRSxJQUFJRDtZQUNiO1FBQ0Y7UUFFQSxPQUFPLElBQUksQ0FBQ1csS0FBSztJQUNuQjtJQUVBQyxTQUFTLEdBQUdDLE9BQU8sRUFBRTtRQUNuQixLQUFLLE1BQU1DLFVBQVVELFFBQVM7WUFDNUIsSUFBSyxJQUFJWixJQUFJLEdBQUdBLElBQUksSUFBSSxDQUFDQyxRQUFRLEVBQUUsRUFBRUQsRUFBRztnQkFDdEMsSUFBSSxDQUFDQSxFQUFFLElBQUlhLE1BQU0sQ0FBQ2IsRUFBRTtZQUN0QjtRQUNGO1FBRUEsT0FBTyxJQUFJLENBQUNVLEtBQUs7SUFDbkI7SUFFQUksT0FBTyxHQUFHRixPQUFPLEVBQUU7UUFDakIsS0FBSyxNQUFNQyxVQUFVRCxRQUFTO1lBQzVCLElBQUssSUFBSVosSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ0MsUUFBUSxFQUFFLEVBQUVELEVBQUc7Z0JBQ3RDLElBQUksQ0FBQ0EsRUFBRSxJQUFJYSxNQUFNLENBQUNiLEVBQUU7WUFDdEI7UUFDRjtRQUVBLE9BQU8sSUFBSSxDQUFDVSxLQUFLO0lBQ25CO0lBRUFLLFdBQVc7UUFDVCxPQUFPLElBQUksQ0FBQ2xCLGFBQWE7SUFDM0I7SUFFQW1CLFdBQVdILE1BQU0sRUFBRTtRQUNqQixPQUFPLElBQUksQ0FBQ1YsUUFBUSxDQUFDVTtJQUN2QjtJQUVBSSxrQkFBa0JKLE1BQU0sRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQ1IsZUFBZSxDQUFDUTtJQUM5QjtJQUVBSyxhQUFhbEIsQ0FBQyxFQUFFO1FBQ2RYLHVEQUFNQSxDQUFDVyxLQUFLLEtBQUtBLElBQUksSUFBSSxDQUFDQyxRQUFRLEVBQUU7UUFDcEMsT0FBT2IsNERBQVdBLENBQUMsSUFBSSxDQUFDWSxFQUFFO0lBQzVCO0lBRUFtQixhQUFhbkIsQ0FBQyxFQUFFUixLQUFLLEVBQUU7UUFDckJILHVEQUFNQSxDQUFDVyxLQUFLLEtBQUtBLElBQUksSUFBSSxDQUFDQyxRQUFRLEVBQUU7UUFDcEMsSUFBSSxDQUFDRCxFQUFFLEdBQUdSO1FBQ1YsT0FBTyxJQUFJLENBQUNrQixLQUFLO0lBQ25CO0lBRUFVLFdBQVdDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO1FBQ2YsT0FBTyxJQUFJLENBQUNDLElBQUksQ0FBQ0YsR0FBR0csR0FBRyxDQUFDRjtJQUMxQjtJQUVBRyxXQUFXSixDQUFDLEVBQUVDLENBQUMsRUFBRTtRQUNmLE9BQU8sSUFBSSxDQUFDQyxJQUFJLENBQUNGLEdBQUdLLFFBQVEsQ0FBQ0o7SUFDL0I7SUFFQUssZ0JBQWdCTixDQUFDLEVBQUVDLENBQUMsRUFBRTtRQUNwQixPQUFPLElBQUksQ0FBQ0MsSUFBSSxDQUFDRixHQUFHVixRQUFRLENBQUNXO0lBQy9CO0lBRUFNLGdCQUFnQlAsQ0FBQyxFQUFFQyxDQUFDLEVBQUU7UUFDcEIsT0FBTyxJQUFJLENBQUNFLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQ0ssV0FBVyxDQUFDUixHQUFHUyxjQUFjLENBQUNSO0lBQ3pEO0FBRUYsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbWF0aC5nbC9jb3JlL2Rpc3QvZXNtL2NsYXNzZXMvYmFzZS92ZWN0b3IuanM/MTQxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTWF0aEFycmF5IGZyb20gJy4vbWF0aC1hcnJheSc7XG5pbXBvcnQgeyBjaGVja051bWJlciB9IGZyb20gJy4uLy4uL2xpYi92YWxpZGF0b3JzJztcbmltcG9ydCBhc3NlcnQgZnJvbSAnLi4vLi4vbGliL2Fzc2VydCc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWZWN0b3IgZXh0ZW5kcyBNYXRoQXJyYXkge1xuICBnZXQgeCgpIHtcbiAgICByZXR1cm4gdGhpc1swXTtcbiAgfVxuXG4gIHNldCB4KHZhbHVlKSB7XG4gICAgdGhpc1swXSA9IGNoZWNrTnVtYmVyKHZhbHVlKTtcbiAgfVxuXG4gIGdldCB5KCkge1xuICAgIHJldHVybiB0aGlzWzFdO1xuICB9XG5cbiAgc2V0IHkodmFsdWUpIHtcbiAgICB0aGlzWzFdID0gY2hlY2tOdW1iZXIodmFsdWUpO1xuICB9XG5cbiAgbGVuKCkge1xuICAgIHJldHVybiBNYXRoLnNxcnQodGhpcy5sZW5ndGhTcXVhcmVkKCkpO1xuICB9XG5cbiAgbWFnbml0dWRlKCkge1xuICAgIHJldHVybiB0aGlzLmxlbigpO1xuICB9XG5cbiAgbGVuZ3RoU3F1YXJlZCgpIHtcbiAgICBsZXQgbGVuZ3RoID0gMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5FTEVNRU5UUzsgKytpKSB7XG4gICAgICBsZW5ndGggKz0gdGhpc1tpXSAqIHRoaXNbaV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGxlbmd0aDtcbiAgfVxuXG4gIG1hZ25pdHVkZVNxdWFyZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMubGVuZ3RoU3F1YXJlZCgpO1xuICB9XG5cbiAgZGlzdGFuY2UobWF0aEFycmF5KSB7XG4gICAgcmV0dXJuIE1hdGguc3FydCh0aGlzLmRpc3RhbmNlU3F1YXJlZChtYXRoQXJyYXkpKTtcbiAgfVxuXG4gIGRpc3RhbmNlU3F1YXJlZChtYXRoQXJyYXkpIHtcbiAgICBsZXQgbGVuZ3RoID0gMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5FTEVNRU5UUzsgKytpKSB7XG4gICAgICBjb25zdCBkaXN0ID0gdGhpc1tpXSAtIG1hdGhBcnJheVtpXTtcbiAgICAgIGxlbmd0aCArPSBkaXN0ICogZGlzdDtcbiAgICB9XG5cbiAgICByZXR1cm4gY2hlY2tOdW1iZXIobGVuZ3RoKTtcbiAgfVxuXG4gIGRvdChtYXRoQXJyYXkpIHtcbiAgICBsZXQgcHJvZHVjdCA9IDA7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRUxFTUVOVFM7ICsraSkge1xuICAgICAgcHJvZHVjdCArPSB0aGlzW2ldICogbWF0aEFycmF5W2ldO1xuICAgIH1cblxuICAgIHJldHVybiBjaGVja051bWJlcihwcm9kdWN0KTtcbiAgfVxuXG4gIG5vcm1hbGl6ZSgpIHtcbiAgICBjb25zdCBsZW5ndGggPSB0aGlzLm1hZ25pdHVkZSgpO1xuXG4gICAgaWYgKGxlbmd0aCAhPT0gMCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLkVMRU1FTlRTOyArK2kpIHtcbiAgICAgICAgdGhpc1tpXSAvPSBsZW5ndGg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuY2hlY2soKTtcbiAgfVxuXG4gIG11bHRpcGx5KC4uLnZlY3RvcnMpIHtcbiAgICBmb3IgKGNvbnN0IHZlY3RvciBvZiB2ZWN0b3JzKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRUxFTUVOVFM7ICsraSkge1xuICAgICAgICB0aGlzW2ldICo9IHZlY3RvcltpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5jaGVjaygpO1xuICB9XG5cbiAgZGl2aWRlKC4uLnZlY3RvcnMpIHtcbiAgICBmb3IgKGNvbnN0IHZlY3RvciBvZiB2ZWN0b3JzKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuRUxFTUVOVFM7ICsraSkge1xuICAgICAgICB0aGlzW2ldIC89IHZlY3RvcltpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5jaGVjaygpO1xuICB9XG5cbiAgbGVuZ3RoU3EoKSB7XG4gICAgcmV0dXJuIHRoaXMubGVuZ3RoU3F1YXJlZCgpO1xuICB9XG5cbiAgZGlzdGFuY2VUbyh2ZWN0b3IpIHtcbiAgICByZXR1cm4gdGhpcy5kaXN0YW5jZSh2ZWN0b3IpO1xuICB9XG5cbiAgZGlzdGFuY2VUb1NxdWFyZWQodmVjdG9yKSB7XG4gICAgcmV0dXJuIHRoaXMuZGlzdGFuY2VTcXVhcmVkKHZlY3Rvcik7XG4gIH1cblxuICBnZXRDb21wb25lbnQoaSkge1xuICAgIGFzc2VydChpID49IDAgJiYgaSA8IHRoaXMuRUxFTUVOVFMsICdpbmRleCBpcyBvdXQgb2YgcmFuZ2UnKTtcbiAgICByZXR1cm4gY2hlY2tOdW1iZXIodGhpc1tpXSk7XG4gIH1cblxuICBzZXRDb21wb25lbnQoaSwgdmFsdWUpIHtcbiAgICBhc3NlcnQoaSA+PSAwICYmIGkgPCB0aGlzLkVMRU1FTlRTLCAnaW5kZXggaXMgb3V0IG9mIHJhbmdlJyk7XG4gICAgdGhpc1tpXSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGlzLmNoZWNrKCk7XG4gIH1cblxuICBhZGRWZWN0b3JzKGEsIGIpIHtcbiAgICByZXR1cm4gdGhpcy5jb3B5KGEpLmFkZChiKTtcbiAgfVxuXG4gIHN1YlZlY3RvcnMoYSwgYikge1xuICAgIHJldHVybiB0aGlzLmNvcHkoYSkuc3VidHJhY3QoYik7XG4gIH1cblxuICBtdWx0aXBseVZlY3RvcnMoYSwgYikge1xuICAgIHJldHVybiB0aGlzLmNvcHkoYSkubXVsdGlwbHkoYik7XG4gIH1cblxuICBhZGRTY2FsZWRWZWN0b3IoYSwgYikge1xuICAgIHJldHVybiB0aGlzLmFkZChuZXcgdGhpcy5jb25zdHJ1Y3RvcihhKS5tdWx0aXBseVNjYWxhcihiKSk7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVjdG9yLmpzLm1hcCJdLCJuYW1lcyI6WyJNYXRoQXJyYXkiLCJjaGVja051bWJlciIsImFzc2VydCIsIlZlY3RvciIsIngiLCJ2YWx1ZSIsInkiLCJsZW4iLCJNYXRoIiwic3FydCIsImxlbmd0aFNxdWFyZWQiLCJtYWduaXR1ZGUiLCJsZW5ndGgiLCJpIiwiRUxFTUVOVFMiLCJtYWduaXR1ZGVTcXVhcmVkIiwiZGlzdGFuY2UiLCJtYXRoQXJyYXkiLCJkaXN0YW5jZVNxdWFyZWQiLCJkaXN0IiwiZG90IiwicHJvZHVjdCIsIm5vcm1hbGl6ZSIsImNoZWNrIiwibXVsdGlwbHkiLCJ2ZWN0b3JzIiwidmVjdG9yIiwiZGl2aWRlIiwibGVuZ3RoU3EiLCJkaXN0YW5jZVRvIiwiZGlzdGFuY2VUb1NxdWFyZWQiLCJnZXRDb21wb25lbnQiLCJzZXRDb21wb25lbnQiLCJhZGRWZWN0b3JzIiwiYSIsImIiLCJjb3B5IiwiYWRkIiwic3ViVmVjdG9ycyIsInN1YnRyYWN0IiwibXVsdGlwbHlWZWN0b3JzIiwiYWRkU2NhbGVkVmVjdG9yIiwiY29uc3RydWN0b3IiLCJtdWx0aXBseVNjYWxhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/vector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/classes/matrix4.js":
/*!****************************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/classes/matrix4.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Matrix4)\n/* harmony export */ });\n/* harmony import */ var _base_matrix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base/matrix */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/matrix.js\");\n/* harmony import */ var _lib_validators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/validators */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/validators.js\");\n/* harmony import */ var _lib_gl_matrix_extras__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/gl-matrix-extras */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js\");\n/* harmony import */ var gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gl-matrix/mat4 */ \"(ssr)/./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix/vec2 */ \"(ssr)/./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix/vec3 */ \"(ssr)/./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix/vec4 */ \"(ssr)/./node_modules/gl-matrix/esm/vec4.js\");\n\n\n\n\n\n\n\nvar INDICES;\n(function(INDICES) {\n    INDICES[INDICES[\"COL0ROW0\"] = 0] = \"COL0ROW0\";\n    INDICES[INDICES[\"COL0ROW1\"] = 1] = \"COL0ROW1\";\n    INDICES[INDICES[\"COL0ROW2\"] = 2] = \"COL0ROW2\";\n    INDICES[INDICES[\"COL0ROW3\"] = 3] = \"COL0ROW3\";\n    INDICES[INDICES[\"COL1ROW0\"] = 4] = \"COL1ROW0\";\n    INDICES[INDICES[\"COL1ROW1\"] = 5] = \"COL1ROW1\";\n    INDICES[INDICES[\"COL1ROW2\"] = 6] = \"COL1ROW2\";\n    INDICES[INDICES[\"COL1ROW3\"] = 7] = \"COL1ROW3\";\n    INDICES[INDICES[\"COL2ROW0\"] = 8] = \"COL2ROW0\";\n    INDICES[INDICES[\"COL2ROW1\"] = 9] = \"COL2ROW1\";\n    INDICES[INDICES[\"COL2ROW2\"] = 10] = \"COL2ROW2\";\n    INDICES[INDICES[\"COL2ROW3\"] = 11] = \"COL2ROW3\";\n    INDICES[INDICES[\"COL3ROW0\"] = 12] = \"COL3ROW0\";\n    INDICES[INDICES[\"COL3ROW1\"] = 13] = \"COL3ROW1\";\n    INDICES[INDICES[\"COL3ROW2\"] = 14] = \"COL3ROW2\";\n    INDICES[INDICES[\"COL3ROW3\"] = 15] = \"COL3ROW3\";\n})(INDICES || (INDICES = {}));\nconst DEFAULT_FOVY = 45 * Math.PI / 180;\nconst DEFAULT_ASPECT = 1;\nconst DEFAULT_NEAR = 0.1;\nconst DEFAULT_FAR = 500;\nconst IDENTITY_MATRIX = Object.freeze([\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1\n]);\nclass Matrix4 extends _base_matrix__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    static get IDENTITY() {\n        return getIdentityMatrix();\n    }\n    static get ZERO() {\n        return getZeroMatrix();\n    }\n    get ELEMENTS() {\n        return 16;\n    }\n    get RANK() {\n        return 4;\n    }\n    get INDICES() {\n        return INDICES;\n    }\n    constructor(array){\n        super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n        if (arguments.length === 1 && Array.isArray(array)) {\n            this.copy(array);\n        } else {\n            this.identity();\n        }\n    }\n    copy(array) {\n        this[0] = array[0];\n        this[1] = array[1];\n        this[2] = array[2];\n        this[3] = array[3];\n        this[4] = array[4];\n        this[5] = array[5];\n        this[6] = array[6];\n        this[7] = array[7];\n        this[8] = array[8];\n        this[9] = array[9];\n        this[10] = array[10];\n        this[11] = array[11];\n        this[12] = array[12];\n        this[13] = array[13];\n        this[14] = array[14];\n        this[15] = array[15];\n        return this.check();\n    }\n    set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n        this[0] = m00;\n        this[1] = m10;\n        this[2] = m20;\n        this[3] = m30;\n        this[4] = m01;\n        this[5] = m11;\n        this[6] = m21;\n        this[7] = m31;\n        this[8] = m02;\n        this[9] = m12;\n        this[10] = m22;\n        this[11] = m32;\n        this[12] = m03;\n        this[13] = m13;\n        this[14] = m23;\n        this[15] = m33;\n        return this.check();\n    }\n    setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        this[0] = m00;\n        this[1] = m10;\n        this[2] = m20;\n        this[3] = m30;\n        this[4] = m01;\n        this[5] = m11;\n        this[6] = m21;\n        this[7] = m31;\n        this[8] = m02;\n        this[9] = m12;\n        this[10] = m22;\n        this[11] = m32;\n        this[12] = m03;\n        this[13] = m13;\n        this[14] = m23;\n        this[15] = m33;\n        return this.check();\n    }\n    toRowMajor(result) {\n        result[0] = this[0];\n        result[1] = this[4];\n        result[2] = this[8];\n        result[3] = this[12];\n        result[4] = this[1];\n        result[5] = this[5];\n        result[6] = this[9];\n        result[7] = this[13];\n        result[8] = this[2];\n        result[9] = this[6];\n        result[10] = this[10];\n        result[11] = this[14];\n        result[12] = this[3];\n        result[13] = this[7];\n        result[14] = this[11];\n        result[15] = this[15];\n        return result;\n    }\n    identity() {\n        return this.copy(IDENTITY_MATRIX);\n    }\n    fromObject(object) {\n        return this.check();\n    }\n    fromQuaternion(quaternion) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.fromQuat(this, quaternion);\n        return this.check();\n    }\n    frustum(view) {\n        const { left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR } = view;\n        if (far === Infinity) {\n            computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n        } else {\n            gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.frustum(this, left, right, bottom, top, near, far);\n        }\n        return this.check();\n    }\n    lookAt(view) {\n        const { eye, center = [\n            0,\n            0,\n            0\n        ], up = [\n            0,\n            1,\n            0\n        ] } = view;\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.lookAt(this, eye, center, up);\n        return this.check();\n    }\n    ortho(view) {\n        const { left, right, bottom, top, near = DEFAULT_NEAR, far = DEFAULT_FAR } = view;\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.ortho(this, left, right, bottom, top, near, far);\n        return this.check();\n    }\n    orthographic(view) {\n        const { fovy = DEFAULT_FOVY, aspect = DEFAULT_ASPECT, focalDistance = 1, near = DEFAULT_NEAR, far = DEFAULT_FAR } = view;\n        checkRadians(fovy);\n        const halfY = fovy / 2;\n        const top = focalDistance * Math.tan(halfY);\n        const right = top * aspect;\n        return this.ortho({\n            left: -right,\n            right,\n            bottom: -top,\n            top,\n            near,\n            far\n        });\n    }\n    perspective(view) {\n        const { fovy = 45 * Math.PI / 180, aspect = 1, near = 0.1, far = 500 } = view;\n        checkRadians(fovy);\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.perspective(this, fovy, aspect, near, far);\n        return this.check();\n    }\n    determinant() {\n        return gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.determinant(this);\n    }\n    getScale(result = [\n        -0,\n        -0,\n        -0\n    ]) {\n        result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n        result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n        result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n        return result;\n    }\n    getTranslation(result = [\n        -0,\n        -0,\n        -0\n    ]) {\n        result[0] = this[12];\n        result[1] = this[13];\n        result[2] = this[14];\n        return result;\n    }\n    getRotation(result, scaleResult) {\n        result = result || [\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0\n        ];\n        scaleResult = scaleResult || [\n            -0,\n            -0,\n            -0\n        ];\n        const scale = this.getScale(scaleResult);\n        const inverseScale0 = 1 / scale[0];\n        const inverseScale1 = 1 / scale[1];\n        const inverseScale2 = 1 / scale[2];\n        result[0] = this[0] * inverseScale0;\n        result[1] = this[1] * inverseScale1;\n        result[2] = this[2] * inverseScale2;\n        result[3] = 0;\n        result[4] = this[4] * inverseScale0;\n        result[5] = this[5] * inverseScale1;\n        result[6] = this[6] * inverseScale2;\n        result[7] = 0;\n        result[8] = this[8] * inverseScale0;\n        result[9] = this[9] * inverseScale1;\n        result[10] = this[10] * inverseScale2;\n        result[11] = 0;\n        result[12] = 0;\n        result[13] = 0;\n        result[14] = 0;\n        result[15] = 1;\n        return result;\n    }\n    getRotationMatrix3(result, scaleResult) {\n        result = result || [\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0,\n            -0\n        ];\n        scaleResult = scaleResult || [\n            -0,\n            -0,\n            -0\n        ];\n        const scale = this.getScale(scaleResult);\n        const inverseScale0 = 1 / scale[0];\n        const inverseScale1 = 1 / scale[1];\n        const inverseScale2 = 1 / scale[2];\n        result[0] = this[0] * inverseScale0;\n        result[1] = this[1] * inverseScale1;\n        result[2] = this[2] * inverseScale2;\n        result[3] = this[4] * inverseScale0;\n        result[4] = this[5] * inverseScale1;\n        result[5] = this[6] * inverseScale2;\n        result[6] = this[8] * inverseScale0;\n        result[7] = this[9] * inverseScale1;\n        result[8] = this[10] * inverseScale2;\n        return result;\n    }\n    transpose() {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.transpose(this, this);\n        return this.check();\n    }\n    invert() {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.invert(this, this);\n        return this.check();\n    }\n    multiplyLeft(a) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.multiply(this, a, this);\n        return this.check();\n    }\n    multiplyRight(a) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.multiply(this, this, a);\n        return this.check();\n    }\n    rotateX(radians) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.rotateX(this, this, radians);\n        return this.check();\n    }\n    rotateY(radians) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.rotateY(this, this, radians);\n        return this.check();\n    }\n    rotateZ(radians) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.rotateZ(this, this, radians);\n        return this.check();\n    }\n    rotateXYZ(angleXYZ) {\n        return this.rotateX(angleXYZ[0]).rotateY(angleXYZ[1]).rotateZ(angleXYZ[2]);\n    }\n    rotateAxis(radians, axis) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.rotate(this, this, radians, axis);\n        return this.check();\n    }\n    scale(factor) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.scale(this, this, Array.isArray(factor) ? factor : [\n            factor,\n            factor,\n            factor\n        ]);\n        return this.check();\n    }\n    translate(vector) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_1__.translate(this, this, vector);\n        return this.check();\n    }\n    transform(vector, result) {\n        if (vector.length === 4) {\n            result = gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_2__.transformMat4(result || [\n                -0,\n                -0,\n                -0,\n                -0\n            ], vector, this);\n            (0,_lib_validators__WEBPACK_IMPORTED_MODULE_3__.checkVector)(result, 4);\n            return result;\n        }\n        return this.transformAsPoint(vector, result);\n    }\n    transformAsPoint(vector, result) {\n        const { length } = vector;\n        let out;\n        switch(length){\n            case 2:\n                out = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_4__.transformMat4(result || [\n                    -0,\n                    -0\n                ], vector, this);\n                break;\n            case 3:\n                out = gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_5__.transformMat4(result || [\n                    -0,\n                    -0,\n                    -0\n                ], vector, this);\n                break;\n            default:\n                throw new Error(\"Illegal vector\");\n        }\n        (0,_lib_validators__WEBPACK_IMPORTED_MODULE_3__.checkVector)(out, vector.length);\n        return out;\n    }\n    transformAsVector(vector, result) {\n        let out;\n        switch(vector.length){\n            case 2:\n                out = (0,_lib_gl_matrix_extras__WEBPACK_IMPORTED_MODULE_6__.vec2_transformMat4AsVector)(result || [\n                    -0,\n                    -0\n                ], vector, this);\n                break;\n            case 3:\n                out = (0,_lib_gl_matrix_extras__WEBPACK_IMPORTED_MODULE_6__.vec3_transformMat4AsVector)(result || [\n                    -0,\n                    -0,\n                    -0\n                ], vector, this);\n                break;\n            default:\n                throw new Error(\"Illegal vector\");\n        }\n        (0,_lib_validators__WEBPACK_IMPORTED_MODULE_3__.checkVector)(out, vector.length);\n        return out;\n    }\n    transformPoint(vector, result) {\n        return this.transformAsPoint(vector, result);\n    }\n    transformVector(vector, result) {\n        return this.transformAsPoint(vector, result);\n    }\n    transformDirection(vector, result) {\n        return this.transformAsVector(vector, result);\n    }\n    makeRotationX(radians) {\n        return this.identity().rotateX(radians);\n    }\n    makeTranslation(x, y, z) {\n        return this.identity().translate([\n            x,\n            y,\n            z\n        ]);\n    }\n}\nlet ZERO;\nlet IDENTITY;\nfunction getZeroMatrix() {\n    if (!ZERO) {\n        ZERO = new Matrix4([\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0\n        ]);\n        Object.freeze(ZERO);\n    }\n    return ZERO;\n}\nfunction getIdentityMatrix() {\n    if (!IDENTITY) {\n        IDENTITY = new Matrix4();\n        Object.freeze(IDENTITY);\n    }\n    return IDENTITY;\n}\nfunction checkRadians(possiblyDegrees) {\n    if (possiblyDegrees > Math.PI * 2) {\n        throw Error(\"expected radians\");\n    }\n}\nfunction computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = 2 * near / (right - left);\n    const column1Row1 = 2 * near / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1;\n    const column2Row3 = -1;\n    const column3Row2 = -2 * near;\n    result[0] = column0Row0;\n    result[1] = 0;\n    result[2] = 0;\n    result[3] = 0;\n    result[4] = 0;\n    result[5] = column1Row1;\n    result[6] = 0;\n    result[7] = 0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = column3Row2;\n    result[15] = 0;\n    return result;\n} //# sourceMappingURL=matrix4.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/classes/matrix4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/classes/vector3.js":
/*!****************************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/classes/vector3.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Vector3)\n/* harmony export */ });\n/* harmony import */ var _base_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base/vector */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/classes/base/vector.js\");\n/* harmony import */ var _lib_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/common */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n/* harmony import */ var _lib_validators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/validators */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/validators.js\");\n/* harmony import */ var gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix/vec3 */ \"(ssr)/./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _lib_gl_matrix_extras__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/gl-matrix-extras */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js\");\n\n\n\n\n\nconst ORIGIN = [\n    0,\n    0,\n    0\n];\nlet ZERO;\nclass Vector3 extends _base_vector__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    static get ZERO() {\n        if (!ZERO) {\n            ZERO = new Vector3(0, 0, 0);\n            Object.freeze(ZERO);\n        }\n        return ZERO;\n    }\n    constructor(x = 0, y = 0, z = 0){\n        super(-0, -0, -0);\n        if (arguments.length === 1 && (0,_lib_common__WEBPACK_IMPORTED_MODULE_1__.isArray)(x)) {\n            this.copy(x);\n        } else {\n            if (_lib_common__WEBPACK_IMPORTED_MODULE_1__.config.debug) {\n                (0,_lib_validators__WEBPACK_IMPORTED_MODULE_2__.checkNumber)(x);\n                (0,_lib_validators__WEBPACK_IMPORTED_MODULE_2__.checkNumber)(y);\n                (0,_lib_validators__WEBPACK_IMPORTED_MODULE_2__.checkNumber)(z);\n            }\n            this[0] = x;\n            this[1] = y;\n            this[2] = z;\n        }\n    }\n    set(x, y, z) {\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        return this.check();\n    }\n    copy(array) {\n        this[0] = array[0];\n        this[1] = array[1];\n        this[2] = array[2];\n        return this.check();\n    }\n    fromObject(object) {\n        if (_lib_common__WEBPACK_IMPORTED_MODULE_1__.config.debug) {\n            (0,_lib_validators__WEBPACK_IMPORTED_MODULE_2__.checkNumber)(object.x);\n            (0,_lib_validators__WEBPACK_IMPORTED_MODULE_2__.checkNumber)(object.y);\n            (0,_lib_validators__WEBPACK_IMPORTED_MODULE_2__.checkNumber)(object.z);\n        }\n        this[0] = object.x;\n        this[1] = object.y;\n        this[2] = object.z;\n        return this.check();\n    }\n    toObject(object) {\n        object.x = this[0];\n        object.y = this[1];\n        object.z = this[2];\n        return object;\n    }\n    get ELEMENTS() {\n        return 3;\n    }\n    get z() {\n        return this[2];\n    }\n    set z(value) {\n        this[2] = (0,_lib_validators__WEBPACK_IMPORTED_MODULE_2__.checkNumber)(value);\n    }\n    angle(vector) {\n        return gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.angle(this, vector);\n    }\n    cross(vector) {\n        gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.cross(this, this, vector);\n        return this.check();\n    }\n    rotateX({ radians, origin = ORIGIN }) {\n        gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.rotateX(this, this, origin, radians);\n        return this.check();\n    }\n    rotateY({ radians, origin = ORIGIN }) {\n        gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.rotateY(this, this, origin, radians);\n        return this.check();\n    }\n    rotateZ({ radians, origin = ORIGIN }) {\n        gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.rotateZ(this, this, origin, radians);\n        return this.check();\n    }\n    transform(matrix4) {\n        return this.transformAsPoint(matrix4);\n    }\n    transformAsPoint(matrix4) {\n        gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.transformMat4(this, this, matrix4);\n        return this.check();\n    }\n    transformAsVector(matrix4) {\n        (0,_lib_gl_matrix_extras__WEBPACK_IMPORTED_MODULE_4__.vec3_transformMat4AsVector)(this, this, matrix4);\n        return this.check();\n    }\n    transformByMatrix3(matrix3) {\n        gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.transformMat3(this, this, matrix3);\n        return this.check();\n    }\n    transformByMatrix2(matrix2) {\n        (0,_lib_gl_matrix_extras__WEBPACK_IMPORTED_MODULE_4__.vec3_transformMat2)(this, this, matrix2);\n        return this.check();\n    }\n    transformByQuaternion(quaternion) {\n        gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.transformQuat(this, this, quaternion);\n        return this.check();\n    }\n} //# sourceMappingURL=vector3.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/classes/vector3.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/lib/assert.js":
/*!***********************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/lib/assert.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ assert)\n/* harmony export */ });\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(\"math.gl assertion \".concat(message));\n    }\n} //# sourceMappingURL=assert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvY29yZS9kaXN0L2VzbS9saWIvYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxTQUFTQSxPQUFPQyxTQUFTLEVBQUVDLE9BQU87SUFDL0MsSUFBSSxDQUFDRCxXQUFXO1FBQ2QsTUFBTSxJQUFJRSxNQUFNLHFCQUFxQkMsTUFBTSxDQUFDRjtJQUM5QztBQUNGLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvY29yZS9kaXN0L2VzbS9saWIvYXNzZXJ0LmpzPzRlNzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIm1hdGguZ2wgYXNzZXJ0aW9uIFwiLmNvbmNhdChtZXNzYWdlKSk7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFzc2VydC5qcy5tYXAiXSwibmFtZXMiOlsiYXNzZXJ0IiwiY29uZGl0aW9uIiwibWVzc2FnZSIsIkVycm9yIiwiY29uY2F0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/lib/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js":
/*!***********************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/lib/common.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   acos: () => (/* binding */ acos),\n/* harmony export */   asin: () => (/* binding */ asin),\n/* harmony export */   atan: () => (/* binding */ atan),\n/* harmony export */   clamp: () => (/* binding */ clamp),\n/* harmony export */   clone: () => (/* binding */ clone),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   configure: () => (/* binding */ configure),\n/* harmony export */   cos: () => (/* binding */ cos),\n/* harmony export */   degrees: () => (/* binding */ degrees),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   exactEquals: () => (/* binding */ exactEquals),\n/* harmony export */   formatValue: () => (/* binding */ formatValue),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   lerp: () => (/* binding */ lerp),\n/* harmony export */   radians: () => (/* binding */ radians),\n/* harmony export */   sin: () => (/* binding */ sin),\n/* harmony export */   tan: () => (/* binding */ tan),\n/* harmony export */   toDegrees: () => (/* binding */ toDegrees),\n/* harmony export */   toRadians: () => (/* binding */ toRadians),\n/* harmony export */   withEpsilon: () => (/* binding */ withEpsilon)\n/* harmony export */ });\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/assert.js\");\n\nconst RADIANS_TO_DEGREES = 1 / Math.PI * 180;\nconst DEGREES_TO_RADIANS = 1 / 180 * Math.PI;\nconst config = {\n    EPSILON: 1e-12,\n    debug: false,\n    precision: 4,\n    printTypes: false,\n    printDegrees: false,\n    printRowMajor: true\n};\nfunction configure(options) {\n    for(const key in options){\n        (0,_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(key in config);\n        config[key] = options[key];\n    }\n    return config;\n}\nfunction formatValue(value, { precision = config.precision } = {}) {\n    value = round(value);\n    return \"\".concat(parseFloat(value.toPrecision(precision)));\n}\nfunction isArray(value) {\n    return Array.isArray(value) || ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\nfunction clone(array) {\n    return \"clone\" in array ? array.clone() : array.slice();\n}\nfunction toRadians(degrees) {\n    return radians(degrees);\n}\nfunction toDegrees(radians) {\n    return degrees(radians);\n}\nfunction radians(degrees, result) {\n    return map(degrees, (degrees)=>degrees * DEGREES_TO_RADIANS, result);\n}\nfunction degrees(radians, result) {\n    return map(radians, (radians)=>radians * RADIANS_TO_DEGREES, result);\n}\nfunction sin(radians, result) {\n    return map(radians, (angle)=>Math.sin(angle), result);\n}\nfunction cos(radians, result) {\n    return map(radians, (angle)=>Math.cos(angle), result);\n}\nfunction tan(radians, result) {\n    return map(radians, (angle)=>Math.tan(angle), result);\n}\nfunction asin(radians, result) {\n    return map(radians, (angle)=>Math.asin(angle), result);\n}\nfunction acos(radians, result) {\n    return map(radians, (angle)=>Math.acos(angle), result);\n}\nfunction atan(radians, result) {\n    return map(radians, (angle)=>Math.atan(angle), result);\n}\nfunction clamp(value, min, max) {\n    return map(value, (value)=>Math.max(min, Math.min(max, value)));\n}\nfunction lerp(a, b, t) {\n    if (isArray(a)) {\n        return a.map((ai, i)=>lerp(ai, b[i], t));\n    }\n    return t * b + (1 - t) * a;\n}\nfunction equals(a, b, epsilon) {\n    const oldEpsilon = config.EPSILON;\n    if (epsilon) {\n        config.EPSILON = epsilon;\n    }\n    try {\n        if (a === b) {\n            return true;\n        }\n        if (isArray(a) && isArray(b)) {\n            if (a.length !== b.length) {\n                return false;\n            }\n            for(let i = 0; i < a.length; ++i){\n                if (!equals(a[i], b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (a && a.equals) {\n            return a.equals(b);\n        }\n        if (b && b.equals) {\n            return b.equals(a);\n        }\n        if (typeof a === \"number\" && typeof b === \"number\") {\n            return Math.abs(a - b) <= config.EPSILON * Math.max(1, Math.abs(a), Math.abs(b));\n        }\n        return false;\n    } finally{\n        config.EPSILON = oldEpsilon;\n    }\n}\nfunction exactEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a && typeof a === \"object\" && b && typeof b === \"object\") {\n        if (a.constructor !== b.constructor) {\n            return false;\n        }\n        if (a.exactEquals) {\n            return a.exactEquals(b);\n        }\n    }\n    if (isArray(a) && isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for(let i = 0; i < a.length; ++i){\n            if (!exactEquals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction withEpsilon(epsilon, func) {\n    const oldPrecision = config.EPSILON;\n    config.EPSILON = epsilon;\n    let value;\n    try {\n        value = func();\n    } finally{\n        config.EPSILON = oldPrecision;\n    }\n    return value;\n}\nfunction round(value) {\n    return Math.round(value / config.EPSILON) * config.EPSILON;\n}\nfunction duplicateArray(array) {\n    return array.clone ? array.clone() : new Array(array.length);\n}\nfunction map(value, func, result) {\n    if (isArray(value)) {\n        const array = value;\n        result = result || duplicateArray(array);\n        for(let i = 0; i < result.length && i < array.length; ++i){\n            result[i] = func(value[i], i, result);\n        }\n        return result;\n    }\n    return func(value);\n} //# sourceMappingURL=common.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   vec2_transformMat4AsVector: () => (/* binding */ vec2_transformMat4AsVector),\n/* harmony export */   vec3_transformMat2: () => (/* binding */ vec3_transformMat2),\n/* harmony export */   vec3_transformMat4AsVector: () => (/* binding */ vec3_transformMat4AsVector),\n/* harmony export */   vec4_transformMat2: () => (/* binding */ vec4_transformMat2),\n/* harmony export */   vec4_transformMat3: () => (/* binding */ vec4_transformMat3)\n/* harmony export */ });\nfunction vec2_transformMat4AsVector(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    const w = m[3] * x + m[7] * y || 1.0;\n    out[0] = (m[0] * x + m[4] * y) / w;\n    out[1] = (m[1] * x + m[5] * y) / w;\n    return out;\n}\nfunction vec3_transformMat4AsVector(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\nfunction vec3_transformMat2(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    out[2] = a[2];\n    return out;\n}\nfunction vec4_transformMat2(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\nfunction vec4_transformMat3(out, a, m) {\n    const x = a[0];\n    const y = a[1];\n    const z = a[2];\n    out[0] = m[0] * x + m[3] * y + m[6] * z;\n    out[1] = m[1] * x + m[4] * y + m[7] * z;\n    out[2] = m[2] * x + m[5] * y + m[8] * z;\n    out[3] = a[3];\n    return out;\n} //# sourceMappingURL=gl-matrix-extras.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvY29yZS9kaXN0L2VzbS9saWIvZ2wtbWF0cml4LWV4dHJhcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLFNBQVNBLDJCQUEyQkMsR0FBRyxFQUFFQyxDQUFDLEVBQUVDLENBQUM7SUFDbEQsTUFBTUMsSUFBSUYsQ0FBQyxDQUFDLEVBQUU7SUFDZCxNQUFNRyxJQUFJSCxDQUFDLENBQUMsRUFBRTtJQUNkLE1BQU1JLElBQUlILENBQUMsQ0FBQyxFQUFFLEdBQUdDLElBQUlELENBQUMsQ0FBQyxFQUFFLEdBQUdFLEtBQUs7SUFDakNKLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQ0UsQ0FBQyxDQUFDLEVBQUUsR0FBR0MsSUFBSUQsQ0FBQyxDQUFDLEVBQUUsR0FBR0UsQ0FBQUEsSUFBS0M7SUFDakNMLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQ0UsQ0FBQyxDQUFDLEVBQUUsR0FBR0MsSUFBSUQsQ0FBQyxDQUFDLEVBQUUsR0FBR0UsQ0FBQUEsSUFBS0M7SUFDakMsT0FBT0w7QUFDVDtBQUNPLFNBQVNNLDJCQUEyQk4sR0FBRyxFQUFFQyxDQUFDLEVBQUVDLENBQUM7SUFDbEQsTUFBTUMsSUFBSUYsQ0FBQyxDQUFDLEVBQUU7SUFDZCxNQUFNRyxJQUFJSCxDQUFDLENBQUMsRUFBRTtJQUNkLE1BQU1NLElBQUlOLENBQUMsQ0FBQyxFQUFFO0lBQ2QsTUFBTUksSUFBSUgsQ0FBQyxDQUFDLEVBQUUsR0FBR0MsSUFBSUQsQ0FBQyxDQUFDLEVBQUUsR0FBR0UsSUFBSUYsQ0FBQyxDQUFDLEdBQUcsR0FBR0ssS0FBSztJQUM3Q1AsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDRSxDQUFDLENBQUMsRUFBRSxHQUFHQyxJQUFJRCxDQUFDLENBQUMsRUFBRSxHQUFHRSxJQUFJRixDQUFDLENBQUMsRUFBRSxHQUFHSyxDQUFBQSxJQUFLRjtJQUM1Q0wsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDRSxDQUFDLENBQUMsRUFBRSxHQUFHQyxJQUFJRCxDQUFDLENBQUMsRUFBRSxHQUFHRSxJQUFJRixDQUFDLENBQUMsRUFBRSxHQUFHSyxDQUFBQSxJQUFLRjtJQUM1Q0wsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDRSxDQUFDLENBQUMsRUFBRSxHQUFHQyxJQUFJRCxDQUFDLENBQUMsRUFBRSxHQUFHRSxJQUFJRixDQUFDLENBQUMsR0FBRyxHQUFHSyxDQUFBQSxJQUFLRjtJQUM3QyxPQUFPTDtBQUNUO0FBQ08sU0FBU1EsbUJBQW1CUixHQUFHLEVBQUVDLENBQUMsRUFBRUMsQ0FBQztJQUMxQyxNQUFNQyxJQUFJRixDQUFDLENBQUMsRUFBRTtJQUNkLE1BQU1HLElBQUlILENBQUMsQ0FBQyxFQUFFO0lBQ2RELEdBQUcsQ0FBQyxFQUFFLEdBQUdFLENBQUMsQ0FBQyxFQUFFLEdBQUdDLElBQUlELENBQUMsQ0FBQyxFQUFFLEdBQUdFO0lBQzNCSixHQUFHLENBQUMsRUFBRSxHQUFHRSxDQUFDLENBQUMsRUFBRSxHQUFHQyxJQUFJRCxDQUFDLENBQUMsRUFBRSxHQUFHRTtJQUMzQkosR0FBRyxDQUFDLEVBQUUsR0FBR0MsQ0FBQyxDQUFDLEVBQUU7SUFDYixPQUFPRDtBQUNUO0FBQ08sU0FBU1MsbUJBQW1CVCxHQUFHLEVBQUVDLENBQUMsRUFBRUMsQ0FBQztJQUMxQyxNQUFNQyxJQUFJRixDQUFDLENBQUMsRUFBRTtJQUNkLE1BQU1HLElBQUlILENBQUMsQ0FBQyxFQUFFO0lBQ2RELEdBQUcsQ0FBQyxFQUFFLEdBQUdFLENBQUMsQ0FBQyxFQUFFLEdBQUdDLElBQUlELENBQUMsQ0FBQyxFQUFFLEdBQUdFO0lBQzNCSixHQUFHLENBQUMsRUFBRSxHQUFHRSxDQUFDLENBQUMsRUFBRSxHQUFHQyxJQUFJRCxDQUFDLENBQUMsRUFBRSxHQUFHRTtJQUMzQkosR0FBRyxDQUFDLEVBQUUsR0FBR0MsQ0FBQyxDQUFDLEVBQUU7SUFDYkQsR0FBRyxDQUFDLEVBQUUsR0FBR0MsQ0FBQyxDQUFDLEVBQUU7SUFDYixPQUFPRDtBQUNUO0FBQ08sU0FBU1UsbUJBQW1CVixHQUFHLEVBQUVDLENBQUMsRUFBRUMsQ0FBQztJQUMxQyxNQUFNQyxJQUFJRixDQUFDLENBQUMsRUFBRTtJQUNkLE1BQU1HLElBQUlILENBQUMsQ0FBQyxFQUFFO0lBQ2QsTUFBTU0sSUFBSU4sQ0FBQyxDQUFDLEVBQUU7SUFDZEQsR0FBRyxDQUFDLEVBQUUsR0FBR0UsQ0FBQyxDQUFDLEVBQUUsR0FBR0MsSUFBSUQsQ0FBQyxDQUFDLEVBQUUsR0FBR0UsSUFBSUYsQ0FBQyxDQUFDLEVBQUUsR0FBR0s7SUFDdENQLEdBQUcsQ0FBQyxFQUFFLEdBQUdFLENBQUMsQ0FBQyxFQUFFLEdBQUdDLElBQUlELENBQUMsQ0FBQyxFQUFFLEdBQUdFLElBQUlGLENBQUMsQ0FBQyxFQUFFLEdBQUdLO0lBQ3RDUCxHQUFHLENBQUMsRUFBRSxHQUFHRSxDQUFDLENBQUMsRUFBRSxHQUFHQyxJQUFJRCxDQUFDLENBQUMsRUFBRSxHQUFHRSxJQUFJRixDQUFDLENBQUMsRUFBRSxHQUFHSztJQUN0Q1AsR0FBRyxDQUFDLEVBQUUsR0FBR0MsQ0FBQyxDQUFDLEVBQUU7SUFDYixPQUFPRDtBQUNULEVBQ0EsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvY29yZS9kaXN0L2VzbS9saWIvZ2wtbWF0cml4LWV4dHJhcy5qcz83OWQwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiB2ZWMyX3RyYW5zZm9ybU1hdDRBc1ZlY3RvcihvdXQsIGEsIG0pIHtcbiAgY29uc3QgeCA9IGFbMF07XG4gIGNvbnN0IHkgPSBhWzFdO1xuICBjb25zdCB3ID0gbVszXSAqIHggKyBtWzddICogeSB8fCAxLjA7XG4gIG91dFswXSA9IChtWzBdICogeCArIG1bNF0gKiB5KSAvIHc7XG4gIG91dFsxXSA9IChtWzFdICogeCArIG1bNV0gKiB5KSAvIHc7XG4gIHJldHVybiBvdXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gdmVjM190cmFuc2Zvcm1NYXQ0QXNWZWN0b3Iob3V0LCBhLCBtKSB7XG4gIGNvbnN0IHggPSBhWzBdO1xuICBjb25zdCB5ID0gYVsxXTtcbiAgY29uc3QgeiA9IGFbMl07XG4gIGNvbnN0IHcgPSBtWzNdICogeCArIG1bN10gKiB5ICsgbVsxMV0gKiB6IHx8IDEuMDtcbiAgb3V0WzBdID0gKG1bMF0gKiB4ICsgbVs0XSAqIHkgKyBtWzhdICogeikgLyB3O1xuICBvdXRbMV0gPSAobVsxXSAqIHggKyBtWzVdICogeSArIG1bOV0gKiB6KSAvIHc7XG4gIG91dFsyXSA9IChtWzJdICogeCArIG1bNl0gKiB5ICsgbVsxMF0gKiB6KSAvIHc7XG4gIHJldHVybiBvdXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gdmVjM190cmFuc2Zvcm1NYXQyKG91dCwgYSwgbSkge1xuICBjb25zdCB4ID0gYVswXTtcbiAgY29uc3QgeSA9IGFbMV07XG4gIG91dFswXSA9IG1bMF0gKiB4ICsgbVsyXSAqIHk7XG4gIG91dFsxXSA9IG1bMV0gKiB4ICsgbVszXSAqIHk7XG4gIG91dFsyXSA9IGFbMl07XG4gIHJldHVybiBvdXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gdmVjNF90cmFuc2Zvcm1NYXQyKG91dCwgYSwgbSkge1xuICBjb25zdCB4ID0gYVswXTtcbiAgY29uc3QgeSA9IGFbMV07XG4gIG91dFswXSA9IG1bMF0gKiB4ICsgbVsyXSAqIHk7XG4gIG91dFsxXSA9IG1bMV0gKiB4ICsgbVszXSAqIHk7XG4gIG91dFsyXSA9IGFbMl07XG4gIG91dFszXSA9IGFbM107XG4gIHJldHVybiBvdXQ7XG59XG5leHBvcnQgZnVuY3Rpb24gdmVjNF90cmFuc2Zvcm1NYXQzKG91dCwgYSwgbSkge1xuICBjb25zdCB4ID0gYVswXTtcbiAgY29uc3QgeSA9IGFbMV07XG4gIGNvbnN0IHogPSBhWzJdO1xuICBvdXRbMF0gPSBtWzBdICogeCArIG1bM10gKiB5ICsgbVs2XSAqIHo7XG4gIG91dFsxXSA9IG1bMV0gKiB4ICsgbVs0XSAqIHkgKyBtWzddICogejtcbiAgb3V0WzJdID0gbVsyXSAqIHggKyBtWzVdICogeSArIG1bOF0gKiB6O1xuICBvdXRbM10gPSBhWzNdO1xuICByZXR1cm4gb3V0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2wtbWF0cml4LWV4dHJhcy5qcy5tYXAiXSwibmFtZXMiOlsidmVjMl90cmFuc2Zvcm1NYXQ0QXNWZWN0b3IiLCJvdXQiLCJhIiwibSIsIngiLCJ5IiwidyIsInZlYzNfdHJhbnNmb3JtTWF0NEFzVmVjdG9yIiwieiIsInZlYzNfdHJhbnNmb3JtTWF0MiIsInZlYzRfdHJhbnNmb3JtTWF0MiIsInZlYzRfdHJhbnNmb3JtTWF0MyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/core/dist/esm/lib/validators.js":
/*!***************************************************************!*\
  !*** ./node_modules/@math.gl/core/dist/esm/lib/validators.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkNumber: () => (/* binding */ checkNumber),\n/* harmony export */   checkVector: () => (/* binding */ checkVector),\n/* harmony export */   deprecated: () => (/* binding */ deprecated),\n/* harmony export */   validateVector: () => (/* binding */ validateVector)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n\nfunction validateVector(v, length) {\n    if (v.length !== length) {\n        return false;\n    }\n    for(let i = 0; i < v.length; ++i){\n        if (!Number.isFinite(v[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction checkNumber(value) {\n    if (!Number.isFinite(value)) {\n        throw new Error(\"Invalid number \".concat(value));\n    }\n    return value;\n}\nfunction checkVector(v, length, callerName = \"\") {\n    if (_common__WEBPACK_IMPORTED_MODULE_0__.config.debug && !validateVector(v, length)) {\n        throw new Error(\"math.gl: \".concat(callerName, \" some fields set to invalid numbers'\"));\n    }\n    return v;\n}\nconst map = {};\nfunction deprecated(method, version) {\n    if (!map[method]) {\n        map[method] = true;\n        console.warn(\"\".concat(method, \" has been removed in version \").concat(version, \", see upgrade guide for more information\"));\n    }\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvY29yZS9kaXN0L2VzbS9saWIvdmFsaWRhdG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFrQztBQUMzQixTQUFTQyxlQUFlQyxDQUFDLEVBQUVDLE1BQU07SUFDdEMsSUFBSUQsRUFBRUMsTUFBTSxLQUFLQSxRQUFRO1FBQ3ZCLE9BQU87SUFDVDtJQUVBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRixFQUFFQyxNQUFNLEVBQUUsRUFBRUMsRUFBRztRQUNqQyxJQUFJLENBQUNDLE9BQU9DLFFBQVEsQ0FBQ0osQ0FBQyxDQUFDRSxFQUFFLEdBQUc7WUFDMUIsT0FBTztRQUNUO0lBQ0Y7SUFFQSxPQUFPO0FBQ1Q7QUFDTyxTQUFTRyxZQUFZQyxLQUFLO0lBQy9CLElBQUksQ0FBQ0gsT0FBT0MsUUFBUSxDQUFDRSxRQUFRO1FBQzNCLE1BQU0sSUFBSUMsTUFBTSxrQkFBa0JDLE1BQU0sQ0FBQ0Y7SUFDM0M7SUFFQSxPQUFPQTtBQUNUO0FBQ08sU0FBU0csWUFBWVQsQ0FBQyxFQUFFQyxNQUFNLEVBQUVTLGFBQWEsRUFBRTtJQUNwRCxJQUFJWiwyQ0FBTUEsQ0FBQ2EsS0FBSyxJQUFJLENBQUNaLGVBQWVDLEdBQUdDLFNBQVM7UUFDOUMsTUFBTSxJQUFJTSxNQUFNLFlBQVlDLE1BQU0sQ0FBQ0UsWUFBWTtJQUNqRDtJQUVBLE9BQU9WO0FBQ1Q7QUFDQSxNQUFNWSxNQUFNLENBQUM7QUFDTixTQUFTQyxXQUFXQyxNQUFNLEVBQUVDLE9BQU87SUFDeEMsSUFBSSxDQUFDSCxHQUFHLENBQUNFLE9BQU8sRUFBRTtRQUNoQkYsR0FBRyxDQUFDRSxPQUFPLEdBQUc7UUFDZEUsUUFBUUMsSUFBSSxDQUFDLEdBQUdULE1BQU0sQ0FBQ00sUUFBUSxpQ0FBaUNOLE1BQU0sQ0FBQ08sU0FBUztJQUNsRjtBQUNGLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvY29yZS9kaXN0L2VzbS9saWIvdmFsaWRhdG9ycy5qcz8yMTA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpZyB9IGZyb20gJy4vY29tbW9uJztcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVZlY3Rvcih2LCBsZW5ndGgpIHtcbiAgaWYgKHYubGVuZ3RoICE9PSBsZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHYubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoIU51bWJlci5pc0Zpbml0ZSh2W2ldKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrTnVtYmVyKHZhbHVlKSB7XG4gIGlmICghTnVtYmVyLmlzRmluaXRlKHZhbHVlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgbnVtYmVyIFwiLmNvbmNhdCh2YWx1ZSkpO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrVmVjdG9yKHYsIGxlbmd0aCwgY2FsbGVyTmFtZSA9ICcnKSB7XG4gIGlmIChjb25maWcuZGVidWcgJiYgIXZhbGlkYXRlVmVjdG9yKHYsIGxlbmd0aCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJtYXRoLmdsOiBcIi5jb25jYXQoY2FsbGVyTmFtZSwgXCIgc29tZSBmaWVsZHMgc2V0IHRvIGludmFsaWQgbnVtYmVycydcIikpO1xuICB9XG5cbiAgcmV0dXJuIHY7XG59XG5jb25zdCBtYXAgPSB7fTtcbmV4cG9ydCBmdW5jdGlvbiBkZXByZWNhdGVkKG1ldGhvZCwgdmVyc2lvbikge1xuICBpZiAoIW1hcFttZXRob2RdKSB7XG4gICAgbWFwW21ldGhvZF0gPSB0cnVlO1xuICAgIGNvbnNvbGUud2FybihcIlwiLmNvbmNhdChtZXRob2QsIFwiIGhhcyBiZWVuIHJlbW92ZWQgaW4gdmVyc2lvbiBcIikuY29uY2F0KHZlcnNpb24sIFwiLCBzZWUgdXBncmFkZSBndWlkZSBmb3IgbW9yZSBpbmZvcm1hdGlvblwiKSk7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRvcnMuanMubWFwIl0sIm5hbWVzIjpbImNvbmZpZyIsInZhbGlkYXRlVmVjdG9yIiwidiIsImxlbmd0aCIsImkiLCJOdW1iZXIiLCJpc0Zpbml0ZSIsImNoZWNrTnVtYmVyIiwidmFsdWUiLCJFcnJvciIsImNvbmNhdCIsImNoZWNrVmVjdG9yIiwiY2FsbGVyTmFtZSIsImRlYnVnIiwibWFwIiwiZGVwcmVjYXRlZCIsIm1ldGhvZCIsInZlcnNpb24iLCJjb25zb2xlIiwid2FybiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/core/dist/esm/lib/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js":
/*!***************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cutPolygonByGrid: () => (/* binding */ cutPolygonByGrid),\n/* harmony export */   cutPolylineByGrid: () => (/* binding */ cutPolylineByGrid)\n/* harmony export */ });\n/* harmony import */ var _lineclip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lineclip */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/lineclip.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/utils.js\");\n\n\nfunction cutPolylineByGrid(positions, options) {\n    const { size = 2, broken = false, gridResolution = 10, gridOffset = [\n        0,\n        0\n    ], startIndex = 0, endIndex = positions.length } = options || {};\n    const numPoints = (endIndex - startIndex) / size;\n    let part = [];\n    const result = [\n        part\n    ];\n    const a = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getPointAtIndex)(positions, 0, size, startIndex);\n    let b;\n    let codeB;\n    const cell = getGridCell(a, gridResolution, gridOffset, []);\n    const scratchPoint = [];\n    (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(part, a);\n    for(let i = 1; i < numPoints; i++){\n        b = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getPointAtIndex)(positions, i, size, startIndex, b);\n        codeB = (0,_lineclip__WEBPACK_IMPORTED_MODULE_0__.bitCode)(b, cell);\n        while(codeB){\n            (0,_lineclip__WEBPACK_IMPORTED_MODULE_0__.intersect)(a, b, codeB, cell, scratchPoint);\n            const codeAlt = (0,_lineclip__WEBPACK_IMPORTED_MODULE_0__.bitCode)(scratchPoint, cell);\n            if (codeAlt) {\n                (0,_lineclip__WEBPACK_IMPORTED_MODULE_0__.intersect)(a, scratchPoint, codeAlt, cell, scratchPoint);\n                codeB = codeAlt;\n            }\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(part, scratchPoint);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.copy)(a, scratchPoint);\n            moveToNeighborCell(cell, gridResolution, codeB);\n            if (broken && part.length > size) {\n                part = [];\n                result.push(part);\n                (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(part, a);\n            }\n            codeB = (0,_lineclip__WEBPACK_IMPORTED_MODULE_0__.bitCode)(b, cell);\n        }\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(part, b);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.copy)(a, b);\n    }\n    return broken ? result : result[0];\n}\nconst TYPE_INSIDE = 0;\nconst TYPE_BORDER = 1;\nfunction concatInPlace(arr1, arr2) {\n    for(let i = 0; i < arr2.length; i++){\n        arr1.push(arr2[i]);\n    }\n    return arr1;\n}\nfunction cutPolygonByGrid(positions, holeIndices = null, options) {\n    if (!positions.length) {\n        return [];\n    }\n    const { size = 2, gridResolution = 10, gridOffset = [\n        0,\n        0\n    ], edgeTypes = false } = options || {};\n    const result = [];\n    const queue = [\n        {\n            pos: positions,\n            types: edgeTypes ? new Array(positions.length / size).fill(TYPE_BORDER) : null,\n            holes: holeIndices || []\n        }\n    ];\n    const bbox = [\n        [],\n        []\n    ];\n    let cell = [];\n    while(queue.length){\n        const { pos, types, holes } = queue.shift();\n        getBoundingBox(pos, size, holes[0] || pos.length, bbox);\n        cell = getGridCell(bbox[0], gridResolution, gridOffset, cell);\n        const code = (0,_lineclip__WEBPACK_IMPORTED_MODULE_0__.bitCode)(bbox[1], cell);\n        if (code) {\n            let parts = bisectPolygon(pos, types, size, 0, holes[0] || pos.length, cell, code);\n            const polygonLow = {\n                pos: parts[0].pos,\n                types: parts[0].types,\n                holes: []\n            };\n            const polygonHigh = {\n                pos: parts[1].pos,\n                types: parts[1].types,\n                holes: []\n            };\n            queue.push(polygonLow, polygonHigh);\n            for(let i = 0; i < holes.length; i++){\n                parts = bisectPolygon(pos, types, size, holes[i], holes[i + 1] || pos.length, cell, code);\n                if (parts[0]) {\n                    polygonLow.holes.push(polygonLow.pos.length);\n                    polygonLow.pos = concatInPlace(polygonLow.pos, parts[0].pos);\n                    if (edgeTypes) {\n                        polygonLow.types = concatInPlace(polygonLow.types, parts[0].types);\n                    }\n                }\n                if (parts[1]) {\n                    polygonHigh.holes.push(polygonHigh.pos.length);\n                    polygonHigh.pos = concatInPlace(polygonHigh.pos, parts[1].pos);\n                    if (edgeTypes) {\n                        polygonHigh.types = concatInPlace(polygonHigh.types, parts[1].types);\n                    }\n                }\n            }\n        } else {\n            const polygon = {\n                positions: pos\n            };\n            if (edgeTypes) {\n                polygon.edgeTypes = types;\n            }\n            if (holes.length) {\n                polygon.holeIndices = holes;\n            }\n            result.push(polygon);\n        }\n    }\n    return result;\n}\nfunction bisectPolygon(positions, edgeTypes, size, startIndex, endIndex, bbox, edge) {\n    const numPoints = (endIndex - startIndex) / size;\n    const resultLow = [];\n    const resultHigh = [];\n    const typesLow = [];\n    const typesHigh = [];\n    const scratchPoint = [];\n    let p;\n    let side;\n    let type;\n    const prev = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getPointAtIndex)(positions, numPoints - 1, size, startIndex);\n    let prevSide = Math.sign(edge & 8 ? prev[1] - bbox[3] : prev[0] - bbox[2]);\n    let prevType = edgeTypes && edgeTypes[numPoints - 1];\n    let lowPointCount = 0;\n    let highPointCount = 0;\n    for(let i = 0; i < numPoints; i++){\n        p = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getPointAtIndex)(positions, i, size, startIndex, p);\n        side = Math.sign(edge & 8 ? p[1] - bbox[3] : p[0] - bbox[2]);\n        type = edgeTypes && edgeTypes[startIndex / size + i];\n        if (side && prevSide && prevSide !== side) {\n            (0,_lineclip__WEBPACK_IMPORTED_MODULE_0__.intersect)(prev, p, edge, bbox, scratchPoint);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(resultLow, scratchPoint) && typesLow.push(prevType);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(resultHigh, scratchPoint) && typesHigh.push(prevType);\n        }\n        if (side <= 0) {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(resultLow, p) && typesLow.push(type);\n            lowPointCount -= side;\n        } else if (typesLow.length) {\n            typesLow[typesLow.length - 1] = TYPE_INSIDE;\n        }\n        if (side >= 0) {\n            (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(resultHigh, p) && typesHigh.push(type);\n            highPointCount += side;\n        } else if (typesHigh.length) {\n            typesHigh[typesHigh.length - 1] = TYPE_INSIDE;\n        }\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.copy)(prev, p);\n        prevSide = side;\n        prevType = type;\n    }\n    return [\n        lowPointCount ? {\n            pos: resultLow,\n            types: edgeTypes && typesLow\n        } : null,\n        highPointCount ? {\n            pos: resultHigh,\n            types: edgeTypes && typesHigh\n        } : null\n    ];\n}\nfunction getGridCell(p, gridResolution, gridOffset, out) {\n    const left = Math.floor((p[0] - gridOffset[0]) / gridResolution) * gridResolution + gridOffset[0];\n    const bottom = Math.floor((p[1] - gridOffset[1]) / gridResolution) * gridResolution + gridOffset[1];\n    out[0] = left;\n    out[1] = bottom;\n    out[2] = left + gridResolution;\n    out[3] = bottom + gridResolution;\n    return out;\n}\nfunction moveToNeighborCell(cell, gridResolution, edge) {\n    if (edge & 8) {\n        cell[1] += gridResolution;\n        cell[3] += gridResolution;\n    } else if (edge & 4) {\n        cell[1] -= gridResolution;\n        cell[3] -= gridResolution;\n    } else if (edge & 2) {\n        cell[0] += gridResolution;\n        cell[2] += gridResolution;\n    } else if (edge & 1) {\n        cell[0] -= gridResolution;\n        cell[2] -= gridResolution;\n    }\n}\nfunction getBoundingBox(positions, size, endIndex, out) {\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for(let i = 0; i < endIndex; i += size){\n        const x = positions[i];\n        const y = positions[i + 1];\n        minX = x < minX ? x : minX;\n        maxX = x > maxX ? x : maxX;\n        minY = y < minY ? y : minY;\n        maxY = y > maxY ? y : maxY;\n    }\n    out[0][0] = minX;\n    out[0][1] = minY;\n    out[1][0] = maxX;\n    out[1][1] = maxY;\n    return out;\n} //# sourceMappingURL=cut-by-grid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/polygon/dist/esm/cut-by-mercator-bounds.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/cut-by-mercator-bounds.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cutPolygonByMercatorBounds: () => (/* binding */ cutPolygonByMercatorBounds),\n/* harmony export */   cutPolylineByMercatorBounds: () => (/* binding */ cutPolylineByMercatorBounds)\n/* harmony export */ });\n/* harmony import */ var _cut_by_grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cut-by-grid */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/utils.js\");\n\n\nconst DEFAULT_MAX_LATITUDE = 85.051129;\nfunction cutPolylineByMercatorBounds(positions, options) {\n    const { size = 2, startIndex = 0, endIndex = positions.length, normalize = true } = options || {};\n    const newPositions = positions.slice(startIndex, endIndex);\n    wrapLongitudesForShortestPath(newPositions, size, 0, endIndex - startIndex);\n    const parts = (0,_cut_by_grid__WEBPACK_IMPORTED_MODULE_0__.cutPolylineByGrid)(newPositions, {\n        size,\n        broken: true,\n        gridResolution: 360,\n        gridOffset: [\n            -180,\n            -180\n        ]\n    });\n    if (normalize) {\n        for (const part of parts){\n            shiftLongitudesIntoRange(part, size);\n        }\n    }\n    return parts;\n}\nfunction cutPolygonByMercatorBounds(positions, holeIndices = null, options) {\n    const { size = 2, normalize = true, edgeTypes = false } = options || {};\n    holeIndices = holeIndices || [];\n    const newPositions = [];\n    const newHoleIndices = [];\n    let srcStartIndex = 0;\n    let targetIndex = 0;\n    for(let ringIndex = 0; ringIndex <= holeIndices.length; ringIndex++){\n        const srcEndIndex = holeIndices[ringIndex] || positions.length;\n        const targetStartIndex = targetIndex;\n        const splitIndex = findSplitIndex(positions, size, srcStartIndex, srcEndIndex);\n        for(let i = splitIndex; i < srcEndIndex; i++){\n            newPositions[targetIndex++] = positions[i];\n        }\n        for(let i = srcStartIndex; i < splitIndex; i++){\n            newPositions[targetIndex++] = positions[i];\n        }\n        wrapLongitudesForShortestPath(newPositions, size, targetStartIndex, targetIndex);\n        insertPoleVertices(newPositions, size, targetStartIndex, targetIndex, options === null || options === void 0 ? void 0 : options.maxLatitude);\n        srcStartIndex = srcEndIndex;\n        newHoleIndices[ringIndex] = targetIndex;\n    }\n    newHoleIndices.pop();\n    const parts = (0,_cut_by_grid__WEBPACK_IMPORTED_MODULE_0__.cutPolygonByGrid)(newPositions, newHoleIndices, {\n        size,\n        gridResolution: 360,\n        gridOffset: [\n            -180,\n            -180\n        ],\n        edgeTypes\n    });\n    if (normalize) {\n        for (const part of parts){\n            shiftLongitudesIntoRange(part.positions, size);\n        }\n    }\n    return parts;\n}\nfunction findSplitIndex(positions, size, startIndex, endIndex) {\n    let maxLat = -1;\n    let pointIndex = -1;\n    for(let i = startIndex + 1; i < endIndex; i += size){\n        const lat = Math.abs(positions[i]);\n        if (lat > maxLat) {\n            maxLat = lat;\n            pointIndex = i - 1;\n        }\n    }\n    return pointIndex;\n}\nfunction insertPoleVertices(positions, size, startIndex, endIndex, maxLatitude = DEFAULT_MAX_LATITUDE) {\n    const firstLng = positions[startIndex];\n    const lastLng = positions[endIndex - size];\n    if (Math.abs(firstLng - lastLng) > 180) {\n        const p = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getPointAtIndex)(positions, 0, size, startIndex);\n        p[0] += Math.round((lastLng - firstLng) / 360) * 360;\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(positions, p);\n        p[1] = Math.sign(p[1]) * maxLatitude;\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(positions, p);\n        p[0] = firstLng;\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.push)(positions, p);\n    }\n}\nfunction wrapLongitudesForShortestPath(positions, size, startIndex, endIndex) {\n    let prevLng = positions[0];\n    let lng;\n    for(let i = startIndex; i < endIndex; i += size){\n        lng = positions[i];\n        const delta = lng - prevLng;\n        if (delta > 180 || delta < -180) {\n            lng -= Math.round(delta / 360) * 360;\n        }\n        positions[i] = prevLng = lng;\n    }\n}\nfunction shiftLongitudesIntoRange(positions, size) {\n    let refLng;\n    const pointCount = positions.length / size;\n    for(let i = 0; i < pointCount; i++){\n        refLng = positions[i * size];\n        if ((refLng + 180) % 360 !== 0) {\n            break;\n        }\n    }\n    const delta = -Math.round(refLng / 360) * 360;\n    if (delta === 0) {\n        return;\n    }\n    for(let i = 0; i < pointCount; i++){\n        positions[i * size] += delta;\n    }\n} //# sourceMappingURL=cut-by-mercator-bounds.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/polygon/dist/esm/cut-by-mercator-bounds.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/polygon/dist/esm/earcut.js":
/*!**********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/earcut.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   earcut: () => (/* binding */ earcut)\n/* harmony export */ });\n/* harmony import */ var _polygon_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygon-utils */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js\");\n\nfunction earcut(positions, holeIndices, dim = 2, areas) {\n    const hasHoles = holeIndices && holeIndices.length;\n    const outerLen = hasHoles ? holeIndices[0] * dim : positions.length;\n    let outerNode = linkedList(positions, 0, outerLen, dim, true, areas && areas[0]);\n    const triangles = [];\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n    let invSize;\n    let maxX;\n    let maxY;\n    let minX;\n    let minY;\n    let x;\n    let y;\n    if (hasHoles) outerNode = eliminateHoles(positions, holeIndices, outerNode, dim, areas);\n    if (positions.length > 80 * dim) {\n        minX = maxX = positions[0];\n        minY = maxY = positions[1];\n        for(let i = dim; i < outerLen; i += dim){\n            x = positions[i];\n            y = positions[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n    return triangles;\n}\nfunction linkedList(data, start, end, dim, clockwise, area) {\n    let i;\n    let last;\n    if (area === undefined) {\n        area = (0,_polygon_utils__WEBPACK_IMPORTED_MODULE_0__.getPolygonSignedArea)(data, {\n            start,\n            end,\n            size: dim\n        });\n    }\n    if (clockwise === area < 0) {\n        for(i = start; i < end; i += dim)last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for(i = end - dim; i >= start; i -= dim)last = insertNode(i, data[i], data[i + 1], last);\n    }\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n    return last;\n}\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n    let p = start;\n    let again;\n    do {\n        again = false;\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n        } else {\n            p = p.next;\n        }\n    }while (again || p !== end);\n    return end;\n}\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n    let stop = ear;\n    let prev;\n    let next;\n    while(ear.prev !== ear.next){\n        prev = ear.prev;\n        next = ear.next;\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n            removeNode(ear);\n            ear = next.next;\n            stop = next.next;\n            continue;\n        }\n        ear = next;\n        if (ear === stop) {\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n            break;\n        }\n    }\n}\nfunction isEar(ear) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0) return false;\n    let p = ear.next.next;\n    while(p !== ear.prev){\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n    return true;\n}\nfunction isEarHashed(ear, minX, minY, invSize) {\n    const a = ear.prev;\n    const b = ear;\n    const c = ear.next;\n    if (area(a, b, c) >= 0) return false;\n    const minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x;\n    const minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y;\n    const maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x;\n    const maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y;\n    const minZ = zOrder(minTX, minTY, minX, minY, invSize);\n    const maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n    let p = ear.prevZ;\n    let n = ear.nextZ;\n    while(p && p.z >= minZ && n && n.z <= maxZ){\n        if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n        if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n    while(p && p.z >= minZ){\n        if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n    while(n && n.z <= maxZ){\n        if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n    return true;\n}\nfunction cureLocalIntersections(start, triangles, dim) {\n    let p = start;\n    do {\n        const a = p.prev;\n        const b = p.next.next;\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n            removeNode(p);\n            removeNode(p.next);\n            p = start = b;\n        }\n        p = p.next;\n    }while (p !== start);\n    return filterPoints(p);\n}\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    let a = start;\n    do {\n        let b = a.next.next;\n        while(b !== a.prev){\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                let c = splitPolygon(a, b);\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    }while (a !== start);\n}\nfunction eliminateHoles(data, holeIndices, outerNode, dim, areas) {\n    const queue = [];\n    let i;\n    let len;\n    let start;\n    let end;\n    let list;\n    for(i = 0, len = holeIndices.length; i < len; i++){\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false, areas && areas[i + 1]);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n    queue.sort(compareX);\n    for(i = 0; i < queue.length; i++){\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n    return outerNode;\n}\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        const b = splitPolygon(outerNode, hole);\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\nfunction findHoleBridge(hole, outerNode) {\n    let p = outerNode;\n    const hx = hole.x;\n    const hy = hole.y;\n    let qx = -Infinity;\n    let m;\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            const x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    }while (p !== outerNode);\n    if (!m) return null;\n    if (hx === qx) return m;\n    const stop = m;\n    const mx = m.x;\n    const my = m.y;\n    let tanMin = Infinity;\n    let tan;\n    p = m;\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n            tan = Math.abs(hy - p.y) / (hx - p.x);\n            if (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n        p = p.next;\n    }while (p !== stop);\n    return m;\n}\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\nfunction indexCurve(start, minX, minY, invSize) {\n    let p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    }while (p !== start);\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n}\nfunction sortLinked(list) {\n    let e;\n    let i;\n    let inSize = 1;\n    let numMerges;\n    let p;\n    let pSize;\n    let q;\n    let qSize;\n    let tail;\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n        while(p){\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for(i = 0; i < inSize; i++){\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n            while(pSize > 0 || qSize > 0 && q){\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n                if (tail) tail.nextZ = e;\n                else list = e;\n                e.prevZ = tail;\n                tail = e;\n            }\n            p = q;\n        }\n        tail.nextZ = null;\n        inSize *= 2;\n    }while (numMerges > 1);\n    return list;\n}\nfunction zOrder(x, y, minX, minY, invSize) {\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n    x = (x | x << 8) & 0x00ff00ff;\n    x = (x | x << 4) & 0x0f0f0f0f;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n    y = (y | y << 8) & 0x00ff00ff;\n    y = (y | y << 4) & 0x0f0f0f0f;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n    return x | y << 1;\n}\nfunction getLeftmost(start) {\n    let p = start;\n    let leftmost = start;\n    do {\n        if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n        p = p.next;\n    }while (p !== start);\n    return leftmost;\n}\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && (area(a.prev, a, b.prev) || area(a, b.prev, b)) || equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0);\n}\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\nfunction intersects(p1, q1, p2, q2) {\n    const o1 = sign(area(p1, q1, p2));\n    const o2 = sign(area(p1, q1, q2));\n    const o3 = sign(area(p2, q2, p1));\n    const o4 = sign(area(p2, q2, q1));\n    if (o1 !== o2 && o3 !== o4) return true;\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true;\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true;\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true;\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true;\n    return false;\n}\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\nfunction intersectsPolygon(a, b) {\n    let p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    }while (p !== a);\n    return false;\n}\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\nfunction middleInside(a, b) {\n    let p = a;\n    let inside = false;\n    const px = (a.x + b.x) / 2;\n    const py = (a.y + b.y) / 2;\n    do {\n        if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n        p = p.next;\n    }while (p !== a);\n    return inside;\n}\nfunction splitPolygon(a, b) {\n    const a2 = new Node(a.i, a.x, a.y);\n    const b2 = new Node(b.i, b.x, b.y);\n    const an = a.next;\n    const bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n}\nfunction insertNode(i, x, y, last) {\n    const p = new Node(i, x, y);\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\nfunction Node(i, x, y) {\n    this.i = i;\n    this.x = x;\n    this.y = y;\n    this.prev = null;\n    this.next = null;\n    this.z = null;\n    this.prevZ = null;\n    this.nextZ = null;\n    this.steiner = false;\n} //# sourceMappingURL=earcut.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/polygon/dist/esm/earcut.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/polygon/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Polygon: () => (/* reexport safe */ _polygon__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   WINDING: () => (/* reexport safe */ _polygon_utils__WEBPACK_IMPORTED_MODULE_1__.WINDING),\n/* harmony export */   _Polygon: () => (/* reexport safe */ _polygon__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   clipPolygon: () => (/* reexport safe */ _lineclip__WEBPACK_IMPORTED_MODULE_3__.clipPolygon),\n/* harmony export */   clipPolyline: () => (/* reexport safe */ _lineclip__WEBPACK_IMPORTED_MODULE_3__.clipPolyline),\n/* harmony export */   cutPolygonByGrid: () => (/* reexport safe */ _cut_by_grid__WEBPACK_IMPORTED_MODULE_4__.cutPolygonByGrid),\n/* harmony export */   cutPolygonByMercatorBounds: () => (/* reexport safe */ _cut_by_mercator_bounds__WEBPACK_IMPORTED_MODULE_5__.cutPolygonByMercatorBounds),\n/* harmony export */   cutPolylineByGrid: () => (/* reexport safe */ _cut_by_grid__WEBPACK_IMPORTED_MODULE_4__.cutPolylineByGrid),\n/* harmony export */   cutPolylineByMercatorBounds: () => (/* reexport safe */ _cut_by_mercator_bounds__WEBPACK_IMPORTED_MODULE_5__.cutPolylineByMercatorBounds),\n/* harmony export */   earcut: () => (/* reexport safe */ _earcut__WEBPACK_IMPORTED_MODULE_2__.earcut),\n/* harmony export */   forEachSegmentInPolygon: () => (/* reexport safe */ _polygon_utils__WEBPACK_IMPORTED_MODULE_1__.forEachSegmentInPolygon),\n/* harmony export */   getPolygonSignedArea: () => (/* reexport safe */ _polygon_utils__WEBPACK_IMPORTED_MODULE_1__.getPolygonSignedArea),\n/* harmony export */   getPolygonWindingDirection: () => (/* reexport safe */ _polygon_utils__WEBPACK_IMPORTED_MODULE_1__.getPolygonWindingDirection),\n/* harmony export */   modifyPolygonWindingDirection: () => (/* reexport safe */ _polygon_utils__WEBPACK_IMPORTED_MODULE_1__.modifyPolygonWindingDirection)\n/* harmony export */ });\n/* harmony import */ var _polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygon */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/polygon.js\");\n/* harmony import */ var _polygon_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./polygon-utils */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js\");\n/* harmony import */ var _earcut__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earcut */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/earcut.js\");\n/* harmony import */ var _lineclip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lineclip */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/lineclip.js\");\n/* harmony import */ var _cut_by_grid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cut-by-grid */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js\");\n/* harmony import */ var _cut_by_mercator_bounds__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cut-by-mercator-bounds */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/cut-by-mercator-bounds.js\");\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErQztBQUNxRztBQUNsSDtBQUNxQjtBQUNhO0FBQytCO0FBQ25ELENBQ2hELGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3BvbHlnb24vZGlzdC9lc20vaW5kZXguanM/NmM5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIFBvbHlnb24gfSBmcm9tICcuL3BvbHlnb24nO1xuZXhwb3J0IHsgZ2V0UG9seWdvblNpZ25lZEFyZWEsIGdldFBvbHlnb25XaW5kaW5nRGlyZWN0aW9uLCBmb3JFYWNoU2VnbWVudEluUG9seWdvbiwgbW9kaWZ5UG9seWdvbldpbmRpbmdEaXJlY3Rpb24sIFdJTkRJTkcgfSBmcm9tICcuL3BvbHlnb24tdXRpbHMnO1xuZXhwb3J0IHsgZWFyY3V0IH0gZnJvbSAnLi9lYXJjdXQnO1xuZXhwb3J0IHsgY2xpcFBvbHlnb24sIGNsaXBQb2x5bGluZSB9IGZyb20gJy4vbGluZWNsaXAnO1xuZXhwb3J0IHsgY3V0UG9seWdvbkJ5R3JpZCwgY3V0UG9seWxpbmVCeUdyaWQgfSBmcm9tICcuL2N1dC1ieS1ncmlkJztcbmV4cG9ydCB7IGN1dFBvbHlsaW5lQnlNZXJjYXRvckJvdW5kcywgY3V0UG9seWdvbkJ5TWVyY2F0b3JCb3VuZHMgfSBmcm9tICcuL2N1dC1ieS1tZXJjYXRvci1ib3VuZHMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBfUG9seWdvbiB9IGZyb20gJy4vcG9seWdvbic7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiZGVmYXVsdCIsIlBvbHlnb24iLCJnZXRQb2x5Z29uU2lnbmVkQXJlYSIsImdldFBvbHlnb25XaW5kaW5nRGlyZWN0aW9uIiwiZm9yRWFjaFNlZ21lbnRJblBvbHlnb24iLCJtb2RpZnlQb2x5Z29uV2luZGluZ0RpcmVjdGlvbiIsIldJTkRJTkciLCJlYXJjdXQiLCJjbGlwUG9seWdvbiIsImNsaXBQb2x5bGluZSIsImN1dFBvbHlnb25CeUdyaWQiLCJjdXRQb2x5bGluZUJ5R3JpZCIsImN1dFBvbHlsaW5lQnlNZXJjYXRvckJvdW5kcyIsImN1dFBvbHlnb25CeU1lcmNhdG9yQm91bmRzIiwiX1BvbHlnb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/polygon/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/polygon/dist/esm/lineclip.js":
/*!************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/lineclip.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bitCode: () => (/* binding */ bitCode),\n/* harmony export */   clipPolygon: () => (/* binding */ clipPolygon),\n/* harmony export */   clipPolyline: () => (/* binding */ clipPolyline),\n/* harmony export */   intersect: () => (/* binding */ intersect)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/utils.js\");\n\nfunction clipPolyline(positions, bbox, options) {\n    const { size = 2, startIndex = 0, endIndex = positions.length } = options || {};\n    const numPoints = (endIndex - startIndex) / size;\n    const result = [];\n    let part = [];\n    let a;\n    let b;\n    let codeA = -1;\n    let codeB;\n    let lastCode;\n    for(let i = 1; i < numPoints; i++){\n        a = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, i - 1, size, startIndex, a);\n        b = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, i, size, startIndex, b);\n        if (codeA < 0) {\n            codeA = bitCode(a, bbox);\n        }\n        codeB = lastCode = bitCode(b, bbox);\n        while(true){\n            if (!(codeA | codeB)) {\n                (0,_utils__WEBPACK_IMPORTED_MODULE_0__.push)(part, a);\n                if (codeB !== lastCode) {\n                    (0,_utils__WEBPACK_IMPORTED_MODULE_0__.push)(part, b);\n                    if (i < numPoints - 1) {\n                        result.push(part);\n                        part = [];\n                    }\n                } else if (i === numPoints - 1) {\n                    (0,_utils__WEBPACK_IMPORTED_MODULE_0__.push)(part, b);\n                }\n                break;\n            } else if (codeA & codeB) {\n                break;\n            } else if (codeA) {\n                intersect(a, b, codeA, bbox, a);\n                codeA = bitCode(a, bbox);\n            } else {\n                intersect(a, b, codeB, bbox, b);\n                codeB = bitCode(b, bbox);\n            }\n        }\n        codeA = lastCode;\n    }\n    if (part.length) result.push(part);\n    return result;\n}\nfunction clipPolygon(positions, bbox, options) {\n    const { size = 2, endIndex = positions.length } = options || {};\n    let { startIndex = 0 } = options || {};\n    let numPoints = (endIndex - startIndex) / size;\n    let result;\n    let p;\n    let prev;\n    let inside;\n    let prevInside;\n    for(let edge = 1; edge <= 8; edge *= 2){\n        result = [];\n        prev = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, numPoints - 1, size, startIndex, prev);\n        prevInside = !(bitCode(prev, bbox) & edge);\n        for(let i = 0; i < numPoints; i++){\n            p = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getPointAtIndex)(positions, i, size, startIndex, p);\n            inside = !(bitCode(p, bbox) & edge);\n            if (inside !== prevInside) (0,_utils__WEBPACK_IMPORTED_MODULE_0__.push)(result, intersect(prev, p, edge, bbox));\n            if (inside) (0,_utils__WEBPACK_IMPORTED_MODULE_0__.push)(result, p);\n            (0,_utils__WEBPACK_IMPORTED_MODULE_0__.copy)(prev, p);\n            prevInside = inside;\n        }\n        positions = result;\n        startIndex = 0;\n        numPoints = result.length / size;\n        if (!numPoints) break;\n    }\n    return result;\n}\nfunction intersect(a, b, edge, bbox, out = []) {\n    let t;\n    let snap;\n    if (edge & 8) {\n        t = (bbox[3] - a[1]) / (b[1] - a[1]);\n        snap = 3;\n    } else if (edge & 4) {\n        t = (bbox[1] - a[1]) / (b[1] - a[1]);\n        snap = 1;\n    } else if (edge & 2) {\n        t = (bbox[2] - a[0]) / (b[0] - a[0]);\n        snap = 2;\n    } else if (edge & 1) {\n        t = (bbox[0] - a[0]) / (b[0] - a[0]);\n        snap = 0;\n    } else {\n        return null;\n    }\n    for(let i = 0; i < a.length; i++){\n        out[i] = (snap & 1) === i ? bbox[snap] : t * (b[i] - a[i]) + a[i];\n    }\n    return out;\n}\nfunction bitCode(p, bbox) {\n    let code = 0;\n    if (p[0] < bbox[0]) code |= 1;\n    else if (p[0] > bbox[2]) code |= 2;\n    if (p[1] < bbox[1]) code |= 4;\n    else if (p[1] > bbox[3]) code |= 8;\n    return code;\n} //# sourceMappingURL=lineclip.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/polygon/dist/esm/lineclip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WINDING: () => (/* binding */ WINDING),\n/* harmony export */   forEachSegmentInPolygon: () => (/* binding */ forEachSegmentInPolygon),\n/* harmony export */   forEachSegmentInPolygonPoints: () => (/* binding */ forEachSegmentInPolygonPoints),\n/* harmony export */   getPolygonSignedArea: () => (/* binding */ getPolygonSignedArea),\n/* harmony export */   getPolygonSignedAreaPoints: () => (/* binding */ getPolygonSignedAreaPoints),\n/* harmony export */   getPolygonWindingDirection: () => (/* binding */ getPolygonWindingDirection),\n/* harmony export */   getPolygonWindingDirectionPoints: () => (/* binding */ getPolygonWindingDirectionPoints),\n/* harmony export */   modifyPolygonWindingDirection: () => (/* binding */ modifyPolygonWindingDirection),\n/* harmony export */   modifyPolygonWindingDirectionPoints: () => (/* binding */ modifyPolygonWindingDirectionPoints)\n/* harmony export */ });\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n\nconst WINDING = {\n    CLOCKWISE: 1,\n    COUNTER_CLOCKWISE: -1\n};\nfunction modifyPolygonWindingDirection(points, direction, options = {}) {\n    const windingDirection = getPolygonWindingDirection(points, options);\n    if (windingDirection !== direction) {\n        reversePolygon(points, options);\n        return true;\n    }\n    return false;\n}\nfunction getPolygonWindingDirection(points, options = {}) {\n    return Math.sign(getPolygonSignedArea(points, options));\n}\nfunction getPolygonSignedArea(points, options = {}) {\n    const { start = 0, end = points.length } = options;\n    const dim = options.size || 2;\n    let area = 0;\n    for(let i = start, j = end - dim; i < end; i += dim){\n        area += (points[i] - points[j]) * (points[i + 1] + points[j + 1]);\n        j = i;\n    }\n    return area / 2;\n}\nfunction forEachSegmentInPolygon(points, visitor, options = {}) {\n    const { start = 0, end = points.length, size = 2, isClosed } = options;\n    const numPoints = (end - start) / size;\n    for(let i = 0; i < numPoints - 1; ++i){\n        visitor(points[start + i * size], points[start + i * size + 1], points[start + (i + 1) * size], points[start + (i + 1) * size + 1], i, i + 1);\n    }\n    const endPointIndex = start + (numPoints - 1) * size;\n    const isClosedEx = isClosed || (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_0__.equals)(points[start], points[endPointIndex]) && (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_0__.equals)(points[start + 1], points[endPointIndex + 1]);\n    if (!isClosedEx) {\n        visitor(points[endPointIndex], points[endPointIndex + 1], points[start], points[start + 1], numPoints - 1, 0);\n    }\n}\nfunction reversePolygon(points, options) {\n    const { start = 0, end = points.length, size = 2 } = options;\n    const numPoints = (end - start) / size;\n    const numSwaps = Math.floor(numPoints / 2);\n    for(let i = 0; i < numSwaps; ++i){\n        const b1 = start + i * size;\n        const b2 = start + (numPoints - 1 - i) * size;\n        for(let j = 0; j < size; ++j){\n            const tmp = points[b1 + j];\n            points[b1 + j] = points[b2 + j];\n            points[b2 + j] = tmp;\n        }\n    }\n}\nfunction modifyPolygonWindingDirectionPoints(points, direction, options = {}) {\n    const currentDirection = getPolygonWindingDirectionPoints(points, options);\n    if (currentDirection !== direction) {\n        points.reverse();\n        return true;\n    }\n    return false;\n}\nfunction getPolygonWindingDirectionPoints(points, options = {}) {\n    return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\nfunction getPolygonSignedAreaPoints(points, options = {}) {\n    const { start = 0, end = points.length } = options;\n    let area = 0;\n    for(let i = start, j = end - 1; i < end; ++i){\n        area += (points[i][0] - points[j][0]) * (points[i][1] + points[j][1]);\n        j = i;\n    }\n    return area / 2;\n}\nfunction forEachSegmentInPolygonPoints(points, visitor, options = {}) {\n    const { start = 0, end = points.length, isClosed } = options;\n    for(let i = start; i < end - 1; ++i){\n        visitor(points[i], points[i + 1], i, i + 1);\n    }\n    const isClosedEx = isClosed || (0,_math_gl_core__WEBPACK_IMPORTED_MODULE_0__.equals)(points[end - 1], points[0]);\n    if (!isClosedEx) {\n        visitor(points[end - 1], points[0], end - 1, 0);\n    }\n} //# sourceMappingURL=polygon-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/polygon/dist/esm/polygon.js":
/*!***********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/polygon.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Polygon)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @math.gl/core */ \"(ssr)/./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n/* harmony import */ var _polygon_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./polygon-utils */ \"(ssr)/./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js\");\n\n\n\nclass Polygon {\n    constructor(points, options = {}){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"points\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"isFlatArray\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"options\", void 0);\n        this.points = points;\n        this.isFlatArray = !(0,_math_gl_core__WEBPACK_IMPORTED_MODULE_2__.isArray)(points[0]);\n        this.options = {\n            start: options.start || 0,\n            end: options.end || points.length,\n            size: options.size || 2,\n            isClosed: options.isClosed\n        };\n        Object.freeze(this);\n    }\n    getSignedArea() {\n        if (this.isFlatArray) return (0,_polygon_utils__WEBPACK_IMPORTED_MODULE_1__.getPolygonSignedArea)(this.points, this.options);\n        return (0,_polygon_utils__WEBPACK_IMPORTED_MODULE_1__.getPolygonSignedAreaPoints)(this.points, this.options);\n    }\n    getArea() {\n        return Math.abs(this.getSignedArea());\n    }\n    getWindingDirection() {\n        return Math.sign(this.getSignedArea());\n    }\n    forEachSegment(visitor) {\n        if (this.isFlatArray) {\n            (0,_polygon_utils__WEBPACK_IMPORTED_MODULE_1__.forEachSegmentInPolygon)(this.points, (x1, y1, x2, y2, i1, i2)=>{\n                visitor([\n                    x1,\n                    y1\n                ], [\n                    x2,\n                    y2\n                ], i1, i2);\n            }, this.options);\n        } else {\n            (0,_polygon_utils__WEBPACK_IMPORTED_MODULE_1__.forEachSegmentInPolygonPoints)(this.points, visitor, this.options);\n        }\n    }\n    modifyWindingDirection(direction) {\n        if (this.isFlatArray) {\n            return (0,_polygon_utils__WEBPACK_IMPORTED_MODULE_1__.modifyPolygonWindingDirection)(this.points, direction, this.options);\n        }\n        return (0,_polygon_utils__WEBPACK_IMPORTED_MODULE_1__.modifyPolygonWindingDirectionPoints)(this.points, direction, this.options);\n    }\n} //# sourceMappingURL=polygon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS9wb2x5Z29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0U7QUFDaEM7QUFDdUs7QUFDaE0sTUFBTVE7SUFDbkJDLFlBQVlDLE1BQU0sRUFBRUMsVUFBVSxDQUFDLENBQUMsQ0FBRTtRQUNoQ1gscUZBQWVBLENBQUMsSUFBSSxFQUFFLFVBQVUsS0FBSztRQUVyQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLGVBQWUsS0FBSztRQUUxQ0EscUZBQWVBLENBQUMsSUFBSSxFQUFFLFdBQVcsS0FBSztRQUV0QyxJQUFJLENBQUNVLE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNFLFdBQVcsR0FBRyxDQUFDWCxzREFBT0EsQ0FBQ1MsTUFBTSxDQUFDLEVBQUU7UUFDckMsSUFBSSxDQUFDQyxPQUFPLEdBQUc7WUFDYkUsT0FBT0YsUUFBUUUsS0FBSyxJQUFJO1lBQ3hCQyxLQUFLSCxRQUFRRyxHQUFHLElBQUlKLE9BQU9LLE1BQU07WUFDakNDLE1BQU1MLFFBQVFLLElBQUksSUFBSTtZQUN0QkMsVUFBVU4sUUFBUU0sUUFBUTtRQUM1QjtRQUNBQyxPQUFPQyxNQUFNLENBQUMsSUFBSTtJQUNwQjtJQUVBQyxnQkFBZ0I7UUFDZCxJQUFJLElBQUksQ0FBQ1IsV0FBVyxFQUFFLE9BQU9WLG9FQUFvQkEsQ0FBQyxJQUFJLENBQUNRLE1BQU0sRUFBRSxJQUFJLENBQUNDLE9BQU87UUFDM0UsT0FBT04sMEVBQTBCQSxDQUFDLElBQUksQ0FBQ0ssTUFBTSxFQUFFLElBQUksQ0FBQ0MsT0FBTztJQUM3RDtJQUVBVSxVQUFVO1FBQ1IsT0FBT0MsS0FBS0MsR0FBRyxDQUFDLElBQUksQ0FBQ0gsYUFBYTtJQUNwQztJQUVBSSxzQkFBc0I7UUFDcEIsT0FBT0YsS0FBS0csSUFBSSxDQUFDLElBQUksQ0FBQ0wsYUFBYTtJQUNyQztJQUVBTSxlQUFlQyxPQUFPLEVBQUU7UUFDdEIsSUFBSSxJQUFJLENBQUNmLFdBQVcsRUFBRTtZQUNwQlQsdUVBQXVCQSxDQUFDLElBQUksQ0FBQ08sTUFBTSxFQUFFLENBQUNrQixJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQyxJQUFJQztnQkFDeEROLFFBQVE7b0JBQUNDO29CQUFJQztpQkFBRyxFQUFFO29CQUFDQztvQkFBSUM7aUJBQUcsRUFBRUMsSUFBSUM7WUFDbEMsR0FBRyxJQUFJLENBQUN0QixPQUFPO1FBQ2pCLE9BQU87WUFDTEwsNkVBQTZCQSxDQUFDLElBQUksQ0FBQ0ksTUFBTSxFQUFFaUIsU0FBUyxJQUFJLENBQUNoQixPQUFPO1FBQ2xFO0lBQ0Y7SUFFQXVCLHVCQUF1QkMsU0FBUyxFQUFFO1FBQ2hDLElBQUksSUFBSSxDQUFDdkIsV0FBVyxFQUFFO1lBQ3BCLE9BQU9SLDZFQUE2QkEsQ0FBQyxJQUFJLENBQUNNLE1BQU0sRUFBRXlCLFdBQVcsSUFBSSxDQUFDeEIsT0FBTztRQUMzRTtRQUVBLE9BQU9KLG1GQUFtQ0EsQ0FBQyxJQUFJLENBQUNHLE1BQU0sRUFBRXlCLFdBQVcsSUFBSSxDQUFDeEIsT0FBTztJQUNqRjtBQUVGLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS9wb2x5Z29uLmpzP2Y5ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCB7IGlzQXJyYXkgfSBmcm9tICdAbWF0aC5nbC9jb3JlJztcbmltcG9ydCB7IGdldFBvbHlnb25TaWduZWRBcmVhLCBmb3JFYWNoU2VnbWVudEluUG9seWdvbiwgbW9kaWZ5UG9seWdvbldpbmRpbmdEaXJlY3Rpb24sIGdldFBvbHlnb25TaWduZWRBcmVhUG9pbnRzLCBmb3JFYWNoU2VnbWVudEluUG9seWdvblBvaW50cywgbW9kaWZ5UG9seWdvbldpbmRpbmdEaXJlY3Rpb25Qb2ludHMgfSBmcm9tICcuL3BvbHlnb24tdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9seWdvbiB7XG4gIGNvbnN0cnVjdG9yKHBvaW50cywgb3B0aW9ucyA9IHt9KSB7XG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwicG9pbnRzXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpc0ZsYXRBcnJheVwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KHRoaXMsIFwib3B0aW9uc1wiLCB2b2lkIDApO1xuXG4gICAgdGhpcy5wb2ludHMgPSBwb2ludHM7XG4gICAgdGhpcy5pc0ZsYXRBcnJheSA9ICFpc0FycmF5KHBvaW50c1swXSk7XG4gICAgdGhpcy5vcHRpb25zID0ge1xuICAgICAgc3RhcnQ6IG9wdGlvbnMuc3RhcnQgfHwgMCxcbiAgICAgIGVuZDogb3B0aW9ucy5lbmQgfHwgcG9pbnRzLmxlbmd0aCxcbiAgICAgIHNpemU6IG9wdGlvbnMuc2l6ZSB8fCAyLFxuICAgICAgaXNDbG9zZWQ6IG9wdGlvbnMuaXNDbG9zZWRcbiAgICB9O1xuICAgIE9iamVjdC5mcmVlemUodGhpcyk7XG4gIH1cblxuICBnZXRTaWduZWRBcmVhKCkge1xuICAgIGlmICh0aGlzLmlzRmxhdEFycmF5KSByZXR1cm4gZ2V0UG9seWdvblNpZ25lZEFyZWEodGhpcy5wb2ludHMsIHRoaXMub3B0aW9ucyk7XG4gICAgcmV0dXJuIGdldFBvbHlnb25TaWduZWRBcmVhUG9pbnRzKHRoaXMucG9pbnRzLCB0aGlzLm9wdGlvbnMpO1xuICB9XG5cbiAgZ2V0QXJlYSgpIHtcbiAgICByZXR1cm4gTWF0aC5hYnModGhpcy5nZXRTaWduZWRBcmVhKCkpO1xuICB9XG5cbiAgZ2V0V2luZGluZ0RpcmVjdGlvbigpIHtcbiAgICByZXR1cm4gTWF0aC5zaWduKHRoaXMuZ2V0U2lnbmVkQXJlYSgpKTtcbiAgfVxuXG4gIGZvckVhY2hTZWdtZW50KHZpc2l0b3IpIHtcbiAgICBpZiAodGhpcy5pc0ZsYXRBcnJheSkge1xuICAgICAgZm9yRWFjaFNlZ21lbnRJblBvbHlnb24odGhpcy5wb2ludHMsICh4MSwgeTEsIHgyLCB5MiwgaTEsIGkyKSA9PiB7XG4gICAgICAgIHZpc2l0b3IoW3gxLCB5MV0sIFt4MiwgeTJdLCBpMSwgaTIpO1xuICAgICAgfSwgdGhpcy5vcHRpb25zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yRWFjaFNlZ21lbnRJblBvbHlnb25Qb2ludHModGhpcy5wb2ludHMsIHZpc2l0b3IsIHRoaXMub3B0aW9ucyk7XG4gICAgfVxuICB9XG5cbiAgbW9kaWZ5V2luZGluZ0RpcmVjdGlvbihkaXJlY3Rpb24pIHtcbiAgICBpZiAodGhpcy5pc0ZsYXRBcnJheSkge1xuICAgICAgcmV0dXJuIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uKHRoaXMucG9pbnRzLCBkaXJlY3Rpb24sIHRoaXMub3B0aW9ucyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uUG9pbnRzKHRoaXMucG9pbnRzLCBkaXJlY3Rpb24sIHRoaXMub3B0aW9ucyk7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9seWdvbi5qcy5tYXAiXSwibmFtZXMiOlsiX2RlZmluZVByb3BlcnR5IiwiaXNBcnJheSIsImdldFBvbHlnb25TaWduZWRBcmVhIiwiZm9yRWFjaFNlZ21lbnRJblBvbHlnb24iLCJtb2RpZnlQb2x5Z29uV2luZGluZ0RpcmVjdGlvbiIsImdldFBvbHlnb25TaWduZWRBcmVhUG9pbnRzIiwiZm9yRWFjaFNlZ21lbnRJblBvbHlnb25Qb2ludHMiLCJtb2RpZnlQb2x5Z29uV2luZGluZ0RpcmVjdGlvblBvaW50cyIsIlBvbHlnb24iLCJjb25zdHJ1Y3RvciIsInBvaW50cyIsIm9wdGlvbnMiLCJpc0ZsYXRBcnJheSIsInN0YXJ0IiwiZW5kIiwibGVuZ3RoIiwic2l6ZSIsImlzQ2xvc2VkIiwiT2JqZWN0IiwiZnJlZXplIiwiZ2V0U2lnbmVkQXJlYSIsImdldEFyZWEiLCJNYXRoIiwiYWJzIiwiZ2V0V2luZGluZ0RpcmVjdGlvbiIsInNpZ24iLCJmb3JFYWNoU2VnbWVudCIsInZpc2l0b3IiLCJ4MSIsInkxIiwieDIiLCJ5MiIsImkxIiwiaTIiLCJtb2RpZnlXaW5kaW5nRGlyZWN0aW9uIiwiZGlyZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/polygon/dist/esm/polygon.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/polygon/dist/esm/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   copy: () => (/* binding */ copy),\n/* harmony export */   getPointAtIndex: () => (/* binding */ getPointAtIndex),\n/* harmony export */   push: () => (/* binding */ push)\n/* harmony export */ });\nfunction push(target, source) {\n    const size = source.length;\n    const startIndex = target.length;\n    if (startIndex > 0) {\n        let isDuplicate = true;\n        for(let i = 0; i < size; i++){\n            if (target[startIndex - size + i] !== source[i]) {\n                isDuplicate = false;\n                break;\n            }\n        }\n        if (isDuplicate) {\n            return false;\n        }\n    }\n    for(let i = 0; i < size; i++){\n        target[startIndex + i] = source[i];\n    }\n    return true;\n}\nfunction copy(target, source) {\n    const size = source.length;\n    for(let i = 0; i < size; i++){\n        target[i] = source[i];\n    }\n}\nfunction getPointAtIndex(positions, index, size, offset, out = []) {\n    const startI = offset + index * size;\n    for(let i = 0; i < size; i++){\n        out[i] = positions[startI + i];\n    }\n    return out;\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxTQUFTQSxLQUFLQyxNQUFNLEVBQUVDLE1BQU07SUFDakMsTUFBTUMsT0FBT0QsT0FBT0UsTUFBTTtJQUMxQixNQUFNQyxhQUFhSixPQUFPRyxNQUFNO0lBRWhDLElBQUlDLGFBQWEsR0FBRztRQUNsQixJQUFJQyxjQUFjO1FBRWxCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSixNQUFNSSxJQUFLO1lBQzdCLElBQUlOLE1BQU0sQ0FBQ0ksYUFBYUYsT0FBT0ksRUFBRSxLQUFLTCxNQUFNLENBQUNLLEVBQUUsRUFBRTtnQkFDL0NELGNBQWM7Z0JBQ2Q7WUFDRjtRQUNGO1FBRUEsSUFBSUEsYUFBYTtZQUNmLE9BQU87UUFDVDtJQUNGO0lBRUEsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlKLE1BQU1JLElBQUs7UUFDN0JOLE1BQU0sQ0FBQ0ksYUFBYUUsRUFBRSxHQUFHTCxNQUFNLENBQUNLLEVBQUU7SUFDcEM7SUFFQSxPQUFPO0FBQ1Q7QUFDTyxTQUFTQyxLQUFLUCxNQUFNLEVBQUVDLE1BQU07SUFDakMsTUFBTUMsT0FBT0QsT0FBT0UsTUFBTTtJQUUxQixJQUFLLElBQUlHLElBQUksR0FBR0EsSUFBSUosTUFBTUksSUFBSztRQUM3Qk4sTUFBTSxDQUFDTSxFQUFFLEdBQUdMLE1BQU0sQ0FBQ0ssRUFBRTtJQUN2QjtBQUNGO0FBQ08sU0FBU0UsZ0JBQWdCQyxTQUFTLEVBQUVDLEtBQUssRUFBRVIsSUFBSSxFQUFFUyxNQUFNLEVBQUVDLE1BQU0sRUFBRTtJQUN0RSxNQUFNQyxTQUFTRixTQUFTRCxRQUFRUjtJQUVoQyxJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUosTUFBTUksSUFBSztRQUM3Qk0sR0FBRyxDQUFDTixFQUFFLEdBQUdHLFNBQVMsQ0FBQ0ksU0FBU1AsRUFBRTtJQUNoQztJQUVBLE9BQU9NO0FBQ1QsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbWF0aC5nbC9wb2x5Z29uL2Rpc3QvZXNtL3V0aWxzLmpzPzViZTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHB1c2godGFyZ2V0LCBzb3VyY2UpIHtcbiAgY29uc3Qgc2l6ZSA9IHNvdXJjZS5sZW5ndGg7XG4gIGNvbnN0IHN0YXJ0SW5kZXggPSB0YXJnZXQubGVuZ3RoO1xuXG4gIGlmIChzdGFydEluZGV4ID4gMCkge1xuICAgIGxldCBpc0R1cGxpY2F0ZSA9IHRydWU7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgaWYgKHRhcmdldFtzdGFydEluZGV4IC0gc2l6ZSArIGldICE9PSBzb3VyY2VbaV0pIHtcbiAgICAgICAgaXNEdXBsaWNhdGUgPSBmYWxzZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzRHVwbGljYXRlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpKyspIHtcbiAgICB0YXJnZXRbc3RhcnRJbmRleCArIGldID0gc291cmNlW2ldO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29weSh0YXJnZXQsIHNvdXJjZSkge1xuICBjb25zdCBzaXplID0gc291cmNlLmxlbmd0aDtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgIHRhcmdldFtpXSA9IHNvdXJjZVtpXTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFBvaW50QXRJbmRleChwb3NpdGlvbnMsIGluZGV4LCBzaXplLCBvZmZzZXQsIG91dCA9IFtdKSB7XG4gIGNvbnN0IHN0YXJ0SSA9IG9mZnNldCArIGluZGV4ICogc2l6ZTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgIG91dFtpXSA9IHBvc2l0aW9uc1tzdGFydEkgKyBpXTtcbiAgfVxuXG4gIHJldHVybiBvdXQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsicHVzaCIsInRhcmdldCIsInNvdXJjZSIsInNpemUiLCJsZW5ndGgiLCJzdGFydEluZGV4IiwiaXNEdXBsaWNhdGUiLCJpIiwiY29weSIsImdldFBvaW50QXRJbmRleCIsInBvc2l0aW9ucyIsImluZGV4Iiwib2Zmc2V0Iiwib3V0Iiwic3RhcnRJIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/polygon/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/assert.js":
/*!***************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/assert.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ assert)\n/* harmony export */ });\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || \"@math.gl/web-mercator: assertion failed.\");\n    }\n} //# sourceMappingURL=assert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvd2ViLW1lcmNhdG9yL2Rpc3QvZXNtL2Fzc2VydC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsU0FBU0EsT0FBT0MsU0FBUyxFQUFFQyxPQUFPO0lBQy9DLElBQUksQ0FBQ0QsV0FBVztRQUNkLE1BQU0sSUFBSUUsTUFBTUQsV0FBVztJQUM3QjtBQUNGLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvd2ViLW1lcmNhdG9yL2Rpc3QvZXNtL2Fzc2VydC5qcz9hOWU5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFzc2VydChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSB8fCAnQG1hdGguZ2wvd2ViLW1lcmNhdG9yOiBhc3NlcnRpb24gZmFpbGVkLicpO1xuICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3NlcnQuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsImNvbmRpdGlvbiIsIm1lc3NhZ2UiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/fit-bounds.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/fit-bounds.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ fitBounds)\n/* harmony export */ });\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/assert.js\");\n/* harmony import */ var _math_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js\");\n/* harmony import */ var _web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web-mercator-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js\");\n\n\n\nfunction fitBounds(options) {\n    const { width, height, bounds, minExtent = 0, maxZoom = 24, offset = [\n        0,\n        0\n    ] } = options;\n    const [[west, south], [east, north]] = bounds;\n    const padding = getPaddingObject(options.padding);\n    const nw = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.lngLatToWorld)([\n        west,\n        (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.clamp)(north, -_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.MAX_LATITUDE, _web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.MAX_LATITUDE)\n    ]);\n    const se = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.lngLatToWorld)([\n        east,\n        (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.clamp)(south, -_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.MAX_LATITUDE, _web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.MAX_LATITUDE)\n    ]);\n    const size = [\n        Math.max(Math.abs(se[0] - nw[0]), minExtent),\n        Math.max(Math.abs(se[1] - nw[1]), minExtent)\n    ];\n    const targetSize = [\n        width - padding.left - padding.right - Math.abs(offset[0]) * 2,\n        height - padding.top - padding.bottom - Math.abs(offset[1]) * 2\n    ];\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(targetSize[0] > 0 && targetSize[1] > 0);\n    const scaleX = targetSize[0] / size[0];\n    const scaleY = targetSize[1] / size[1];\n    const offsetX = (padding.right - padding.left) / 2 / scaleX;\n    const offsetY = (padding.top - padding.bottom) / 2 / scaleY;\n    const center = [\n        (se[0] + nw[0]) / 2 + offsetX,\n        (se[1] + nw[1]) / 2 + offsetY\n    ];\n    const centerLngLat = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.worldToLngLat)(center);\n    const zoom = Math.min(maxZoom, (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.log2)(Math.abs(Math.min(scaleX, scaleY))));\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Number.isFinite(zoom));\n    return {\n        longitude: centerLngLat[0],\n        latitude: centerLngLat[1],\n        zoom\n    };\n}\nfunction getPaddingObject(padding = 0) {\n    if (typeof padding === \"number\") {\n        return {\n            top: padding,\n            bottom: padding,\n            left: padding,\n            right: padding\n        };\n    }\n    (0,_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Number.isFinite(padding.top) && Number.isFinite(padding.bottom) && Number.isFinite(padding.left) && Number.isFinite(padding.right));\n    return padding;\n} //# sourceMappingURL=fit-bounds.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvd2ViLW1lcmNhdG9yL2Rpc3QvZXNtL2ZpdC1ib3VuZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4QjtBQUNhO0FBQ3VDO0FBQ25FLFNBQVNNLFVBQVVDLE9BQU87SUFDdkMsTUFBTSxFQUNKQyxLQUFLLEVBQ0xDLE1BQU0sRUFDTkMsTUFBTSxFQUNOQyxZQUFZLENBQUMsRUFDYkMsVUFBVSxFQUFFLEVBQ1pDLFNBQVM7UUFBQztRQUFHO0tBQUUsRUFDaEIsR0FBR047SUFDSixNQUFNLENBQUMsQ0FBQ08sTUFBTUMsTUFBTSxFQUFFLENBQUNDLE1BQU1DLE1BQU0sQ0FBQyxHQUFHUDtJQUN2QyxNQUFNUSxVQUFVQyxpQkFBaUJaLFFBQVFXLE9BQU87SUFDaEQsTUFBTUUsS0FBS2hCLGtFQUFhQSxDQUFDO1FBQUNVO1FBQU1aLGtEQUFLQSxDQUFDZSxPQUFPLENBQUNkLDZEQUFZQSxFQUFFQSw2REFBWUE7S0FBRTtJQUMxRSxNQUFNa0IsS0FBS2pCLGtFQUFhQSxDQUFDO1FBQUNZO1FBQU1kLGtEQUFLQSxDQUFDYSxPQUFPLENBQUNaLDZEQUFZQSxFQUFFQSw2REFBWUE7S0FBRTtJQUMxRSxNQUFNbUIsT0FBTztRQUFDQyxLQUFLQyxHQUFHLENBQUNELEtBQUtFLEdBQUcsQ0FBQ0osRUFBRSxDQUFDLEVBQUUsR0FBR0QsRUFBRSxDQUFDLEVBQUUsR0FBR1Q7UUFBWVksS0FBS0MsR0FBRyxDQUFDRCxLQUFLRSxHQUFHLENBQUNKLEVBQUUsQ0FBQyxFQUFFLEdBQUdELEVBQUUsQ0FBQyxFQUFFLEdBQUdUO0tBQVc7SUFDekcsTUFBTWUsYUFBYTtRQUFDbEIsUUFBUVUsUUFBUVMsSUFBSSxHQUFHVCxRQUFRVSxLQUFLLEdBQUdMLEtBQUtFLEdBQUcsQ0FBQ1osTUFBTSxDQUFDLEVBQUUsSUFBSTtRQUFHSixTQUFTUyxRQUFRVyxHQUFHLEdBQUdYLFFBQVFZLE1BQU0sR0FBR1AsS0FBS0UsR0FBRyxDQUFDWixNQUFNLENBQUMsRUFBRSxJQUFJO0tBQUU7SUFDcEpiLG1EQUFNQSxDQUFDMEIsVUFBVSxDQUFDLEVBQUUsR0FBRyxLQUFLQSxVQUFVLENBQUMsRUFBRSxHQUFHO0lBQzVDLE1BQU1LLFNBQVNMLFVBQVUsQ0FBQyxFQUFFLEdBQUdKLElBQUksQ0FBQyxFQUFFO0lBQ3RDLE1BQU1VLFNBQVNOLFVBQVUsQ0FBQyxFQUFFLEdBQUdKLElBQUksQ0FBQyxFQUFFO0lBQ3RDLE1BQU1XLFVBQVUsQ0FBQ2YsUUFBUVUsS0FBSyxHQUFHVixRQUFRUyxJQUFJLElBQUksSUFBSUk7SUFDckQsTUFBTUcsVUFBVSxDQUFDaEIsUUFBUVcsR0FBRyxHQUFHWCxRQUFRWSxNQUFNLElBQUksSUFBSUU7SUFDckQsTUFBTUcsU0FBUztRQUFFZCxDQUFBQSxFQUFFLENBQUMsRUFBRSxHQUFHRCxFQUFFLENBQUMsRUFBRSxJQUFJLElBQUlhO1FBQVVaLENBQUFBLEVBQUUsQ0FBQyxFQUFFLEdBQUdELEVBQUUsQ0FBQyxFQUFFLElBQUksSUFBSWM7S0FBUTtJQUM3RSxNQUFNRSxlQUFlL0Isa0VBQWFBLENBQUM4QjtJQUNuQyxNQUFNRSxPQUFPZCxLQUFLZSxHQUFHLENBQUMxQixTQUFTWCxpREFBSUEsQ0FBQ3NCLEtBQUtFLEdBQUcsQ0FBQ0YsS0FBS2UsR0FBRyxDQUFDUCxRQUFRQztJQUM5RGhDLG1EQUFNQSxDQUFDdUMsT0FBT0MsUUFBUSxDQUFDSDtJQUN2QixPQUFPO1FBQ0xJLFdBQVdMLFlBQVksQ0FBQyxFQUFFO1FBQzFCTSxVQUFVTixZQUFZLENBQUMsRUFBRTtRQUN6QkM7SUFDRjtBQUNGO0FBRUEsU0FBU2xCLGlCQUFpQkQsVUFBVSxDQUFDO0lBQ25DLElBQUksT0FBT0EsWUFBWSxVQUFVO1FBQy9CLE9BQU87WUFDTFcsS0FBS1g7WUFDTFksUUFBUVo7WUFDUlMsTUFBTVQ7WUFDTlUsT0FBT1Y7UUFDVDtJQUNGO0lBRUFsQixtREFBTUEsQ0FBQ3VDLE9BQU9DLFFBQVEsQ0FBQ3RCLFFBQVFXLEdBQUcsS0FBS1UsT0FBT0MsUUFBUSxDQUFDdEIsUUFBUVksTUFBTSxLQUFLUyxPQUFPQyxRQUFRLENBQUN0QixRQUFRUyxJQUFJLEtBQUtZLE9BQU9DLFFBQVEsQ0FBQ3RCLFFBQVFVLEtBQUs7SUFDeEksT0FBT1Y7QUFDVCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3dlYi1tZXJjYXRvci9kaXN0L2VzbS9maXQtYm91bmRzLmpzP2QxZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCBmcm9tICcuL2Fzc2VydCc7XG5pbXBvcnQgeyBsb2cyLCBjbGFtcCB9IGZyb20gJy4vbWF0aC11dGlscyc7XG5pbXBvcnQgeyBNQVhfTEFUSVRVREUsIGxuZ0xhdFRvV29ybGQsIHdvcmxkVG9MbmdMYXQgfSBmcm9tICcuL3dlYi1tZXJjYXRvci11dGlscyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaXRCb3VuZHMob3B0aW9ucykge1xuICBjb25zdCB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0LFxuICAgIGJvdW5kcyxcbiAgICBtaW5FeHRlbnQgPSAwLFxuICAgIG1heFpvb20gPSAyNCxcbiAgICBvZmZzZXQgPSBbMCwgMF1cbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IFtbd2VzdCwgc291dGhdLCBbZWFzdCwgbm9ydGhdXSA9IGJvdW5kcztcbiAgY29uc3QgcGFkZGluZyA9IGdldFBhZGRpbmdPYmplY3Qob3B0aW9ucy5wYWRkaW5nKTtcbiAgY29uc3QgbncgPSBsbmdMYXRUb1dvcmxkKFt3ZXN0LCBjbGFtcChub3J0aCwgLU1BWF9MQVRJVFVERSwgTUFYX0xBVElUVURFKV0pO1xuICBjb25zdCBzZSA9IGxuZ0xhdFRvV29ybGQoW2Vhc3QsIGNsYW1wKHNvdXRoLCAtTUFYX0xBVElUVURFLCBNQVhfTEFUSVRVREUpXSk7XG4gIGNvbnN0IHNpemUgPSBbTWF0aC5tYXgoTWF0aC5hYnMoc2VbMF0gLSBud1swXSksIG1pbkV4dGVudCksIE1hdGgubWF4KE1hdGguYWJzKHNlWzFdIC0gbndbMV0pLCBtaW5FeHRlbnQpXTtcbiAgY29uc3QgdGFyZ2V0U2l6ZSA9IFt3aWR0aCAtIHBhZGRpbmcubGVmdCAtIHBhZGRpbmcucmlnaHQgLSBNYXRoLmFicyhvZmZzZXRbMF0pICogMiwgaGVpZ2h0IC0gcGFkZGluZy50b3AgLSBwYWRkaW5nLmJvdHRvbSAtIE1hdGguYWJzKG9mZnNldFsxXSkgKiAyXTtcbiAgYXNzZXJ0KHRhcmdldFNpemVbMF0gPiAwICYmIHRhcmdldFNpemVbMV0gPiAwKTtcbiAgY29uc3Qgc2NhbGVYID0gdGFyZ2V0U2l6ZVswXSAvIHNpemVbMF07XG4gIGNvbnN0IHNjYWxlWSA9IHRhcmdldFNpemVbMV0gLyBzaXplWzFdO1xuICBjb25zdCBvZmZzZXRYID0gKHBhZGRpbmcucmlnaHQgLSBwYWRkaW5nLmxlZnQpIC8gMiAvIHNjYWxlWDtcbiAgY29uc3Qgb2Zmc2V0WSA9IChwYWRkaW5nLnRvcCAtIHBhZGRpbmcuYm90dG9tKSAvIDIgLyBzY2FsZVk7XG4gIGNvbnN0IGNlbnRlciA9IFsoc2VbMF0gKyBud1swXSkgLyAyICsgb2Zmc2V0WCwgKHNlWzFdICsgbndbMV0pIC8gMiArIG9mZnNldFldO1xuICBjb25zdCBjZW50ZXJMbmdMYXQgPSB3b3JsZFRvTG5nTGF0KGNlbnRlcik7XG4gIGNvbnN0IHpvb20gPSBNYXRoLm1pbihtYXhab29tLCBsb2cyKE1hdGguYWJzKE1hdGgubWluKHNjYWxlWCwgc2NhbGVZKSkpKTtcbiAgYXNzZXJ0KE51bWJlci5pc0Zpbml0ZSh6b29tKSk7XG4gIHJldHVybiB7XG4gICAgbG9uZ2l0dWRlOiBjZW50ZXJMbmdMYXRbMF0sXG4gICAgbGF0aXR1ZGU6IGNlbnRlckxuZ0xhdFsxXSxcbiAgICB6b29tXG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldFBhZGRpbmdPYmplY3QocGFkZGluZyA9IDApIHtcbiAgaWYgKHR5cGVvZiBwYWRkaW5nID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB7XG4gICAgICB0b3A6IHBhZGRpbmcsXG4gICAgICBib3R0b206IHBhZGRpbmcsXG4gICAgICBsZWZ0OiBwYWRkaW5nLFxuICAgICAgcmlnaHQ6IHBhZGRpbmdcbiAgICB9O1xuICB9XG5cbiAgYXNzZXJ0KE51bWJlci5pc0Zpbml0ZShwYWRkaW5nLnRvcCkgJiYgTnVtYmVyLmlzRmluaXRlKHBhZGRpbmcuYm90dG9tKSAmJiBOdW1iZXIuaXNGaW5pdGUocGFkZGluZy5sZWZ0KSAmJiBOdW1iZXIuaXNGaW5pdGUocGFkZGluZy5yaWdodCkpO1xuICByZXR1cm4gcGFkZGluZztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpdC1ib3VuZHMuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydCIsImxvZzIiLCJjbGFtcCIsIk1BWF9MQVRJVFVERSIsImxuZ0xhdFRvV29ybGQiLCJ3b3JsZFRvTG5nTGF0IiwiZml0Qm91bmRzIiwib3B0aW9ucyIsIndpZHRoIiwiaGVpZ2h0IiwiYm91bmRzIiwibWluRXh0ZW50IiwibWF4Wm9vbSIsIm9mZnNldCIsIndlc3QiLCJzb3V0aCIsImVhc3QiLCJub3J0aCIsInBhZGRpbmciLCJnZXRQYWRkaW5nT2JqZWN0IiwibnciLCJzZSIsInNpemUiLCJNYXRoIiwibWF4IiwiYWJzIiwidGFyZ2V0U2l6ZSIsImxlZnQiLCJyaWdodCIsInRvcCIsImJvdHRvbSIsInNjYWxlWCIsInNjYWxlWSIsIm9mZnNldFgiLCJvZmZzZXRZIiwiY2VudGVyIiwiY2VudGVyTG5nTGF0Iiwiem9vbSIsIm1pbiIsIk51bWJlciIsImlzRmluaXRlIiwibG9uZ2l0dWRlIiwibGF0aXR1ZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/fit-bounds.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/fly-to-viewport.js":
/*!************************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/fly-to-viewport.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ flyToViewport),\n/* harmony export */   getFlyToDuration: () => (/* binding */ getFlyToDuration)\n/* harmony export */ });\n/* harmony import */ var _math_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js\");\n/* harmony import */ var _web_mercator_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web-mercator-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js\");\n/* harmony import */ var gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix/vec2 */ \"(ssr)/./node_modules/gl-matrix/esm/vec2.js\");\n\n\n\nconst EPSILON = 0.01;\nconst VIEWPORT_TRANSITION_PROPS = [\n    \"longitude\",\n    \"latitude\",\n    \"zoom\"\n];\nconst DEFAULT_OPTS = {\n    curve: 1.414,\n    speed: 1.2\n};\nfunction flyToViewport(startProps, endProps, t, options) {\n    const { startZoom, startCenterXY, uDelta, w0, u1, S, rho, rho2, r0 } = getFlyToTransitionParams(startProps, endProps, options);\n    if (u1 < EPSILON) {\n        const viewport = {};\n        for (const key of VIEWPORT_TRANSITION_PROPS){\n            const startValue = startProps[key];\n            const endValue = endProps[key];\n            viewport[key] = (0,_math_utils__WEBPACK_IMPORTED_MODULE_0__.lerp)(startValue, endValue, t);\n        }\n        return viewport;\n    }\n    const s = t * S;\n    const w = Math.cosh(r0) / Math.cosh(r0 + rho * s);\n    const u = w0 * ((Math.cosh(r0) * Math.tanh(r0 + rho * s) - Math.sinh(r0)) / rho2) / u1;\n    const scaleIncrement = 1 / w;\n    const newZoom = startZoom + (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_1__.scaleToZoom)(scaleIncrement);\n    const newCenterWorld = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_2__.scale([], uDelta, u);\n    gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_2__.add(newCenterWorld, newCenterWorld, startCenterXY);\n    const newCenter = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_1__.worldToLngLat)(newCenterWorld);\n    return {\n        longitude: newCenter[0],\n        latitude: newCenter[1],\n        zoom: newZoom\n    };\n}\nfunction getFlyToDuration(startProps, endProps, options) {\n    const opts = {\n        ...DEFAULT_OPTS,\n        ...options\n    };\n    const { screenSpeed, speed, maxDuration } = opts;\n    const { S, rho } = getFlyToTransitionParams(startProps, endProps, opts);\n    const length = 1000 * S;\n    let duration;\n    if (Number.isFinite(screenSpeed)) {\n        duration = length / (screenSpeed / rho);\n    } else {\n        duration = length / speed;\n    }\n    return Number.isFinite(maxDuration) && duration > maxDuration ? 0 : duration;\n}\nfunction getFlyToTransitionParams(startProps, endProps, opts) {\n    opts = Object.assign({}, DEFAULT_OPTS, opts);\n    const rho = opts.curve;\n    const startZoom = startProps.zoom;\n    const startCenter = [\n        startProps.longitude,\n        startProps.latitude\n    ];\n    const startScale = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_1__.zoomToScale)(startZoom);\n    const endZoom = endProps.zoom;\n    const endCenter = [\n        endProps.longitude,\n        endProps.latitude\n    ];\n    const scale = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_1__.zoomToScale)(endZoom - startZoom);\n    const startCenterXY = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_1__.lngLatToWorld)(startCenter);\n    const endCenterXY = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_1__.lngLatToWorld)(endCenter);\n    const uDelta = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_2__.sub([], endCenterXY, startCenterXY);\n    const w0 = Math.max(startProps.width, startProps.height);\n    const w1 = w0 / scale;\n    const u1 = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_2__.length(uDelta) * startScale;\n    const _u1 = Math.max(u1, EPSILON);\n    const rho2 = rho * rho;\n    const b0 = (w1 * w1 - w0 * w0 + rho2 * rho2 * _u1 * _u1) / (2 * w0 * rho2 * _u1);\n    const b1 = (w1 * w1 - w0 * w0 - rho2 * rho2 * _u1 * _u1) / (2 * w1 * rho2 * _u1);\n    const r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0);\n    const r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    const S = (r1 - r0) / rho;\n    return {\n        startZoom,\n        startCenterXY,\n        uDelta,\n        w0,\n        u1,\n        S,\n        rho,\n        rho2,\n        r0,\n        r1\n    };\n} //# sourceMappingURL=fly-to-viewport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/fly-to-viewport.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/get-bounds.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/get-bounds.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getBounds)\n/* harmony export */ });\n/* harmony import */ var _web_mercator_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web-mercator-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js\");\n/* harmony import */ var gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix/vec2 */ \"(ssr)/./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var _math_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js\");\n\n\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\nfunction getBounds(viewport, z = 0) {\n    const { width, height, unproject } = viewport;\n    const unprojectOps = {\n        targetZ: z\n    };\n    const bottomLeft = unproject([\n        0,\n        height\n    ], unprojectOps);\n    const bottomRight = unproject([\n        width,\n        height\n    ], unprojectOps);\n    let topLeft;\n    let topRight;\n    const halfFov = viewport.fovy ? 0.5 * viewport.fovy * DEGREES_TO_RADIANS : Math.atan(0.5 / viewport.altitude);\n    const angleToGround = (90 - viewport.pitch) * DEGREES_TO_RADIANS;\n    if (halfFov > angleToGround - 0.01) {\n        topLeft = unprojectOnFarPlane(viewport, 0, z);\n        topRight = unprojectOnFarPlane(viewport, width, z);\n    } else {\n        topLeft = unproject([\n            0,\n            0\n        ], unprojectOps);\n        topRight = unproject([\n            width,\n            0\n        ], unprojectOps);\n    }\n    return [\n        bottomLeft,\n        bottomRight,\n        topRight,\n        topLeft\n    ];\n}\nfunction unprojectOnFarPlane(viewport, x, targetZ) {\n    const { pixelUnprojectionMatrix } = viewport;\n    const coord0 = (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.transformVector)(pixelUnprojectionMatrix, [\n        x,\n        0,\n        1,\n        1\n    ]);\n    const coord1 = (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.transformVector)(pixelUnprojectionMatrix, [\n        x,\n        viewport.height,\n        1,\n        1\n    ]);\n    const z = targetZ * viewport.distanceScales.unitsPerMeter[2];\n    const t = (z - coord0[2]) / (coord1[2] - coord0[2]);\n    const coord = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_2__.lerp([], coord0, coord1, t);\n    const result = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_0__.worldToLngLat)(coord);\n    result.push(targetZ);\n    return result;\n} //# sourceMappingURL=get-bounds.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvd2ViLW1lcmNhdG9yL2Rpc3QvZXNtL2dldC1ib3VuZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRDtBQUNkO0FBQ1E7QUFDL0MsTUFBTUcscUJBQXFCQyxLQUFLQyxFQUFFLEdBQUc7QUFDdEIsU0FBU0MsVUFBVUMsUUFBUSxFQUFFQyxJQUFJLENBQUM7SUFDL0MsTUFBTSxFQUNKQyxLQUFLLEVBQ0xDLE1BQU0sRUFDTkMsU0FBUyxFQUNWLEdBQUdKO0lBQ0osTUFBTUssZUFBZTtRQUNuQkMsU0FBU0w7SUFDWDtJQUNBLE1BQU1NLGFBQWFILFVBQVU7UUFBQztRQUFHRDtLQUFPLEVBQUVFO0lBQzFDLE1BQU1HLGNBQWNKLFVBQVU7UUFBQ0Y7UUFBT0M7S0FBTyxFQUFFRTtJQUMvQyxJQUFJSTtJQUNKLElBQUlDO0lBQ0osTUFBTUMsVUFBVVgsU0FBU1ksSUFBSSxHQUFHLE1BQU1aLFNBQVNZLElBQUksR0FBR2hCLHFCQUFxQkMsS0FBS2dCLElBQUksQ0FBQyxNQUFNYixTQUFTYyxRQUFRO0lBQzVHLE1BQU1DLGdCQUFnQixDQUFDLEtBQUtmLFNBQVNnQixLQUFLLElBQUlwQjtJQUU5QyxJQUFJZSxVQUFVSSxnQkFBZ0IsTUFBTTtRQUNsQ04sVUFBVVEsb0JBQW9CakIsVUFBVSxHQUFHQztRQUMzQ1MsV0FBV08sb0JBQW9CakIsVUFBVUUsT0FBT0Q7SUFDbEQsT0FBTztRQUNMUSxVQUFVTCxVQUFVO1lBQUM7WUFBRztTQUFFLEVBQUVDO1FBQzVCSyxXQUFXTixVQUFVO1lBQUNGO1lBQU87U0FBRSxFQUFFRztJQUNuQztJQUVBLE9BQU87UUFBQ0U7UUFBWUM7UUFBYUU7UUFBVUQ7S0FBUTtBQUNyRDtBQUVBLFNBQVNRLG9CQUFvQmpCLFFBQVEsRUFBRWtCLENBQUMsRUFBRVosT0FBTztJQUMvQyxNQUFNLEVBQ0phLHVCQUF1QixFQUN4QixHQUFHbkI7SUFDSixNQUFNb0IsU0FBU3pCLDREQUFlQSxDQUFDd0IseUJBQXlCO1FBQUNEO1FBQUc7UUFBRztRQUFHO0tBQUU7SUFDcEUsTUFBTUcsU0FBUzFCLDREQUFlQSxDQUFDd0IseUJBQXlCO1FBQUNEO1FBQUdsQixTQUFTRyxNQUFNO1FBQUU7UUFBRztLQUFFO0lBQ2xGLE1BQU1GLElBQUlLLFVBQVVOLFNBQVNzQixjQUFjLENBQUNDLGFBQWEsQ0FBQyxFQUFFO0lBQzVELE1BQU1DLElBQUksQ0FBQ3ZCLElBQUltQixNQUFNLENBQUMsRUFBRSxJQUFLQyxDQUFBQSxNQUFNLENBQUMsRUFBRSxHQUFHRCxNQUFNLENBQUMsRUFBRTtJQUNsRCxNQUFNSyxRQUFRL0IsZ0RBQVMsQ0FBQyxFQUFFLEVBQUUwQixRQUFRQyxRQUFRRztJQUM1QyxNQUFNRyxTQUFTbEMsa0VBQWFBLENBQUNnQztJQUM3QkUsT0FBT0MsSUFBSSxDQUFDdEI7SUFDWixPQUFPcUI7QUFDVCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3dlYi1tZXJjYXRvci9kaXN0L2VzbS9nZXQtYm91bmRzLmpzPzljMDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd29ybGRUb0xuZ0xhdCB9IGZyb20gJy4vd2ViLW1lcmNhdG9yLXV0aWxzJztcbmltcG9ydCAqIGFzIHZlYzIgZnJvbSAnZ2wtbWF0cml4L3ZlYzInO1xuaW1wb3J0IHsgdHJhbnNmb3JtVmVjdG9yIH0gZnJvbSAnLi9tYXRoLXV0aWxzJztcbmNvbnN0IERFR1JFRVNfVE9fUkFESUFOUyA9IE1hdGguUEkgLyAxODA7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRCb3VuZHModmlld3BvcnQsIHogPSAwKSB7XG4gIGNvbnN0IHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgdW5wcm9qZWN0XG4gIH0gPSB2aWV3cG9ydDtcbiAgY29uc3QgdW5wcm9qZWN0T3BzID0ge1xuICAgIHRhcmdldFo6IHpcbiAgfTtcbiAgY29uc3QgYm90dG9tTGVmdCA9IHVucHJvamVjdChbMCwgaGVpZ2h0XSwgdW5wcm9qZWN0T3BzKTtcbiAgY29uc3QgYm90dG9tUmlnaHQgPSB1bnByb2plY3QoW3dpZHRoLCBoZWlnaHRdLCB1bnByb2plY3RPcHMpO1xuICBsZXQgdG9wTGVmdDtcbiAgbGV0IHRvcFJpZ2h0O1xuICBjb25zdCBoYWxmRm92ID0gdmlld3BvcnQuZm92eSA/IDAuNSAqIHZpZXdwb3J0LmZvdnkgKiBERUdSRUVTX1RPX1JBRElBTlMgOiBNYXRoLmF0YW4oMC41IC8gdmlld3BvcnQuYWx0aXR1ZGUpO1xuICBjb25zdCBhbmdsZVRvR3JvdW5kID0gKDkwIC0gdmlld3BvcnQucGl0Y2gpICogREVHUkVFU19UT19SQURJQU5TO1xuXG4gIGlmIChoYWxmRm92ID4gYW5nbGVUb0dyb3VuZCAtIDAuMDEpIHtcbiAgICB0b3BMZWZ0ID0gdW5wcm9qZWN0T25GYXJQbGFuZSh2aWV3cG9ydCwgMCwgeik7XG4gICAgdG9wUmlnaHQgPSB1bnByb2plY3RPbkZhclBsYW5lKHZpZXdwb3J0LCB3aWR0aCwgeik7XG4gIH0gZWxzZSB7XG4gICAgdG9wTGVmdCA9IHVucHJvamVjdChbMCwgMF0sIHVucHJvamVjdE9wcyk7XG4gICAgdG9wUmlnaHQgPSB1bnByb2plY3QoW3dpZHRoLCAwXSwgdW5wcm9qZWN0T3BzKTtcbiAgfVxuXG4gIHJldHVybiBbYm90dG9tTGVmdCwgYm90dG9tUmlnaHQsIHRvcFJpZ2h0LCB0b3BMZWZ0XTtcbn1cblxuZnVuY3Rpb24gdW5wcm9qZWN0T25GYXJQbGFuZSh2aWV3cG9ydCwgeCwgdGFyZ2V0Wikge1xuICBjb25zdCB7XG4gICAgcGl4ZWxVbnByb2plY3Rpb25NYXRyaXhcbiAgfSA9IHZpZXdwb3J0O1xuICBjb25zdCBjb29yZDAgPSB0cmFuc2Zvcm1WZWN0b3IocGl4ZWxVbnByb2plY3Rpb25NYXRyaXgsIFt4LCAwLCAxLCAxXSk7XG4gIGNvbnN0IGNvb3JkMSA9IHRyYW5zZm9ybVZlY3RvcihwaXhlbFVucHJvamVjdGlvbk1hdHJpeCwgW3gsIHZpZXdwb3J0LmhlaWdodCwgMSwgMV0pO1xuICBjb25zdCB6ID0gdGFyZ2V0WiAqIHZpZXdwb3J0LmRpc3RhbmNlU2NhbGVzLnVuaXRzUGVyTWV0ZXJbMl07XG4gIGNvbnN0IHQgPSAoeiAtIGNvb3JkMFsyXSkgLyAoY29vcmQxWzJdIC0gY29vcmQwWzJdKTtcbiAgY29uc3QgY29vcmQgPSB2ZWMyLmxlcnAoW10sIGNvb3JkMCwgY29vcmQxLCB0KTtcbiAgY29uc3QgcmVzdWx0ID0gd29ybGRUb0xuZ0xhdChjb29yZCk7XG4gIHJlc3VsdC5wdXNoKHRhcmdldFopO1xuICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LWJvdW5kcy5qcy5tYXAiXSwibmFtZXMiOlsid29ybGRUb0xuZ0xhdCIsInZlYzIiLCJ0cmFuc2Zvcm1WZWN0b3IiLCJERUdSRUVTX1RPX1JBRElBTlMiLCJNYXRoIiwiUEkiLCJnZXRCb3VuZHMiLCJ2aWV3cG9ydCIsInoiLCJ3aWR0aCIsImhlaWdodCIsInVucHJvamVjdCIsInVucHJvamVjdE9wcyIsInRhcmdldFoiLCJib3R0b21MZWZ0IiwiYm90dG9tUmlnaHQiLCJ0b3BMZWZ0IiwidG9wUmlnaHQiLCJoYWxmRm92IiwiZm92eSIsImF0YW4iLCJhbHRpdHVkZSIsImFuZ2xlVG9Hcm91bmQiLCJwaXRjaCIsInVucHJvamVjdE9uRmFyUGxhbmUiLCJ4IiwicGl4ZWxVbnByb2plY3Rpb25NYXRyaXgiLCJjb29yZDAiLCJjb29yZDEiLCJkaXN0YW5jZVNjYWxlcyIsInVuaXRzUGVyTWV0ZXIiLCJ0IiwiY29vcmQiLCJsZXJwIiwicmVzdWx0IiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/get-bounds.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_LATITUDE: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.MAX_LATITUDE),\n/* harmony export */   WebMercatorViewport: () => (/* reexport safe */ _web_mercator_viewport__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   addMetersToLngLat: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.addMetersToLngLat),\n/* harmony export */   altitudeToFovy: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.altitudeToFovy),\n/* harmony export */   \"default\": () => (/* reexport safe */ _web_mercator_viewport__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   fitBounds: () => (/* reexport safe */ _fit_bounds__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   flyToViewport: () => (/* reexport safe */ _fly_to_viewport__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   fovyToAltitude: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.fovyToAltitude),\n/* harmony export */   getBounds: () => (/* reexport safe */ _get_bounds__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   getDistanceScales: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.getDistanceScales),\n/* harmony export */   getFlyToDuration: () => (/* reexport safe */ _fly_to_viewport__WEBPACK_IMPORTED_MODULE_4__.getFlyToDuration),\n/* harmony export */   getMeterZoom: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.getMeterZoom),\n/* harmony export */   getProjectionMatrix: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.getProjectionMatrix),\n/* harmony export */   getProjectionParameters: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.getProjectionParameters),\n/* harmony export */   getViewMatrix: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.getViewMatrix),\n/* harmony export */   lngLatToWorld: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.lngLatToWorld),\n/* harmony export */   normalizeViewportProps: () => (/* reexport safe */ _normalize_viewport_props__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   pixelsToWorld: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.pixelsToWorld),\n/* harmony export */   scaleToZoom: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.scaleToZoom),\n/* harmony export */   unitsPerMeter: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.unitsPerMeter),\n/* harmony export */   worldToLngLat: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.worldToLngLat),\n/* harmony export */   worldToPixels: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.worldToPixels),\n/* harmony export */   zoomToScale: () => (/* reexport safe */ _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__.zoomToScale)\n/* harmony export */ });\n/* harmony import */ var _web_mercator_viewport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web-mercator-viewport */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-viewport.js\");\n/* harmony import */ var _get_bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-bounds */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/get-bounds.js\");\n/* harmony import */ var _fit_bounds__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fit-bounds */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/fit-bounds.js\");\n/* harmony import */ var _normalize_viewport_props__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./normalize-viewport-props */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/normalize-viewport-props.js\");\n/* harmony import */ var _fly_to_viewport__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fly-to-viewport */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/fly-to-viewport.js\");\n/* harmony import */ var _web_mercator_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./web-mercator-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js\");\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvd2ViLW1lcmNhdG9yL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQ3VCO0FBQ3JCO0FBQ0E7QUFDMkI7QUFDQTtBQUMyTixDQUMxUyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9za2VsZXRvbi11aS8uL25vZGVfbW9kdWxlcy9AbWF0aC5nbC93ZWItbWVyY2F0b3IvZGlzdC9lc20vaW5kZXguanM/YmIxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnLi93ZWItbWVyY2F0b3Itdmlld3BvcnQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBXZWJNZXJjYXRvclZpZXdwb3J0IH0gZnJvbSAnLi93ZWItbWVyY2F0b3Itdmlld3BvcnQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBnZXRCb3VuZHMgfSBmcm9tICcuL2dldC1ib3VuZHMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBmaXRCb3VuZHMgfSBmcm9tICcuL2ZpdC1ib3VuZHMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBub3JtYWxpemVWaWV3cG9ydFByb3BzIH0gZnJvbSAnLi9ub3JtYWxpemUtdmlld3BvcnQtcHJvcHMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBmbHlUb1ZpZXdwb3J0LCBnZXRGbHlUb0R1cmF0aW9uIH0gZnJvbSAnLi9mbHktdG8tdmlld3BvcnQnO1xuZXhwb3J0IHsgTUFYX0xBVElUVURFLCBsbmdMYXRUb1dvcmxkLCB3b3JsZFRvTG5nTGF0LCB3b3JsZFRvUGl4ZWxzLCBwaXhlbHNUb1dvcmxkLCB6b29tVG9TY2FsZSwgc2NhbGVUb1pvb20sIGFsdGl0dWRlVG9Gb3Z5LCBmb3Z5VG9BbHRpdHVkZSwgZ2V0TWV0ZXJab29tLCB1bml0c1Blck1ldGVyLCBnZXREaXN0YW5jZVNjYWxlcywgYWRkTWV0ZXJzVG9MbmdMYXQsIGdldFZpZXdNYXRyaXgsIGdldFByb2plY3Rpb25NYXRyaXgsIGdldFByb2plY3Rpb25QYXJhbWV0ZXJzIH0gZnJvbSAnLi93ZWItbWVyY2F0b3ItdXRpbHMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJXZWJNZXJjYXRvclZpZXdwb3J0IiwiZ2V0Qm91bmRzIiwiZml0Qm91bmRzIiwibm9ybWFsaXplVmlld3BvcnRQcm9wcyIsImZseVRvVmlld3BvcnQiLCJnZXRGbHlUb0R1cmF0aW9uIiwiTUFYX0xBVElUVURFIiwibG5nTGF0VG9Xb3JsZCIsIndvcmxkVG9MbmdMYXQiLCJ3b3JsZFRvUGl4ZWxzIiwicGl4ZWxzVG9Xb3JsZCIsInpvb21Ub1NjYWxlIiwic2NhbGVUb1pvb20iLCJhbHRpdHVkZVRvRm92eSIsImZvdnlUb0FsdGl0dWRlIiwiZ2V0TWV0ZXJab29tIiwidW5pdHNQZXJNZXRlciIsImdldERpc3RhbmNlU2NhbGVzIiwiYWRkTWV0ZXJzVG9MbmdMYXQiLCJnZXRWaWV3TWF0cml4IiwiZ2V0UHJvamVjdGlvbk1hdHJpeCIsImdldFByb2plY3Rpb25QYXJhbWV0ZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clamp: () => (/* binding */ clamp),\n/* harmony export */   createMat4: () => (/* binding */ createMat4),\n/* harmony export */   lerp: () => (/* binding */ lerp),\n/* harmony export */   log2: () => (/* binding */ log2),\n/* harmony export */   mod: () => (/* binding */ mod),\n/* harmony export */   transformVector: () => (/* binding */ transformVector)\n/* harmony export */ });\n/* harmony import */ var gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gl-matrix/vec4 */ \"(ssr)/./node_modules/gl-matrix/esm/vec4.js\");\n\nfunction createMat4() {\n    return [\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n    ];\n}\nfunction transformVector(matrix, vector) {\n    const result = (0,gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_0__.transformMat4)([], vector, matrix);\n    (0,gl_matrix_vec4__WEBPACK_IMPORTED_MODULE_0__.scale)(result, result, 1 / result[3]);\n    return result;\n}\nfunction mod(value, divisor) {\n    const modulus = value % divisor;\n    return modulus < 0 ? divisor + modulus : modulus;\n}\nfunction lerp(start, end, step) {\n    return step * end + (1 - step) * start;\n}\nfunction clamp(x, min, max) {\n    return x < min ? min : x > max ? max : x;\n}\nfunction ieLog2(x) {\n    return Math.log(x) * Math.LOG2E;\n}\nconst log2 = Math.log2 || ieLog2; //# sourceMappingURL=math-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvd2ViLW1lcmNhdG9yL2Rpc3QvZXNtL21hdGgtdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFzRDtBQUMvQyxTQUFTRTtJQUNkLE9BQU87UUFBQztRQUFHO1FBQUc7UUFBRztRQUFHO1FBQUc7UUFBRztRQUFHO1FBQUc7UUFBRztRQUFHO1FBQUc7UUFBRztRQUFHO1FBQUc7UUFBRztLQUFFO0FBQ3pEO0FBQ08sU0FBU0MsZ0JBQWdCQyxNQUFNLEVBQUVDLE1BQU07SUFDNUMsTUFBTUMsU0FBU04sNkRBQWFBLENBQUMsRUFBRSxFQUFFSyxRQUFRRDtJQUN6Q0gscURBQUtBLENBQUNLLFFBQVFBLFFBQVEsSUFBSUEsTUFBTSxDQUFDLEVBQUU7SUFDbkMsT0FBT0E7QUFDVDtBQUNPLFNBQVNDLElBQUlDLEtBQUssRUFBRUMsT0FBTztJQUNoQyxNQUFNQyxVQUFVRixRQUFRQztJQUN4QixPQUFPQyxVQUFVLElBQUlELFVBQVVDLFVBQVVBO0FBQzNDO0FBQ08sU0FBU0MsS0FBS0MsS0FBSyxFQUFFQyxHQUFHLEVBQUVDLElBQUk7SUFDbkMsT0FBT0EsT0FBT0QsTUFBTSxDQUFDLElBQUlDLElBQUcsSUFBS0Y7QUFDbkM7QUFDTyxTQUFTRyxNQUFNQyxDQUFDLEVBQUVDLEdBQUcsRUFBRUMsR0FBRztJQUMvQixPQUFPRixJQUFJQyxNQUFNQSxNQUFNRCxJQUFJRSxNQUFNQSxNQUFNRjtBQUN6QztBQUVBLFNBQVNHLE9BQU9ILENBQUM7SUFDZixPQUFPSSxLQUFLQyxHQUFHLENBQUNMLEtBQUtJLEtBQUtFLEtBQUs7QUFDakM7QUFFTyxNQUFNQyxPQUFPSCxLQUFLRyxJQUFJLElBQUlKLE9BQU8sQ0FDeEMsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2tlbGV0b24tdWkvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvd2ViLW1lcmNhdG9yL2Rpc3QvZXNtL21hdGgtdXRpbHMuanM/NjNkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0cmFuc2Zvcm1NYXQ0LCBzY2FsZSB9IGZyb20gJ2dsLW1hdHJpeC92ZWM0JztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNYXQ0KCkge1xuICByZXR1cm4gWzEsIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDAsIDEsIDAsIDAsIDAsIDAsIDFdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybVZlY3RvcihtYXRyaXgsIHZlY3Rvcikge1xuICBjb25zdCByZXN1bHQgPSB0cmFuc2Zvcm1NYXQ0KFtdLCB2ZWN0b3IsIG1hdHJpeCk7XG4gIHNjYWxlKHJlc3VsdCwgcmVzdWx0LCAxIC8gcmVzdWx0WzNdKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtb2QodmFsdWUsIGRpdmlzb3IpIHtcbiAgY29uc3QgbW9kdWx1cyA9IHZhbHVlICUgZGl2aXNvcjtcbiAgcmV0dXJuIG1vZHVsdXMgPCAwID8gZGl2aXNvciArIG1vZHVsdXMgOiBtb2R1bHVzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxlcnAoc3RhcnQsIGVuZCwgc3RlcCkge1xuICByZXR1cm4gc3RlcCAqIGVuZCArICgxIC0gc3RlcCkgKiBzdGFydDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjbGFtcCh4LCBtaW4sIG1heCkge1xuICByZXR1cm4geCA8IG1pbiA/IG1pbiA6IHggPiBtYXggPyBtYXggOiB4O1xufVxuXG5mdW5jdGlvbiBpZUxvZzIoeCkge1xuICByZXR1cm4gTWF0aC5sb2coeCkgKiBNYXRoLkxPRzJFO1xufVxuXG5leHBvcnQgY29uc3QgbG9nMiA9IE1hdGgubG9nMiB8fCBpZUxvZzI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXRoLXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJ0cmFuc2Zvcm1NYXQ0Iiwic2NhbGUiLCJjcmVhdGVNYXQ0IiwidHJhbnNmb3JtVmVjdG9yIiwibWF0cml4IiwidmVjdG9yIiwicmVzdWx0IiwibW9kIiwidmFsdWUiLCJkaXZpc29yIiwibW9kdWx1cyIsImxlcnAiLCJzdGFydCIsImVuZCIsInN0ZXAiLCJjbGFtcCIsIngiLCJtaW4iLCJtYXgiLCJpZUxvZzIiLCJNYXRoIiwibG9nIiwiTE9HMkUiLCJsb2cyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/normalize-viewport-props.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/normalize-viewport-props.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ normalizeViewportProps)\n/* harmony export */ });\n/* harmony import */ var _web_mercator_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./web-mercator-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js\");\n/* harmony import */ var _math_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js\");\n\n\nconst TILE_SIZE = 512;\nfunction normalizeViewportProps(props) {\n    const { width, height, pitch = 0 } = props;\n    let { longitude, latitude, zoom, bearing = 0 } = props;\n    if (longitude < -180 || longitude > 180) {\n        longitude = (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.mod)(longitude + 180, 360) - 180;\n    }\n    if (bearing < -180 || bearing > 180) {\n        bearing = (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.mod)(bearing + 180, 360) - 180;\n    }\n    const minZoom = (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.log2)(height / TILE_SIZE);\n    if (zoom <= minZoom) {\n        zoom = minZoom;\n        latitude = 0;\n    } else {\n        const halfHeightPixels = height / 2 / Math.pow(2, zoom);\n        const minLatitude = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_0__.worldToLngLat)([\n            0,\n            halfHeightPixels\n        ])[1];\n        if (latitude < minLatitude) {\n            latitude = minLatitude;\n        } else {\n            const maxLatitude = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_0__.worldToLngLat)([\n                0,\n                TILE_SIZE - halfHeightPixels\n            ])[1];\n            if (latitude > maxLatitude) {\n                latitude = maxLatitude;\n            }\n        }\n    }\n    return {\n        width,\n        height,\n        longitude,\n        latitude,\n        zoom,\n        pitch,\n        bearing\n    };\n} //# sourceMappingURL=normalize-viewport-props.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvd2ViLW1lcmNhdG9yL2Rpc3QvZXNtL25vcm1hbGl6ZS12aWV3cG9ydC1wcm9wcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFDWjtBQUN6QyxNQUFNRyxZQUFZO0FBQ0gsU0FBU0MsdUJBQXVCQyxLQUFLO0lBQ2xELE1BQU0sRUFDSkMsS0FBSyxFQUNMQyxNQUFNLEVBQ05DLFFBQVEsQ0FBQyxFQUNWLEdBQUdIO0lBQ0osSUFBSSxFQUNGSSxTQUFTLEVBQ1RDLFFBQVEsRUFDUkMsSUFBSSxFQUNKQyxVQUFVLENBQUMsRUFDWixHQUFHUDtJQUVKLElBQUlJLFlBQVksQ0FBQyxPQUFPQSxZQUFZLEtBQUs7UUFDdkNBLFlBQVlSLGdEQUFHQSxDQUFDUSxZQUFZLEtBQUssT0FBTztJQUMxQztJQUVBLElBQUlHLFVBQVUsQ0FBQyxPQUFPQSxVQUFVLEtBQUs7UUFDbkNBLFVBQVVYLGdEQUFHQSxDQUFDVyxVQUFVLEtBQUssT0FBTztJQUN0QztJQUVBLE1BQU1DLFVBQVVYLGlEQUFJQSxDQUFDSyxTQUFTSjtJQUU5QixJQUFJUSxRQUFRRSxTQUFTO1FBQ25CRixPQUFPRTtRQUNQSCxXQUFXO0lBQ2IsT0FBTztRQUNMLE1BQU1JLG1CQUFtQlAsU0FBUyxJQUFJUSxLQUFLQyxHQUFHLENBQUMsR0FBR0w7UUFDbEQsTUFBTU0sY0FBY2pCLGtFQUFhQSxDQUFDO1lBQUM7WUFBR2M7U0FBaUIsQ0FBQyxDQUFDLEVBQUU7UUFFM0QsSUFBSUosV0FBV08sYUFBYTtZQUMxQlAsV0FBV087UUFDYixPQUFPO1lBQ0wsTUFBTUMsY0FBY2xCLGtFQUFhQSxDQUFDO2dCQUFDO2dCQUFHRyxZQUFZVzthQUFpQixDQUFDLENBQUMsRUFBRTtZQUV2RSxJQUFJSixXQUFXUSxhQUFhO2dCQUMxQlIsV0FBV1E7WUFDYjtRQUNGO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xaO1FBQ0FDO1FBQ0FFO1FBQ0FDO1FBQ0FDO1FBQ0FIO1FBQ0FJO0lBQ0Y7QUFDRixFQUNBLG9EQUFvRCIsInNvdXJjZXMiOlsid2VicGFjazovL3NrZWxldG9uLXVpLy4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3dlYi1tZXJjYXRvci9kaXN0L2VzbS9ub3JtYWxpemUtdmlld3BvcnQtcHJvcHMuanM/MzA0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3b3JsZFRvTG5nTGF0IH0gZnJvbSAnLi93ZWItbWVyY2F0b3ItdXRpbHMnO1xuaW1wb3J0IHsgbW9kLCBsb2cyIH0gZnJvbSAnLi9tYXRoLXV0aWxzJztcbmNvbnN0IFRJTEVfU0laRSA9IDUxMjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZVZpZXdwb3J0UHJvcHMocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBwaXRjaCA9IDBcbiAgfSA9IHByb3BzO1xuICBsZXQge1xuICAgIGxvbmdpdHVkZSxcbiAgICBsYXRpdHVkZSxcbiAgICB6b29tLFxuICAgIGJlYXJpbmcgPSAwXG4gIH0gPSBwcm9wcztcblxuICBpZiAobG9uZ2l0dWRlIDwgLTE4MCB8fCBsb25naXR1ZGUgPiAxODApIHtcbiAgICBsb25naXR1ZGUgPSBtb2QobG9uZ2l0dWRlICsgMTgwLCAzNjApIC0gMTgwO1xuICB9XG5cbiAgaWYgKGJlYXJpbmcgPCAtMTgwIHx8IGJlYXJpbmcgPiAxODApIHtcbiAgICBiZWFyaW5nID0gbW9kKGJlYXJpbmcgKyAxODAsIDM2MCkgLSAxODA7XG4gIH1cblxuICBjb25zdCBtaW5ab29tID0gbG9nMihoZWlnaHQgLyBUSUxFX1NJWkUpO1xuXG4gIGlmICh6b29tIDw9IG1pblpvb20pIHtcbiAgICB6b29tID0gbWluWm9vbTtcbiAgICBsYXRpdHVkZSA9IDA7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgaGFsZkhlaWdodFBpeGVscyA9IGhlaWdodCAvIDIgLyBNYXRoLnBvdygyLCB6b29tKTtcbiAgICBjb25zdCBtaW5MYXRpdHVkZSA9IHdvcmxkVG9MbmdMYXQoWzAsIGhhbGZIZWlnaHRQaXhlbHNdKVsxXTtcblxuICAgIGlmIChsYXRpdHVkZSA8IG1pbkxhdGl0dWRlKSB7XG4gICAgICBsYXRpdHVkZSA9IG1pbkxhdGl0dWRlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBtYXhMYXRpdHVkZSA9IHdvcmxkVG9MbmdMYXQoWzAsIFRJTEVfU0laRSAtIGhhbGZIZWlnaHRQaXhlbHNdKVsxXTtcblxuICAgICAgaWYgKGxhdGl0dWRlID4gbWF4TGF0aXR1ZGUpIHtcbiAgICAgICAgbGF0aXR1ZGUgPSBtYXhMYXRpdHVkZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBsb25naXR1ZGUsXG4gICAgbGF0aXR1ZGUsXG4gICAgem9vbSxcbiAgICBwaXRjaCxcbiAgICBiZWFyaW5nXG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtdmlld3BvcnQtcHJvcHMuanMubWFwIl0sIm5hbWVzIjpbIndvcmxkVG9MbmdMYXQiLCJtb2QiLCJsb2cyIiwiVElMRV9TSVpFIiwibm9ybWFsaXplVmlld3BvcnRQcm9wcyIsInByb3BzIiwid2lkdGgiLCJoZWlnaHQiLCJwaXRjaCIsImxvbmdpdHVkZSIsImxhdGl0dWRlIiwiem9vbSIsImJlYXJpbmciLCJtaW5ab29tIiwiaGFsZkhlaWdodFBpeGVscyIsIk1hdGgiLCJwb3ciLCJtaW5MYXRpdHVkZSIsIm1heExhdGl0dWRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/normalize-viewport-props.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ALTITUDE: () => (/* binding */ DEFAULT_ALTITUDE),\n/* harmony export */   MAX_LATITUDE: () => (/* binding */ MAX_LATITUDE),\n/* harmony export */   addMetersToLngLat: () => (/* binding */ addMetersToLngLat),\n/* harmony export */   altitudeToFovy: () => (/* binding */ altitudeToFovy),\n/* harmony export */   fovyToAltitude: () => (/* binding */ fovyToAltitude),\n/* harmony export */   getDistanceScales: () => (/* binding */ getDistanceScales),\n/* harmony export */   getMeterZoom: () => (/* binding */ getMeterZoom),\n/* harmony export */   getProjectionMatrix: () => (/* binding */ getProjectionMatrix),\n/* harmony export */   getProjectionParameters: () => (/* binding */ getProjectionParameters),\n/* harmony export */   getViewMatrix: () => (/* binding */ getViewMatrix),\n/* harmony export */   lngLatToWorld: () => (/* binding */ lngLatToWorld),\n/* harmony export */   pixelsToWorld: () => (/* binding */ pixelsToWorld),\n/* harmony export */   scaleToZoom: () => (/* binding */ scaleToZoom),\n/* harmony export */   unitsPerMeter: () => (/* binding */ unitsPerMeter),\n/* harmony export */   worldToLngLat: () => (/* binding */ worldToLngLat),\n/* harmony export */   worldToPixels: () => (/* binding */ worldToPixels),\n/* harmony export */   zoomToScale: () => (/* binding */ zoomToScale)\n/* harmony export */ });\n/* harmony import */ var _math_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js\");\n/* harmony import */ var gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gl-matrix/mat4 */ \"(ssr)/./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gl-matrix/vec2 */ \"(ssr)/./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gl-matrix/vec3 */ \"(ssr)/./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/assert.js\");\n\n\n\n\n\nconst PI = Math.PI;\nconst PI_4 = PI / 4;\nconst DEGREES_TO_RADIANS = PI / 180;\nconst RADIANS_TO_DEGREES = 180 / PI;\nconst TILE_SIZE = 512;\nconst EARTH_CIRCUMFERENCE = 40.03e6;\nconst MAX_LATITUDE = 85.051129;\nconst DEFAULT_ALTITUDE = 1.5;\nfunction zoomToScale(zoom) {\n    return Math.pow(2, zoom);\n}\nfunction scaleToZoom(scale) {\n    return (0,_math_utils__WEBPACK_IMPORTED_MODULE_0__.log2)(scale);\n}\nfunction lngLatToWorld(lngLat) {\n    const [lng, lat] = lngLat;\n    (0,_assert__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Number.isFinite(lng));\n    (0,_assert__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Number.isFinite(lat) && lat >= -90 && lat <= 90, \"invalid latitude\");\n    const lambda2 = lng * DEGREES_TO_RADIANS;\n    const phi2 = lat * DEGREES_TO_RADIANS;\n    const x = TILE_SIZE * (lambda2 + PI) / (2 * PI);\n    const y = TILE_SIZE * (PI + Math.log(Math.tan(PI_4 + phi2 * 0.5))) / (2 * PI);\n    return [\n        x,\n        y\n    ];\n}\nfunction worldToLngLat(xy) {\n    const [x, y] = xy;\n    const lambda2 = x / TILE_SIZE * (2 * PI) - PI;\n    const phi2 = 2 * (Math.atan(Math.exp(y / TILE_SIZE * (2 * PI) - PI)) - PI_4);\n    return [\n        lambda2 * RADIANS_TO_DEGREES,\n        phi2 * RADIANS_TO_DEGREES\n    ];\n}\nfunction getMeterZoom(options) {\n    const { latitude } = options;\n    (0,_assert__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Number.isFinite(latitude));\n    const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n    return scaleToZoom(EARTH_CIRCUMFERENCE * latCosine) - 9;\n}\nfunction unitsPerMeter(latitude) {\n    const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n    return TILE_SIZE / EARTH_CIRCUMFERENCE / latCosine;\n}\nfunction getDistanceScales(options) {\n    const { latitude, longitude, highPrecision = false } = options;\n    (0,_assert__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Number.isFinite(latitude) && Number.isFinite(longitude));\n    const worldSize = TILE_SIZE;\n    const latCosine = Math.cos(latitude * DEGREES_TO_RADIANS);\n    const unitsPerDegreeX = worldSize / 360;\n    const unitsPerDegreeY = unitsPerDegreeX / latCosine;\n    const altUnitsPerMeter = worldSize / EARTH_CIRCUMFERENCE / latCosine;\n    const result = {\n        unitsPerMeter: [\n            altUnitsPerMeter,\n            altUnitsPerMeter,\n            altUnitsPerMeter\n        ],\n        metersPerUnit: [\n            1 / altUnitsPerMeter,\n            1 / altUnitsPerMeter,\n            1 / altUnitsPerMeter\n        ],\n        unitsPerDegree: [\n            unitsPerDegreeX,\n            unitsPerDegreeY,\n            altUnitsPerMeter\n        ],\n        degreesPerUnit: [\n            1 / unitsPerDegreeX,\n            1 / unitsPerDegreeY,\n            1 / altUnitsPerMeter\n        ]\n    };\n    if (highPrecision) {\n        const latCosine2 = DEGREES_TO_RADIANS * Math.tan(latitude * DEGREES_TO_RADIANS) / latCosine;\n        const unitsPerDegreeY2 = unitsPerDegreeX * latCosine2 / 2;\n        const altUnitsPerDegree2 = worldSize / EARTH_CIRCUMFERENCE * latCosine2;\n        const altUnitsPerMeter2 = altUnitsPerDegree2 / unitsPerDegreeY * altUnitsPerMeter;\n        result.unitsPerDegree2 = [\n            0,\n            unitsPerDegreeY2,\n            altUnitsPerDegree2\n        ];\n        result.unitsPerMeter2 = [\n            altUnitsPerMeter2,\n            0,\n            altUnitsPerMeter2\n        ];\n    }\n    return result;\n}\nfunction addMetersToLngLat(lngLatZ, xyz) {\n    const [longitude, latitude, z0] = lngLatZ;\n    const [x, y, z] = xyz;\n    const { unitsPerMeter, unitsPerMeter2 } = getDistanceScales({\n        longitude,\n        latitude,\n        highPrecision: true\n    });\n    const worldspace = lngLatToWorld(lngLatZ);\n    worldspace[0] += x * (unitsPerMeter[0] + unitsPerMeter2[0] * y);\n    worldspace[1] += y * (unitsPerMeter[1] + unitsPerMeter2[1] * y);\n    const newLngLat = worldToLngLat(worldspace);\n    const newZ = (z0 || 0) + (z || 0);\n    return Number.isFinite(z0) || Number.isFinite(z) ? [\n        newLngLat[0],\n        newLngLat[1],\n        newZ\n    ] : newLngLat;\n}\nfunction getViewMatrix(options) {\n    const { height, pitch, bearing, altitude, scale, center } = options;\n    const vm = (0,_math_utils__WEBPACK_IMPORTED_MODULE_0__.createMat4)();\n    gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.translate(vm, vm, [\n        0,\n        0,\n        -altitude\n    ]);\n    gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.rotateX(vm, vm, -pitch * DEGREES_TO_RADIANS);\n    gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.rotateZ(vm, vm, bearing * DEGREES_TO_RADIANS);\n    const relativeScale = scale / height;\n    gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.scale(vm, vm, [\n        relativeScale,\n        relativeScale,\n        relativeScale\n    ]);\n    if (center) {\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.translate(vm, vm, gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_3__.negate([], center));\n    }\n    return vm;\n}\nfunction getProjectionParameters(options) {\n    const { width, height, altitude, pitch = 0, offset, center, scale, nearZMultiplier = 1, farZMultiplier = 1 } = options;\n    let { fovy = altitudeToFovy(DEFAULT_ALTITUDE) } = options;\n    if (altitude !== undefined) {\n        fovy = altitudeToFovy(altitude);\n    }\n    const fovRadians = fovy * DEGREES_TO_RADIANS;\n    const pitchRadians = pitch * DEGREES_TO_RADIANS;\n    const focalDistance = fovyToAltitude(fovy);\n    let cameraToSeaLevelDistance = focalDistance;\n    if (center) {\n        cameraToSeaLevelDistance += center[2] * scale / Math.cos(pitchRadians) / height;\n    }\n    const fovAboveCenter = fovRadians * (0.5 + (offset ? offset[1] : 0) / height);\n    const topHalfSurfaceDistance = Math.sin(fovAboveCenter) * cameraToSeaLevelDistance / Math.sin((0,_math_utils__WEBPACK_IMPORTED_MODULE_0__.clamp)(Math.PI / 2 - pitchRadians - fovAboveCenter, 0.01, Math.PI - 0.01));\n    const furthestDistance = Math.sin(pitchRadians) * topHalfSurfaceDistance + cameraToSeaLevelDistance;\n    const horizonDistance = cameraToSeaLevelDistance * 10;\n    const farZ = Math.min(furthestDistance * farZMultiplier, horizonDistance);\n    return {\n        fov: fovRadians,\n        aspect: width / height,\n        focalDistance,\n        near: nearZMultiplier,\n        far: farZ\n    };\n}\nfunction getProjectionMatrix(options) {\n    const { fov, aspect, near, far } = getProjectionParameters(options);\n    const projectionMatrix = gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_2__.perspective([], fov, aspect, near, far);\n    return projectionMatrix;\n}\nfunction altitudeToFovy(altitude) {\n    return 2 * Math.atan(0.5 / altitude) * RADIANS_TO_DEGREES;\n}\nfunction fovyToAltitude(fovy) {\n    return 0.5 / Math.tan(0.5 * fovy * DEGREES_TO_RADIANS);\n}\nfunction worldToPixels(xyz, pixelProjectionMatrix) {\n    const [x, y, z = 0] = xyz;\n    (0,_assert__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Number.isFinite(x) && Number.isFinite(y) && Number.isFinite(z));\n    return (0,_math_utils__WEBPACK_IMPORTED_MODULE_0__.transformVector)(pixelProjectionMatrix, [\n        x,\n        y,\n        z,\n        1\n    ]);\n}\nfunction pixelsToWorld(xyz, pixelUnprojectionMatrix, targetZ = 0) {\n    const [x, y, z] = xyz;\n    (0,_assert__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Number.isFinite(x) && Number.isFinite(y), \"invalid pixel coordinate\");\n    if (Number.isFinite(z)) {\n        const coord = (0,_math_utils__WEBPACK_IMPORTED_MODULE_0__.transformVector)(pixelUnprojectionMatrix, [\n            x,\n            y,\n            z,\n            1\n        ]);\n        return coord;\n    }\n    const coord0 = (0,_math_utils__WEBPACK_IMPORTED_MODULE_0__.transformVector)(pixelUnprojectionMatrix, [\n        x,\n        y,\n        0,\n        1\n    ]);\n    const coord1 = (0,_math_utils__WEBPACK_IMPORTED_MODULE_0__.transformVector)(pixelUnprojectionMatrix, [\n        x,\n        y,\n        1,\n        1\n    ]);\n    const z0 = coord0[2];\n    const z1 = coord1[2];\n    const t = z0 === z1 ? 0 : ((targetZ || 0) - z0) / (z1 - z0);\n    return gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_4__.lerp([], coord0, coord1, t);\n} //# sourceMappingURL=web-mercator-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-viewport.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-viewport.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebMercatorViewport)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ \"(ssr)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _math_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/math-utils.js\");\n/* harmony import */ var _web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web-mercator-utils */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-utils.js\");\n/* harmony import */ var _fit_bounds__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit-bounds */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/fit-bounds.js\");\n/* harmony import */ var _get_bounds__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./get-bounds */ \"(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/get-bounds.js\");\n/* harmony import */ var gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gl-matrix/mat4 */ \"(ssr)/./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gl-matrix/vec2 */ \"(ssr)/./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! gl-matrix/vec3 */ \"(ssr)/./node_modules/gl-matrix/esm/vec3.js\");\n\n\n\n\n\n\n\n\nclass WebMercatorViewport {\n    constructor(props = {\n        width: 1,\n        height: 1\n    }){\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"latitude\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"longitude\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"zoom\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pitch\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"bearing\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"altitude\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"fovy\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"meterOffset\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"center\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"width\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"height\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"scale\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"distanceScales\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"projectionMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"viewProjectionMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pixelProjectionMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"pixelUnprojectionMatrix\", void 0);\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"equals\", (viewport)=>{\n            if (!(viewport instanceof WebMercatorViewport)) {\n                return false;\n            }\n            return viewport.width === this.width && viewport.height === this.height && gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__.equals(viewport.projectionMatrix, this.projectionMatrix) && gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__.equals(viewport.viewMatrix, this.viewMatrix);\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"project\", (lngLatZ, options = {})=>{\n            const { topLeft = true } = options;\n            const worldPosition = this.projectPosition(lngLatZ);\n            const coord = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.worldToPixels)(worldPosition, this.pixelProjectionMatrix);\n            const [x, y] = coord;\n            const y2 = topLeft ? y : this.height - y;\n            return lngLatZ.length === 2 ? [\n                x,\n                y2\n            ] : [\n                x,\n                y2,\n                coord[2]\n            ];\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"unproject\", (xyz, options = {})=>{\n            const { topLeft = true, targetZ = undefined } = options;\n            const [x, y, z] = xyz;\n            const y2 = topLeft ? y : this.height - y;\n            const targetZWorld = targetZ && targetZ * this.distanceScales.unitsPerMeter[2];\n            const coord = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.pixelsToWorld)([\n                x,\n                y2,\n                z\n            ], this.pixelUnprojectionMatrix, targetZWorld);\n            const [X, Y, Z] = this.unprojectPosition(coord);\n            if (Number.isFinite(z)) {\n                return [\n                    X,\n                    Y,\n                    Z\n                ];\n            }\n            return Number.isFinite(targetZ) ? [\n                X,\n                Y,\n                targetZ\n            ] : [\n                X,\n                Y\n            ];\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"projectPosition\", (xyz)=>{\n            const [X, Y] = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.lngLatToWorld)(xyz);\n            const Z = (xyz[2] || 0) * this.distanceScales.unitsPerMeter[2];\n            return [\n                X,\n                Y,\n                Z\n            ];\n        });\n        (0,_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, \"unprojectPosition\", (xyz)=>{\n            const [X, Y] = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.worldToLngLat)(xyz);\n            const Z = (xyz[2] || 0) * this.distanceScales.metersPerUnit[2];\n            return [\n                X,\n                Y,\n                Z\n            ];\n        });\n        let { width, height, altitude = null, fovy = null } = props;\n        const { latitude = 0, longitude = 0, zoom = 0, pitch = 0, bearing = 0, position = null, nearZMultiplier = 0.02, farZMultiplier = 1.01 } = props;\n        width = width || 1;\n        height = height || 1;\n        if (fovy === null && altitude === null) {\n            altitude = _web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_ALTITUDE;\n            fovy = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.altitudeToFovy)(altitude);\n        } else if (fovy === null) {\n            fovy = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.altitudeToFovy)(altitude);\n        } else if (altitude === null) {\n            altitude = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.fovyToAltitude)(fovy);\n        }\n        const scale = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.zoomToScale)(zoom);\n        altitude = Math.max(0.75, altitude);\n        const distanceScales = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.getDistanceScales)({\n            longitude,\n            latitude\n        });\n        const center = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.lngLatToWorld)([\n            longitude,\n            latitude\n        ]);\n        center.push(0);\n        if (position) {\n            gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_6__.add(center, center, gl_matrix_vec3__WEBPACK_IMPORTED_MODULE_6__.mul([], position, distanceScales.unitsPerMeter));\n        }\n        this.projectionMatrix = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.getProjectionMatrix)({\n            width,\n            height,\n            scale,\n            center,\n            pitch,\n            fovy,\n            nearZMultiplier,\n            farZMultiplier\n        });\n        this.viewMatrix = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.getViewMatrix)({\n            height,\n            scale,\n            center,\n            pitch,\n            bearing,\n            altitude\n        });\n        this.width = width;\n        this.height = height;\n        this.scale = scale;\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.zoom = zoom;\n        this.pitch = pitch;\n        this.bearing = bearing;\n        this.altitude = altitude;\n        this.fovy = fovy;\n        this.center = center;\n        this.meterOffset = position || [\n            0,\n            0,\n            0\n        ];\n        this.distanceScales = distanceScales;\n        this._initMatrices();\n        Object.freeze(this);\n    }\n    _initMatrices() {\n        const { width, height, projectionMatrix, viewMatrix } = this;\n        const vpm = (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.createMat4)();\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__.multiply(vpm, vpm, projectionMatrix);\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__.multiply(vpm, vpm, viewMatrix);\n        this.viewProjectionMatrix = vpm;\n        const m = (0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.createMat4)();\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__.scale(m, m, [\n            width / 2,\n            -height / 2,\n            1\n        ]);\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__.translate(m, m, [\n            1,\n            -1,\n            0\n        ]);\n        gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__.multiply(m, m, vpm);\n        const mInverse = gl_matrix_mat4__WEBPACK_IMPORTED_MODULE_5__.invert((0,_math_utils__WEBPACK_IMPORTED_MODULE_1__.createMat4)(), m);\n        if (!mInverse) {\n            throw new Error(\"Pixel project matrix not invertible\");\n        }\n        this.pixelProjectionMatrix = m;\n        this.pixelUnprojectionMatrix = mInverse;\n    }\n    projectFlat(lngLat) {\n        return (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.lngLatToWorld)(lngLat);\n    }\n    unprojectFlat(xy) {\n        return (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.worldToLngLat)(xy);\n    }\n    getMapCenterByLngLatPosition({ lngLat, pos }) {\n        const fromLocation = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.pixelsToWorld)(pos, this.pixelUnprojectionMatrix);\n        const toLocation = (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.lngLatToWorld)(lngLat);\n        const translate = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_7__.add([], toLocation, gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_7__.negate([], fromLocation));\n        const newCenter = gl_matrix_vec2__WEBPACK_IMPORTED_MODULE_7__.add([], this.center, translate);\n        return (0,_web_mercator_utils__WEBPACK_IMPORTED_MODULE_2__.worldToLngLat)(newCenter);\n    }\n    fitBounds(bounds, options = {}) {\n        const { width, height } = this;\n        const { longitude, latitude, zoom } = (0,_fit_bounds__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Object.assign({\n            width,\n            height,\n            bounds\n        }, options));\n        return new WebMercatorViewport({\n            width,\n            height,\n            longitude,\n            latitude,\n            zoom\n        });\n    }\n    getBounds(options) {\n        const corners = this.getBoundingRegion(options);\n        const west = Math.min(...corners.map((p)=>p[0]));\n        const east = Math.max(...corners.map((p)=>p[0]));\n        const south = Math.min(...corners.map((p)=>p[1]));\n        const north = Math.max(...corners.map((p)=>p[1]));\n        return [\n            [\n                west,\n                south\n            ],\n            [\n                east,\n                north\n            ]\n        ];\n    }\n    getBoundingRegion(options = {}) {\n        return (0,_get_bounds__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this, options.z || 0);\n    }\n    getLocationAtPoint({ lngLat, pos }) {\n        return this.getMapCenterByLngLatPosition({\n            lngLat,\n            pos\n        });\n    }\n} //# sourceMappingURL=web-mercator-viewport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@math.gl/web-mercator/dist/esm/web-mercator-viewport.js\n");

/***/ })

};
;